INCLUDE "includes.asm"
INCLUDE "charmap.asm"

SECTION "Bank 01", ROMX, BANK [$1]
Func_4000:: ; 4000
	ld a, $0
	call Func_6169
	ld a, $e4
	ld [rBGP], a
	ld [wBGP], a
	ld [rOBP0], a
	ld [wOBP0], a
	ld a, $e0
	ld [rOBP1], a
	ld [wOBP1], a
	call LoadFontGFX
	hlbgcoord 0, 0
	call Func_6149
	hlbgcoord 0, 0, vWindowMap
	call Func_6149
	ld a, $81
	call Func_617d
	call TimerInterrupt
	ld a, [wNextVBlankFlags]
	or $9
	ld [wNextVBlankFlags], a
	ld a, [wc213]
	or a
	ret nz
	callba Func_93b87
	callba Func_fd314
Func_4060:: ; 4060 (1:4060)
	jp Func_1e4d

Func_4063: ; 4063
	ret

Func_4064:: ; 4064 (1:4064)
	di
	ld a, [wSystemType]
	push af
	ld hl, wLCD
	ld bc, $200
.clear_c200
	xor a
	ld [hli], a
	dec bc
	ld a, c
	or b
	jr nz, .clear_c200
	pop af
	ld [wSystemType], a
	ld hl, Func_40bf
	ld de, wTimer
	ld b, $9
.load_interrupts
	ld a, [hli]
	ld [de], a
	inc de
	dec b
	jr nz, .load_interrupts
	ld de, wLCD
	ld b, $3
.load_lcd_interrupt
	ld a, [hli]
	ld [de], a
	inc de
	dec b
	jr nz, .load_lcd_interrupt
	call FillToStackBottomWithWillTestString
	ld a, $98
	ld [wBGMapHi], a
	call Func_40f4
	ld a, $1
	ld [rIE], a
	ld a, [rSTAT]
	set 6, a
	ld [rSTAT], a
	xor a
	ld [rIF], a
	ei
	ld a, $d
	ld [wRNGState], a
	ld a, $4
	ld [wc24d], a
	xor a
	ld [wRTCTicker], a
	ld a, $80
	ld [rSC], a
	ret

Func_40bf: ; 40bf
	jp TimerInterrupt

Func_40c2: ; 40c2
	jp Serial_

Func_40c5: ; 40c5
	jp VBlank

Func_40c8: ; 40c8
	jp LCDInterrupt

FillToStackBottomWithWillTestString: ; 40cb (1:40cb)
	ld hl, sp+$0
	ld de, wOAM0aYCoord
	ld a, l
	sub e
	ld c, a
	ld a, h
	sbc d
	ld b, a
	ld hl, .WillTestString
.loop
	ld a, [hli]
	or a
	jr nz, .place_string
	ld hl, .WillTestString
	jr .loop

.place_string
	ld [de], a
	inc de
	dec bc
	ld a, c
	or b
	jr nz, .loop
	ret

.WillTestString:
	db "WILL TEST", $0

Func_40f4: ; 40f4 (1:40f4)
	ld c, hPushOAM % $100
	ld b, $a
	ld hl, .PushOAM
.asm_40fb
	ld a, [hli]
	ld [$ff00+c], a
	inc c
	dec b
	jr nz, .asm_40fb
	ret

.PushOAM:
	ld a, $c4
	ld [rDMA], a
	ld a, $28
.asm_4108
	dec a
	jr nz, .asm_4108
	ret

LoadFontGFX: ; 410c (1:410c)
	ld hl, $9000
	ld de, GFX_4122
	ld bc, $800
	call CopyFromDEtoHL
	ld hl, $8800
	ld bc, $1b0
	call CopyFromDEtoHL
	ret

GFX_4122: INCBIN "gfx/font/4122.2bpp", $0, $7d0
GFX_48f2: INCBIN "gfx/font/4122.2bpp", $7d0, $30
GFX_4922: INCBIN "gfx/font/4122.2bpp", $800, $c0
GFX_49e2: INCBIN "gfx/font/4122.2bpp", $8c0, $20
GFX_4a02: INCBIN "gfx/font/4122.2bpp", $8e0, $10
GFX_4a12:: INCBIN "gfx/font/4122.2bpp", $8f0, $80
GFX_4a92: INCBIN "gfx/font/4122.2bpp", $970, $10
GFX_4aa2: INCBIN "gfx/font/4122.2bpp", $980, $10
GFX_4ab2: INCBIN "gfx/font/4122.2bpp", $990, $20
GFX_4ad2: INCBIN "gfx/font/4122.2bpp", $9b0, $50
GFX_4b22:: INCBIN "gfx/font/4122.2bpp", $a00, $1b0
GFX_4cd2: INCBIN "gfx/font/4122.2bpp", $bb0, $10
GFX_4ce2: INCBIN "gfx/font/4122.2bpp", $bc0, $50
GFX_4d32: INCBIN "gfx/font/4122.2bpp", $c10, $70
GFX_4da2: INCBIN "gfx/font/4122.2bpp", $c80, $60
GFX_4e02:: INCBIN "gfx/font/4122.2bpp", $ce0, $1320

Func_6122: ; 6122 (1:6122)
	or a
	jr nz, .asm_6137
	ld a, $98
	ld [wc231], a
	ld a, [wSCX]
	ld [wc232], a
	ld a, [wSCY]
	ld [wc233], a
	ret

.asm_6137
	ld a, $9c
	ld [wc231], a
	ld a, [wSCX2]
	ld [wc232], a
	ld a, [wSCY2]
	ld [wc233], a
	ret

Func_6149: ; 6149 (1:6149)
	ld bc, $400
.asm_614c
	ld a, $8f
	ld [hli], a
	dec bc
	ld a, b
	or c
	jr nz, .asm_614c
	ret

Func_6155: ; 6155
	hlbgcoord 0, 0
	debgcoord 0, 0, vWindowMap
	ld a, [wLCDC]
	bit 3, a
	jr z, .asm_6168
	hlbgcoord 0, 0, vWindowMap
	debgcoord 0, 0
.asm_6168
	ret

Func_6169: ; 6169 (1:6169)
	push af
	call Func_6294
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_6294
	pop af
	ret

Func_617d: ; 617d (1:617d)
	ld [wLCDC], a
	ld [rLCDC], a
	ret

Func_6183: ; 6183
	push af
	ld a, [wLCDC]
	bit 7, a
	jr nz, .lcd_enabled
	pop af
	jp Func_617d

.lcd_enabled
	pop af
	jp Func_6169

Func_6193: ; 6193
	ld a, [wBGMapHi]
	ld [wc231], a
	sub $98
	jr nz, .asm_61a3
	xor a
	call Func_6122
	jr Func_61a8

.asm_61a3
	ld a, $1
	call Func_6122
Func_61a8: ; 61a8
	ld a, c
	or a
	jp z, PutOnVideoTransferQueue
	cp $1
	jp z, Func_6226
	cp $2
	jp z, Func_61b8
	ret

Func_61b8: ; 61b8 (1:61b8)
	ld a, [wc233]
	srl a
	srl a
	srl a
	add e
	and $1f
	ld c, $0
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	ld [wc22e], a
	ld a, [wc231]
	add c
	ld [wc22e + 1], a
	ld a, [wc232]
	srl a
	srl a
	srl a
	add d
	and $1f
	ld [wc230], a
	add b
	cp $21
	jr nc, .exceeds_0x20
.queue
	ld a, [wc22e]
	ld e, a
	ld a, [wc230]
	add e
	ld e, a
	ld a, [wc22e + 1]
	adc $0
	ld d, a
	jp PutOnVideoTransferQueue

.exceeds_0x20
	sub $20
	ld c, a
	ld a, b
	sub c
	ld b, a
	push bc
	push hl
	call .queue
	xor a
	ld [wc230], a
	pop hl
	pop bc
	ld a, l
	add b
	ld l, a
	ld a, h
	adc $0
	ld h, a
	ld b, c
	jp .queue

Func_6226: ; 6226 (1:6226)
	ld a, [wc233]
	srl a
	srl a
	srl a
	add l
	and $1f
	ld c, $0
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	ld [wc22e], a
	ld a, [wc231]
	add c
	ld [wc22e + 1], a
	ld a, [wc232]
	srl a
	srl a
	srl a
	add h
	and $1f
	ld [wc230], a
	add b
	cp $21
	jr nc, .exceeds_0x20
.queue
	ld a, [wc22e]
	ld l, a
	ld a, [wc230]
	add l
	ld l, a
	ld a, [wc22e + 1]
	adc $0
	ld h, a
	jp PutOnVideoTransferQueue

.exceeds_0x20
	sub $20
	ld c, a
	ld a, b
	sub c
	ld b, a
	push bc
	push de
	call .queue
	xor a
	ld [wc230], a
	pop de
	pop bc
	ld a, e
	add b
	ld e, a
	ld a, d
	adc $0
	ld d, a
	ld b, c
	jp .queue

Func_6294: ; 6294 (1:6294)
	push af
	push bc
.wait
	ld a, [wNextVBlankFlags]
	ld c, a
	ld a, [wLastVBlankFlags]
	cp c
	jr nz, .wait
	pop bc
	pop af
	ret

Func_62a3:: ; 62a3
	push bc
	ld b, $0
	ld a, h
	or a
	jr z, .asm_62b2
	ld b, $1
	cp $1
	jr z, .asm_62b2
	ld b, $ff
.asm_62b2
	ld c, $0
	ld a, l
	or a
	jr z, .asm_62c0
	ld c, $1
	cp $1
	jr z, .asm_62c0
	ld c, $ff
.asm_62c0
	ld a, b
	cp $ff
	jr z, asm_62fb
	call Func_6122
	pop bc
	ld a, d
	sub b
	inc a
	ld d, b
	ld b, a
	ld a, e
	sub c
	inc a
	ld e, c
	ld c, a
	push bc
	ld l, e
	ld h, d
	call Coord2TileMap
	pop bc
	ld a, e
	cp $12
	jp c, Func_62e3
	sub $12
	ld e, a
Func_62e3: ; 62e3 (1:62e3)
	push bc
	push hl
	push de
	ld c, $2
	call Func_61a8
	pop de
	inc e
	pop hl
	ld a, l
	add $14
	ld l, a
	ld a, h
	adc $0
	ld h, a
	pop bc
	dec c
	jr nz, Func_62e3
	ret

asm_62fb
	ld a, c
	call Func_6122
	pop bc
	ld a, d
	sub b
	inc a
	ld d, b
	ld b, a
	ld a, e
	sub c
	inc a
	ld e, c
	ld c, a
	push bc
	ld l, e
	ld h, d
	call Coord2TileMap
	pop bc
	reg16swap de, hl
	ld a, l
	cp $12
	jp c, Func_631e
	sub $12
	ld l, a
Func_631e: ; 631e (1:631e)
	push bc
	push de
	push hl
	ld c, $1
	call Func_61a8
	pop hl
	inc l
	pop de
	ld a, e
	add $14
	ld e, a
	ld a, d
	adc $0
	ld d, a
	pop bc
	dec c
	jr nz, Func_631e
	ret

Func_6336: ; 6336
	ld a, c
	or a
	jr z, .asm_6368
	cp $1
	jr z, .asm_6355
	call Coord2TileMap
	ld b, $8
.asm_6343
	ld c, $8
.asm_6345
	ld a, [de]
	inc de
	ld [hli], a
	dec c
	jr nz, .asm_6345
	push bc
	ld bc, $c
	add hl, bc
	pop bc
	dec b
	jr nz, .asm_6343
	ret

.asm_6355
	ld a, $9c
	ld [wc231], a
	ld a, [wSCX2]
	ld [wc232], a
	ld a, [wSCY2]
	ld [wc233], a
	jr .asm_6379

.asm_6368
	ld a, $98
	ld [wc231], a
	ld a, [wSCX]
	ld [wc232], a
	ld a, [wSCY]
	ld [wc233], a
.asm_6379
	ld c, $8
.asm_637b
	push bc
	push hl
	push de
	ld bc, $801
	call Func_61a8
	pop hl
	ld bc, $8
	add hl, bc
	ld e, l
	ld d, h
	pop hl
	inc l
	pop bc
	dec c
	jr nz, .asm_637b
	ret

Func_6392: ; 6392
	ld b, $80
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $7
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $2
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	inc de
	ld c, $8
	call Decompress_ReadCBits
	ld [de], a
	ret

ApplyBitMaskToDE:
.loop
	rr l
	jr nc, .asm_648a
	ld a, [de]
	or b
	ld [de], a
.asm_648a
	rlc b
	jr nc, .asm_648f
	dec de
.asm_648f
	dec c
	jr nz, .loop
	ret

Func_6493: ; 6493
	push hl
	push de
	ld l, e
	ld h, d
	ld de, -$1b
	add hl, de
	ld e, $0
	ld bc, $1c
	call FillMemory
	pop de
	pop hl
	ld b, $2
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $2
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $7
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	push hl
	ld l, [hl]
	ld c, $8
	call ApplyBitMaskToDE
	pop hl
	dec hl
	ret

FixAndLoadPoncotPicWithTilemap:: ; 65db (1:65db)
; hl - VTile coordinate for Poncot pic loading
; de - Address where the decompressed Poncot pic lives
; bc - Size of pic (only used if fixing alignment, see below)
; [wPoncotPicAlignment] - If nonzero, don't fix alignment.
;                         Otherwise, if loading the enemy
;                         pic into $8cc0, reverse its
;                         facing.
	ld a, [wPoncotPicAlignment]
	or a
	jr nz, .next
	ld a, h
	cp $89 ; monster gfx are loaded into VRAM at either $89b0 or $8cc0.
	jr z, .next
	push de
	push hl
	push bc
	ld l, e
	ld h, d
.loop
	ld a, [hl]
REPT 8
	rrca
	rl e
ENDR
	ld [hl], e
	inc hl
	dec bc
	ld a, c
	or b
	jr nz, .loop
	pop bc
	pop hl
	pop de
.next
	push de
	push hl
	call RequestVideoData
	pop hl
	pop de
	push hl
	ld a, h
	ld c, $9b
	cp $89
	jr z, .got_tile_start
	ld c, $cc
.got_tile_start
	ld hl, -$40
	add hl, de
	push hl
	ld b, $40
.copy_tilemap
	ld a, [hl]
	or a
	jr z, .next_tile
	ld a, $8f
	jr .load

.next_tile
	ld a, c
	inc c
.load
	ld [hli], a
	dec b
	jr nz, .copy_tilemap
	pop hl
	pop af
	cp $89
	jr z, .quit
	ld a, [wPoncotPicAlignment]
	or a
	jr nz, .quit
	ld e, l
	ld d, h
	ld bc, $7
	add hl, bc
	reg8rot c, l, e
	reg8rot c, h, d
	ld c, $8
.loop2
	push hl
	push de
	ld b, [hl]
	ld a, [de]
	ld [hli], a
	ld a, b
	ld [de], a
	dec de
	ld b, [hl]
	ld a, [de]
	ld [hli], a
	ld a, b
	ld [de], a
	dec de
	ld b, [hl]
	ld a, [de]
	ld [hli], a
	ld a, b
	ld [de], a
	dec de
	ld b, [hl]
	ld a, [de]
	ld [hl], a
	ld a, b
	ld [de], a
	pop de
	pop hl
	ld a, l
	add $8
	ld l, a
	ld a, h
	adc $0
	ld h, a
	ld a, e
	add $8
	ld e, a
	ld a, d
	adc $0
	ld d, a
	dec c
	jr nz, .loop2
.quit
	ret

Func_667d: ; 667d
	ld a, c
	cp $2
	jr z, .asm_66bc
	cp $3
	jr z, .asm_66d9
	call Func_6122
	ld c, b
	ld a, $10
.asm_668c
	push bc
	dec a
	jr nz, .asm_668c
	ld [wFarCallSavedHL], sp
	ld a, d
	sub h
	ld b, a
	inc b
	ld a, e
	sub l
	ld c, a
	inc c
	ld a, [wFarCallSavedHL]
	ld e, a
	ld a, [wFarCallSavedHL + 1]
	ld d, a
.asm_66a3
	push bc
	push hl
	push de
	ld c, $1
	call Func_61a8
	pop de
	pop hl
	inc l
	pop bc
	dec c
	jr nz, .asm_66a3
	call WaitVideoTransfer
	ld a, $10
.asm_66b7
	pop bc
	dec a
	jr nz, .asm_66b7
	ret

.asm_66bc
	ld a, d
	sub h
	ld d, a
	inc d
	ld a, e
	sub l
	ld e, a
	inc e
	push bc
	call Coord2TileMap
	pop bc
	ld a, b
.asm_66ca
	push hl
	ld b, d
.asm_66cc
	ld [hli], a
	dec b
	jr nz, .asm_66cc
	pop hl
	ld bc, $14
	add hl, bc
	dec e
	jr nz, .asm_66ca
	ret

.asm_66d9
	ld a, d
	sub h
	ld d, a
	inc d
	ld a, e
	sub l
	ld e, a
	inc e
	push bc
	call Coord2AttrMap
	pop bc
	ld a, b
.asm_66e7
	push hl
	ld b, d
.asm_66e9
	ld [hli], a
	dec b
	jr nz, .asm_66e9
	pop hl
	ld bc, $14
	add hl, bc
	dec e
	jr nz, .asm_66e7
	ret

PoncotNameCharacters:
	db "0123456789をぁぃぅぇぉ" ; 00-0f
	db "ゃゅょっーあいうえおかきくけこさ" ; 10-1f
	db "しすせそたちつてとなにぬねのはひ" ; 20-2f
	db "ふへほまみむめもやゆよらりるれろ" ; 30-3f
	db "わん@@をぁぃぅぇぉゃゅょっあい" ; 40-4f
	db "うえおかきくけこさしすせそたちつ" ; 50-5f
	db "てとなにぬねのはひふへほまみむめ" ; 60-6f
	db "もやゆよらりるれろわん!?/:*" ; 70-7f
	db "Lp@@@@@@@@@@@G@ " ; 80-8f
	db "R@@@@@HPVE@@@@@@" ; 90-9f
	db "かきくけこさしすせそたちつてとは" ; a0-af
	db "ひふへほはひふへほ@@@@@@@" ; b0-bf
	db "かきくけこさしすせそたちつてとは" ; c0-cf
	db "ひふへほはひふへほうcABM#a" ; d0-df

PoncotNameAttributes:
; bit 0: hiragana if set else katakana
; bit 1: dakuten
; bit 2: handakuten
; all three bits set: no special attributes
	db %111, %111, %111, %111, %111, %111, %111, %111 ; 00-07
	db %111, %111, %001, %001, %001, %001, %001, %001 ; 08-0f
	db %001, %001, %001, %001, %111, %001, %001, %001 ; 10-17
	db %001, %001, %001, %001, %001, %001, %001, %001 ; 18-1f
	db %001, %001, %001, %001, %001, %001, %001, %001 ; 20-27
	db %001, %001, %001, %001, %001, %001, %001, %001 ; 28-2f
	db %001, %001, %001, %001, %001, %001, %001, %001 ; 30-37
	db %001, %001, %001, %001, %001, %001, %001, %001 ; 38-3f
	db %001, %001, %000, %000, %000, %000, %000, %000 ; 40-47
	db %000, %000, %000, %000, %000, %000, %000, %000 ; 48-4f
	db %000, %000, %000, %000, %000, %000, %000, %000 ; 50-57
	db %000, %000, %000, %000, %000, %000, %000, %000 ; 58-5f
	db %000, %000, %000, %000, %000, %000, %000, %000 ; 60-67
	db %000, %000, %000, %000, %000, %000, %000, %000 ; 68-6f
	db %000, %000, %000, %000, %000, %000, %000, %000 ; 70-77
	db %000, %000, %000, %111, %111, %111, %111, %111 ; 78-7f
	db %111, %111, %000, %000, %000, %000, %000, %000 ; 80-87
	db %000, %000, %000, %000, %000, %111, %000, %111 ; 88-8f
	db %111, %000, %000, %000, %000, %000, %111, %111 ; 90-97
	db %111, %111, %000, %000, %000, %000, %000, %000 ; 98-9f
	db %011, %011, %011, %011, %011, %011, %011, %011 ; a0-a7
	db %011, %011, %011, %011, %011, %011, %011, %011 ; a8-af
	db %011, %011, %011, %011, %101, %101, %101, %101 ; b0-b7
	db %101, %000, %000, %000, %000, %000, %000, %000 ; b8-bf
	db %010, %010, %010, %010, %010, %010, %010, %010 ; c0-c7
	db %010, %010, %010, %010, %010, %010, %010, %010 ; c8-cf
	db %010, %010, %010, %010, %100, %100, %100, %100 ; d0-d7
	db %100, %010, %111, %111, %111, %111, %111, %111 ; d8-df

ApplyPoncotNameCharmap:: ; 68b6 (1:68b6)
	push de
	push hl
	ld e, a
	ld d, $0
	ld hl, PoncotNameAttributes
	add hl, de
	ld a, [hl]
	ld c, a
	ld hl, PoncotNameCharacters
	add hl, de
	cp $7
	jr nz, .apply_flags
	ld a, [hl]
	pop hl
	pop de
	ld [hli], a
	ret

.apply_flags
	ld a, [hl]
	pop hl
	pop de
	bit 0, b
	jr nz, .no_hira
	bit 0, c
	jr z, .no_hira
	ld [hl], "("
	inc hl
.no_hira
	bit 0, b
	jr z, .no_kata
	bit 0, c
	jr nz, .no_kata
	ld [hl], ")"
	inc hl
.no_kata
	ld [hli], a
	bit 2, c
	jr z, .test_dakuten
	ld a, "ﾟ"
	ld [hli], a
	jr .done_dakuten

.test_dakuten
	bit 1, c
	jr z, .done_dakuten
	ld a, "ﾞ"
	ld [hli], a
.done_dakuten
	ld a, c
	and $1
	ld b, a
	ret

Func_68fd: ; 68fd
	ld d, c
	ld b, $1
	xor a
	ld [wFarCallSavedA], a
	ld [rSCX], a
	ld a, [rLY]
	ld c, a
.wait_next_line
	ld a, [rLY]
	cp c
	jr z, .wait_next_line
	ld c, a
	cp e
	jr c, .asm_691a
	cp d
	jr nc, .asm_691a
	ld a, [wFarCallSavedA]
	jr .asm_691b

.asm_691a
	xor a
.asm_691b
	ld [rSCX], a
	ld a, [wFarCallSavedA]
	add b
	ld [wFarCallSavedA], a
	cp $4
	jr c, .asm_692f
	xor a
	jr nz, .asm_692f
	ld a, b
	xor $fe
	ld b, a
.asm_692f
	dec hl
	ld a, h
	or l
	jr nz, .wait_next_line
	xor a
	ld [rSCX], a
	ret

Func_6938: ; 6938
	ld d, c
	ld b, $5
.asm_693b
	ld c, $0
.asm_693d
	ld a, [rLY]
	cp e
	jr c, .asm_693b
	bit 0, c
	jr nz, .asm_6957
	ld c, $1
	ld a, b
	ld [rSCX], a
	xor $fe
	ld b, a
	dec hl
	ld a, l
	or h
	jr nz, .asm_693d
	xor a
	ld [rSCX], a
	ret

.asm_6957
	cp d
	jr c, .asm_693d
	xor a
	ld [rSCX], a
	jr .asm_693d

BlinkTextCursor:
	ld a, [wTextBlinkerFrameCounter]
	and $7f
	cp $1e
	jp nc, .toggle
	ret

.toggle
	ld a, [rSCX]
	srl a
	srl a
	srl a
	ld e, a
	ld a, [wBlinkerX]
	add e
	and $1f
	ld e, a
	ld a, [rSCY]
	srl a
	srl a
	srl a
	ld l, a
	ld a, [wBlinkerY]
	add l
	and $1f
	ld l, a
	xor a
	ld h, a
	ld d, a
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld d, $98
	ld a, [wc2cd]
	or a
	jr z, .asm_699d
	ld d, $9c
.asm_699d
	ld e, $0
	add hl, de
	ld e, l
	ld d, h
	ld a, [wTextBlinkerFrameCounter]
	bit 7, a
	jr nz, .asm_69ad
	ld a, $8f
	jr .asm_69b0

.asm_69ad
	ld a, [wBlinkerOffTile]
.asm_69b0
	push af
	ld hl, wVideoTransferQueueEntry4
	ld a, $1
	ld [hli], a
	ld a, wBlinkerTile % $100
	ld [hli], a
	ld a, wBlinkerTile / $100
	ld [hli], a
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	pop af
	ld [wBlinkerTile], a
	ld a, [wTextBlinkerFrameCounter]
	xor $80
	and $80
	ld [wTextBlinkerFrameCounter], a
	ret

DoShakeProgram:
	ld a, [wCurRobotPointer]
	ld l, a
	ld a, [wCurRobotPointer + 1]
	ld h, a
	ld de, $7
	add hl, de
	ld a, [hl]
	inc a
	ld [hli], a
	cp [hl]
	jr c, .done
	inc hl
	ld a, [hl]
	cpl
	inc a
	ld [rSCX], a
	ld [hli], a
	ld a, [hl]
	cpl
	inc a
	ld [rSCY], a
	ld [hl], a
	dec hl
	dec hl
	dec hl
	ld [hl], $0
.done
	ret

DoFlashProgram:
	ld a, [wCurRobotPointer]
	ld l, a
	ld a, [wCurRobotPointer + 1]
	ld h, a
	ld a, [hli]
	ld c, a
	ld a, [hl]
	inc a
	ld [hl], a
	cp c
	jr c, .done
	xor a
	ld [hli], a
	ld a, [hl]
	ld c, a
	xor $2
	ld [hli], a
	ld b, $0
	add hl, bc
	ld a, [hli]
	ld [rBGP], a
	ld a, [hl]
	ld [rOBP0], a
.done
	ret

DoFadeProgram:
	ld a, [wCurRobotPointer]
	ld l, a
	ld a, [wCurRobotPointer + 1]
	ld h, a
	ld a, [hli]
	ld b, a
	ld a, [hl]
	inc a
	ld [hl], a
	cp b
	jr c, .done
	xor a
	ld [hli], a
	push hl
	ld a, [hli]
	ld c, a
	ld a, [hli]
	add c
	pop hl
	cp $ff
	jr z, .done
	cp $11
	jr z, .done
	ld [hli], a
	ld c, a
	inc hl
	ld a, [hli]
	ld b, a
	ld e, [hl]
	ld hl, Data_6a55
	bit 0, e
	jr nz, .got_direction
	ld hl, Data_6a66
.got_direction
	add hl, bc
	ld a, [hl]
	bit 1, e
	jr z, .no_bgp
	ld [rBGP], a
.no_bgp
	bit 2, e
	jr z, .done
	ld [rOBP0], a
.done
	ret

Data_6a55: ; 6a55
	db %11100100
	db %11100100
	db %11100100
	db %11100101
	db %11101001
	db %11101001
	db %11101001
	db %11101001
	db %11101010
	db %11111010
	db %11111010
	db %11111110
	db %11111110
	db %11111110
	db %11111111
	db %11111111
	db %11111111

Data_6a66: ; 6a66
	db %11100100
	db %11100100
	db %11100100
	db %10100100
	db %10100100
	db %10010100
	db %10010100
	db %10010100
	db %10010100
	db %01010000
	db %01010000
	db %01010000
	db %01010000
	db %01000000
	db %00000000
	db %00000000
	db %00000000

Func_6a77: ; 6a77
	push hl
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, GFX_4122
	add hl, de
	push hl
	ld hl, $8000
	pop de
	ld bc, $10
	call RequestVideoData
	xor a
	ld [wc2e2], a
	ld a, [wLCDC]
	res 2, a
	call Func_6183
	ld hl, wOAMBuffer
	ld b, $8
	ld d, $0
.asm_6aa0
	ld c, $5
	ld e, $10
	bit 0, b
	jr nz, .asm_6aaa
	ld e, $20
.asm_6aaa
	ld [hl], d
	inc hl
	ld [hl], e
	inc hl
	xor a
	ld [hli], a
	ld [hli], a
	ld a, e
	add $20
	ld e, a
	dec c
	jr nz, .asm_6aaa
	ld a, d
	add $10
	ld d, a
	dec b
	jr nz, .asm_6aa0
	call WaitVideoTransfer
	pop hl
	ld b, h
.asm_6ac4
	ld a, [wNextVBlankFlags]
	set 1, a
	ld [wNextVBlankFlags], a
	call Func_6294
	ld hl, wOAM00YCoord
	ld c, $28
.asm_6ad4
	ld a, [hl]
	add $9
	cp $80
	jr c, .asm_6add
	sub $80
.asm_6add
	ld [hli], a
	ld a, [hl]
	sub $3
	jr nc, .asm_6ae5
	add $a0
.asm_6ae5
	ld [hli], a
	inc hl
	inc hl
	dec c
	jr nz, .asm_6ad4
	dec b
	jr nz, .asm_6ac4
	ld hl, wOAMBuffer
	ld e, $0
	ld bc, $a0
	call FillMemory
	ld a, [wNextVBlankFlags]
	set 1, a
	ld [wNextVBlankFlags], a
	call Func_6294
	ld a, $28
	ld [wc2e2], a
	ld a, [wLCDC]
	set 2, a
	jp Func_6183

CalcChecksum: ; 6b11
	xor a
	ld c, a
	ld b, a
.loop
	ld a, [hl]
	add c
	ld c, a
	ld a, [hli]
	xor b
	ld b, a
	dec de
	ld a, e
	or d
	jr nz, .loop
	ld l, c
	ld h, b
	ret

Func_6b22:: ; 6b22 (1:6b22)
	ld [rJOYP], a
	push af
	pop af
	ld a, $30
	ld [rJOYP], a
	push af
	pop af
	push af
	pop af
	ret

Func_6b2f: ; 6b2f
	ld a, $20
	jr Func_6b22

Func_6b33: ; 6b33
	ld a, $10
	jr Func_6b22

Func_6b37:: ; 6b37 (1:6b37)
	push bc
	ld b, a
	ld c, $8
.asm_6b3b
	ld a, $10
	rr b
	jr c, .asm_6b43
	ld a, $20
.asm_6b43
	call Func_6b22
	dec c
	jr nz, .asm_6b3b
	pop bc
	ret

Func_6b4b:: ; 6b4b (1:6b4b)
	ld bc, $2904
.asm_6b4e
	dec bc
	ld a, c
	or b
	jr nz, .asm_6b4e
	ret

Func_6b54: ; 6b54
	ret

GetRobotInParty: ; 6b55 (1:6b55)
	push de
	pop hl
	push hl
	push hl
	ld l, a
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call MemCopy
	pop bc
	ret

Func_6b74: ; 6b74 (1:6b74)
	push de
	ld l, a
	ld h, 0
	get_party_bot
	push hl
	call GetHLAtSPPlus4
	pop de
	ld bc, $23
	call MemCopy
	pop bc
	ret

Func_6b94:: ; 6b94
	push hl
	add sp, -$24
	ld l, e
	push hl
	ld a, d
	push af
	ld a, l
	ld hl, sp+$4
	reg16swap de, hl
	call GetRobotInParty
	pop af
	cp $9
	jp z, Func_6dd2
	cp $8
	jp z, Func_6d94
	cp $7
	jp z, Func_6d56
	cp $6
	jp z, Func_6d18
	cp $5
	jp z, Func_6cda
	cp $4
	jp z, Func_6c9c
	cp $3
	jp z, Func_6c91
	cp $2
	jp z, Func_6c53
	cp $1
	jp z, Func_6c15
	or a
	jp nz, Func_6e0d

macro_6b94: MACRO
	read_hl_from_sp_plus $28
	push hl
	read_hl_from_sp_plus \1 + 2
	pop de
	add hl, de
	call WriteHLToSPPlusParam8
	db \1
	read_hl_from_sp_plus \1
	reg16swap de, hl
	ld hl, 999
	call CompareHLtoDE
	jp nc, .check_negative
	ld hl, 999
	call WriteHLToSPPlusParam8
	db \1
	jp .done

.check_negative
	read_hl_from_sp_plus \1
	inc h
	dec h
	bit 7, h
	jr z, .done
	ld hl, $0
	call WriteHLToSPPlusParam8
	db \1
.done
ENDM

	macro_6b94 $10
	jp Func_6e0d

Func_6c15: ; 6c15 (1:6c15)
	macro_6b94 $14
	jp Func_6e0d

Func_6c53: ; 6c53 (1:6c53)
	macro_6b94 $18
	jp Func_6e0d

Func_6c91: ; 6c91 (1:6c91)
	read_hl_from_sp_plus $28
	ld e, l
	ld hl, [sp+$18]
	ld [hl], e
	jp Func_6e0d

Func_6c9c: ; 6c9c (1:6c9c)
	macro_6b94 $12
	jp Func_6e0d

Func_6cda: ; 6cda (1:6cda)
	macro_6b94 $16
	jp Func_6e0d

Func_6d18: ; 6d18 (1:6d18)
	macro_6b94 $1b
	jp Func_6e0d

Func_6d56: ; 6d56 (1:6d56)
	macro_6b94 $1d
	jp Func_6e0d

Func_6d94: ; 6d94 (1:6d94)
	macro_6b94 $1f
	jp Func_6e0d

Func_6dd2: ; 6dd2 (1:6dd2)
	macro_6b94 $21
Func_6e0d: ; 6e0d (1:6e0d)
	pop hl
	ld a, l
	ld hl, sp+$0
	reg16swap de, hl
	call Func_6b74
	add sp, $26
	ret

Func_6e1b:: ; 6e1b
	push hl
	add sp, -$22
	ld hl, sp+$22
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld a, h
	push af
	ld a, e
	ld hl, sp+$2
	reg16swap de, hl
	call GetRobotInParty
	pop af
	cp $b
	jp z, Func_6eaf
	cp $9
	jp z, Func_6ea8
	cp $8
	jp z, Func_6ea1
	cp $7
	jp z, Func_6e9a
	cp $6
	jp z, Func_6e93
	cp $5
	jp z, Func_6e8c
	cp $4
	jp z, Func_6e85
	cp $3
	jp z, Func_6e7d
	cp $2
	jp z, Func_6e76
	cp $1
	jp z, Func_6e6f
	or a
	jp nz, Func_6eb4
	read_hl_from_sp_plus $e
	jp Func_6eb4

Func_6e6f: ; 6e6f (1:6e6f)
	read_hl_from_sp_plus $12
	jp Func_6eb4

Func_6e76: ; 6e76 (1:6e76)
	read_hl_from_sp_plus $16
	jp Func_6eb4

Func_6e7d: ; 6e7d (1:6e7d)
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	jp Func_6eb4

Func_6e85: ; 6e85 (1:6e85)
	read_hl_from_sp_plus $10
	jp Func_6eb4

Func_6e8c: ; 6e8c (1:6e8c)
	read_hl_from_sp_plus $14
	jp Func_6eb4

Func_6e93: ; 6e93 (1:6e93)
	read_hl_from_sp_plus $19
	jp Func_6eb4

Func_6e9a: ; 6e9a (1:6e9a)
	read_hl_from_sp_plus $1b
	jp Func_6eb4

Func_6ea1: ; 6ea1 (1:6ea1)
	read_hl_from_sp_plus $1d
	jp Func_6eb4

Func_6ea8: ; 6ea8 (1:6ea8)
	read_hl_from_sp_plus $1f
	jp Func_6eb4

Func_6eaf: ; 6eaf (1:6eaf)
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
Func_6eb4: ; 6eb4 (1:6eb4)
	reg16swap de, hl
	add sp, $24
	reg16swap de, hl
	ret

Func_6ebf: ; 6ebf
	push hl
	add sp, -$24
	ld l, e
	push hl
	ld a, d
	push af
	ld a, l
	ld hl, sp+$4
	reg16swap de, hl
	call GetRobotInParty
	pop af
	cp $9
	jp z, Func_6f65
	cp $8
	jp z, Func_6f5a
	cp $7
	jp z, Func_6f4f
	cp $6
	jp z, Func_6f44
	cp $5
	jp z, Func_6f39
	cp $4
	jp z, Func_6f2e
	cp $3
	jp z, Func_6f23
	cp $2
	jp z, Func_6f18
	cp $1
	jp z, Func_6f0d
	or a
	jp nz, Func_6f6d
.asm_6f00
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $10
	jp Func_6f6d

Func_6f0d: ; 6f0d (1:6f0d)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $14
	jp Func_6f6d

Func_6f18: ; 6f18 (1:6f18)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $18
	jp Func_6f6d

Func_6f23: ; 6f23 (1:6f23)
	read_hl_from_sp_plus $28
	ld e, l
	ld hl, sp+$18
	ld [hl], e
	jp Func_6f6d

Func_6f2e: ; 6f2e (1:6f2e)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $12
	jp Func_6f6d

Func_6f39: ; 6f39 (1:6f39)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $16
	jp Func_6f6d

Func_6f44: ; 6f44 (1:6f44)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $1b
	jp Func_6f6d

Func_6f4f: ; 6f4f (1:6f4f)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $1d
	jp Func_6f6d

Func_6f5a: ; 6f5a (1:6f5a)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $1f
	jp Func_6f6d

Func_6f65: ; 6f65 (1:6f65)
	read_hl_from_sp_plus $28
	write_hl_to_sp_plus $21
Func_6f6d: ; 6f6d (1:6f6d)
	pop hl
	ld a, l
	ld hl, sp+$0
	reg16swap de, hl
	call Func_6b74
	add sp, $26
	ret

Func_6f7b: ; 6f7b (1:6f7b)
	push hl
	push de
	ld a, [rIE]
	push af
	call EnableVBlank
	call EnableTimerInt
	pop af
	pop de
	push af
	ld a, e
	or d
	jp z, Func_6f95
	reg16swap de, hl
	call Func_2887
Func_6f95: ; 6f95 (1:6f95)
	pop af
	pop hl
	push af
	ld e, $5
	call Func_2a3e
	reg16swap de, hl
	pop af
	push de
	push af
	and $1
	jp nz, Func_6fac
	call DisableVBlank
Func_6fac: ; 6fac (1:6fac)
	pop af
	and $4
	jp nz, Func_6fb5
	call DisableTimerInt
Func_6fb5: ; 6fb5 (1:6fb5)
	pop hl
	ret

Func_6fb7: ; 6fb7 (1:6fb7)
	reg16swap de, hl
	ld hl, Data_6fc1
	jp Func_6f7b

Data_6fc1: ; 6fc1
	db "(つうしん まち)", $0

Func_6fcb: ; 6fcb (1:6fcb)
	reg16swap de, hl
	ld hl, Data_6fd5
	jp Func_6f7b

Data_6fd5: ; 6fd5
	db "(つうしん )エラー", $0

Func_6fe0: ; 6fe0
	push bc
	ld e, $0
	push de
	ld hl, sp+$2
	ld [hl], $0
	ld a, [hSRAMBank]
	ld l, a
	push hl
	xor a
	ld [wc39e], a
	ld a, $3
	call GetSRAMBank
	call DisableJoypadInt
	ld hl, Func_1069
	write_hl_to wSerial + 1
	xor a
	ld [wc31e], a
	xor a
.asm_7005
	ld [wc31b], a
	ld [wc31d], a
	ld [rSC], a
	xor a
	ld [wc319], a
	ld e, $5
	ld hl, Data_71f0
	call Func_2a3e
	ld c, l
	ld b, h
	pop hl
	pop de
Func_701d: ; 701d (1:701d)
	push hl
	push bc
	push de
	call EnableJoypadInt
	xor a
	ld [wTimerCounter + 1], a
	pop de
Func_7028: ; 7028 (1:7028)
	inc e
	dec e
	jp nz, Func_711e
	ld a, [wTimerCounter + 1]
	cp $2
	jp c, Func_7038
	jp Func_711e

Func_7038: ; 7038 (1:7038)
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_70bc
	xor a
	ld [wc31a], a
	ld a, $dd
	ld [wc31b], a
	ld a, $80
	ld [wc31d], a
	ld a, [wTextBlinkerFrameCounter]
	ld l, a
Func_7051: ; 7051 (1:7051)
	ld a, [wTextBlinkerFrameCounter]
	xor l
	and $2
	jp nz, Func_7061
	ld a, [wc31a]
	or a
	jp z, Func_7051
Func_7061: ; 7061 (1:7061)
	ld a, [wc31a]
	or a
	jp nz, Func_7090
	push de
	set_farcall_addrs_hli RandomRange
	ld a, $64
	call FarCall
	cp $46
	jp nc, Func_708c
	ld a, $fe
	ld [wc31b], a
	ld a, $1
	ld [wc31d], a
	ld hl, sp+$6
	ld [hl], $1
Func_708c: ; 708c (1:708c)
	pop de
	jp Func_70b9

Func_7090: ; 7090 (1:7090)
	xor a
	ld [wc31a], a
	ld a, [wTextBlinkerFrameCounter]
	ld l, a
Func_7098: ; 7098 (1:7098)
	ld a, [wTextBlinkerFrameCounter]
	xor l
	and $2
	jp nz, Func_70a8
	ld a, [wc31a]
	or a
	jp z, Func_7098
Func_70a8: ; 70a8 (1:70a8)
	ld a, [wc31c]
	cp $fe
	jp nz, Func_70b9
	ld a, [wc31a]
	or a
	jp z, Func_70b9
	ld e, $80
Func_70b9: ; 70b9 (1:70b9)
	jp Func_711b

Func_70bc: ; 70bc (1:70bc)
	push de
	xor a
	ld [wc31a], a
	ld a, $fe
	ld [wc31b], a
	ld a, $1
	ld [wc31d], a
	ld a, $81
	ld [rSC], a
	ld l, $0
Func_70d1: ; 70d1 (1:70d1)
	ld a, l
	cp $3
	jp nc, Func_70fa
Func_70d7: ; 70d7 (1:70d7)
	ld a, [wc31a]
	or a
	jp z, Func_70d7
	push hl
	xor a
	ld [wc31a], a
	call NextOverworldFrame
	ld a, $81
	ld [rSC], a
	pop hl
	ld a, [wc31c]
	cp $dd
	jp z, Func_70f6
	jp Func_70fa

Func_70f6: ; 70f6 (1:70f6)
	inc l
	jp Func_70d1

Func_70fa: ; 70fa (1:70fa)
	pop de
	ld a, l
	cp $3
	jp c, Func_710e
	ld a, [wc31c]
	cp $dd
	jp nz, Func_710e
	ld e, $81
	jp Func_711b

Func_710e: ; 710e (1:710e)
	ld a, $dd
	ld [wc31b], a
	xor a
	ld [wc31d], a
	ld hl, sp+$4
	ld [hl], $0
Func_711b: ; 711b (1:711b)
	jp Func_7028

Func_711e: ; 711e (1:711e)
	pop bc
	pop hl
	inc e
	dec e
	jp nz, Func_7161
	push hl
	xor a
	ld [wc31a], a
	xor a
	ld [wc31b], a
	ld a, $1
	ld [wc31d], a
	ld a, $81
	ld [rSC], a
Func_7137: ; 7137 (1:7137)
	ld a, [wc31a]
	or a
	jp z, Func_7137
	ld a, $81
	ld [rSC], a
	xor a
	ld [wc31a], a
Func_7146: ; 7146 (1:7146)
	ld a, [wc31a]
	or a
	jp z, Func_7146
	ld a, $1
	ld [wc39e], a
	ld l, c
	ld h, b
	call Func_2887
	pop hl
	ld a, l
	call GetSRAMBank
	ld a, $ff
	jp Func_71ee

Func_7161: ; 7161 (1:7161)
	ld a, e
	cp $81
	jp nz, Func_71a7
	push hl
	push de
	push bc
	ld l, $0
Func_716c: ; 716c (1:716c)
	ld a, l
	cp $f
	jp nc, Func_718a
Func_7172: ; 7172 (1:7172)
	ld a, [wc31a]
	or a
	jp z, Func_7172
	push hl
	xor a
	ld [wc31a], a
	call NextOverworldFrame
	ld a, $81
	ld [rSC], a
	pop hl
	inc l
	jp Func_716c

Func_718a: ; 718a (1:718a)
	pop bc
	pop de
	pop hl
	ld a, [wc31c]
	cp $dd
	jp z, Func_7198
	jp Func_701d

Func_7198: ; 7198 (1:7198)
	push hl
	ld a, $81
	ld [wc319], a
	ld l, c
	ld h, b
	call Func_2887
	pop hl
	jp Func_71e4

Func_71a7: ; 71a7 (1:71a7)
	push hl
	push de
	xor a
	ld [wc31a], a
	ld e, $0
Func_71af: ; 71af (1:71af)
	ld a, e
.asm_71b0
	cp $f
	jp nc, Func_71c4
	ld a, [wTextBlinkerFrameCounter]
	ld l, a
Func_71b9: ; 71b9 (1:71b9)
	ld a, [wTextBlinkerFrameCounter]
	cp l
	jp z, Func_71b9
	inc e
	jp Func_71af

Func_71c4: ; 71c4 (1:71c4)
	pop de
	pop hl
	ld a, [wc31c]
	cp $fe
	jp nz, Func_71d5
	ld a, [wc31a]
	or a
	jp nz, Func_71d8
Func_71d5: ; 71d5 (1:71d5)
	jp Func_701d

Func_71d8: ; 71d8 (1:71d8)
	push hl
	ld a, $80
	ld [wc319], a
	ld l, c
	ld h, b
	call Func_2887
	pop hl
Func_71e4: ; 71e4 (1:71e4)
	ld a, l
	call GetSRAMBank
	ld a, $1
	ld [wc39e], a
	xor a
Func_71ee: ; 71ee (1:71ee)
	pop bc
	ret

Data_71f0: ; 71f0
	db "(せつそﾞくちゅう)", $0

Func_71fb: ; 71fb (1:71fb)
	push af
	xor a
	ld [wTimerCounter], a
	ld e, a
Func_7201: ; 7201 (1:7201)
	ld a, e
	ld hl, sp+$1
	cp [hl]
	jp nc, Func_7218
	ld a, [wTimerCounter]
	cp $3c
	jp c, Func_7215
	xor a
	ld [wTimerCounter], a
	inc e
Func_7215: ; 7215 (1:7215)
	jp Func_7201

Func_7218: ; 7218 (1:7218)
	pop bc
	ret

Func_721a: ; 721a (1:721a)
	xor a
	ld [wTimerCounter], a
	ld [wc31a], a
Func_7221: ; 7221 (1:7221)
	ld a, [wTimerCounter]
	cp $b4
	jp nc, Func_7230
	ld a, [wc31a]
	or a
	jp z, Func_7221
Func_7230: ; 7230 (1:7230)
	ld a, [wc31a]
	ret

Func_7234: ; 7234 (1:7234)
	call Func_6fcb
	push hl
	call DisableJoypadInt
	xor a
	ld [wc31e], a
	ld a, $81
	ld [rSC], a
Func_7243: ; 7243 (1:7243)
	ld a, [rSC]
	and $80
	jp nz, Func_7243
	ld a, $81
	ld [rSC], a
Func_724e: ; 724e (1:724e)
	ld a, [rSC]
	and $80
	jp nz, Func_724e
	ld a, $14
	call Func_71fb
	call EnableJoypadInt
	pop hl
	ret

Func_725f: ; 725f (1:725f)
	call Func_6fcb
	push hl
	call DisableJoypadInt
	ld a, $81
	ld [rSC], a
Func_726a: ; 726a (1:726a)
	ld a, [rSC]
	and $80
	jp nz, Func_726a
	ld a, $81
	ld [rSC], a
Func_7275: ; 7275 (1:7275)
	ld a, [rSC]
	and $80
	jp nz, Func_7275
	ld a, $28
	call Func_71fb
	call EnableJoypadInt
	pop hl
	ret

Func_7286: ; 7286 (1:7286)
	push hl
	push de
	push bc
	push bc
	push bc
	ld hl, $0
	call WriteHLToSPPlus4
	ld hl, sp+$1
	ld [hl], $0
	ld hl, sp+$0
	ld [hl], $0
	di
	ld a, [rIE]
	push af
	ld hl, sp+$6
	ld a, [hl]
	and $1
	jp z, Func_72ab
	ld a, [rIE]
	and $c
	ld [rIE], a
Func_72ab: ; 72ab (1:72ab)
	ei
Func_72ac: ; 72ac (1:72ac)
	ld de, $0
	push de
	xor a
	ld [wc31e], a
	xor a
	ld [wc31f], a
	ld hl, sp+$5
	ld a, [hl]
	or a
	jp z, Func_72d0
	ld hl, sp+$8
	ld a, [hl]
	and $2
	jp nz, Func_72d0
	call GetHLAtSPPlus8
	call Func_6fb7
	call WriteHLToSPPlus8
Func_72d0: ; 72d0 (1:72d0)
	read_hl_from_sp_plus $e
	write_hl_to wc320
	read_hl_from_sp_plus $c
	write_hl_to wc322
	xor a
	ld [wc31f], a
	xor a
	ld [wc31a], a
	ld a, $1
	ld [wc31e], a
	xor a
	ld [wTimerCounter], a
	pop de
Func_72f4: ; 72f4 (1:72f4)
	ld a, [wTimerCounter]
	cp $b4
	jp nc, Func_731e
	ld a, [wc31f]
	or a
	jp nz, Func_731e
	ld a, [wc31a]
	or a
	jp z, Func_731b
	xor a
	ld [wc31a], a
	ld a, [wc31e]
	cp $2
	jp c, Func_731b
	inc de
	xor a
	ld [wTimerCounter], a
Func_731b: ; 731b (1:731b)
	jp Func_72f4

Func_731e: ; 731e (1:731e)
	ld a, [wc31f]
	or a
	jp nz, Func_733d
	ld hl, sp+$3
	ld [hl], $1
	ld a, e
	or d
	jp nz, Func_7331
	jp Func_72ac

Func_7331: ; 7331 (1:7331)
	call GetHLAtSPPlus6
	call Func_7234
	call WriteHLToSPPlus6
	jp Func_72ac

Func_733d: ; 733d (1:733d)
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $c
	pop de
	call CalcChecksum
	reg16swap de, hl
	read_hl_from wc324
	call CompareHLtoDE
	jp z, Func_7376
	ld a, $d0
	ld [wc31b], a
	call Func_721a
	ld a, $dd
	ld [wc31b], a
	call GetHLAtSPPlus6
	call Func_7234
	call WriteHLToSPPlus6
	ld hl, sp+$3
	ld [hl], $1
	jp Func_72ac

Func_7376: ; 7376
	ld a, $c0
	ld [wc31b], a
	call Func_721a
	or a
	jp z, Func_7386
	ld hl, sp+$2
	ld [hl], $1
Func_7386: ; 7386 (1:7386)
	ld a, $dd
	ld [wc31b], a
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp nz, Func_7395
	jp Func_72ac

Func_7395: ; 7395 (1:7395)
	di
	pop af
	ld [rIE], a
	ei
	call GetHLAtSPPlus4
	ld a, l
	or h
	jp z, Func_73a8
	call GetHLAtSPPlus4
	call Func_2887
Func_73a8: ; 73a8 (1:73a8)
	xor a
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_73af: ; 73af (1:73af)
	push hl
	push de
	push bc
	push bc
	push bc
	ld hl, $0
	call WriteHLToSPPlus5
	ld l, $0
	push hl
	ld hl, sp+$4
	ld [hl], $0
	di
	ld a, [rIE]
	pop hl
	pop bc
	push af
	push hl
	push bc
	ld a, c
	and $1
	jp z, Func_73d5
	ld a, [rIE]
	and $c
	ld [rIE], a
Func_73d5: ; 73d5 (1:73d5)
	ei
	pop bc
.asm_73d7
	pop hl
Func_73d8: ; 73d8 (1:73d8)
	push bc
	ld de, $0
	push de
	xor a
	ld [wc31e], a
	xor a
	ld [wc31f], a
	inc l
	dec l
	jp z, Func_73f9
	ld a, c
	and $2
	jp nz, Func_73f9
	call GetHLAtSPPlus9
	call Func_6fb7
	call WriteHLToSPPlus9
Func_73f9: ; 73f9 (1:73f9)
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $e
	pop de
	call CalcChecksum
	write_hl_to wc324
	read_hl_from_sp_plus $e
	write_hl_to wc320
	read_hl_from_sp_plus $c
	write_hl_to wc322
	xor a
	ld [wc31f], a
	ld a, $5
	ld [wc31e], a
	xor a
	ld [wc31a], a
	xor a
	ld [wTimerCounter], a
	pop de
Func_742f: ; 742f (1:742f)
	ld a, [wTimerCounter]
	cp $b4
	jp nc, Func_7459
	ld a, [wc31f]
	or a
	jp nz, Func_7459
	ld a, [wc31a]
	or a
	jp z, Func_7456
	xor a
	ld [wc31a], a
	ld a, [wc31e]
	cp $6
	jp c, Func_7456
	inc de
	xor a
	ld [wTimerCounter], a
Func_7456: ; 7456 (1:7456)
	jp Func_742f

Func_7459: ; 7459 (1:7459)
	pop bc
	ld a, [wc31f]
	or a
	jp nz, Func_747b
	ld l, $1
	ld a, e
	or d
	jp nz, Func_746b
	jp Func_73d8

Func_746b: ; 746b (1:746b)
	push hl
	push bc
	call GetHLAtSPPlus9
	call Func_7234
	call WriteHLToSPPlus9
	pop bc
	pop hl
	jp Func_73d8

Func_747b: ; 747b (1:747b)
	push bc
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $c
	pop de
	call CalcChecksum
	xor a
	ld [wTimerCounter], a
Func_748d: ; 748d (1:748d)
	ld a, [wTimerCounter]
	cp $5
	jp nc, Func_74a7
	ld a, [wc31c]
	cp $c0
	jp nz, Func_74a4
	ld hl, sp+$4
	ld [hl], $1
	jp Func_74a7

Func_74a4: ; 74a4 (1:74a4)
	jp Func_748d

Func_74a7: ; 74a7 (1:74a7)
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp nz, Func_74c1
	push bc
	ld l, $1
	push hl
	call GetHLAtSPPlus9
	call Func_7234
	call WriteHLToSPPlus9
	pop hl
	pop bc
	jp Func_73d8

Func_74c1: ; 74c1 (1:74c1)
	di
	pop af
	ld [rIE], a
	ei
	call GetHLAtSPPlus3
	ld a, l
	or h
	jp z, Func_74d4
	call GetHLAtSPPlus3
	call Func_2887
Func_74d4: ; 74d4 (1:74d4)
	xor a
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_74da: ; 74da (1:74da)
	push af
	ld a, e
	ld [rSB], a
	xor a
	ld [wc31a], a
	ld a, $81
	ld [rSC], a
Func_74e6: ; 74e6 (1:74e6)
	ld a, [wc31a]
	or a
	jp z, Func_74e6
	pop af
	and $1
	jp nz, Func_74fc
	call NextOverworldFrame
	call NextOverworldFrame
	jp Func_7506

Func_74fc: ; 74fc (1:74fc)
	xor a
Func_74fd: ; 74fd (1:74fd)
	cp $28
	jp nc, Func_7506
	inc a
	jp Func_74fd

Func_7506: ; 7506 (1:7506)
	ret

Func_7507: ; 7507 (1:7507)
	push hl
	push de
	push bc
	push bc
	ld hl, $0
	pop de
	push hl
	xor a
	push af
	xor a
	di
	ld a, [rIE]
	ld l, a
	push hl
	ld hl, sp+$6
	ld a, [hl]
	and $1
	jp z, Func_7526
	ld a, [rIE]
	and $c
	ld [rIE], a
Func_7526: ; 7526 (1:7526)
	ei
	pop hl
	pop af
	push hl
Func_752a: ; 752a (1:752a)
	or a
	jp z, Func_753f
	ld hl, sp+$4
	ld a, [hl]
	and $2
	jp nz, Func_753f
	call GetHLAtSPPlus4
	call Func_6fb7
	call WriteHLToSPPlus4
Func_753f: ; 753f (1:753f)
	ld l, $64
Func_7541: ; 7541 (1:7541)
	inc l
	dec l
	jp z, Func_755f
	push hl
	ld e, $a2
	ld hl, sp+$6
	ld a, [hl]
	call Func_74da
	pop hl
	ld a, [wc31c]
	cp $b2
	jp nz, Func_755b
	jp Func_755f

Func_755b: ; 755b (1:755b)
	dec l
	jp Func_7541

Func_755f: ; 755f (1:755f)
	ld a, [wc31c]
	cp $b2
	jp z, Func_756c
	ld a, $1
	jp Func_752a

Func_756c: ; 756c (1:756c)
	call GetHLAtSPPlus10
	push hl
	call GetHLAtSPPlus10
	ld c, l
	ld b, h
	pop de
Func_7576: ; 7576 (1:7576)
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_7594
	push de
	push bc
	ld e, $0
	ld hl, sp+$8
	ld a, [hl]
	call Func_74da
	pop bc
	ld a, [wc31c]
	ld [bc], a
	pop de
	dec de
	inc bc
	jp Func_7576

Func_7594: ; 7594 (1:7594)
	ld e, $0
	ld hl, sp+$4
	ld a, [hl]
	call Func_74da
	ld a, [wc31c]
	ld [wc324], a
	ld e, $0
	ld hl, sp+$4
	ld a, [hl]
	call Func_74da
	ld a, [wc31c]
	ld [wc324 + 1], a
	call GetHLAtSPPlus10
	push hl
	call GetHLAtSPPlus10
	pop de
	call CalcChecksum
	reg16swap de, hl
	read_hl_from wc324
	call CompareHLtoDE
	jp z, Func_75e8
	ld e, $d0
	ld hl, sp+$4
	ld a, [hl]
	call Func_74da
	ld e, $d0
	ld hl, sp+$4
	ld a, [hl]
	call Func_74da
	call GetHLAtSPPlus4
	call Func_725f
	call WriteHLToSPPlus4
	ld a, $1
	jp Func_752a

Func_75e8: ; 75e8
	ld e, $c0
	ld hl, sp+$4
	ld a, [hl]
	call Func_74da
	ld e, $c0
	ld hl, sp+$4
	ld a, [hl]
	call Func_74da
	ld a, $1
	di
	pop hl
	ld a, l
	ld [rIE], a
	ei
	pop hl
	push hl
	ld a, l
	or h
	jp z, Func_760c
	pop hl
	push hl
	call Func_2887
Func_760c: ; 760c (1:760c)
	call NextOverworldFrame
	call NextOverworldFrame
	xor a
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_7618: ; 7618 (1:7618)
	push hl
	push de
	push bc
	push bc
	push bc
	ld de, $0
	push de
	xor a
	push af
	ld hl, sp+$8
	ld [hl], $0
	di
	ld a, [rIE]
	ld l, a
	pop af
	pop de
	pop bc
	push hl
	push de
	push af
	push bc
	ld a, c
	and $1
	jp z, Func_763e
	ld a, [rIE]
	and $c
	ld [rIE], a
Func_763e: ; 763e (1:763e)
	ei
	pop bc
	pop af
	pop de
Func_7642: ; 7642 (1:7642)
	push bc
	or a
	jp z, Func_7658
	ld a, c
	and $2
	jp nz, Func_7658
	reg16swap de, hl
	call Func_6fb7
	reg16swap de, hl
Func_7658: ; 7658 (1:7658)
	push de
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $e
	pop de
	call CalcChecksum
	write_hl_to wc324
	ld l, $64
	pop de
	pop bc
	push de
Func_7670: ; 7670 (1:7670)
	inc l
	dec l
	jp z, Func_768e
	push hl
	push bc
	ld a, c
	ld e, $a0
	call Func_74da
	pop bc
	pop hl
	ld a, [wc31c]
	cp $b0
	jp nz, Func_768a
	jp Func_768e

Func_768a: ; 768a (1:768a)
	dec l
	jp Func_7670

Func_768e: ; 768e (1:768e)
	pop de
	ld a, [wc31c]
	cp $b0
	jp z, Func_769c
	ld a, $1
	jp Func_7642

Func_769c: ; 769c (1:769c)
	push de
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $c
	call WriteHLToSPPlus8
	pop hl
Func_76aa: ; 76aa (1:76aa)
	dec hl
	inc h
	dec h
	bit 7, h
	jr nz, .asm_76c5
	push hl
	push bc
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld e, a
	ld a, c
	call Func_74da
	pop bc
	pop hl
	jp Func_76aa

.asm_76c5
	push bc
	ld a, [wc324]
	ld e, a
	ld a, c
	call Func_74da
	pop bc
	push bc
	ld a, [wc324 + 1]
	ld e, a
	ld a, c
	call Func_74da
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $e
	pop de
	call CalcChecksum
	ld l, $3c
	pop bc
Func_76e8: ; 76e8 (1:76e8)
	inc l
	dec l
	jp z, Func_770a
	push hl
	push bc
	ld a, c
	ld e, $0
	call Func_74da
	pop bc
	pop hl
	ld a, [wc31c]
	cp $c0
	jp nz, Func_7706
	ld hl, sp+$6
	ld [hl], $1
	jp Func_770a

Func_7706: ; 7706 (1:7706)
	dec l
	jp Func_76e8

Func_770a: ; 770a (1:770a)
	pop de
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_7726
	push bc
	ld a, $1
	push af
	reg16swap de, hl
	call Func_725f
	reg16swap de, hl
	pop af
	pop bc
	jp Func_7642

Func_7726: ; 7726 (1:7726)
	pop hl
	push de
	push hl
	di
	pop hl
	ld a, l
	ld [rIE], a
	ei
	pop de
	ld a, e
	or d
	jp z, Func_773c
	reg16swap de, hl
	call Func_2887
Func_773c: ; 773c (1:773c)
	call NextOverworldFrame
	call NextOverworldFrame
	xor a
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_7748: ; 7748
	xor a
	ld [wc39e], a
	ld a, [wc319]
	cp $81
	jp nz, Func_775b
	call Func_7507
	ld l, a
	jp Func_775f

Func_775b: ; 775b (1:775b)
	call Func_7286
	ld l, a
Func_775f: ; 775f (1:775f)
	ld a, $1
	ld [wc39e], a
	ld a, l
	ret

Func_7766: ; 7766
	xor a
	ld [wc39e], a
	ld a, [wc319]
	cp $81
	jp nz, Func_7779
	call Func_7618
	ld l, a
	jp Func_777d

Func_7779: ; 7779 (1:7779)
	call Func_73af
	ld l, a
Func_777d: ; 777d (1:777d)
	ld a, $1
	ld [wc39e], a
	ld a, l
	ret

Data_7784: ; 7784
	db "ROBOPON IR TAKANORI", $0

Func_7798: ; 7798 (1:7798)
	push hl
	push de
Func_779a: ; 779a (1:779a)
	call GetHLAtSPPlus4
	ld a, [hl]
	pop hl
	push hl
	cp [hl]
	jp z, Func_77a9
	ld a, $1
	jp Func_77c4

Func_77a9: ; 77a9 (1:77a9)
	call GetHLAtSPPlus4
	ld a, [hl]
	or a
	jp nz, Func_77b4
	jp Func_77c3

Func_77b4: ; 77b4 (1:77b4)
	call GetHLAtSPPlus4
	inc hl
	call WriteHLToSPPlus4
	pop hl
	push hl
	inc hl
	pop de
	push hl
	jp Func_779a

Func_77c3: ; 77c3 (1:77c3)
	xor a
Func_77c4: ; 77c4 (1:77c4)
	pop bc
	pop bc
	ret

Func_77c7: ; 77c7 (1:77c7)
	push bc
	ld hl, sp+$0
	ld [hl], $0
	ld a, [wc326]
	cp $80
	jp nz, Func_782a
	ld de, Data_7784
	ld hl, wc327
	call CopyUntilNull
	call Func_1c78
	or a
	jp z, Func_77ec
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_77ec: ; 77ec (1:77ec)
	ld c, $15
	ld de, wc327
	ld hl, wc327
	call Func_1c5a
	or a
	jp z, Func_7803
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_7803: ; 7803 (1:7803)
	ld de, wc327
	ld hl, Data_7784
	call Func_7798
	or a
	jp z, Func_7818
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_7818: ; 7818 (1:7818)
	call Func_1c83
	or a
	jp z, Func_7827
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_7827: ; 7827 (1:7827)
	jp Func_787d

Func_782a: ; 782a (1:782a)
	ld c, $15
	ld de, wc327
	ld hl, wc327
	call Func_1c5a
	or a
	jp z, Func_7841
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_7841: ; 7841 (1:7841)
	call Func_1c83
	or a
	jp z, Func_7850
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_7850: ; 7850 (1:7850)
	ld de, wc327
	ld hl, Data_7784
	call Func_7798
	or a
	jp z, Func_7865
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_7865: ; 7865 (1:7865)
	ld de, Data_7784
	ld hl, wc327
	call CopyUntilNull
	call Func_1c78
	or a
	jp z, Func_787d
	ld hl, sp+$0
	ld a, [hl]
	or $1
	ld hl, sp+$0
	ld [hl], a
Func_787d: ; 787d (1:787d)
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	ret

Func_7882: ; 7882
	push hl
	push de
	push bc
	call Func_77c7
	or a
	jp z, Func_7891
	ld a, $1
	jp Func_790b

Func_7891: ; 7891 (1:7891)
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_790a
	call GetHLAtSPPlus6
	ld de, $20
	call CompareHLtoDE
	jp c, Func_78b4
	ld hl, sp+$0
	ld [hl], $20
	jp Func_78bb

Func_78b4: ; 78b4 (1:78b4)
	call GetHLAtSPPlus6
	ld e, l
	ld hl, sp+$0
	ld [hl], e
Func_78bb: ; 78bb (1:78bb)
	ld hl, sp+$0
	ld c, [hl]
	ld de, wc327
	ld hl, wc327
	call Func_1c5a
	or a
	jp z, Func_78d0
	ld a, $1
	jp Func_790b

Func_78d0: ; 78d0 (1:78d0)
	call Func_1c83
	or a
	jp z, Func_78dc
	ld a, $1
	jp Func_790b

Func_78dc: ; 78dc (1:78dc)
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus4
	ld de, wc327
	call CopyFromDEtoHL
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus4
	add hl, bc
	call WriteHLToSPPlus4
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	call WriteHLToSPPlus6
	jp Func_7891

Func_790a: ; 790a (1:790a)
	xor a
Func_790b: ; 790b (1:790b)
	pop bc
	pop bc
	pop bc
	ret

Func_790f: ; 790f
	push hl
	push de
	push bc
	call Func_77c7
	or a
	jp z, Func_791e
	ld a, $1
	jp Func_7987

Func_791e: ; 791e (1:791e)
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_7986
	call GetHLAtSPPlus6
	ld de, $20
	call CompareHLtoDE
	jp c, Func_7941
	ld hl, sp+$0
	ld [hl], $20
	jp Func_7948

Func_7941: ; 7941 (1:7941)
	call GetHLAtSPPlus6
	ld e, l
	ld hl, sp+$0
	ld [hl], e
Func_7948: ; 7948 (1:7948)
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, wc327
	call CopyFromDEtoHL
	call Func_1c78
	or a
	jp z, Func_7966
	ld a, $1
	jp Func_7987

Func_7966: ; 7966 (1:7966)
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus4
	add hl, bc
	call WriteHLToSPPlus4
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	call WriteHLToSPPlus6
	jp Func_791e

Func_7986: ; 7986 (1:7986)
	xor a
Func_7987: ; 7987 (1:7987)
	pop bc
	pop bc
	pop bc
	ret

INCLUDE "engine/validate_save.asm"

Func_7b0d: ; 7b0d
	push hl
	push bc
	ld hl, sp+$1
	ld [hl], $0
Func_7b13: ; 7b13 (1:7b13)
	ld a, [de]
	or a
	jp z, Func_7bc4
	ld a, [de]
	inc de
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	cp $28
	jp z, Func_7b2d
	ld hl, sp+$0
	ld a, [hl]
	cp $29
	jp nz, Func_7b38
Func_7b2d: ; 7b2d (1:7b2d)
	ld hl, sp+$1
	ld a, [hl]
	xor $1
	ld hl, sp+$1
	ld [hl], a
	jp Func_7bc1

Func_7b38: ; 7b38 (1:7b38)
	ld hl, sp+$0
	ld a, [hl]
	cp $30
	jp c, Func_7b4d
	ld hl, sp+$0
	ld a, [hl]
	cp $3a
	jp nc, Func_7b4d
	ld c, $0
	jp Func_7b98

Func_7b4d: ; 7b4d (1:7b4d)
	ld hl, sp+$0
	ld a, [hl]
	cp $b0
	jp nz, Func_7b5a
	ld c, $0
	jp Func_7b98

Func_7b5a: ; 7b5a (1:7b5a)
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_7b7e
	ld a, [de]
	cp $de
	jp nz, Func_7b6d
	ld c, $c0
	inc de
	jp Func_7b7b

Func_7b6d: ; 7b6d (1:7b6d)
	ld a, [de]
	cp $df
	jp nz, Func_7b79
	inc de
	ld c, $d4
	jp Func_7b7b

Func_7b79: ; 7b79 (1:7b79)
	ld c, $44
Func_7b7b: ; 7b7b (1:7b7b)
	jp Func_7b98

Func_7b7e: ; 7b7e (1:7b7e)
	ld a, [de]
	cp $de
	jp nz, Func_7b8a
	ld c, $a0
	inc de
	jp Func_7b98

Func_7b8a: ; 7b8a (1:7b8a)
	ld a, [de]
	cp $df
	jp nz, Func_7b96
	inc de
	ld c, $b4
	jp Func_7b98

Func_7b96: ; 7b96 (1:7b96)
	ld c, $a
Func_7b98: ; 7b98 (1:7b98)
	push de
	ld e, c
	ld d, $0
	ld hl, PoncotNameCharacters
	add hl, de
	reg16swap de, hl
Func_7ba4: ; 7ba4 (1:7ba4)
	ld a, [de]
	ld hl, sp+$2
	cp [hl]
	jp z, Func_7bb0
	inc de
	inc c
	jp Func_7ba4

Func_7bb0: ; 7bb0 (1:7bb0)
	ld a, c
	inc a
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	call GetHLAtSPPlus6
	ld [hl], a
	inc hl
	call WriteHLToSPPlus6
	pop de
Func_7bc1: ; 7bc1 (1:7bc1)
	jp Func_7b13

Func_7bc4: ; 7bc4 (1:7bc4)
	call GetHLAtSPPlus4
	ld [hl], $0
	pop bc
	pop bc
	ret

Func_7bcc: ; 7bcc (1:7bcc)
	push hl
	push de
	push bc
	push bc
	push bc
	call GetHLAtSPPlus10
	ld e, h
	ld hl, sp+$3
	ld [hl], e
	call GetHLAtSPPlus10
	ld e, l
	ld hl, sp+$2
	ld [hl], e
	ld l, c
	ld h, b
	ld de, $100
	call DivideHLByDESigned
	ld e, l
	ld d, $0
	inc de
	inc de
	ld hl, sp+$5
	ld [hl], e
	pop bc
	ld hl, sp+$2
	ld [hl], c
	ld hl, sp+$2
	ld a, [hl]
	cp $2
	jp nz, Func_7c3d
	ld hl, sp+$2
	ld c, [hl]
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus10
	pop de
	call Func_6336
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc hl
	inc hl
	inc hl
	push hl
	ld hl, sp+$2
	ld c, [hl]
	ld b, $0
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $700
	add hl, de
	add hl, bc
	ld de, $7
	add hl, de
	push hl
	read_hl_from_sp_plus $c
	pop de
	pop bc
	call Func_667d
	ld a, $2
	ld [wc39a], a
	jp Func_7c85

Func_7c3d: ; 7c3d (1:7c3d)
	ld hl, sp+$2
	ld c, [hl]
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus10
	pop de
	call Func_6336
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld hl, sp+$2
	ld c, [hl]
	ld hl, sp+$3
	ld h, [hl]
	ld b, h
	push bc
	ld hl, sp+$2
	ld c, [hl]
	ld b, $0
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $700
	add hl, de
	add hl, bc
	ld de, $7
	add hl, de
	push hl
	read_hl_from_sp_plus $c
	pop de
	pop bc
	call Func_667d
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_7c85: ; 7c85 (1:7c85)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_7c8a:: ; 7c8a
	push hl
	push de
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	push hl
	call GetHLAtSPPlus4
	pop de
	call CompareHLtoDE
	jp nz, Func_7cac
	ld l, $1
	jp Func_7cae

Func_7cac: ; 7cac (1:7cac)
	ld l, $0
Func_7cae: ; 7cae (1:7cae)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_7cc4
	ld b, l
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call Func_7bcc
	jp Func_7cce

Func_7cc4: ; 7cc4 (1:7cc4)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call Func_6336
Func_7cce: ; 7cce (1:7cce)
	pop bc
	pop bc
	ret

Func_7cd1: ; 7cd1
	ld a, [hSRAMBank]
	push af
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld de, $a007
	ld c, $0
	ld l, c
Func_7cdf: ; 7cdf (1:7cdf)
	ld a, c
	cp $aa
	jp nc, Func_7cf9
	ld a, [de]
	or a
	jp z, Func_7ceb
	inc l
Func_7ceb: ; 7ceb (1:7ceb)
	push hl
	inc c
	ld hl, $1c
	add hl, de
	reg16swap de, hl
	pop hl
	jp Func_7cdf

Func_7cf9: ; 7cf9 (1:7cf9)
	pop af
	push hl
	call GetSRAMBank
	pop hl
	ld a, l
	ret

Func_7d01: ; 7d01
	ld a, [hSRAMBank]
	push af
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld de, $a007
	ld c, $0
Func_7d0e: ; 7d0e (1:7d0e)
	ld a, c
	cp $aa
	jp nc, Func_7d28
	ld a, [de]
	or a
	jp nz, Func_7d1c
	jp Func_7d28

Func_7d1c: ; 7d1c (1:7d1c)
	inc c
	ld hl, $1c
	add hl, de
	reg16swap de, hl
	jp Func_7d0e

Func_7d28: ; 7d28 (1:7d28)
	pop af
	push bc
	call GetSRAMBank
	pop bc
	ld a, c
	cp $aa
	jp c, Func_7d37
	ld a, $ff
	ret

Func_7d37: ; 7d37 (1:7d37)
	ld a, c
	ret

Func_7d39: ; 7d39
	push af
	ld a, [hSRAMBank]
	push af
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $a007
	add hl, de
	ld a, $2
	call GetSRAMBank
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld l, a
	ld a, $aa
	sub l
	jp z, Func_7da6
	ld hl, sp+$3
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, $aa
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	push hl
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $a023
	add hl, de
	push hl
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $a007
	add hl, de
	pop de
	pop bc
	call CopyFromDEtoHL
Func_7da6: ; 7da6 (1:7da6)
	xor a
	ld [$b283], a
	pop af
	call GetSRAMBank
	pop bc
	ret

Func_7db0: ; 7db0 (1:7db0)
	push de
	add sp, -$40
	push af
	ld a, [hSRAMBank]
	ld l, a
	push hl
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $48
	pop de
	ld bc, $23
	call MemCopy
	pop hl
	pop af
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $a007
	add hl, de
	push hl
	ld hl, sp+$42
	reg16swap de, hl
	ld hl, sp+$26
	call Func_6493
	ld a, $2
	call GetSRAMBank
	pop de
	ld hl, sp+$25
	ld bc, $1c
	call MemCopy
	pop hl
	ld a, l
	call GetSRAMBank
	add sp, $42
	ret

Func_7dfc: ; 7dfc (1:7dfc)
	add sp, -$24
	push de
	push af
	ld a, [hSRAMBank]
	ld l, a
	pop af
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $a007
	add hl, de
	ld c, l
	ld b, h
	push bc
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop bc
	ld hl, sp+$4
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_6392
	pop hl
	ld a, l
	call GetSRAMBank
	pop de
	push de
	ld hl, sp+$2
	ld bc, $23
	call MemCopy
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_7e4d
	ld hl, $16
	add hl, de
	ld [hl], $e
	jp Func_7e53

Func_7e4d: ; 7e4d (1:7e4d)
	ld hl, $16
	add hl, de
	ld [hl], $0
Func_7e53: ; 7e53 (1:7e53)
	add sp, $24
	ret

Func_7e56: ; 7e56
	add sp, -$24
	push af
	ld a, e
	ld hl, sp+$2
	reg16swap de, hl
	call GetRobotInParty
	pop af
	ld hl, sp+$0
	reg16swap de, hl
	call Func_7db0
	add sp, $24
	ret

Func_7e70: ; 7e70
	add sp, -$24
	push de
	ld hl, sp+$2
	reg16swap de, hl
	call Func_7dfc
	pop de
	ld a, e
	ld hl, sp+$0
	reg16swap de, hl
	call Func_6b74
	add sp, $24
	ret

Func_7e8a: ; 7e8a
	push de
	add sp, -$40
	push af
	ld a, [hSRAMBank]
	ld l, a
	pop af
	push hl
	ld l, a
	ld h, $0
	ld de, 849
	call MultiplyHLbyDE
	ld de, $b29f
	add hl, de
	ld c, l
	ld b, h
	xor a
	pop hl
Func_7ea4: ; 7ea4 (1:7ea4)
	cp $d
	jp nc, Func_7eee
	push af
	push hl
	push bc
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop bc
	pop hl
	push bc
	push hl
	ld e, c
	ld d, b
	ld hl, sp+$6
	ld bc, $40
	call CopyFromDEtoHL
	pop hl
	push hl
	ld a, l
	call GetSRAMBank
	ld bc, $40
	ld hl, sp+$6
	push hl
	read_hl_from_sp_plus $4a
	pop de
	call CopyFromDEtoHL
	pop hl
	pop bc
	push hl
	ld hl, $40
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from_sp_plus $46
	ld de, $40
	add hl, de
	write_hl_to_sp_plus $46
	pop hl
	pop af
	inc a
	jp Func_7ea4

Func_7eee: ; 7eee (1:7eee)
	push hl
	push bc
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop de
	ld hl, sp+$2
	ld bc, $11
	call CopyFromDEtoHL
	pop hl
	ld a, l
	call GetSRAMBank
	ld bc, $11
	ld hl, sp+$0
	push hl
	read_hl_from_sp_plus $44
	pop de
	call CopyFromDEtoHL
	add sp, $42
	ret

Func_7f14: ; 7f14
	add sp, -$40
	push de
	push af
	ld a, [hSRAMBank]
	ld l, a
	pop af
	push hl
	ld l, a
	ld h, $0
	ld de, 849
	call MultiplyHLbyDE
	ld de, $b29f
	add hl, de
	ld c, l
	ld b, h
	xor a
	pop hl
	pop de
Func_7f2f: ; 7f2f (1:7f2f)
	cp $d
	jp nc, Func_7f73
	push hl
	push af
	push bc
	push de
	ld a, l
	call GetSRAMBank
	pop de
	pop bc
	push de
	push bc
	ld hl, sp+$8
	ld bc, $40
	call CopyFromDEtoHL
	ld a, $2
	call GetSRAMBank
	pop bc
	push bc
	ld hl, sp+$8
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $40
	call CopyFromDEtoHL
	pop bc
	ld hl, $40
	add hl, bc
	ld c, l
	ld b, h
	pop de
	ld hl, $40
	add hl, de
	reg16swap de, hl
	pop af
	inc a
	pop hl
	jp Func_7f2f

Func_7f73: ; 7f73 (1:7f73)
	push hl
	push bc
	push de
	ld a, l
	call GetSRAMBank
	pop de
	ld hl, sp+$4
	ld bc, $11
	call CopyFromDEtoHL
	ld a, $2
	call GetSRAMBank
	pop bc
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $11
	call CopyFromDEtoHL
	pop hl
	ld a, l
	call GetSRAMBank
	add sp, $40
	ret

SECTION "Bank 02", ROMX, BANK [$2]
Func_8000: ; 8000
	ret

Data_8001: ; 8001
	dr $8001, $8020

Data_8020: ; 8020
	dr $8020, $802a

Data_802a: ; 802a
	dr $802a, $8034

Data_8034: ; 8034
	dr $8034, $8041

Data_8041: ; 8041
	dr $8041, $804c

Func_804c: ; 804c (2:404c)
	add sp, -$64
	ld hl, sp+$52
	reg16swap de, hl
	ld hl, Data_8020
	ld bc, $a
	call MemCopy
	ld hl, sp+$48
	reg16swap de, hl
	ld hl, Data_802a
	ld bc, $a
	call MemCopy
	ld hl, sp+$3b
	reg16swap de, hl
	ld hl, Data_8034
	ld bc, $d
	call MemCopy
	ld hl, sp+$30
	reg16swap de, hl
	ld hl, Data_8041
	ld bc, $b
	call MemCopy
	ld hl, sp+$52
	write_hl_to_sp_plus $5e
	ld hl, sp+$48
	write_hl_to_sp_plus $60
	ld hl, sp+$3b
	write_hl_to_sp_plus $62
	ld hl, sp+$30
	write_hl_to_sp_plus $64
	ld hl, sp+$11
	reg16swap de, hl
	ld hl, Data_8001
	ld bc, $1f
	call MemCopy
	ld hl, sp+$11
	call WriteHLToSPPlus3
	ld hl, $0
	call WriteHLToSPPlus7
	ld hl, $0
	call WriteHLToSPPlus5
	ld hl, -1
	write_hl_to_sp_plus $d
	ld hl, $4
	write_hl_to_sp_plus $b
	ld hl, $4
	call WriteHLToSPPlus9
	ld hl, $0
	write_hl_to_sp_plus $11
	ld hl, sp+$5c
	write_hl_to_sp_plus $f
	set_farcall_addrs_hli HandleMenu
	ld hl, sp+$0
	call FarCall
	add sp, $64
	ret

Func_80f6: ; 80f6
	reg16swap de, hl
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, $5
	add hl, de
	ld l, [hl]
	add l
	cp $3
	jp z, Func_8146
	cp $2
	jp z, Func_8135
	cp $1
	jp z, Func_8124
	or a
	jp nz, Func_814e
	ld c, $0
	ld e, $0
	xor a
	call OverworldLoop
	jp Func_814e

Func_8124: ; 8124 (2:4124)
	callba_hli Func_d9f38
	jp Func_814e

Func_8135: ; 8135 (2:4135)
	callba_hli Func_e220d
	jp Func_814e

Func_8146: ; 8146 (2:4146)
	ld c, $1
	ld e, $0
	xor a
	call OverworldLoop
Func_814e: ; 814e (2:414e)
	ret

Func_814f: ; 814f
	ret

Func_8150: ; 8150
	ret

INCLUDE "engine/map/overworld_loop.asm"
INCLUDE "engine/map/load_map.asm"
INCLUDE "engine/map/load_tiles.asm"

Func_8b30: ; 8b30 (2:4b30)
	ld bc, $0
Func_8b33: ; 8b33 (2:4b33)
	ld l, c
	ld h, b
	ld de, $70
	call CompareHLtoDE
	jp nc, Func_8ba7
	ld l, c
	ld h, b
	add hl, hl
	reg16swap de, hl
	read_hl_from wc85d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [wSystemType]
	cp $11
	jp nz, Func_8b7e
	push bc
	ld a, BANK(MapTiles_CGB)
	ld [wFarCallDestBank], a
	reg16swap de, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, MapTiles_CGB
	add hl, de
	push hl
	ld l, c
	ld h, b
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8900
	add hl, de
	pop de
	ld bc, $10
	call FarRequestVideoData
	pop bc
	jp Func_8ba3

Func_8b7e: ; 8b7e (2:4b7e)
	push bc
	ld a, BANK(MapTiles_SGB_DMG)
	ld [wFarCallDestBank], a
	reg16swap de, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, MapTiles_SGB_DMG
	add hl, de
	push hl
	ld l, c
	ld h, b
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8900
	add hl, de
	pop de
	ld bc, $10
	call FarRequestVideoData
	pop bc
Func_8ba3: ; 8ba3 (2:4ba3)
	inc bc
	jp Func_8b33

Func_8ba7: ; 8ba7 (2:4ba7)
	ret

FadeInMap:: ; 8ba8
	push af
	push bc
	call Func_b6f2
	ld a, [wMapX]
	add a
	add a
	add a
	add a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wMapY]
	add a
	add a
	add a
	add a
	ld [wSCY2], a
	ld [wSCY], a
	di
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	ei
	xor a
	call Func_bbc8
	call Func_8b30
	ld hl, sp+$0
	ld [hl], $0
Func_8bdc: ; 8bdc (2:4bdc)
	ld hl, sp+$0
	ld a, [hl]
	ld hl, wNumPeopleLoaded
	cp [hl]
	jp nc, Func_8c16
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	read_hl_from wObjectStructPointer
	add hl, de
	ld de, $6
	add hl, de
	ld a, [hl]
	or $80
	ld e, a
	ld hl, sp+$0
	ld a, [hl]
	call ChangePersonFacing
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_8bdc

Func_8c16: ; 8c16 (2:4c16)
	call Func_8ccf
	ld a, [wSongCurrentlyPlaying]
	ld hl, wMapMusic
	cp [hl]
	jp z, Func_8c29
	ld a, [wMapMusic]
	call OverworldPlaySong
Func_8c29: ; 8c29 (2:4c29)
	ld a, [wc7da]
	or a
	jp nz, Func_8c65
	callba_hli Func_9a41d
	ld a, $1
	call Func_bbc8
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_8c57
	ld c, $0
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdateSprites
	jp Func_8c5f

Func_8c57: ; 8c57 (2:4c57)
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdatePlayerSprite
Func_8c5f: ; 8c5f (2:4c5f)
	call Func_b65f
	jp Func_8cc8

Func_8c65: ; 8c65 (2:4c65)
	callba_hli Func_9a41d
	ld a, $1
	call Func_bbc8
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_8c8c
	ld c, $0
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdateSprites
	jp Func_8c94

Func_8c8c: ; 8c8c (2:4c8c)
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdatePlayerSprite
Func_8c94: ; 8c94 (2:4c94)
	ld a, [wSystemType]
	cp $11
	jp z, Func_8cc1
	set_farcall_addrs_hli Func_c7bd0
	ld a, [wc867]
	call FarCall
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_8cc1: ; 8cc1 (2:4cc1)
	ld e, $fe
	ld a, $fe
	call Func_b60d
Func_8cc8: ; 8cc8 (2:4cc8)
	pop bc
	pop bc
	ret

Data_8ccb: ; 8ccb
	dr $8ccb, $8ccf

Func_8ccf: ; 8ccf (2:4ccf)
	call Bank2_WaitVideoTransferIfLCDEnabled
	ld hl, Data_8ccb
	ld a, [wPlayerFacing]
	cp $ff
	jp nz, Func_8ce3
	ld de, $2
	jp Func_8ce9

Func_8ce3: ; 8ce3 (2:4ce3)
	ld a, [wPlayerFacing]
	ld e, a
	ld d, $0
Func_8ce9: ; 8ce9 (2:4ce9)
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc82a
	add hl, de
	reg16swap de, hl
	ld hl, $8000
	ld bc, $c0
	call RequestVideoData
	call Bank2_WaitVideoTransferIfLCDEnabled
	ret

Func_8d0c: ; 8d0c (2:4d0c)
	push bc
	push de
	push hl
	ld b, $0
.asm_8d11
	ld a, [hli]
	ld c, a
	push hl
	ld a, [wc844]
	ld l, a
	ld a, [wc844 + 1]
	ld h, a
	add hl, bc
	ld a, $1
	ld [hl], a
	pop hl
	dec de
	ld a, e
	or d
	jr nz, .asm_8d11
	pop hl
	pop de
	pop bc
	ret

LoadBlockData: ; 8d2a (2:4d2a)
	push bc
	push bc
	push bc
	push af
	ld a, BANK(BlockDataHeaders)
	ld [wFarCallDestBank], a
	pop af
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, BlockDataHeaders
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $5
	call FarCopyVideoData
	ld hl, sp+$6
	ld a, [hl]
	ld [wMapWidth], a
	ld hl, sp+$5
	ld a, [hl]
	ld [wMapHeight], a
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	push hl
	call AllocateMemory_Bank02
	write_hl_to wBlockdataPointer
	ld hl, sp+$4
	ld a, [hl]
	add BANK(BlockDataHeaders)
	ld [wFarCallDestBank], a
	pop hl
	push hl
	ld c, l
	ld b, h
	read_hl_from wBlockdataPointer
	push hl
	call GetHLAtSPPlus9
	pop de
	call FarDecompressVideoData
	ld bc, $80
	ld e, $0
	read_hl_from wc844
	call FillMemory
	read_hl_from wBlockdataPointer
	ld c, l
	ld b, h
	pop hl
	ld e, l
	ld d, h
	ld l, c
	ld h, b
	call Func_8d0c
	pop af
	cp $24
	jp z, Func_8dbd
	cp $8f
	jp z, Func_8dbd
	read_hl_from wc844
	ld a, [wc859]
	ld e, a
	ld d, $0
	add hl, de
	ld [hl], $1
Func_8dbd: ; 8dbd (2:4dbd)
	read_hl_from wc844
	ld [hl], $1
	pop bc
	pop bc
	pop bc
	ret

ShowEmote_:: ; 8dc8
	ld a, $50
	ld hl, wSCX
	sub [hl]
	ld l, a
	ld a, [wc832]
	add a
	add a
	add a
	add a
	add l
	add $10
	ld [wc2cb], a
	ld a, $50
	ld hl, wSCY
	sub [hl]
	ld l, a
	ld a, [wc833]
	add a
	add a
	add a
	add a
	add l
	add $8
	ld [wc2cc], a
	ret

Func_8df1: ; 8df1 (2:4df1)
del_if_defined: MACRO
	read_hl_from \1
	ld a, l
	or h
	jp z, .okay_\@
	del \1
.okay_\@
	ENDM

	del_if_defined wc85d
	del_if_defined wc824
	del_if_defined wLoadAttrsSourcePointer
	del_if_defined wc826
	del_if_defined wBlockdataPointer
	del_if_defined wMapCollisionPointer
	del_if_defined wc82a
	del_if_defined wc82c
	del_if_defined wc82e
	del_if_defined wWarpDataPointer
	del_if_defined wc778
	del_if_defined wObjectStructPointer
	del_if_defined wc776
	ret

Func_8f44:: ; 8f44 (2:4f44)
; bgmap transfer?
	add sp, -$30
	ld a, [rLCDC]
	and $80
	jp nz, .lcd_enabled
	jp .quit

.lcd_enabled
	ld a, [wc2cd]
	or a
	jp z, .bgmap_9c00
	ld a, $98
	jp .got_bgmap_hi

.bgmap_9c00
	ld a, $9c
.got_bgmap_hi
	ld [wBGMapHi], a
	ld a, $1
	call Func_bbc8
	ld e, $0
.loop
	ld a, e
	cp $b
	jp nc, .check_attr
	ld l, $0
.loop2
	ld a, l
	cp $c
	jp nc, .next_row
	push de
	push hl
	ld a, [wMapY]
	add e
	dec a
	ld e, a
	ld a, [wMapX]
	add l
	dec a
	call Func_9eb4
	ld c, l
	ld b, h
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$5
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1c
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1d
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	inc l
	pop de
	jp .loop2

.next_row
	push de
	call Bank2_WaitVideoTransferIfLCDEnabled
	set_farcall_addrs_hli Func_6193
	pop de
	push de
	ld hl, sp+$2
	push hl
	ld l, e
	ld h, $0
	add hl, hl
	ld de, $1e1e
	add hl, de
	pop de
	ld bc, $1801
	call FarCall
	set_farcall_addrs_hli Func_6193
	pop de
	push de
	ld hl, sp+$1a
	push hl
	ld l, e
	ld h, $0
	add hl, hl
	ld de, $1e1f
	add hl, de
	pop de
	ld bc, $1801
	call FarCall
	call Bank2_WaitVideoTransferIfLCDEnabled
	pop de
	inc e
	jp .loop

.check_attr
	ld a, [wSystemType]
	cp $11
	jp nz, .skip_attr
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld e, $0
.attr_loop
	ld a, e
	cp $b
	jp nc, .done_attr
	ld l, $0
.attr_loop2
	ld a, l
	cp $c
	jp nc, .attr_next_row
	push de
	push hl
	ld a, [wMapY]
	add e
	dec a
	ld e, a
	ld a, [wMapX]
	add l
	dec a
	call Func_9f1e
	ld c, l
	ld b, h
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$5
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1c
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	push hl
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1d
	add hl, de
	ld a, [bc]
	inc bc
	ld [hl], a
	pop hl
	inc l
	pop de
	jp .attr_loop2

.attr_next_row
	push de
	call Bank2_WaitVideoTransferIfLCDEnabled
	set_farcall_addrs_hli Func_6193
	pop de
	push de
	ld hl, sp+$2
	push hl
	ld l, e
	ld h, $0
	add hl, hl
	ld de, $1e1e
	add hl, de
	pop de
	ld bc, $1801
	call FarCall
	set_farcall_addrs_hli Func_6193
	pop de
	push de
	ld hl, sp+$1a
	push hl
	ld l, e
	ld h, $0
	add hl, hl
	ld de, $1e1f
	add hl, de
	pop de
	ld bc, $1801
	call FarCall
	call Bank2_WaitVideoTransferIfLCDEnabled
	pop de
	inc e
	jp .attr_loop

.done_attr
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
.skip_attr
	ld a, [wc2cd]
	or a
	jp nz, .set_bgmap_9800
	ld a, $1
	jp .swap_bgmap

.set_bgmap_9800
	xor a
.swap_bgmap
	call ToggleBGMapSelect
.quit
	add sp, $30
	ret

INCLUDE "engine/map/handle_map.asm"

Data_9416: ; 9416
	TX_SNUM
	db "/"
	TX_SNUM
	db "/"
	TX_SNUM
	db " ", $0

Data_9420: ; 9420
	db "0"
	TX_SNUM
	db ":", $0

Data_9425: ; 9425
	TX_SNUM
	db ":", $0

Data_9429: ; 9429
	db "0"
	TX_SNUM
	db $0

Data_942d: ; 942d
	TX_SNUM
	db $0

Func_9430: ; 9430
	callba_hli Func_17e91
	ret

INCLUDE "engine/player_step.asm"

Func_99e2: ; 99e2
	ret

CheckMovingOffEdgeOfMap: ; 99e3 (2:59e3)
	cp $3
	jp z, Func_9a32
	cp $2
	jp z, Func_9a20
	cp $1
	jp z, Func_9a0e
	or a
	jp nz, Func_9a47
	ld a, [wMapY]
	and $80
	jp z, Func_9a0b
	ld a, [wMapY]
	cpl
	inc a
	cp $4
	jp c, Func_9a0b
	ld a, $ff
	ret

Func_9a0b: ; 9a0b (2:5a0b)
	jp Func_9a47

Func_9a0e: ; 9a0e (2:5a0e)
	ld a, [wMapX]
	add $6
	ld hl, wMapWidth
	cp [hl]
	jp c, Func_9a1d
	ld a, $ff
	ret

Func_9a1d: ; 9a1d (2:5a1d)
	jp Func_9a47

Func_9a20: ; 9a20 (2:5a20)
	ld a, [wMapY]
	add $5
	ld hl, wMapHeight
	cp [hl]
	jp c, Func_9a2f
	ld a, $ff
	ret

Func_9a2f: ; 9a2f (2:5a2f)
	jp Func_9a47

Func_9a32: ; 9a32 (2:5a32)
	ld a, [wMapX]
	and $80
	jp z, Func_9a47
	ld a, [wMapX]
	cpl
	inc a
	cp $5
	jp c, Func_9a47
	ld a, $ff
	ret

Func_9a47: ; 9a47 (2:5a47)
	xor a
	ret

INCLUDE "engine/map/func_94a9.asm"

Func_9d31: ; 9d31 (2:5d31)
	xor a
	ld [wc84e], a
	xor a
	ld [wc84f], a
	xor a
	ld [wc850], a
	ret

Func_9d3e:: ; 9d3e
	ld a, $1
	ld [wc84e], a
	ld a, $2
	ld [wc84f], a
	xor a
	ld [wc850], a
	ret

Func_9d4d:: ; 9d4d
	ld a, [wc84f]
	cp $2
	jp z, Func_9d73
	ld a, [wSCY]
	ld hl, wc84f
	add [hl]
	ld [wSCY], a
	ld a, [wSCY2]
	ld hl, wc84f
	add [hl]
	ld [wSCY2], a
	di
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	ei
Func_9d73: ; 9d73 (2:5d73)
	xor a
	ld [wc84f], a
	xor a
	ld [wc84e], a
	xor a
	ld [wc850], a
	ret

UpdatePlayerSprite: ; 9d80 (2:5d80)
	push hl
	ld h, a
	ld a, [wc84b]
	cp $1
	jr nz, .asm_9d8f
	ld a, [wPlayerFacing]
	pop hl
	jr .asm_9d91

.asm_9d8f
	ld a, h
	pop hl
.asm_9d91
	push af
	ld a, [wc841]
	ld a, [wc841]
	or a
	jp z, .bail
	ld a, e
	or a
	jr nz, .asm_9da4
	xor a
	ld [wc821], a
.asm_9da4
	ld a, [wc858]
	cp $1
	jr nz, .asm_9db0
	xor a
	ld [wc821], a
	ld e, a
.asm_9db0
	ld a, [wc821]
	srl a
	srl a
	srl a
	and $3
	ld hl, Data_9ead
	ld b, $0
	ld c, a
	add hl, bc
	ld a, [hl]
	ld b, a
	ld hl, wOAM00YCoord
	lb de, $58, $4c
	ld a, [wc84b]
	cp $1
	jr nz, .asm_9de1
	ld d, $58
	ld a, [wc84c]
	add d
	ld d, a
	ld e, $4c
	ld a, [wc84d]
	add e
	ld e, a
	ld b, $0
.asm_9de1
	pop af
	cp $1
	jr z, .asm_9e41
	ld c, $10 ; palette 0, sgb palette 0
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	add $8
	ld d, a
	ld a, b
	ld [hli], a
	inc b
	ld a, c
	ld [hli], a
	ld a, e
	ld [hli], a
	add $8
	ld e, a
	ld a, d
	ld [hli], a
	add $f8
	ld d, a
	ld a, b
	ld [hli], a
	inc b
	ld a, c
	ld [hli], a
	push de
	push hl
	ld hl, $0
	push bc
	call Func_9f4c
	pop bc
	push af
	ld hl, wc826
	ld a, [hli]
	ld e, a
	ld a, [hl]
	ld d, a
	pop af
	ld h, $0
	ld l, a
	add hl, de
	ld a, [hl]
	and $4
	jr z, .asm_9e23
	ld a, c
	or $80
	ld c, a
.asm_9e23
	pop hl
	pop de
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	add $8
	ld d, a
	ld a, b
	ld [hli], a
	inc b
	ld a, c
	ld [hli], a
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	ld a, b
	ld [hli], a
	ld a, c
	ld [hli], a
	ld a, [wc821]
	inc a
	ld [wc821], a
	ret

.asm_9e41
	ld c, $30
	ld a, d
	add $8
	ld d, a
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	add $f8
	ld d, a
	ld a, b
	ld [hli], a
	inc b
	ld a, c
	ld [hli], a
	ld a, e
	ld [hli], a
	add $8
	ld e, a
	ld a, d
	ld [hli], a
	add $8
	ld d, a
	ld a, b
	ld [hli], a
	inc b
	ld a, c
	ld [hli], a
	push de
	push hl
	ld hl, $0
	push bc
	call Func_9f4c
	pop bc
	push af
	ld hl, wc826
	ld a, [hli]
	ld e, a
	ld a, [hl]
	ld d, a
	pop af
	ld h, $0
	ld l, a
	add hl, de
	ld a, [hl]
	and $4
	jr z, .asm_9e82
	ld a, c
	or $80
	ld c, a
.asm_9e82
	pop hl
	pop de
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	add $f8
	ld d, a
	ld a, b
	ld [hli], a
	inc b
	ld a, c
	ld [hli], a
	ld a, e
	ld [hli], a
	ld a, d
	ld [hli], a
	ld a, b
	ld [hli], a
	ld a, c
	ld [hli], a
	ld a, [wc821]
	inc a
	ld [wc821], a
	ret

.bail: ; 9ea0 (2:5ea0)
	pop af
	ld hl, wOAM00YCoord
	ld b, $10
	ld a, $ff
.asm_9ea8
	ld [hli], a
	dec b
	jr nz, .asm_9ea8
	ret

Data_9ead: ; 9ead
	dr $9ead, $9eb4

Func_9eb4: ; 9eb4 (2:5eb4)
	push af
	ld hl, sp+$1
	ld a, [hl]
	ld hl, wMapWidth
	cp [hl]
	jp nc, Func_9ec7
	ld a, e
	ld hl, wMapHeight
	cp [hl]
	jp c, Func_9ecb
Func_9ec7: ; 9ec7 (2:5ec7)
	xor a
	jp Func_9ed1

Func_9ecb: ; 9ecb (2:5ecb)
	ld hl, sp+$1
	ld a, [hl]
	call Func_9f64
Func_9ed1: ; 9ed1 (2:5ed1)
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wLoadAttrsSourcePointer
	add hl, de
	pop bc
	ret

Func_9ee2: ; 9ee2 (2:5ee2)
	ld hl, wMapWidth
	cp [hl]
	jp nc, Func_9ef1
	ld a, e
	ld hl, wMapHeight
	cp [hl]
	jp c, Func_9ef5
Func_9ef1: ; 9ef1 (2:5ef1)
	xor a
	jp Func_9efa

Func_9ef5: ; 9ef5 (2:5ef5)
	ld l, c
	ld h, b
	call Func_9f4c
Func_9efa: ; 9efa (2:5efa)
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc824
	add hl, de
	write_hl_to wc91d
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wLoadAttrsSourcePointer
	add hl, de
	ret

Func_9f1e: ; 9f1e (2:5f1e)
	push af
	ld hl, sp+$1
	ld a, [hl]
	ld hl, wMapWidth
	cp [hl]
	jp nc, Func_9f31
	ld a, e
	ld hl, wMapHeight
	cp [hl]
	jp c, Func_9f35
Func_9f31: ; 9f31 (2:5f31)
	xor a
	jp Func_9f3b

Func_9f35: ; 9f35 (2:5f35)
	ld hl, sp+$1
	ld a, [hl]
	call Func_9f64
Func_9f3b: ; 9f3b (2:5f3b)
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc824
	add hl, de
	pop bc
	ret

Func_9f4c: ; 9f4c (2:5f4c)
	push hl
	pop hl
	push hl
	push hl
	read_hl_from wPlayerStandingTileOffset
	reg16swap de, hl
	read_hl_from wBlockdataPointer
	add hl, de
	pop de
	add hl, de
	ld a, [hl]
	pop bc
	ret

Func_9f64:: ; 9f64 (2:5f64)
	push af
	ld d, $0
	ld hl, wMapWidth
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	reg16swap de, hl
	read_hl_from wBlockdataPointer
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, de
	ld a, [hl]
	pop bc
	ret

INCLUDE "engine/map/collision_test.asm"

Func_a184: ; a184 (2:6184)
	push af
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wLoadAttrsSourcePointer
	add hl, de
	ld a, [hl]
	add $70
	ld [wc81f], a
	xor a
	ld [wc820], a
	ld hl, $30
	call AllocateMemory_Bank02
	write_hl_to wc82c
	ld c, $0
Func_a1ad: ; a1ad (2:61ad)
	ld a, c
	cp $3
	jp nc, Func_a1f8
	push bc
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wLoadAttrsSourcePointer
	add hl, de
	ld e, c
	ld d, $0
	inc de
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, BANK(MapTiles_SGB_DMG)
	ld [wFarCallDestBank], a
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8000
	add hl, de
	push hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc82c
	add hl, de
	pop de
	ld bc, $10
	call FarRequestVideoData
	pop bc
	inc c
	jp Func_a1ad

Func_a1f8: ; a1f8 (2:61f8)
	pop bc
	ret

Func_a1fa: ; a1fa (2:61fa)
	ld a, [wc81f]
	cp $ff
	jp nz, Func_a203
	ret

Func_a203: ; a203 (2:6203)
	ld a, [wc820]
	inc a
	ld [wc820], a
	cp $18
	jp nz, Func_a213
	xor a
	ld [wc820], a
Func_a213: ; a213 (2:6213)
	ld a, [wc820]
	and $7
	jp z, Func_a21c
	ret

Func_a21c: ; a21c (2:621c)
	ld a, [wc820]
	rrca
	rrca
	rrca
	and $1f
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc82c
	add hl, de
	push hl
	ld hl, wc81f
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8900
	add hl, de
	pop de
	ld bc, $10
	call RequestVideoData
	ret

INCLUDE "engine/map/people.asm"
INCLUDE "engine/event_flags.asm"
INCLUDE "engine/map/text.asm"
INCLUDE "engine/map/warps.asm"

Data_ae3d: ; ae3d
	dr $ae3d, $ae45

Data_ae45: ; ae45
	dr $ae45, $ae4d

Func_ae4d:: ; ae4d
	push bc
	push bc
	push bc
	push bc
	ld c, $c1
	ld a, [wPlayerMapY]
	ld e, a
	ld a, [wPlayerMapX]
	call CheckBackgroundCollision
	cp $ff
	jp nz, Func_aef5
	ld hl, sp+$2
	ld [hl], $0
Func_ae66: ; ae66 (2:6e66)
	ld hl, sp+$2
	ld a, [hl]
	cp $9
	jp nc, Func_aeaa
	ld a, [wPlayerMapX]
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, Data_ae3d
	add hl, de
	add [hl]
	ld hl, sp+$1
	ld [hl], a
	ld a, [wPlayerMapY]
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, Data_ae45
	add hl, de
	add [hl]
	ld hl, sp+$0
	ld [hl], a
	ld c, $81
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$1
	ld a, [hl]
	call CheckBackgroundCollision
	or a
	jp nz, Func_aea0
	jp Func_aeaa

Func_aea0: ; aea0 (2:6ea0)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_ae66

Func_aeaa: ; aeaa (2:6eaa)
	ld hl, sp+$2
	ld a, [hl]
	cp $9
	jp z, Func_aef5
	ld hl, sp+$1
	ld a, [hl]
	add $fb
	ld [wMapX], a
	ld hl, sp+$0
	ld a, [hl]
	add $fc
	ld [wMapY], a
	ld hl, sp+$1
	ld a, [hl]
	ld [wPlayerMapX], a
	ld hl, sp+$0
	ld a, [hl]
	ld [wPlayerMapY], a
	ld hl, wMapWidth
	ld l, [hl]
	ld h, $0
	ld a, [wPlayerMapY]
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld a, [wPlayerMapX]
	ld e, a
	ld d, $0
	add hl, de
	write_hl_to wPlayerStandingTileOffset
	ld hl, sp+$1
	ld a, [hl]
	ld [wc7e9], a
	ld hl, sp+$0
	ld a, [hl]
	ld [wc7ea], a
Func_aef5: ; aef5 (2:6ef5)
	ld hl, sp+$3
	ld a, [wc7e9]
	ld [hl], a
	ld hl, sp+$4
	ld a, [wc7ea]
	ld [hl], a
	ld hl, sp+$6
	ld a, $ff
	ld [hl], a
	ld hl, sp+$5
	ld [hl], a
	ld a, [wc7da]
	or a
	jp nz, Func_af33
	callba_hli Func_9a41d
	ld a, $1
	call Func_bbc8
	ld c, $0
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdateSprites
	call Func_b65f
	jp Func_af68

Func_af33: ; af33 (2:6f33)
	callba_hli Func_9a41d
	ld a, $1
	call Func_bbc8
	ld c, $0
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdateSprites
	set_farcall_addrs_hli Func_c7bd0
	ld a, [wc867]
	call FarCall
	ld e, $fe
	ld a, $fe
	call Func_b60d
Func_af68: ; af68 (2:6f68)
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld a, $2
	call StartMovement
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_af7a:: ; af7a
	push hl
	push bc
	push de
	call GetHLAtSPPlus6
	ld e, h
	ld hl, sp+$2
	ld [hl], e
	call GetHLAtSPPlus6
	ld a, l
	pop de
	push af
	ld c, d
	ld a, [wMapGroup]
	ld [wBackupMapGroup], a
	ld a, [wMapNumber]
	ld [wBackupMapNumber], a
	ld a, [wPlayerMapX]
	ld [wBackupMapX], a
	ld a, [wPlayerMapY]
	ld [wBackupMapY], a
	ld a, c
	ld [wc7e9], a
	ld [wSpawnX], a
	ld a, e
	ld [wc7ea], a
	ld [wSpawnY], a
	ld hl, sp+$2
	ld a, [hl]
	ld [wMapGroup], a
	pop af
	ld [wMapNumber], a
	ld a, c
	add $fb
	ld [wMapX], a
	ld a, e
	add $fc
	ld [wMapY], a
	ld a, c
	ld [wPlayerMapX], a
	ld a, e
	ld [wPlayerMapY], a
	ld hl, wMapWidth
	ld l, [hl]
	ld h, $0
	ld a, [wPlayerMapY]
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld a, [wPlayerMapX]
	ld e, a
	ld d, $0
	add hl, de
	write_hl_to wPlayerStandingTileOffset
	xor a
	ld [wc84a], a
	pop bc
	pop bc
	ret

Func_aff1: ; aff1 (2:6ff1)
	ld hl, $c
	call AllocateMemory_Bank02
	write_hl_to wc778
	xor a
Func_affd: ; affd (2:6ffd)
	cp $2
	jp nc, Func_b01a
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	read_hl_from wc778
	add hl, de
	ld [hl], $ff
	inc a
	jp Func_affd

Func_b01a: ; b01a (2:701a)
	ret

Func_b01b:: ; b01b
	push af
	push de
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$7
	ld [hl], $0
Func_b025: ; b025 (2:7025)
	ld hl, sp+$7
	ld a, [hl]
	cp $2
	jp nc, Func_b05a
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	read_hl_from wc778
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld a, [hl]
	cp $ff
	jp nz, Func_b050
	jp Func_b05a

Func_b050: ; b050 (2:7050)
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	jp Func_b025

Func_b05a: ; b05a (2:705a)
	ld hl, sp+$7
	ld a, [hl]
	cp $2
	jp nz, Func_b065
	jp Func_b14d

Func_b065: ; b065 (2:7065)
	push bc
	ld hl, sp+$d
	ld a, [hl]
	call GetHLAtSPPlus6
	ld [hl], a
	ld hl, sp+$a
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	ld [hl], a
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld [hl], $0
	ld hl, sp+$d
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	read_hl_from wObjectStructPointer
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $6
	add hl, de
	ld e, [hl]
	ld hl, sp+$8
	ld [hl], e
	ld hl, sp+$d
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc776
	add hl, de
	inc hl
	ld [hl], $0
	ld hl, sp+$9
	ld [hl], $0
	pop bc
Func_b0c5: ; b0c5 (2:70c5)
	push bc
	ld hl, sp+$a
	ld a, [hl]
	ld [wFarCallDestBank], a
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$6
	ld bc, $2
	call FarCopyVideoData
	pop bc
	ld hl, sp+$4
	ld a, [hl]
	cp $ff
	jp nz, Func_b0eb
	jp Func_b109

Func_b0eb: ; b0eb (2:70eb)
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	pop hl
	push hl
	inc hl
	inc hl
	cp [hl]
	jp nz, Func_b109
	ld hl, sp+$5
	ld a, [hl]
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	cp [hl]
	jp z, Func_b0c5
Func_b109: ; b109 (2:7109)
	ld hl, sp+$5
	ld l, [hl]
	push hl
	ld hl, sp+$6
	ld c, [hl]
	call GetHLAtSPPlus4
	inc hl
	inc hl
	ld a, [hl]
	call GetHLAtSPPlus4
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	call Func_b377
	pop bc
	ld e, a
	cp $ff
	jp nz, Func_b140
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	read_hl_from wc778
	add hl, de
	ld [hl], $ff
	jp Func_b14d

Func_b140: ; b140 (2:7140)
	ld hl, sp+$6
	ld a, [hl]
	cp e
	jp z, Func_b14d
	ld hl, sp+$b
	ld a, [hl]
	call ChangePersonFacing
Func_b14d: ; b14d (2:714d)
	add sp, $c
	ret

Func_b150:: ; b150 (2:7150)
	add sp, -$e
	xor a
Func_b153: ; b153 (2:7153)
	cp $2
	jp nc, Func_b374
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	read_hl_from wc778
	add hl, de
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	ld a, [hl]
	ld hl, sp+$e
	ld [hl], a
	cp $ff
	jp nz, Func_b17d
	jp Func_b36f

Func_b17d: ; b17d (2:717d)
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	read_hl_from wObjectStructPointer
	add hl, de
	call WriteHLToSPPlus4
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc776
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $6
	add hl, de
	ld e, [hl]
	ld hl, sp+$a
	ld [hl], e
	ld hl, sp+$b
	ld [hl], e
	call GetHLAtSPPlus4
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$d
	ld [hl], e
	call GetHLAtSPPlus4
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$c
	ld [hl], e
	call GetHLAtSPPlus6
	inc hl
	ld e, [hl]
	ld hl, sp+$9
	ld [hl], e
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld e, [hl]
	ld hl, sp+$a
	ld [hl], e
	pop de
	ld l, c
	ld h, b
	inc hl
	ld a, $1
	add [hl]
	ld [hl], a
	cp $10
	jp c, Func_b36f
	push de
	ld l, c
	ld h, b
	inc hl
	ld [hl], $0
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	ld a, [wMapWidth]
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	reg16swap de, hl
	read_hl_from wMapCollisionPointer
	add hl, de
	reg16swap de, hl
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	ld a, [de]
	dec a
	and $7
	ld l, a
	ld a, [de]
	and $f8
	add l
	ld [de], a
	ld hl, sp+$d
	ld a, [hl]
	cp $3
	jp z, Func_b27b
	cp $2
	jp z, Func_b266
	cp $1
	jp z, Func_b25b
	or a
	jp nz, Func_b283
	ld hl, sp+$e
	ld a, [hl]
	dec a
	ld hl, sp+$e
	ld [hl], a
	ld hl, wMapWidth
	ld l, [hl]
	ld h, $0
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	reg16swap de, hl
	jp Func_b283

Func_b25b: ; b25b (2:725b)
	ld hl, sp+$f
	ld a, [hl]
	inc a
	ld hl, sp+$f
	ld [hl], a
	inc de
	jp Func_b283

Func_b266: ; b266 (2:7266)
	ld hl, sp+$e
	ld a, [hl]
	inc a
	ld hl, sp+$e
	ld [hl], a
	ld hl, wMapWidth
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	jp Func_b283

Func_b27b: ; b27b (2:727b)
	ld hl, sp+$f
	ld a, [hl]
	dec a
	ld hl, sp+$f
	ld [hl], a
	dec de
Func_b283: ; b283 (2:7283)
	ld a, [de]
	inc a
	and $7
	ld l, a
	ld a, [de]
	and $f8
	add l
	ld [de], a
	ld hl, sp+$f
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld [hl], a
	ld hl, sp+$e
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld [hl], a
	pop de
Func_b2a1: ; b2a1 (2:72a1)
	push de
	ld hl, sp+$b
	ld a, [hl]
	ld [wFarCallDestBank], a
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$8
	ld bc, $2
	call FarCopyVideoData
	pop de
	ld hl, sp+$6
	ld a, [hl]
	cp $ff
	jp nz, Func_b30e
	ld hl, sp+$7
	ld a, [hl]
	cp $ff
	jp nz, Func_b304
	call GetHLAtSPPlus6
	ld [hl], $ff
	call GetHLAtSPPlus4
	ld de, $a
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_b301
	call GetHLAtSPPlus4
	ld de, $9
	add hl, de
	ld a, [hl]
	ld [wFarCallDestBank], a
	call GetHLAtSPPlus4
	ld de, $a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to wFarCallDestAddr
	ld e, $3
	ld hl, sp+$e
	ld a, [hl]
	call FarCall
Func_b301: ; b301 (2:7301)
	jp Func_b32a

Func_b304: ; b304 (2:7304)
	ld hl, sp+$7
	ld a, [hl]
	add a
	ld hl, sp+$8
	ld [hl], a
	jp Func_b2a1

Func_b30e: ; b30e (2:730e)
	ld hl, sp+$d
	ld a, [hl]
	ld hl, sp+$6
	cp [hl]
	jp nz, Func_b32a
	ld hl, sp+$c
	ld a, [hl]
	ld hl, sp+$7
	cp [hl]
	jp nz, Func_b32a
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	jp Func_b2a1

Func_b32a: ; b32a (2:732a)
	call GetHLAtSPPlus6
	ld a, [hl]
	cp $ff
	jp z, Func_b359
	ld hl, sp+$7
	ld l, [hl]
	push hl
	ld hl, sp+$8
	ld c, [hl]
	ld hl, sp+$e
	ld e, [hl]
	ld hl, sp+$f
	ld a, [hl]
	call Func_b377
	pop bc
	ld hl, sp+$b
	ld [hl], a
	ld hl, sp+$b
	ld a, [hl]
	ld hl, sp+$a
	cp [hl]
	jp z, Func_b359
	ld hl, sp+$b
	ld e, [hl]
	ld hl, sp+$e
	ld a, [hl]
	call ChangePersonFacing
Func_b359: ; b359 (2:7359)
	ld hl, sp+$b
	ld a, [hl]
	call GetHLAtSPPlus4
	ld de, $6
	add hl, de
	ld [hl], a
	ld hl, sp+$8
	ld a, [hl]
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld [hl], a
Func_b36f: ; b36f (2:736f)
	pop af
	inc a
	jp Func_b153

Func_b374: ; b374 (2:7374)
	add sp, $e
	ret

Func_b377: ; b377 (2:7377)
	push af
	ld hl, sp+$1
	ld a, [hl]
	cp c
	jp nc, Func_b384
	ld a, $1
	jp Func_b3a9

Func_b384: ; b384 (2:7384)
	ld a, c
	ld hl, sp+$1
	cp [hl]
	jp nc, Func_b390
	ld a, $3
	jp Func_b3a9

Func_b390: ; b390 (2:7390)
	ld hl, sp+$4
	ld a, [hl]
	cp e
	jp nc, Func_b39b
	xor a
	jp Func_b3a9

Func_b39b: ; b39b (2:739b)
	ld a, e
	ld hl, sp+$4
	cp [hl]
	jp nc, Func_b3a7
	ld a, $2
	jp Func_b3a9

Func_b3a7: ; b3a7 (2:73a7)
	ld a, $ff
Func_b3a9: ; b3a9 (2:73a9)
	pop bc
	ret

Func_b3ab:: ; b3ab (2:73ab)
	call NextOverworldFrame
	ld c, $0
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdateSprites
	call Func_b150
	ld c, $0
Func_b3bd: ; b3bd (2:73bd)
	ld a, c
	cp $2
	jp nc, Func_b3e2
	ld l, c
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	read_hl_from wc778
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_b3de
	jp Func_b3e2

Func_b3de: ; b3de (2:73de)
	inc c
	jp Func_b3bd

Func_b3e2: ; b3e2 (2:73e2)
	ld a, c
	cp $2
	jp nz, Func_b3eb
	jp Func_b3ee

Func_b3eb: ; b3eb (2:73eb)
	jp Func_b3ab

Func_b3ee: ; b3ee (2:73ee)
	ret

Func_b3ef:: ; b3ef
	push af
	ld a, [wPlayerFacing]
	add $2
	and $3
	ld e, a
	ld hl, sp+$1
	ld a, [hl]
	call ChangePersonFacing
	pop bc
	ret

INCLUDE "engine/map/scripted_movement.asm"

Func_b52c:: ; b52c (2:752c)
	ld [wc841], a
	ret

SpawnPlayerAt:: ; b530 (2:7530)
; spawn player at (a, e)
	push af
	add -5
	ld [wMapX], a
	ld a, e
	add -4
	ld [wMapY], a
	pop af
	ld [wPlayerMapX], a
	ld a, e
	ld [wPlayerMapY], a
	ld hl, wMapWidth
	ld l, [hl]
	ld h, $0
	ld a, [wPlayerMapY]
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld a, [wPlayerMapX]
	ld e, a
	ld d, $0
	add hl, de
	write_hl_to wPlayerStandingTileOffset
	ld a, [wMapX]
	add a
	add a
	add a
	add a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wMapY]
	add a
	add a
	add a
	add a
	ld [wSCY2], a
	ld [wSCY], a
	di
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	ei
	call ShowEmote_
	call Func_8f44
	ret

Data_b58a: ; b58a
	dr $b58a, $b58e

Func_b58e:: ; b58e
	push bc
	push bc
	push af
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_b58a
	ld bc, $4
	call MemCopy
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc82a
	add hl, de
	push hl
	ld e, $0
	ld c, $0
	call UpdateSprites
	call Bank2_WaitVideoTransferIfLCDEnabled
	pop de
	ld hl, $8000
	ld bc, $c0
	call RequestVideoData
	pop af
	ld [wPlayerFacing], a
	ld [wc839], a
	call Bank2_WaitVideoTransferIfLCDEnabled
	pop bc
	pop bc
	ret

Func_b5db:: ; b5db
	push hl
	ld bc, $0
.loop
	pop hl
	push hl
	reg16swap de, hl
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, .done
	push bc
	call NextOverworldFrame
	ld c, $0
	ld e, $0
	ld a, [wPlayerFacing]
	call UpdateSprites
	call Func_b150
	pop bc
	inc bc
	jp .loop

.done
	pop bc
	ret

Data_b605: ; b605
	dr $b605, $b609

Data_b609: ; b609
	dr $b609, $b60d

Func_b60d: ; b60d (2:760d)
	push af
	ld a, [wSystemType]
	cp $11
	jp nz, Func_b646
	ld hl, sp+$1
	ld a, [hl]
	cp $fe
	jp nz, Func_b632
	set_farcall_addrs_hli MapFadeInCGB
	ld e, $1
	xor a
	call FarCall
	jp Func_b643

Func_b632: ; b632 (2:7632)
	set_farcall_addrs_hli MapFadeOutCGB
	ld e, $0
	xor a
	call FarCall
Func_b643: ; b643 (2:7643)
	jp Func_b65d

Func_b646: ; b646 (2:7646)
	ld hl, sp+$1
	ld a, [hl]
	ld [wOBP0], a
	ld [wBGP], a
	ld a, e
	ld [wOBP1], a
	di
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	ei
Func_b65d: ; b65d (2:765d)
	pop bc
	ret

Func_b65f:: ; b65f (2:765f)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_b67c
	set_farcall_addrs_hli MapFadeInCGB
	ld e, $0
	ld a, $1
	call FarCall
	jp Func_b6f1

Func_b67c: ; b67c (2:767c)
	set_farcall_addrs_hli Func_c7bd0
	ld a, [wc867]
	call FarCall
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	ld c, $0
Func_b6a2: ; b6a2 (2:76a2)
	ld a, c
	cp $4
	jp nc, Func_b6e2
	push bc
	xor a
Func_b6aa: ; b6aa (2:76aa)
	cp $4
	jp nc, Func_b6b8
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_b6aa

Func_b6b8: ; b6b8 (2:76b8)
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, Data_b605
	add hl, de
	ld a, [hl]
	ld [wOBP0], a
	ld [wBGP], a
	ld e, c
	ld d, $0
	ld hl, Data_b609
	add hl, de
	ld a, [hl]
	ld [wOBP1], a
	di
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	ei
	pop bc
	inc c
	jp Func_b6a2

Func_b6e2: ; b6e2 (2:76e2)
	xor a
Func_b6e3: ; b6e3 (2:76e3)
	cp $4
	jp nc, Func_b6f1
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_b6e3

Func_b6f1: ; b6f1 (2:76f1)
	ret

Func_b6f2:: ; b6f2 (2:76f2)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_b70f
	set_farcall_addrs_hli MapFadeOutCGB
	ld e, $0
	ld a, $1
	call FarCall
	jp Func_b772

Func_b70f: ; b70f (2:770f)
	ld c, $0
Func_b711: ; b711 (2:7711)
	ld a, c
	cp $4
	jp nc, Func_b763
	push bc
	xor a
Func_b719: ; b719 (2:7719)
	cp $4
	jp nc, Func_b727
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_b719

Func_b727: ; b727 (2:7727)
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, $3
	ld a, l
	sub e
	ld e, a
	ld a, h
	sbc d
	ld d, a
	ld hl, Data_b605
	add hl, de
	ld a, [hl]
	ld [wOBP0], a
	ld [wBGP], a
	ld e, c
	ld d, $0
	ld hl, $3
	ld a, l
	sub e
	ld e, a
	ld a, h
	sbc d
	ld d, a
	ld hl, Data_b609
	add hl, de
	ld a, [hl]
	ld [wOBP1], a
	di
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	ei
	pop bc
	inc c
	jp Func_b711

Func_b763: ; b763 (2:7763)
	xor a
Func_b764: ; b764 (2:7764)
	cp $4
	jp nc, Func_b772
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_b764

Func_b772: ; b772 (2:7772)
	ret

INCLUDE "engine/random_encounter.asm"

Func_ba47: ; ba47
	push de
	push bc
	push bc
	push bc
	push bc
	push bc
	push af
	set_farcall_addrs_hli Func_93370
	ld hl, sp+$4
	call FarCall
	ld hl, sp+$7
	ld a, [hl]
	ld b, $2
	call DivideAbyB
	ld [wc7bd], a
	ld a, $1
	ld [wc2fa], a
	callba_hli AllocateMonsterStruct
	pop af
	ld [wFarCallDestBank], a
	ld bc, $29
	read_hl_from_sp_plus $c
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	pop de
	call FarCopyVideoData
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	call WriteHLToSPPlus9
	pop bc
	call GetHLAtSPPlus7
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus7
	ld de, $5
	add hl, de
	ld [hl], $c5
	call GetHLAtSPPlus7
	ld de, $7
	add hl, de
	ld [hl], $0
	call GetHLAtSPPlus7
	ld de, $8
	add hl, de
	ld [hl], $0
	call GetHLAtSPPlus7
	ld de, $b
	add hl, de
	ld a, [hl]
	dec a
	call GetHLAtSPPlus7
	ld de, $9
	add hl, de
	ld [hl], a
	call GetHLAtSPPlus7
	ld de, $a
	add hl, de
	ld [hl], $1
	xor a
Func_baed: ; baed (2:7aed)
	cp $4
	jp nc, Func_bb31
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus9
	ld de, $b
	add hl, de
	add hl, bc
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
	pop af
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus9
	ld de, $b
	add hl, de
	add hl, bc
	ld de, $6
	add hl, de
	ld a, $1
	add [hl]
	ld [hl], a
	pop af
	inc a
	jp Func_baed

Func_bb31: ; bb31 (2:7b31)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_bb37: ; bb37
	inc e
	dec e
	jp nz, Func_bba9
	push af
	ld a, $1c
	ld [wMapMusic], a
	ld a, [wMapMusic]
	call OverworldPlaySong
	ld c, $2
	ld e, $e
	ld hl, $3e7
	call DrawTextBoxAndOverworldText
	ld a, $2
	ld [wPlayerFacing], a
	ld a, $1
	ld [wc7e2], a
	ld de, $100d
	ld hl, $0
	call Func_af7a
	pop af
	cp $1
	jp nz, Func_bba6
	xor a
Func_bb6c: ; bb6c (2:7b6c)
	cp $4
	jp nc, Func_bba6
	push af
	set_farcall_addrs_hli Func_6b94
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_6b94
	pop af
	push af
	ld e, a
	ld d, $0
	inc d
	inc d
	inc d
	ld hl, $0
	call FarCall
	pop af
	inc a
	jp Func_bb6c

Func_bba6: ; bba6 (2:7ba6)
	jp Func_bbc7

Func_bba9: ; bba9 (2:7ba9)
	ld a, $1c
	ld [wMapMusic], a
	ld a, [wMapMusic]
	call OverworldPlaySong
	ld a, $2
	ld [wPlayerFacing], a
	ld a, $1
	ld [wc7e2], a
	ld de, $100d
	ld hl, $0
	call Func_af7a
Func_bbc7: ; bbc7 (2:7bc7)
	ret

Func_bbc8: ; bbc8 (2:7bc8)
	push af
	ld a, [rLCDC]
	ld l, a
	push hl
	set_farcall_addrs_hli Func_6183
	pop hl
	pop af
	or a
	jp nz, Func_bbe7
	ld a, l
	and $7f
	call FarCall
	jp Func_bbed

Func_bbe7: ; bbe7 (2:7be7)
	ld a, l
	or $80
	call FarCall
Func_bbed: ; bbed (2:7bed)
	ret

INCLUDE "battle/wild_battle.asm"

Func_bc6d:: ; bc6d
	push bc
	add sp, -$20
	push de
	push af
	ld c, a
	read_hl_from_sp_plus $26
	reg16swap de, hl
	ld hl, sp+$5
	call FarCopyUntilNull
	callba_hli AllocateMonsterStruct
	pop af
	pop de
	ld hl, sp+$1
	ld c, l
	ld b, h
	call Func_ba47
	xor a
	ld [wc2fa], a
	xor a
	ld [wc7c4], a
	set_farcall_addrs_hli Func_10abf
	xor a
	call FarCall
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	cp $1
	jp nz, Func_bcd1
	ld c, $3
	ld e, $e
	ld hl, $7ce
	call DrawTextBoxAndOverworldText
	cp $1
	jp nz, Func_bcd1
	ld e, $1
	xor a
	call Func_bb37
	ld a, $1
	ld [wc7c4], a
Func_bcd1: ; bcd1 (2:7cd1)
	callba_hli FreeMonsterStruct
	ld hl, sp+$0
	ld a, [hl]
	add sp, $22
	ret

Func_bce5:: ; bce5
	push bc
	add sp, -$20
	push de
	push af
	ld c, a
	read_hl_from_sp_plus $26
	reg16swap de, hl
	ld hl, sp+$5
	call FarCopyUntilNull
	callba_hli AllocateMonsterStruct
	pop af
	pop de
	ld hl, sp+$1
	ld c, l
	ld b, h
	call Func_ba47
	xor a
	ld [wc2fa], a
	xor a
	ld [wc7c4], a
	set_farcall_addrs_hli Func_6c5bb
	xor a
	call FarCall
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	cp $1
	jp nz, Func_bd49
	ld c, $3
	ld e, $e
	ld hl, $7ce
	call DrawTextBoxAndOverworldText
	cp $1
	jp nz, Func_bd49
	ld e, $2
	xor a
	call Func_bb37
	ld a, $1
	ld [wc7c4], a
Func_bd49: ; bd49 (2:7d49)
	callba_hli FreeMonsterStruct
	ld hl, sp+$0
	ld a, [hl]
	add sp, $22
	ret

Func_bd5d:: ; bd5d
	push bc
	add sp, -$20
	push de
	push af
	ld c, a
	read_hl_from_sp_plus $26
	reg16swap de, hl
	ld hl, sp+$5
	call FarCopyUntilNull
	callba_hli AllocateMonsterStruct
	pop af
	pop de
	ld hl, sp+$1
	ld c, l
	ld b, h
	call Func_ba47
	xor a
	ld [wc2fa], a
	xor a
	ld [wc7c4], a
	set_farcall_addrs_hli Func_1228e
	xor a
	call FarCall
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	cp $1
	jp nz, Func_bdc1
	ld c, $3
	ld e, $e
	ld hl, $7ce
	call DrawTextBoxAndOverworldText
	cp $1
	jp nz, Func_bdc1
	ld e, $3
	xor a
	call Func_bb37
	ld a, $1
	ld [wc7c4], a
Func_bdc1: ; bdc1 (2:7dc1)
	callba_hli FreeMonsterStruct
	ld hl, sp+$0
	ld a, [hl]
	add sp, $22
	ret

Func_bdd5:: ; bdd5
	push bc
	add sp, -$20
	push de
	push af
	ld c, a
	read_hl_from_sp_plus $26
	reg16swap de, hl
	ld hl, sp+$5
	call FarCopyUntilNull
	callba_hli AllocateMonsterStruct
	pop af
	pop de
	ld hl, sp+$1
	ld c, l
	ld b, h
	call Func_ba47
	xor a
	ld [wc2fa], a
	xor a
	ld [wc7c4], a
	set_farcall_addrs_hli Func_6d395
	xor a
	call FarCall
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	cp $1
	jp nz, Func_be39
	ld c, $3
	ld e, $e
	ld hl, $7ce
	call DrawTextBoxAndOverworldText
	cp $1
	jp nz, Func_be39
	ld e, $4
	xor a
	call Func_bb37
	ld a, $1
	ld [wc7c4], a
Func_be39: ; be39 (2:7e39)
	callba_hli FreeMonsterStruct
	ld hl, sp+$0
	ld a, [hl]
	add sp, $22
	ret

AllocateMemory_Bank02: ; be4d (2:7e4d)
	push hl
	set_farcall_addrs_hli AllocateMemory
	pop hl
	jp FarCall

FreeMemory_Bank02: ; be5d (2:7e5d)
	push hl
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Data_be6e: ; be6e
	dr $be6e, $be73

Data_be73: ; be73
	dr $be73, $be77

Func_be77:: ; be77 (2:7e77)
	push af
	ld de, $240
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_be95
	reg16swap de, hl
	call AllocateMemory_Bank02
	write_hl_to wc82a
	ld hl, sp+$1
	ld [hl], $1
	jp Func_bea1

Func_be95: ; be95 (2:7e95)
	ld a, [wc7e1]
	ld hl, sp+$1
	cp [hl]
	jp nz, Func_bea1
	jp Func_bf03

Func_bea1: ; bea1 (2:7ea1)
	ld hl, sp+$1
	ld e, [hl]
	ld d, $0
	ld hl, Data_be6e
	add hl, de
	ld l, [hl]
	ld a, BANK(GFX_d4000)
	ld [wFarCallDestBank], a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, GFX_d4000
	add hl, de
	reg16swap de, hl
	read_hl_from wc82a
	ld bc, $240
	call FarCopyVideoData
	ld hl, wPlayerFacing
	ld l, [hl]
	ld h, $0
	ld de, Data_be73
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	reg16swap de, hl
	read_hl_from wc82a
	add hl, de
	push hl
	call Bank2_WaitVideoTransferIfLCDEnabled
	pop de
	ld hl, $8000
	ld bc, $c0
	call RequestVideoData
	call Bank2_WaitVideoTransferIfLCDEnabled
	ld hl, sp+$1
	ld a, [hl]
	ld [wc7e1], a
Func_bf03: ; bf03 (2:7f03)
	pop bc
	ret

Func_bf05: ; bf05 (2:7f05)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ret

Func_bf12: ; bf12 (2:7f12)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ret

Func_bf1f: ; bf1f
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ret

Func_bf2c: ; bf2c (2:7f2c)
	xor a
	ld [wc851], a
	ld hl, $0
	write_hl_to wc852
	ret

Func_bf39:: ; bf39
	ld [wc851], a
	reg16swap de, hl
	write_hl_to wc852
	ret

Func_bf46:: ; bf46 (2:7f46)
	ld [wc857], a
	ret

Func_bf4a: ; bf4a (2:7f4a)
	add sp, -$24
	ld c, $0
	ld e, $0
Func_bf50: ; bf50 (2:7f50)
	ld a, e
	cp $4
	jp nc, Func_bf9c
	push bc
	push de
	set_farcall_addrs_hli GetRobotInParty
	pop de
	push de
	ld a, e
	ld hl, sp+$4
	reg16swap de, hl
	call FarCall
	pop de
	pop bc
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_bf7b
	jp Func_bf98

Func_bf7b: ; bf7b (2:7f7b)
	push bc
	push de
	set_farcall_addrs_hli Func_6e1b
	pop de
	push de
	ld l, e
	ld h, $0
	call FarCall
	pop de
	pop bc
	ld a, l
	or h
	jp z, Func_bf98
	inc c
Func_bf98: ; bf98 (2:7f98)
	inc e
	jp Func_bf50

Func_bf9c: ; bf9c (2:7f9c)
	inc c
	dec c
	jp nz, Func_bfab
	ld a, $ff
	ld [wPlayerFacing], a
	ld a, $1
	jp Func_bfac

Func_bfab: ; bfab (2:7fab)
	xor a
Func_bfac: ; bfac (2:7fac)
	add sp, $24
	ret

Bank2_WaitVideoTransferIfLCDEnabled: ; bfaf (2:7faf)
	ld a, [rLCDC]
	and $80
	jp z, Func_bfb9
	call WaitVideoTransfer
Func_bfb9: ; bfb9 (2:7fb9)
	ret

SECTION "Bank 03", ROMX, BANK [$3]
Func_c000: ; c000
	ret

Data_c001: ; c001
	dr $c001, $c009

Data_c009: ; c009
	dr $c009, $c016

Data_c016: ; c016
	dr $c016, $c024

Data_c024: ; c024
	dr $c024, $c038

Data_c038: ; c038
	dr $c038, $c047

Data_c047: ; c047
	dr $c047, $c05e

Data_c05e: ; c05e
	dr $c05e, $c075

Data_c075: ; c075
	dr $c075, $c08c

Data_c08c: ; c08c
	dr $c08c, $c0aa

Data_c0aa: ; c0aa
	dr $c0aa, $c0b5

Data_c0b5: ; c0b5
	dr $c0b5, $c0c0

Data_c0c0: ; c0c0
	dr $c0c0, $c0cb

Data_c0cb: ; c0cb
	dr $c0cb, $c0dd

Data_c0dd: ; c0dd
	dr $c0dd, $c0ee

Data_c0ee: ; c0ee
	dr $c0ee, $c0ff

Data_c0ff: ; c0ff
	dr $c0ff, $c109

Data_c109: ; c109
	dr $c109, $c110

Data_c110: ; c110
	dr $c110, $c121

Data_c121: ; c121
	dr $c121, $c130

Data_c130: ; c130
	dr $c130, $c158

Data_c158: ; c158
	dr $c158, $c181

Data_c181: ; c181
	dr $c181, $c1b1

Data_c1b1: ; c1b1
	dr $c1b1, $c1d1

Data_c1d1: ; c1d1
	dr $c1d1, $c1db

Data_c1db: ; c1db
	dr $c1db, $c1ed

Data_c1ed: ; c1ed
	dr $c1ed, $c1fb

Data_c1fb: ; c1fb
	dr $c1fb, $c207

Data_c207: ; c207
	dr $c207, $c20c

Data_c20c: ; c20c
	dr $c20c, $c213

Data_c213: ; c213
	dr $c213, $c21f

Data_c21f: ; c21f
	dr $c21f, $c22d

Data_c22d: ; c22d
	dr $c22d, $c239

Data_c239: ; c239
	dr $c239, $c245

Data_c245: ; c245
	dr $c245, $c251

Data_c251: ; c251
	dr $c251, $c25d

Data_c25d: ; c25d
	dr $c25d, $c26a

Data_c26a: ; c26a
	dr $c26a, $c29e

Data_c29e: ; c29e
	dr $c29e, $c2aa

Data_c2aa: ; c2aa
	dr $c2aa, $c2b4

Data_c2b4: ; c2b4
	dr $c2b4, $c2c3

Data_c2c3: ; c2c3
	dr $c2c3, $c2d2

Data_c2d2: ; c2d2
	dr $c2d2, $c2e2

Data_c2e2: ; c2e2
	dr $c2e2, $c2f1

Data_c2f1: ; c2f1
	dr $c2f1, $c2fe

Data_c2fe: ; c2fe
	dr $c2fe, $c316

Data_c316: ; c316
	dr $c316, $c323

Data_c323: ; c323
	dr $c323, $c33c

Data_c33c: ; c33c
	dr $c33c, $c350

Data_c350: ; c350
	dr $c350, $c362

Data_c362: ; c362
	dr $c362, $c373

Data_c373: ; c373
	dr $c373, $c382

Data_c382: ; c382
	dr $c382, $c396

Data_c396: ; c396
	dr $c396, $c3e8

Data_c3e8: ; c3e8
	dr $c3e8, $c3fa

Data_c3fa: ; c3fa
	dr $c3fa, $c40c

Data_c40c: ; c40c
	dr $c40c, $c420

Data_c420: ; c420
	dr $c420, $c468

Data_c468: ; c468
	dr $c468, $c47f

Data_c47f: ; c47f
	dr $c47f, $c494

Data_c494: ; c494
	dr $c494, $c4c7

Data_c4c7: ; c4c7
	dr $c4c7, $c4fc

Data_c4fc: ; c4fc
	dr $c4fc, $c506

Data_c506: ; c506
	dr $c506, $c529

Data_c529: ; c529
	dr $c529, $c53d

Data_c53d: ; c53d
	dr $c53d, $c558

Data_c558: ; c558
	dr $c558, $c591

Data_c591: ; c591
	dr $c591, $c5cb

Data_c5cb: ; c5cb
	dr $c5cb, $c5f5

Data_c5f5: ; c5f5
	dr $c5f5, $c626

Data_c626: ; c626
	dr $c626, $c63f

Data_c63f: ; c63f
	dr $c63f, $c646

Data_c646: ; c646
	dr $c646, $c657

Data_c657: ; c657
	dr $c657, $c65d

Data_c65d: ; c65d
	dr $c65d, $c663

Data_c663: ; c663
	dr $c663, $c669

Data_c669: ; c5dd
	dw Data_c121
	dw Data_c130
	dw Data_c158
	dw Data_c181
	dw Data_c1b1
	dw Data_c1d1
	dw Data_c1db
	dw Data_c1ed
	dw Data_c1fb
	dw Data_c207
	dw Data_c20c
	dw Data_c213
	dw Data_c21f
	dw Data_c22d
	dw Data_c239
	dw Data_c245
	dw Data_c251
	dw Data_c25d
	dw Data_c26a
	dw Data_c29e
	dw Data_c2aa
	dw Data_c2b4
	dw Data_c2c3
	dw Data_c2d2
	dw Data_c2e2
	dw Data_c2f1
	dw Data_c2fe
	dw Data_c316
	dw Data_c323
	dw Data_c33c
	dw Data_c350
	dw Data_c362
	dw Data_c373
	dw Data_c382
	dw Data_c396
	dw $0
	dw Data_c3e8
	dw Data_c3fa
	dw Data_c40c
	dw Data_c420
	dw Data_c468
	dw Data_c47f
	dw Data_c494
	dw Data_c4c7
	dw $0
	dw Data_c4fc
	dw Data_c506
	dw Data_c529
	dw Data_c53d
	dw Data_c558
	dw Data_c591
	dw Data_c5cb
	dw Data_c5f5
	dw Data_c626
	dw Data_c63f
	dw Data_c646
	dw Data_c657
	dw Data_c65d
	dw Data_c663
	dw Data_c001

Data_c6e1: ; c6e1
	dw Data_c0dd
	dw Data_c0ee
	dw Data_c0ff
	dw Data_c109
	dw Data_c110

Data_c6eb: ; c6eb
	dw Data_c024

Data_c6ed: ; c6ed
	dw Data_c047
	dw Data_c05e
	dw Data_c075
	dw Data_c08c
	dw Data_c0aa
	dw Data_c0b5
	dw Data_c0c0
	dw Data_c0cb

Data_c6fd: ; c6fd
	dw Data_c038

Func_c6ff: ; c6ff (3:46ff)
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	ret

Func_c72e: ; c72e (3:472e)
	ld a, [wc2cd]
	or a
	jp nz, Func_c740
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_c748

Func_c740: ; c740 (3:4740)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_c748: ; c748 (3:4748)
	ret

	call Func_c72e
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	ret

Func_c758: ; c758 (3:4758)
	push af
	push de
	set_farcall_addrs_hli Func_5c328
	pop de
	pop af
	call FarCall
	ret

Data_c76b: ; c76b
	dr $c76b, $c779

Func_c779: ; c779 (3:4779)
	ld a, [wc2cd]
	ld e, a
	ld a, $2
	call Func_c758
	ld a, [wSystemType]
	cp $1
	jp z, Func_c792
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_c79d
Func_c792: ; c792 (3:4792)
	ld c, $1
	ld de, $e
	ld hl, Data_c76b
	call Func_2a79
Func_c79d: ; c79d (3:479d)
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	ld a, $1
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ret

Func_c7ba: ; c7ba
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	call Func_c72e
	call Func_c6ff
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $105
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $b05
	call FarCall
	call Func_c779
	ret

Func_c812: ; c812
	push hl
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	pop af
	pop hl
	push af
	ld de, $c980
	call CopyUntilNull
	pop af
	push hl
	call GetSRAMBank
	pop hl
	ret

Func_c82b: ; c82b
	push hl
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld hl, wc98d
	ld l, [hl]
	ld h, 0
	get_party_bot
	inc hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call CopyUntilNull
	call WriteHLToSPPlus4
	pop af
	call GetSRAMBank
	pop hl
	push hl
	pop bc
	ret

DelayFrames_NoHalt: ; c85d (3:485d)
.loop
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, .loop
	ret

PrintMapText_:: ; c868 (3:4868)
; h - x coordinate
; l - y coordinate
; de - string pointer table
; c -
;     bits 0-4: bank
;     bits 5-7: flags
	push hl
	push de
	push bc
	set_farcall_addrs_hli PrintMapText
	pop bc
	; transfer the high bits of c to b
	ld a, c
	and $e0
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld a, c
	and $1f
	ld e, a
	ld d, $0
	add hl, de
	ld c, l
	ld b, h
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call FarCall
	pop bc
	pop bc
	ret

Func_c896: ; c896 (3:4896)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_c8ab: ; c8ab (3:48ab)
	add $2
	ld e, a
	ld hl, $b
	ld c, $3
	call Func_c896
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_c896
	ret

Pointers_c8c1: ; c8c1
	dw Data_c8cb
	dw Data_c8d5
	dw Data_c8de
	dw Data_c8e6
	dw Data_c8ed

Data_c8cb: ; c8cb
	db "(たのんたﾞそﾞ)", $0

Data_c8d5: ; c8d5
	db "(かﾞんはﾞれ)", $0

Data_c8de: ; c8de
	db "(いっけぇー)", $0

Data_c8e6: ; c8e6
	db "(よしっ) ", $0

Data_c8ed
	db " (ゆけっ!!)", $0

Data_c8f6: ; c8f6
	dr $c8f6, $c8fe

Func_c8fe: ; c8fe
	add sp, -$68
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_c8f6
	ld bc, $8
	call MemCopy
	ld hl, sp+$29
	write_hl_to_sp_plus $25
	ld hl, sp+$48
	write_hl_to_sp_plus $27
	ld hl, $0
	write_hl_to_sp_plus $29
	ld hl, sp+$f
	call Func_c812
	ld hl, sp+$f
	push hl
	read_hl_from_sp_plus $27
	pop de
	call LiteralStringInTree
	read_hl_from_sp_plus $25
	call Func_292b
	ld e, a
	push de
	ld hl, sp+$11
	call Func_c82b
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld de, wSaveScratchParty
	ld hl, sp+$12
	ld [hl], $0
Func_c94f: ; c94f (3:494f)
	ld hl, sp+$12
	ld a, [hl]
	cp $4
	jp nc, Func_c976
	ld hl, $c
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_c964
	jp Func_c976

Func_c964: ; c964 (3:4964)
	ld hl, sp+$12
	ld a, [hl]
	inc a
	ld hl, sp+$12
	ld [hl], a
	ld hl, $23
	add hl, de
	reg16swap de, hl
	jp Func_c94f

Func_c976: ; c976 (3:4976)
	ld hl, sp+$12
	ld a, [hl]
	cp $4
	jp nc, Func_c985
	ld hl, sp+$12
	ld [hl], $0
	jp Func_c9e8

Func_c985: ; c985 (3:4985)
	ld hl, wc98d
	ld l, [hl]
	ld h, 0
	get_party_bot
	write_hl_to_sp_plus $12
	ld hl, sp+$c
	ld c, l
	ld b, h
	read_hl_from_sp_plus $12
	ld de, $e
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $14
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, sp+$c
	ld a, [hl]
	or a
	jp nz, Func_c9de
	ld hl, sp+$d
	ld a, [hl]
	or a
	jp nz, Func_c9de
	ld hl, sp+$e
	ld a, [hl]
	cp $80
	jp nc, Func_c9de
	ld hl, sp+$12
	ld [hl], $1
	jp Func_c9e8

Func_c9de: ; c9de (3:49de)
	ld a, $2
	call RandomRange
	add $2
	ld hl, sp+$12
	ld [hl], a
Func_c9e8: ; c9e8 (3:49e8)
	pop af
	call GetSRAMBank
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_c8c1
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $2b
	pop de
	call CopyUntilNull
	ld c, l
	ld b, h
	ld hl, sp+$10
	ld a, [hl]
	cp $3
	jp nc, Func_ca22
	ld a, $21
	ld [bc], a
	inc bc
	ld a, $20
	ld [bc], a
	inc bc
	ld hl, sp+$11
	reg16swap de, hl
	ld l, c
	ld h, b
	call LiteralStringInTree
	jp Func_ca3e

Func_ca22: ; ca22 (3:4a22)
	ld hl, sp+$11
	reg16swap de, hl
	ld l, c
	ld h, b
	call LiteralStringInTree
	ld c, l
	ld b, h
	read_hl_from $48c9
	reg16swap de, hl
	ld l, c
	ld h, b
	dec hl
	call CopyUntilNull
Func_ca3e: ; ca3e (3:4a3e)
	pop de
	push de
	ld a, e
	call Func_c8ab
	ld c, $0
Func_ca46: ; ca46 (3:4a46)
	ld l, c
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$25
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_ca78
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$27
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld l, c
	ld h, $0
	add hl, hl
	ld de, $10c
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop bc
	inc c
	jp Func_ca46

Func_ca78: ; ca78 (3:4a78)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	call Func_c72e
	set_farcall_addrs_hli Func_62a3
	ld bc, $b
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	pop de
	ld a, e
	add $2
	ld e, a
	ld a, [wSystemType]
	cp $11
	jp nz, Func_cb00
	push de
	set_farcall_addrs_hli Func_667d
	pop de
	push de
	ld l, e
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $11
	add hl, de
	reg16swap de, hl
	ld hl, $b
	ld bc, $3
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $1d
	ld de, $1323
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
	pop de
Func_cb00: ; cb00 (3:4b00)
	push de
	call WaitVideoTransfer
	pop de
	ld a, [wSystemType]
	cp $1
	jp z, Func_cb15
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_cb22
Func_cb15: ; cb15 (3:4b15)
	ld hl, sp+$6
	ld [hl], e
	ld c, $1
	ld de, $8
	ld hl, sp+$0
	call Func_2a79
Func_cb22: ; cb22 (3:4b22)
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	xor a
Func_cb2e: ; cb2e (3:4b2e)
	cp $3c
	jp nc, Func_cb3c
	push af
	call Func_0451
	pop af
	inc a
	jp Func_cb2e

Func_cb3c: ; cb3c (3:4b3c)
	ld a, [wc2cd]
	xor $1
	ld e, a
	ld a, $2
	call Func_c758
	add sp, $68
	ret

INCLUDE "engine/allocate_monster_struct.asm"

Func_cd9a: ; cd9a (3:4d9a)
	callba_hli Func_bf214
	ret

Func_cda9: ; cda9
	call DisableHBlank
	xor a
	ld [rSCX], a
	ld [wc2e4], a
	ld a, [wLCDC]
	ld [rLCDC], a
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	ret

Func_cdc0: ; cdc0 (3:4dc0)
	push af
	set_farcall_addrs_hli Func_667d
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $8f00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f0c
	ld hl, $5
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_ce13
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_667d
	ld hl, sp+$1
	ld c, [hl]
	ld b, $0
	ld de, $1f0c
	ld hl, $5
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_ce13: ; ce13 (3:4e13)
	call WaitVideoTransfer
	pop bc
	ret

Func_ce18: ; ce18 (3:4e18)
	push af
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	pop af
	or a
	jp nz, Func_ce73
	set_farcall_addrs_hli Func_7c8a
	ld a, [wc2cd]
	ld c, a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $105
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld a, [wc2cd]
	ld c, a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $b05
	call FarCall
	jp Func_ce79

Func_ce73: ; ce73 (3:4e73)
	ld a, [wc2cd]
	call Func_cdc0
Func_ce79: ; ce79 (3:4e79)
	call WaitVideoTransfer
	call Func_c72e
	ld a, [wLCDC]
	and $f9
	ld [wLCDC], a
	ld a, $3
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, $4da9
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
Func_cea1: ; cea1 (3:4ea1)
	ld a, [wNextVBlankFlags]
	and $80
	jp nz, Func_cea1
	ld e, $2
	ld a, [wc2cd]
	call Func_c758
	ld a, [wc2cd]
	xor $1
	call Func_cdc0
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	ld a, $1
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ret

Func_ced9: ; ced9
	ld a, [wBlinkerOffTile]
	ld [wc2e4], a
	ret

Data_cee0: ; cee0
	db  2, -2,  2, -2
	db  8,  8,  8,  8
	db  2,  2,  2,  2

Func_ceec: ; ceec (3:4eec)
	push af
	push bc
	push bc
	push bc
	push bc
	push de
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_cee0
	add hl, de
	ld e, [hl]
	ld hl, sp+$6
	ld [hl], e
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_cee0
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$5
	ld [hl], e
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_cee0
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_cee0
	add hl, de
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	ld h, $0
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $80
	call CompareHLtoDE
	jp c, Func_cf49
	call GetHLAtSPPlus4
	dec h
	call WriteHLToSPPlus4
Func_cf49: ; cf49 (3:4f49)
	ld a, $3
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, Func_ced9
	write_hl_to wVBlankCallbackAddress
	ld a, [wc2e4]
	ld [wBlinkerOffTile], a
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
	ld hl, sp+$7
	xor a
	ld [hl], a
	ld hl, sp+$8
	ld [hl], a
	pop de
Func_cf71: ; cf71 (3:4f71)
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$9
	cp [hl]
	jp nc, Func_cfde
	ld hl, sp+$5
	ld a, [hl]
	cp e
	jp nc, Func_cfde
	push bc
	push de
	ld l, c
	ld h, b
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, $28
	call Func_de2c
	ld hl, sp+$a
	ld a, [hl]
	ld hl, sp+$d
	cp [hl]
	jp nc, Func_cfaa
	ld hl, sp+$a
	ld a, [hl]
	ld hl, sp+$8
	add [hl]
	ld hl, sp+$a
	ld [hl], a
	ld a, [wBlinkerOffTile]
	ld hl, sp+$7
	add [hl]
	ld [wBlinkerOffTile], a
Func_cfaa: ; cfaa (3:4faa)
	pop de
	pop bc
	push bc
	push de
	ld hl, sp+$9
	ld a, [hl]
	cp e
	jp nc, Func_cfce
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$6
	add [hl]
	ld hl, sp+$9
	ld [hl], a
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld l, c
	ld h, b
	ld a, [hl]
	add e
	ld [hl], a
	inc hl
	ld a, [hl]
	adc d
	ld [hl], a
Func_cfce: ; cfce (3:4fce)
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop de
	pop bc
	jp Func_cf71

Func_cfde: ; cfde (3:4fde)
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_cfef: ; cfef
	dr $cfef, $cff2

Data_cff2: ; cff2
	dr $cff2, $cffa

Data_cffa: ; cffa
	dr $cffa, $d005

Data_d005: ; d005
	dr $d005, $d015

Data_d015: ; d015
	dr $d015, $d020

Data_d020: ; d020
	dr $d020, $d030

Func_d030: ; d030
	push bc
	push af
	ld hl, $a0
	call WriteHLToSPPlus4
	ld a, $1
	ld [wc2e1], a
	ld a, $27
	ld [wc2e2], a
	ld a, $67
	ld [wc2e3], a
	xor a
	ld [wc2e4], a
	xor a
	ld [wc2e4 + 1], a
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $0
	set_farcall_addrs_hli Func_7c8a
	pop af
	cp $6
	jp z, Func_d156
	cp $5
	jp z, Func_d14d
	cp $4
	jp z, Func_d144
	cp $3
	jp z, Func_d13b
	cp $2
	jp z, Func_d111
	cp $1
	jp z, Func_d0d5
	or a
	jp nz, Func_d15c
	ld hl, $a0
	pop de
	push hl
	ld a, [wc2cd]
	ld c, a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $1805
	call FarCall
	ld hl, Data_cfef
	call Func_e4d1
	call EnableHBlank
	ld l, $0
	push hl
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld e, $48
	ld a, $48
	call Func_ceec
	pop bc
	xor a
	call Func_ce18
	jp Func_d15c

Func_d0d5: ; d0d5 (3:50d5)
	ld hl, $a0
	pop de
	push hl
	ld a, [wc2cd]
	ld c, a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $1805
	call FarCall
	ld a, $48
	ld hl, Data_cfef
	call Func_e4d1
	call EnableHBlank
	ld l, $0
	push hl
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld e, $48
	ld a, $48
	call Func_ceec
	pop bc
	xor a
	call Func_ce18
	jp Func_d18c

Func_d111: ; d111 (3:5111)
	ld hl, $58
	pop de
	push hl
	ld a, $48
	ld c, a
	push bc
	push af
	ld hl, Data_cff2
	call Func_f723
	call EnableHBlank
	pop af
	pop bc
	ld l, $2
	push hl
	ld e, a
	ld a, c
	ld hl, sp+$2
	ld c, l
	ld b, h
	call Func_ceec
	pop bc
	ld a, $1
	call Func_ce18
	jp Func_d15c

Func_d13b: ; d13b (3:513b)
	ld hl, Data_cffa
	call Func_f723
	jp Func_d15c

Func_d144: ; d144 (3:5144)
	ld hl, Data_d005
	call Func_f723
	jp Func_d15c

Func_d14d: ; d14d (3:514d)
	ld hl, Data_d015
	call Func_f723
	jp Func_d15c

Func_d156: ; d156 (3:5156)
	ld hl, Data_d020
	call Func_f723
Func_d15c: ; d15c (3:515c)
	ld a, [wc2cd]
	or a
	jp nz, Func_d16e
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_d176

Func_d16e: ; d16e (3:516e)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_d176: ; d176 (3:5176)
	call DisableHBlank
	ld a, [wLCDC]
	and $f9
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
Func_d18c: ; d18c (3:518c)
	pop bc
	ret

Func_d18e: ; d18e (3:518e)
	push de
	push bc
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc hl
	inc hl
	ld c, l
	ld b, h
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call Func_2515
	pop bc
	pop bc
	ret

	push af
	add sp, -$18
	push de
	ld hl, sp+$18
	ld [hl], $2
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp nz, Func_d1c1
	ld hl, sp+$19
	ld [hl], $0
	jp Func_d1c5

Func_d1c1: ; d1c1 (3:51c1)
	ld hl, sp+$19
	ld [hl], $b
Func_d1c5: ; d1c5 (3:51c5)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp nz, Func_d1de
	ld hl, $0
	jp Func_d1e1

Func_d1de: ; d1de (3:51de)
	ld hl, $2f
Func_d1e1: ; d1e1 (3:51e1)
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $1a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $12
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop de
	ld a, c
	sub e
	ld l, a
	ld a, b
	sbc d
	ld h, a
	write_hl_to_sp_plus $12
	read_hl_from_sp_plus $12
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_d221
	ld hl, $0
	write_hl_to_sp_plus $12
Func_d221: ; d221 (3:5221)
	read_hl_from_sp_plus $12
	ld e, h
	ld hl, sp+$a
	ld [hl], e
	read_hl_from_sp_plus $12
	ld e, l
	ld hl, sp+$b
	ld [hl], e
	ld hl, sp+$6
	ld [hl], b
	ld hl, sp+$7
	ld [hl], c
	ld hl, sp+$9
	xor a
	ld [hl], a
	ld hl, sp+$8
	ld [hl], a
	ld hl, sp+$d
	ld [hl], a
	ld hl, sp+$c
	ld [hl], a
	ld hl, sp+$2
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	ld de, $30
	call Func_2617
Func_d252: ; d252 (3:5252)
	ld hl, sp+$12
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	reg16swap de, hl
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$7
	ld l, [hl]
	ld h, a
	call Func_2617
	ld hl, sp+$12
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$12
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$13
	ld e, [hl]
	ld hl, sp+$14
	ld a, [hl]
	and $80
	jp z, Func_d280
	inc e
Func_d280: ; d280 (3:5280)
	ld hl, sp+$19
	ld l, [hl]
	push hl
	ld c, e
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_d18e
	pop bc
	ld hl, sp+$19
	ld a, [hl]
	or a
	jp z, Func_d2ac
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_d2c9
Func_d2ac: ; d2ac (3:52ac)
	ld hl, sp+$7
	ld c, [hl]
	ld hl, sp+$6
	ld h, [hl]
	ld b, h
	ld hl, sp+$16
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$17
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $3
	call Func_2230
Func_d2c9: ; d2c9 (3:52c9)
	ld l, $2
	push hl
	ld c, $8
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_3bc5
	pop bc
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, sp+$9
	call Func_fdb7
	or a
	jp z, Func_d2ea
	jp Func_d300

Func_d2ea: ; d2ea (3:52ea)
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, sp+$6
	call Func_fddb
	cp $1
	jp z, Func_d2fd
	jp Func_d300

Func_d2fd: ; d2fd (3:52fd)
	jp Func_d252

Func_d300: ; d300 (3:5300)
	ld hl, sp+$12
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	push hl
	read_hl_from_sp_plus $14
	pop de
	call Func_2617
	ld hl, sp+$12
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$12
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$13
	ld e, [hl]
	ld hl, sp+$14
	ld a, [hl]
	and $80
	jp z, Func_d329
	inc e
Func_d329: ; d329 (3:5329)
	ld hl, sp+$19
	ld l, [hl]
	push hl
	ld c, e
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_d18e
	pop bc
	read_hl_from_sp_plus $12
	push hl
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$19
	ld a, [hl]
	or a
	jp z, Func_d365
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_d384
Func_d365: ; d365 (3:5365)
	pop hl
	push hl
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$16
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$17
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $3
	call Func_2230
Func_d384: ; d384 (3:5384)
	ld l, $2
	push hl
	ld c, $8
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_3ca1
	pop bc
	read_hl_from_sp_plus $12
	reg16swap de, hl
	add sp, $1a
	reg16swap de, hl
	ret

Func_d3a2: ; d3a2
	push af
	add sp, -$18
	push de
	ld hl, sp+$18
	ld [hl], $2
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp nz, Func_d3b8
	ld hl, sp+$19
	ld [hl], $0
	jp Func_d3bc

Func_d3b8: ; d3b8 (3:53b8)
	ld hl, sp+$19
	ld [hl], $b
Func_d3bc: ; d3bc (3:53bc)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp nz, Func_d3d5
	ld hl, $0
	jp Func_d3d8

Func_d3d5: ; d3d5 (3:53d5)
	ld hl, $2f
Func_d3d8: ; d3d8 (3:53d8)
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $1a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $12
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop de
	ld l, c
	ld h, b
	add hl, de
	write_hl_to_sp_plus $12
	read_hl_from_sp_plus $12
	push hl
	read_hl_from_sp_plus $12
	pop de
	call CompareHLtoDE
	jp nc, Func_d415
	read_hl_from_sp_plus $10
	write_hl_to_sp_plus $12
Func_d415: ; d415 (3:5415)
	read_hl_from_sp_plus $12
	ld e, h
	ld hl, sp+$a
	ld [hl], e
	read_hl_from_sp_plus $12
	ld e, l
	ld hl, sp+$b
	ld [hl], e
	ld hl, sp+$6
	ld [hl], b
	ld hl, sp+$7
	ld [hl], c
	ld hl, sp+$9
	xor a
	ld [hl], a
	ld hl, sp+$8
	ld [hl], a
	ld hl, sp+$d
	ld [hl], a
	ld hl, sp+$c
	ld [hl], a
	ld hl, sp+$2
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	ld de, $30
	call Func_2617
Func_d446: ; d446 (3:5446)
	ld hl, sp+$12
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	reg16swap de, hl
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$7
	ld l, [hl]
	ld h, a
	call Func_2617
	ld hl, sp+$12
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$12
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$13
	ld e, [hl]
	ld hl, sp+$14
	ld a, [hl]
	and $80
	jp z, Func_d474
	inc e
Func_d474: ; d474 (3:5474)
	ld hl, sp+$19
	ld l, [hl]
	push hl
	ld c, e
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_d18e
	pop bc
	ld hl, sp+$19
	ld a, [hl]
	or a
	jp z, Func_d4a0
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_d4bd
Func_d4a0: ; d4a0 (3:54a0)
	ld hl, sp+$7
	ld c, [hl]
	ld hl, sp+$6
	ld h, [hl]
	ld b, h
	ld hl, sp+$16
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$17
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $3
	call Func_2230
Func_d4bd: ; d4bd (3:54bd)
	ld l, $2
	push hl
	ld c, $8
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_3bc5
	pop bc
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, sp+$9
	call Func_fdc9
	or a
	jp z, Func_d4de
	jp Func_d4f4

Func_d4de: ; d4de (3:54de)
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, sp+$6
	call Func_fddb
	cp $ff
	jp z, Func_d4f1
	jp Func_d4f4

Func_d4f1: ; d4f1 (3:54f1)
	jp Func_d446

Func_d4f4: ; d4f4 (3:54f4)
	ld hl, sp+$12
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	push hl
	read_hl_from_sp_plus $14
	pop de
	call Func_2617
	ld hl, sp+$12
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$12
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$13
	ld e, [hl]
	ld hl, sp+$14
	ld a, [hl]
	and $80
	jp z, Func_d51d
	inc e
Func_d51d: ; d51d (3:551d)
	ld hl, sp+$19
	ld l, [hl]
	push hl
	ld c, e
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_d18e
	pop bc
	read_hl_from_sp_plus $12
	push hl
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$19
	ld a, [hl]
	or a
	jp z, Func_d559
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_d578
Func_d559: ; d559 (3:5559)
	pop hl
	push hl
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$16
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$17
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $3
	call Func_2230
Func_d578: ; d578 (3:5578)
	ld l, $2
	push hl
	ld c, $8
	ld hl, sp+$18
	ld e, [hl]
	ld hl, sp+$19
	ld a, [hl]
	call Func_3ca1
	pop bc
	read_hl_from_sp_plus $12
	reg16swap de, hl
	add sp, $1a
	reg16swap de, hl
	ret

Func_d596: ; d596 (3:5596)
	add sp, -$1a
	ld hl, sp+$6
	ld [hl], $1
	or a
	jp nz, Func_d5a7
	ld hl, sp+$7
	ld [hl], $0
	jp Func_d5ab

Func_d5a7: ; d5a7 (3:55a7)
	ld hl, sp+$7
	ld [hl], $b
Func_d5ab: ; d5ab (3:55ab)
	push af
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	or a
	jp nz, Func_d5c2
	ld hl, $0
	jp Func_d5c5

Func_d5c2: ; d5c2 (3:55c2)
	ld hl, $2f
Func_d5c5: ; d5c5 (3:55c5)
	add hl, de
	call WriteHLToSPPlus8
	ld de, Data_d747
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$8
	ld l, [hl]
	ld h, a
	call PlaceStringDEatCoordHL
	ld de, Data_d751
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$8
	ld l, [hl]
	ld h, a
	inc hl
	inc hl
	call PlaceStringDEatCoordHL
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	reg16swap de, hl
	ld hl, sp+$a
	call LiteralStringInTree
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$8
	ld l, [hl]
	ld h, a
	call PlaceStringDEatCoordHL
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	add $5
	call SetStringStartState
	call GetHLAtSPPlus8
	ld de, $22
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_d621
	cp $a
	jp nz, Func_d63d
Func_d621: ; d621 (3:5621)
	call GetHLAtSPPlus8
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, $9a
	push hl
	ld hl, Data_d75a
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_d665

Func_d63d: ; d63d (3:563d)
	push af
	ld hl, Data_d760
	push hl
	call PlaceString
	pop bc
	ld a, $19
	ld [wFarCallDestBank], a
	pop af
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, $6f37
	add hl, de
	reg16swap de, hl
	ld hl, sp+$a
	call LiteralStringInTree
	ld hl, sp+$a
	push hl
	call PlaceString
	pop bc
Func_d665: ; d665 (3:5665)
	pop af
	push af
	or a
	jp z, Func_d681
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_d6e2
Func_d681: ; d681 (3:5681)
	call GetHLAtSPPlus8
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	inc de
	inc de
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $3
	call Func_2230
	ld hl, sp+$8
	ld c, [hl]
	ld b, $0
	inc bc
	inc bc
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $400
	add hl, de
	add hl, bc
	ld de, Data_d762
	call PlaceStringDEatCoordHL
	call GetHLAtSPPlus8
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$a
	ld c, [hl]
	ld b, $0
	inc bc
	inc bc
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $500
	add hl, de
	add hl, bc
	ld de, $100
	pop bc
	call Func_2230
Func_d6e2: ; d6e2 (3:56e2)
	ld hl, sp+$2
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus10
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$2
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$3
	ld c, [hl]
	ld hl, sp+$4
	ld a, [hl]
	and $80
	jp z, Func_d71b
	inc c
Func_d71b: ; d71b (3:571b)
	inc c
	dec c
	jp nz, Func_d735
	call GetHLAtSPPlus8
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_d735
	ld c, $1
Func_d735: ; d735 (3:5735)
	pop af
	ld l, a
	push hl
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld e, a
	ld hl, sp+$9
	ld a, [hl]
	call Func_d18e
	pop bc
	add sp, $1a
	ret

Data_d747: ; d747
	db "         ", $0

Data_d751: ; d751
	db "        ", $0

Data_d75a: ; d75a
	TX_STACK
	db "V"
	TX_SNUM
	db $0

Data_d760: ; d760
	db " ", $0

Data_d762: ; d762
	db "/   ", $0

Func_d767: ; d767
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_c896
	set_farcall_addrs_hli Func_667d
	ld bc, $8702
	ld de, $903
	ld hl, $900
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $8602
	ld de, $a03
	ld hl, $a00
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $8402
	ld de, $804
	ld hl, $4
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $8402
	ld de, $1304
	ld hl, $b04
	call FarCall
	ld hl, $904
	call Coord2TileMap
	ld [hl], $85
	ld hl, $a04
	call Coord2TileMap
	ld [hl], $83
	xor a
	call Func_d596
	ld a, $1
	call Func_d596
	ret

Data_d7e7: ; d7e7
	dr $d7e7, $d7f5

Func_d7f5: ; d7f5 (3:57f5)
	push bc
	push bc
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld c, l
	ld b, h
	pop de
	push bc
	cp $7
	jp z, Func_da26
	cp $6
	jp z, Func_da0c
	cp $5
	jp z, Func_d9f5
	cp $4
	jp z, Func_d99a
	cp $3
	jp z, Func_d96d
	cp $2
	jp z, Func_d945
	cp $1
	jp z, Func_d833
	or a
	jp nz, Func_dacf
Func_d833: ; d833 (3:5833)
	push af
	push de
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	reg16swap de, hl
	inc hl
	inc hl
	ld e, [hl]
	xor a
	call Func_dbf5
	pop de
	push de
	ld hl, $5
	add hl, de
	ld c, [hl]
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	ld a, $1
	call Func_dbf5
	pop de
	push de
	ld a, [de]
	ld l, a
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	pop hl
	pop de
	push hl
	ld l, e
	ld h, d
	inc hl
	ld c, [hl]
	ld a, c
	cp $ff
	jp nz, Func_d8a2
	ld hl, sp+$8
	ld [hl], $1
	call GetHLAtSPPlus8
	ld de, $2f
	add hl, de
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld c, a
	call GetHLAtSPPlus8
	ld de, hFFC9 + 8
	add hl, de
	call WriteHLToSPPlus8
	jp Func_d8a6

Func_d8a2: ; d8a2 (3:58a2)
	ld hl, sp+$8
	ld [hl], $0
Func_d8a6: ; d8a6 (3:58a6)
	pop hl
	pop af
	or a
	jp nz, Func_d8cd
	ld e, c
	ld a, l
	call Func_e015
	ld a, [wSystemType]
	cp $1
	jp z, Func_d8c1
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_d8ca
Func_d8c1: ; d8c1 (3:58c1)
	ld de, $e
	ld hl, Data_d7e7
	call Func_2b7d
Func_d8ca: ; d8ca (3:58ca)
	jp Func_d938

Func_d8cd: ; d8cd (3:58cd)
	call ClearSprites
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	call Func_c72e
	call Func_c6ff
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8f00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1311
	ld hl, $0
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_d932
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_667d
	ld a, [wc2cd]
	ld c, a
	ld b, $0
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_d932: ; d932 (3:5932)
	call WaitVideoTransfer
	call Func_c779
Func_d938: ; d938 (3:5938)
	xor a
	call Func_d030
	call Func_c8fe
	call Func_c7ba
	jp Func_dacf

Func_d945: ; d945 (3:5945)
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	reg16swap de, hl
	inc hl
	inc hl
	ld e, [hl]
	xor a
	call Func_dbf5
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld [hl], $1
	jp Func_dacf

Func_d96d: ; d96d (3:596d)
	ld hl, $5
	add hl, de
	ld c, [hl]
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	ld a, $1
	call Func_dbf5
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld [hl], $2
	jp Func_dacf

Func_d99a: ; d99a (3:599a)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_d9c5
	ld c, $7
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld e, [hl]
	xor a
	call Func_dbf5
	ld c, $8
	ld e, $0
	ld a, $1
	call Func_dbf5
	jp Func_d9de

Func_d9c5: ; d9c5 (3:59c5)
	ld c, $8
	ld e, $0
	ld a, $1
	call Func_dbf5
	ld c, $7
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld e, [hl]
	xor a
	call Func_dbf5
Func_d9de: ; d9de (3:59de)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld [hl], $0
	jp Func_d8cd

Func_d9f5: ; d9f5 (3:59f5)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld [hl], $1
	jp Func_dacf

Func_da0c: ; da0c (3:5a0c)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld [hl], $2
	jp Func_dacf

Func_da26: ; da26 (3:5a26)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_da51
	ld c, $7
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld e, [hl]
	xor a
	call Func_dbf5
	ld c, $8
	ld e, $0
	ld a, $1
	call Func_dbf5
	jp Func_da6a

Func_da51: ; da51 (3:5a51)
	ld c, $8
	ld e, $0
	ld a, $1
	call Func_dbf5
	ld c, $7
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld e, [hl]
	xor a
	call Func_dbf5
Func_da6a: ; da6a (3:5a6a)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld l, a
	call GetHLAtSPPlus4
	ld de, $2f
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld c, a
	ld e, c
	ld a, $c5
	call Func_e015
	ld a, [wSystemType]
	cp $1
	jp z, Func_daae
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_dab7
Func_daae: ; daae (3:5aae)
	ld de, $e
	ld hl, Data_d7e7
	call Func_2b7d
Func_dab7: ; dab7 (3:5ab7)
	xor a
	call Func_d030
	call Func_c8fe
	call Func_c7ba
	call GetHLAtSPPlus4
	ld de, hFFC9 + 8
	add hl, de
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld [hl], $1
Func_dacf: ; dacf (3:5acf)
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	cp $2
	jp z, Func_db78
	cp $1
	jp z, Func_db2f
	or a
	jp nz, Func_dbd3
	ld a, $2
	call Func_d030
	call Func_c6ff
	call Func_d767
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call Func_dc0a
	pop hl
	push hl
	ld de, $2f
	add hl, de
	pop de
	push hl
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call Func_dc0a
	ld a, $1
	call Func_d030
	jp Func_dbd3

Func_db2f: ; db2f (3:5b2f)
	push bc
	ld hl, $8
	add hl, bc
	ld a, [hl]
	and $4
	jp nz, Func_db5a
	ld a, $3
	call Func_d030
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	call Func_d767
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
Func_db5a: ; db5a (3:5b5a)
	pop bc
	ld hl, $8
	add hl, bc
	ld a, $fb
	and [hl]
	ld [hl], a
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call Func_dc0a
	ld a, $4
	call Func_d030
	jp Func_dbd3

Func_db78: ; db78 (3:5b78)
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, $fe
	and [hl]
	ld [hl], a
	ld hl, $9
	add hl, bc
	ld a, [hl]
	and $4
	jp nz, Func_dbb7
	ld a, $5
	call Func_d030
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	call Func_d767
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
Func_dbb7: ; dbb7 (3:5bb7)
	pop bc
	ld hl, $9
	add hl, bc
	ld a, $fb
	and [hl]
	ld [hl], a
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call Func_dc0a
	ld a, $6
	call Func_d030
Func_dbd3: ; dbd3 (3:5bd3)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	pop bc
	ret

Func_dbe2: ; dbe2
	push hl
	push de
	set_farcall_addrs_hli Func_6086c
	pop de
	pop hl
	call FarCall
	ret

Func_dbf5: ; dbf5 (3:5bf5)
	push af
	push de
	push bc
	set_farcall_addrs_hli Func_609d3
	pop bc
	pop de
	pop af
	call FarCall
	ret

Func_dc0a:: ; dc0a (3:5c0a)
	push af
	push de
	set_farcall_addrs_hli Func_5c0b2
	pop de
	pop af
	call FarCall
	ret

Func_dc1d: ; dc1d
	push de
	ld e, a
	xor a
	call Func_dc0a
	pop de
	ld a, $1
	call Func_dc0a
	ret

Data_dc2a: ; dc2a
	db $1, $0

Func_dc2c: ; dc2c (3:5c2c)
	push hl
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	ld a, $28
	ld [rLYC], a
	xor a
	ld [wc2e1], a
	ld a, $28
	ld [wc2e2], a
	ld a, $69
	ld [wc2e3], a
	call EnableHBlank
	call DelayFrames_NoHalt
	call WaitVideoTransfer
	callba_hli Func_5d113
	ld hl, Data_dc2a
	call Func_f723
	pop hl
	call Func_f723
	call ClearSprites
	callba_hli Func_5d113
	ld hl, Data_dc2a
	call Func_f723
	call DisableHBlank
	ld a, [wLCDC]
	and $f9
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	call WaitVideoTransfer
	ret

Func_dcaf: ; dcaf
	push af
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld a, [hl]
	cp $ff
	jp z, Func_dcd3
	ld a, [de]
	and $4
	jp z, Func_dcd6
Func_dcd3: ; dcd3 (3:5cd3)
	jp Func_dd07

Func_dcd6: ; dcd6 (3:5cd6)
	ld hl, sp+$3
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	cp $46
	jp nc, Func_dcf3
	ld hl, sp+$0
	call Func_f0cf
	jp Func_dd07

Func_dcf3: ; dcf3 (3:5cf3)
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_c669 - 2 * $46
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_dc2c
Func_dd07: ; dd07 (3:5d07)
	pop bc
	pop bc
	ret

Func_dd0a: ; dd0a
	push de
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], a
	pop de
	ld l, e
	ld h, $0
	add hl, hl
	ld de, Data_c6eb
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_dc2c
	ret

Func_dd29: ; dd29
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $0
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Data_c6ed
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_dc2c
	ret

Func_dd47: ; dd47
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], a
	read_hl_from Data_c6fd
	call Func_dc2c
	ret

Func_dd5a: ; dd5a
	ld a, $64
	call RandomRange
	ld hl, $4000
	ret

INCLUDE "engine/random.asm"

Func_ddc2: ; ddc2
	push hl
	push bc
	ld hl, sp+$0
	ld [hl], $fe
	ld c, $1
	ld hl, sp+$1
	ld a, [rLY]
	ld [hl], a
Func_ddcf: ; ddcf (3:5dcf)
	ld a, [rLY]
	ld e, a
	ld hl, sp+$1
	ld a, [hl]
	cp e
	jp z, Func_de1b
	ld hl, sp+$0
	ld a, [hl]
	ld [rSCX], a
	ld hl, sp+$1
	ld [hl], e
	ld hl, sp+$0
	ld a, [hl]
	add c
	ld hl, sp+$0
	ld [hl], a
	ld a, c
	cp $1
	jp nz, Func_ddfb
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nz, Func_ddfb
	ld c, $ff
	jp Func_de0b

Func_ddfb: ; ddfb (3:5dfb)
	ld a, c
	cp $ff
	jp nz, Func_de0b
	ld hl, sp+$0
	ld a, [hl]
	cp $fe
	jp nz, Func_de0b
	ld c, $1
Func_de0b: ; de0b (3:5e0b)
	call GetHLAtSPPlus4
	dec hl
	call WriteHLToSPPlus4
	inc h
	dec h
	bit 7, h
	jr z, Func_de1b
	jp Func_de1e

Func_de1b: ; de1b (3:5e1b)
	jp Func_ddcf

Func_de1e: ; de1e (3:5e1e)
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop bc
	pop bc
	ret

Func_de2c: ; de2c (3:5e2c)
	push hl
	push bc
	push bc
	push de
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld hl, wOAMBuffer
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $8
	add hl, de
	call WriteHLToSPPlus8
	pop de
	ld hl, $10
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld a, [hl]
	and $40
	jp z, Func_de6c
	ld hl, $30
	add hl, de
	reg16swap de, hl
	ld bc, $fff0
	jp Func_de6f

Func_de6c: ; de6c (3:5e6c)
	ld bc, $10
Func_de6f: ; de6f (3:5e6f)
	xor a
Func_de70: ; de70 (3:5e70)
	cp $4
	jp nc, Func_df20
	push af
	push bc
	push de
	ld c, e
	ld b, d
	inc b
	dec b
	bit 7, b
	jr nz, .asm_de8b
	ld e, c
	ld d, b
	ld hl, $98
	call CompareHLtoDE
	jp nc, Func_de8e
.asm_de8b
	ld bc, $0
Func_de8e: ; de8e (3:5e8e)
	ld hl, sp+$7
	ld [hl], $0
Func_de92: ; de92 (3:5e92)
	ld hl, sp+$7
	ld a, [hl]
	cp $8
	jp nc, Func_df10
	push bc
	ld hl, sp+$8
	ld a, [hl]
	and $20
	jp z, Func_dec0
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld hl, $7
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	ld c, l
	ld b, h
	jp Func_ded3

Func_dec0: ; dec0 (3:5ec0)
	read_hl_from_sp_plus $e
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld c, l
	ld b, h
Func_ded3: ; ded3 (3:5ed3)
	inc b
	dec b
	bit 7, b
	jr nz, .asm_dee4
	ld e, c
	ld d, b
	ld hl, $a8
	call CompareHLtoDE
	jp nc, Func_dee7
.asm_dee4
	ld bc, $0
Func_dee7: ; dee7 (3:5ee7)
	read_hl_from_sp_plus $c
	inc hl
	ld [hl], c
	pop bc
	call GetHLAtSPPlus10
	ld [hl], c
	ld hl, sp+$6
	ld a, [hl]
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld [hl], a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	call WriteHLToSPPlus10
	jp Func_de92

Func_df10: ; df10 (3:5f10)
	pop de
	pop bc
	reg16swap de, hl
	add hl, bc
	reg16swap de, hl
	pop af
	inc a
	jp Func_de70

Func_df20: ; df20 (3:5f20)
	pop bc
	pop bc
	pop bc
	ret

Data_df24: ; df24
	dr $df24, $df28

Func_df28: ; df28
	push af
	ld c, $0
	ld a, [wSystemType]
	cp $11
	jp z, Func_df8b
	xor a
Func_df34: ; df34 (3:5f34)
	cp $6
	jp nc, Func_df74
	push af
	push bc
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_df24
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld a, [hl]
	ld [wOBP0], a
	ld [wBGP], a
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	xor a
Func_df5c: ; df5c (3:5f5c)
	cp $a
	jp nc, Func_df6a
	push af
	call Func_0451
	pop af
	inc a
	jp Func_df5c

Func_df6a: ; df6a (3:5f6a)
	pop bc
	ld a, c
	xor $1
	ld c, a
	pop af
	inc a
	jp Func_df34

Func_df74: ; df74 (3:5f74)
	ld a, [$5f24]
	ld [wOBP0], a
	ld [wBGP], a
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	jp Func_e013

Func_df8b: ; df8b (3:5f8b)
	push bc
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	ld de, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	ld l, $0
	pop bc
Func_dfa1: ; dfa1 (3:5fa1)
	ld a, l
	cp $6
	jp nc, Func_e013
	push bc
	push hl
	inc c
	dec c
	jp nz, Func_dfd1
	ld hl, sp+$5
	ld a, [hl]
	or a
	jp nz, Func_dfc3
	ld bc, $80
	ld e, $0
	ld hl, wCGB_BGPalsBuffer
	call FillMemory
	jp Func_dfce

Func_dfc3: ; dfc3 (3:5fc3)
	ld bc, $80
	ld e, $ff
	ld hl, wCGB_BGPalsBuffer
	call FillMemory
Func_dfce: ; dfce (3:5fce)
	jp Func_dfe7

Func_dfd1: ; dfd1 (3:5fd1)
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	reg16swap de, hl
	ld hl, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
Func_dfe7: ; dfe7 (3:5fe7)
	call WaitVideoTransfer
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
Func_dff2: ; dff2 (3:5ff2)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_dff2
	xor a
Func_dffb: ; dffb (3:5ffb)
	cp $a
	jp nc, Func_e009
	push af
	call Func_0451
	pop af
	inc a
	jp Func_dffb

Func_e009: ; e009 (3:6009)
	pop hl
	inc l
	pop bc
	ld a, c
	xor $1
	ld c, a
	jp Func_dfa1

Func_e013: ; e013 (3:6013)
	pop bc
	ret

Func_e015: ; e015 (3:6015)
	add sp, -$14
	push de
	push af
	ld hl, sp+$17
	ld [hl], $0
	ld hl, sp+$16
	ld [hl], $0
	ld hl, sp+$15
	ld [hl], $13
	ld hl, sp+$14
	ld [hl], $11
	ld hl, sp+$4
	reg16swap de, hl
	ld l, $0
Func_e031: ; e031 (3:6031)
	ld a, l
	cp $10
	jp nc, Func_e03f
	ld a, $ff
	ld [de], a
	inc de
	inc l
	jp Func_e031

Func_e03f: ; e03f (3:603f)
	ld bc, $10
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $88e0
	call FarRequestVideoData
	call WaitVideoTransfer
Func_e051: ; e051
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8e00
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$16
	ld e, [hl]
	ld hl, sp+$15
	ld h, [hl]
	ld d, h
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$16
	ld l, [hl]
	ld h, a
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8e00
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$14
	ld e, [hl]
	ld hl, sp+$15
	ld h, [hl]
	ld d, h
	ld hl, sp+$15
	ld a, [hl]
	ld hl, sp+$16
	ld l, [hl]
	ld h, a
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8e00
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$14
	ld e, [hl]
	ld hl, sp+$15
	ld h, [hl]
	ld d, h
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$14
	ld l, [hl]
	ld h, a
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8e00
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$14
	ld e, [hl]
	ld hl, sp+$17
	ld h, [hl]
	ld d, h
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$16
	ld l, [hl]
	ld h, a
	call FarCall
	call WaitVideoTransfer
	ld hl, sp+$17
	ld a, [hl]
	inc a
	ld hl, sp+$17
	ld [hl], a
	ld hl, sp+$15
	ld a, [hl]
	dec a
	ld hl, sp+$15
	ld [hl], a
	ld hl, sp+$15
	ld a, [hl]
	ld hl, sp+$17
	cp [hl]
	jp nc, Func_e121
	ld hl, sp+$17
	ld a, [hl]
	dec a
	ld hl, sp+$17
	ld [hl], a
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$15
	ld [hl], a
Func_e121: ; e121 (3:6121)
	ld hl, sp+$16
	ld a, [hl]
	inc a
	ld hl, sp+$16
	ld [hl], a
	ld hl, sp+$14
	ld a, [hl]
	dec a
	ld hl, sp+$14
	ld [hl], a
	ld hl, sp+$14
	ld a, [hl]
	ld hl, sp+$16
	cp [hl]
	jp nc, Func_e145
	ld hl, sp+$16
	ld a, [hl]
	dec a
	ld hl, sp+$16
	ld [hl], a
	ld hl, sp+$16
	ld a, [hl]
	ld hl, sp+$14
	ld [hl], a
Func_e145: ; e145 (3:6145)
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$15
	cp [hl]
	jp nz, Func_e15a
	ld hl, sp+$16
	ld a, [hl]
	ld hl, sp+$14
	cp [hl]
	jp nz, Func_e15a
	jp Func_e15d

Func_e15a: ; e15a (3:615a)
	jp Func_e051

Func_e15d: ; e15d (3:615d)
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8e00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	xor a
	ld [wSCX2], a
	ld [wSCX], a
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop af
	ld e, a
	xor a
	call Func_dc0a
	pop de
	ld a, $1
	call Func_dc0a
	call FillVisibleAreaWithBlankTile
	ld a, $e4
	ld [wOBP0], a
	ld [wBGP], a
	ld a, $e0
	ld [wOBP1], a
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	ld a, [rLCDC]
	push af
	set_farcall_addrs_hli Func_6183
	pop af
	push af
	and $7f
	call FarCall
	ld bc, $800
	ld e, $8f
	hlbgcoord 0, 0
	call FillMemory
	ld a, [wSystemType]
	cp $11
	jp nz, Func_e20d
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld bc, $800
	ld e, $0
	hlbgcoord 0, 0
	call FillMemory
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_e20d: ; e20d (3:620d)
	set_farcall_addrs_hli Func_6183
	pop af
	call FarCall
	ld a, BANK(GFX_4a02)
	ld [wFarCallDestBank], a
	ld bc, $d0
	ld de, GFX_4a02
	ld hl, $88e0
	call FarRequestVideoData
	call WaitVideoTransfer
	add sp, $14
	ret

Data_e233: ; e233
	db $22, $22, $22, $21, $13, $22
	db $24, $31, $22, $2, $22, $22
	db $21, $42, $4, $22, $22, $22
	db $23, $24, $42, $22, $12, $21
	db $21, $21, $44, $22, $22, $44
	db $22, $12, $44, $22, $23, $10
	db $22, $22, $22, $42, $21, $11
	db $22, $22, $22, $23, $2, $22
	db $22, $22, $22, $20, $32, $22
	db $12, $22, $22, $22, $22, $4
	db $12, $22, $22, $22, $24, $20
	db $12, $22, $12, $22, $20, $22

Data_e27b: ; e27b
	db $0, $2, $0, $0
	db $0, $1, $80, $0
	db $0, $1, $0, $0
	db $0, $0, $80, $0
	db $0, $0, $40, $0

Func_e28f: ; e28f
	push hl
	push de
	push bc
	push bc
	push bc
	ld hl, sp+$2
	ld [hl], $0
Func_e298: ; e298 (3:6298)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_e339
	ld hl, sp+$2
	ld a, [hl]
	add a
	add a
	ld b, a
	call GetHLAtSPPlus10
	call RightShiftHL
	ld a, l
	and $f
	ld l, a
	ld h, $0
	ld a, l
	or a
	jp z, Func_e32f
	dec a
	push af
	ld l, a
	ld h, $0
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_e233
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$3
	ld [hl], a
	pop af
	and $1
	jp z, Func_e2e8
	ld hl, sp+$1
	ld a, [hl]
	and $f
	ld hl, sp+$1
	ld [hl], a
	jp Func_e2f4

Func_e2e8: ; e2e8 (3:62e8)
	ld hl, sp+$1
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	ld hl, sp+$1
	ld [hl], a
Func_e2f4: ; e2f4 (3:62f4)
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_e313
	call GetHLAtSPPlus6
	push hl
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_e27b
	add hl, de
	pop de
	call Func_fddb
	cp $ff
	jp nz, Func_e32f
Func_e313: ; e313 (3:6313)
	ld bc, $4
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_e27b
	add hl, de
	push hl
	call GetHLAtSPPlus8
	pop de
	call CopyFromDEtoHL
	ld hl, sp+$1
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
Func_e32f: ; e32f (3:632f)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_e298

Func_e339: ; e339 (3:6339)
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_e342: ; e342
	db $0, $0, $0, $0
	db $0, $0, $99, $99
	db $0, $0, $c0, $0
	db $0, $0, $e6, $66
	db $0, $1, $1, $c
	db $0, $1, $33, $33
	db $0, $1, $1, $59
	db $0, $1, $80, $0
	db $0, $0, $80, $0
	db $0, $0, $99, $99
	db $0, $0, $b3, $33
	db $0, $0, $cc, $cc
	db $0, $0, $e6, $66
	db $0, $1, $0, $0
	db $0, $1, $19, $99
	db $0, $1, $33, $33
	db $0, $1, $4c, $cc
	db $0, $1, $66, $66
	db $0, $1, $80, $0
	db $0, $1, $99, $99
	db $0, $1, $b3, $33
	db $0, $1, $cc, $cc

Func_e39a: ; e39a
	push de
	push bc
	push bc
	ld hl, sp+$0
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_e342
	add hl, de
	pop de
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$1
	ld l, [hl]
	ld h, a
	pop bc
	pop bc
	pop bc
	ret

Func_e3bd: ; e3bd
	push hl
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	ret

Func_e3d1: ; e3d1
	push hl
	push bc
	call GetHLAtSPPlus4
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus4
	push af
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld hl, sp+$2
	ld [hl], a
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_e408
	ld a, $c
	ld hl, sp+$3
	sub [hl]
	ld hl, sp+$3
	ld [hl], a
Func_e408: ; e408 (3:6408)
	set_farcall_addrs_hli Func_7c8a
	pop af
	push af
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, a
	ld d, $0
	ld a, l
	xor e
	ld l, a
	ld a, h
	xor d
	ld h, a
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	ld c, $2
	call FarCall
	pop af
	push af
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, a
	ld d, $0
	ld a, l
	xor e
	ld l, a
	ld a, h
	xor d
	ld h, a
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	pop de
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, a
	ld d, $0
	ld a, l
	xor e
	ld l, a
	ld a, h
	xor d
	ld h, a
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	pop de
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	pop bc
	pop bc
	ret

Func_e4b4: ; e4b4
	push af
	ld a, [wSystemType]
	cp $11
	jp nz, Func_e4ce
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_e4c9
	ld a, $2
	jp Func_e4cf

Func_e4c9: ; e4c9 (3:64c9)
	ld a, $3
	jp Func_e4cf

Func_e4ce: ; e4ce (3:64ce)
	xor a
Func_e4cf: ; e4cf (3:64cf)
	pop bc
	ret

Func_e4d1: ; e4d1 (3:64d1)
	push hl
	push bc
	push bc
	push bc
	call GetHLAtSPPlus8
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus8
	ld hl, sp+$5
	ld [hl], a
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld [hl], a
	ld hl, sp+$5
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	xor [hl]
	call Func_e4b4
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld [hl], a
	ld hl, $8000
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	ld a, l
	xor e
	ld l, a
	ld a, h
	xor d
	ld h, a
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, bc
	ld c, l
	ld b, h
	ld l, $0
Func_e538: ; e538 (3:6538)
	ld a, l
	cp $8
	jp nc, Func_e5b7
	xor a
Func_e53f: ; e53f (3:653f)
	cp $8
	jp nc, Func_e5b0
	push hl
	push af
	push bc
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, bc
	ld e, a
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8000
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus10
	ld e, c
	ld d, b
	ld bc, $10
	call RequestVideoData
	call GetHLAtSPPlus10
	ld de, $10
	add hl, de
	call WriteHLToSPPlus10
	pop bc
	pop af
	pop hl
	push hl
	push bc
	push af
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8
	add hl, de
	add hl, bc
	ld e, a
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $8000
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus10
	ld e, c
	ld d, b
	ld bc, $10
	call RequestVideoData
	call GetHLAtSPPlus10
	ld de, $10
	add hl, de
	call WriteHLToSPPlus10
	pop af
	inc a
	pop bc
	pop hl
	jp Func_e53f

Func_e5b0: ; e5b0 (3:65b0)
	ld a, l
	add $2
	ld l, a
	jp Func_e538

Func_e5b7: ; e5b7 (3:65b7)
	call GetHLAtSPPlus8
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus8
	ld l, a
	ld h, $0
	pop de
	push hl
	call GetHLAtSPPlus8
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus8
	ld l, a
	ld h, $0
	ld c, l
	ld b, h
	pop hl
	push hl
	ld de, $80
	call CompareHLtoDE
	jp c, Func_e5e1
	pop hl
	push hl
	dec h
	pop de
	push hl
Func_e5e1: ; e5e1 (3:65e1)
	ld l, c
	ld h, b
	ld de, $80
	call CompareHLtoDE
	jp c, Func_e5ed
	dec b
Func_e5ed: ; e5ed (3:65ed)
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_e608
	pop hl
	push hl
	ld de, $c
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	pop de
	push hl
Func_e608: ; e608 (3:6608)
	pop hl
	push hl
	add hl, hl
	add hl, hl
	add hl, hl
	pop de
	push hl
	ld l, c
	ld h, b
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	push bc
	call GetHLAtSPPlus4
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld a, e
	xor l
	ld l, a
	ld a, d
	xor h
	ld h, a
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	pop de
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	ld a, e
	xor l
	ld l, a
	ld a, d
	xor h
	ld h, a
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	pop de
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, wOAMBuffer
	reg16swap de, hl
	ld hl, sp+$6
	ld [hl], $0
Func_e675: ; e675 (3:6675)
	ld hl, sp+$6
	ld a, [hl]
	cp $4
	jp nc, Func_e6a4
	ld c, $0
Func_e67f: ; e67f (3:667f)
	ld a, c
	cp $8
	jp nc, Func_e69a
	ld hl, sp+$6
	ld a, [hl]
	add a
	add a
	add a
	add c
	add a
	ld l, e
	ld h, d
	inc hl
	inc hl
	ld [hl], a
	inc c
	inc de
	inc de
	inc de
	inc de
	jp Func_e67f

Func_e69a: ; e69a (3:669a)
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
	jp Func_e675

Func_e6a4: ; e6a4 (3:66a4)
	pop bc
	pop hl
	push hl
	ld e, c
	ld d, b
	call Func_de2c
	call WaitVideoTransfer
	call GetHLAtSPPlus8
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_e6b7: ; e6b7
	push bc
	ld a, [hl]
	inc hl
	push hl
	push af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	ld a, l
	xor e
	ld l, a
	ld a, h
	xor d
	ld h, a
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	pop de
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, $8
	call DivideHLByDESigned
	ld a, l
	ld hl, sp+$4
	ld [hl], a
	pop af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	ld a, l
	xor e
	ld l, a
	ld a, h
	xor d
	ld h, a
	add hl, hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	pop de
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, $8
	call DivideHLByDESigned
	ld c, l
	push bc
	set_farcall_addrs_hli Func_667d
	pop bc
	push bc
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $700
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld de, $7
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	ld a, [hl]
	ld l, c
	ld h, a
	ld bc, $8f02
	call FarCall
	pop bc
	ld a, [wSystemType]
	cp $11
	jp nz, Func_e784
	push bc
	set_farcall_addrs_hli Func_667d
	pop bc
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $700
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld de, $7
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld a, [hl]
	ld l, c
	ld h, a
	ld bc, $3
	call FarCall
Func_e784: ; e784 (3:6784)
	pop hl
	pop bc
	ret

Func_e787: ; e787
	push hl
	call ClearSprites
	pop hl
	ret

Func_e78d: ; e78d
	push hl
	push bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld l, a
	ld h, $0
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $80
	call CompareHLtoDE
	jp c, Func_e7b1
	call GetHLAtSPPlus4
	dec h
	call WriteHLToSPPlus4
Func_e7b1: ; e7b1 (3:67b1)
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	push af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_e7d5
	call GetHLAtSPPlus6
	ld a, l
	cpl
	ld l, a
	ld a, h
	cpl
	ld h, a
	inc hl
	call WriteHLToSPPlus6
Func_e7d5: ; e7d5 (3:67d5)
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop af
Func_e836: ; e836 (3:6836)
	cp $1
	jp c, Func_e862
	push bc
	push af
	call GetHLAtSPPlus6
	ld e, c
	ld d, b
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop af
	dec a
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call WriteHLToSPPlus4
	pop bc
	jp Func_e836

Func_e862: ; e862 (3:6862)
	pop hl
	push hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	pop bc
	pop bc
	pop bc
	ret

Func_e89b: ; e89b
	push hl
	push bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld l, a
	ld h, $0
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld de, $80
	call CompareHLtoDE
	jp c, Func_e8bf
	call GetHLAtSPPlus4
	dec h
	call WriteHLToSPPlus4
Func_e8bf: ; e8bf (3:68bf)
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	push af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop bc
	pop af
Func_e92b: ; e92b (3:692b)
	cp $1
	jp c, Func_e95b
	push bc
	push af
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop af
	dec a
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call WriteHLToSPPlus4
	pop bc
	jp Func_e92b

Func_e95b: ; e95b (3:695b)
	pop hl
	push hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	pop bc
	pop bc
	pop bc
	ret

Func_e994: ; e994
	push hl
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld a, $20
	xor [hl]
	ld [hl], a
	pop hl
	ret

Func_e9a4: ; e9a4
	push hl
	set_farcall_addrs_hli Func_6938
	ld c, $67
	ld e, $28
	ld hl, $14
	call FarCall
	pop hl
	ret

Func_e9bc: ; e9bc
	push hl
	set_farcall_addrs_hli Func_68fd
	ld c, $68
	ld e, $28
	ld hl, $2710
	call FarCall
	pop hl
	ret

Func_e9d4: ; e9d4
	push hl
	push bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld l, a
	ld h, $0
	call WriteHLToSPPlus4
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld l, a
	ld h, $0
	pop de
	push hl
	call GetHLAtSPPlus4
	ld de, $80
	call CompareHLtoDE
	jp c, Func_ea05
	call GetHLAtSPPlus4
	dec h
	call WriteHLToSPPlus4
Func_ea05: ; ea05 (3:6a05)
	pop hl
	push hl
	ld de, $80
	call CompareHLtoDE
	jp c, Func_ea15
	pop hl
	push hl
	dec h
	pop de
	push hl
Func_ea15: ; ea15 (3:6a15)
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_ea32
	call GetHLAtSPPlus4
	ld de, $c
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	call WriteHLToSPPlus4
Func_ea32: ; ea32 (3:6a32)
	call GetHLAtSPPlus4
	add hl, hl
	add hl, hl
	add hl, hl
	call WriteHLToSPPlus4
	pop hl
	push hl
	add hl, hl
	add hl, hl
	add hl, hl
	pop de
	push hl
	call GetHLAtSPPlus4
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop hl
	push hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call Func_de2c
	call GetHLAtSPPlus6
	pop bc
	pop bc
	pop bc
	ret

Func_eab8: ; eab8
	push hl
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld a, $40
	xor [hl]
	ld [hl], a
	pop hl
	ret

Func_eac8: ; eac8
	push hl
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld a, $80
	xor [hl]
	ld [hl], a
	pop hl
	ret

Func_ead8: ; ead8
	push hl
	xor a
	call Func_df28
	pop hl
	ret

Func_eadf: ; eadf
	push hl
	ld a, $1
	call Func_df28
	pop hl
	ret

Func_eae7: ; eae7 (3:6ae7)
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	ld c, $0
Func_eaf5: ; eaf5 (3:6af5)
	ld a, c
	cp $4
	jp nc, Func_eb15
	push hl
	ld a, [hl]
	and $3
	ld l, a
	ld a, $4
	sub l
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld [hl], a
	pop hl
	ld a, [hl]
	rrca
	rrca
	and $3f
	ld [hl], a
	inc c
	jp Func_eaf5

Func_eb15: ; eb15 (3:6b15)
	inc hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	reg16swap de, hl
	push de
	read_hl_from wCurRobotPointer
	ld de, $24a
	add hl, de
	call WriteHLToSPPlus7
	xor a
	pop de
Func_eb33: ; eb33 (3:6b33)
	cp $8
	jp nc, Func_ec10
	push af
	ld c, $0
Func_eb3b: ; eb3b (3:6b3b)
	ld a, c
	cp $4
	jp nc, Func_ec0b
	push bc
	push de
	reg16swap de, hl
	ld a, [hl]
	and $1f
	ld e, a
	inc hl
	ld d, $0
	ld hl, sp+$8
	ld [hl], e
	pop de
	push de
	ld l, e
	ld h, d
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $5
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	push af
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $a
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	ld e, c
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $d
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $d
	ld b, $5
	call LeftShiftPointer
	pop af
	pop de
	pop bc
	push de
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	read_hl_from_sp_plus $b
	ld b, $5
	call LeftShiftPointer
	pop bc
	pop de
	push bc
	push de
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	read_hl_from_sp_plus $b
	inc hl
	inc hl
	write_hl_to_sp_plus $b
	pop de
	inc de
	inc de
	pop bc
	inc c
	jp Func_eb3b

Func_ec0b: ; ec0b (3:6c0b)
	pop af
	inc a
	jp Func_eb33

Func_ec10: ; ec10 (3:6c10)
	pop hl
	push de
	ld c, $0
Func_ec14: ; ec14 (3:6c14)
	ld a, c
	cp $4
	jp nc, Func_ec34
	push hl
	ld a, [hl]
	and $3
	ld l, a
	ld a, $4
	sub l
	ld e, c
	ld d, $0
	ld hl, sp+$7
	add hl, de
	ld [hl], a
	pop hl
	ld a, [hl]
	rrca
	rrca
	and $3f
	ld [hl], a
	inc c
	jp Func_ec14

Func_ec34: ; ec34 (3:6c34)
	inc hl
	xor a
	pop de
	push hl
Func_ec38: ; ec38 (3:6c38)
	cp $8
	jp nc, Func_ed15
	push af
	ld c, $0
Func_ec40: ; ec40 (3:6c40)
	ld a, c
	cp $4
	jp nc, Func_ed10
	push bc
	push de
	reg16swap de, hl
	ld a, [hl]
	and $1f
	ld e, a
	inc hl
	ld d, $0
	ld hl, sp+$8
	ld [hl], e
	pop de
	push de
	ld l, e
	ld h, d
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $5
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	push af
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $a
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	ld e, c
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $d
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $d
	ld b, $5
	call LeftShiftPointer
	pop af
	pop de
	pop bc
	push de
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	read_hl_from_sp_plus $b
	ld b, $5
	call LeftShiftPointer
	pop bc
	pop de
	push bc
	push de
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	read_hl_from_sp_plus $b
	inc hl
	inc hl
	write_hl_to_sp_plus $b
	pop de
	inc de
	inc de
	pop bc
	inc c
	jp Func_ec40

Func_ed10: ; ed10 (3:6d10)
	pop af
	inc a
	jp Func_ec38

Func_ed15: ; ed15 (3:6d15)
	ld c, $0
	pop hl
Func_ed18: ; ed18 (3:6d18)
	ld a, c
	cp $4
	jp nc, Func_ed38
	push hl
	ld a, [hl]
	and $3
	ld l, a
	ld a, $4
	sub l
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld [hl], a
	pop hl
	ld a, [hl]
	rrca
	rrca
	and $3f
	ld [hl], a
	inc c
	jp Func_ed18

Func_ed38: ; ed38 (3:6d38)
	inc hl
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	reg16swap de, hl
	push de
	read_hl_from wCurRobotPointer
	ld de, $2ca
	add hl, de
	call WriteHLToSPPlus7
	xor a
	pop de
Func_ed56: ; ed56 (3:6d56)
	cp $8
	jp nc, Func_ee33
	push af
	ld c, $0
Func_ed5e: ; ed5e (3:6d5e)
	ld a, c
	cp $4
	jp nc, Func_ee2e
	push bc
	push de
	reg16swap de, hl
	ld a, [hl]
	and $1f
	ld e, a
	inc hl
	ld d, $0
	ld hl, sp+$8
	ld [hl], e
	pop de
	push de
	ld l, e
	ld h, d
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $5
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	push af
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $a
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	ld e, c
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $d
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $d
	ld b, $5
	call LeftShiftPointer
	pop af
	pop de
	pop bc
	push de
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	read_hl_from_sp_plus $b
	ld b, $5
	call LeftShiftPointer
	pop bc
	pop de
	push bc
	push de
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	read_hl_from_sp_plus $b
	inc hl
	inc hl
	write_hl_to_sp_plus $b
	pop de
	inc de
	inc de
	pop bc
	inc c
	jp Func_ed5e

Func_ee2e: ; ee2e (3:6e2e)
	pop af
	inc a
	jp Func_ed56

Func_ee33: ; ee33 (3:6e33)
	pop hl
	push de
	ld c, $0
Func_ee37: ; ee37 (3:6e37)
	ld a, c
	cp $4
	jp nc, Func_ee57
	push hl
	ld a, [hl]
	and $3
	ld l, a
	ld a, $4
	sub l
	ld e, c
	ld d, $0
	ld hl, sp+$7
	add hl, de
	ld [hl], a
	pop hl
	ld a, [hl]
	rrca
	rrca
	and $3f
	ld [hl], a
	inc c
	jp Func_ee37

Func_ee57: ; ee57 (3:6e57)
	xor a
	pop de
Func_ee59: ; ee59 (3:6e59)
	cp $8
	jp nc, Func_ef31
	push af
	ld c, $0
Func_ee61: ; ee61 (3:6e61)
	ld a, c
	cp $4
	jp nc, Func_ef2c
	push bc
	push de
	reg16swap de, hl
	ld a, [hl]
	and $1f
	ld e, a
	inc hl
	ld d, $0
	ld hl, sp+$6
	ld [hl], e
	pop de
	push de
	ld l, e
	ld h, d
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $5
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	push af
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $a
	call RightShiftHL
	ld a, l
	and $1f
	ld l, a
	ld h, $0
	ld a, l
	ld e, c
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $b
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $b
	ld b, $5
	call LeftShiftPointer
	pop af
	pop de
	pop bc
	push de
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus9
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	call GetHLAtSPPlus9
	ld b, $5
	call LeftShiftPointer
	pop bc
	pop de
	push bc
	push de
	ld e, c
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus9
	ld a, [hl]
	or c
	ld [hl], a
	inc hl
	ld a, [hl]
	or b
	ld [hl], a
	call GetHLAtSPPlus9
	inc hl
	inc hl
	call WriteHLToSPPlus9
	pop de
	inc de
	inc de
	pop bc
	inc c
	jp Func_ee61

Func_ef2c: ; ef2c (3:6f2c)
	pop af
	inc a
	jp Func_ee59

Func_ef31: ; ef31 (3:6f31)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_ef36: ; ef36
	ld a, [wNextVBlankFlags]
	and $40
	jp z, Func_ef3f
	ret

Func_ef3f: ; ef3f (3:6f3f)
	read_hl_from wCurRobotPointer
	inc hl
	ld a, $1
	add [hl]
	ld [hl], a
	read_hl_from wCurRobotPointer
	cp [hl]
	jp nc, Func_ef53
	ret

Func_ef53: ; ef53 (3:6f53)
	read_hl_from wCurRobotPointer
	inc hl
	ld [hl], $0
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	ld a, [hl]
	or a
	jp nz, Func_ef80
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $24a
	add hl, de
	reg16swap de, hl
	ld hl, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	jp Func_ef96

Func_ef80: ; ef80 (3:6f80)
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $2ca
	add hl, de
	reg16swap de, hl
	ld hl, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
Func_ef96: ; ef96 (3:6f96)
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	ld a, $1
	xor [hl]
	ld [hl], a
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
	ret

Func_efaa: ; efaa
	push hl
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld [hl], a
	read_hl_from wCurRobotPointer
	inc hl
	ld [hl], $0
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	ld [hl], $0
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	ld [hl], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $5
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $6
	add hl, de
	ld [hl], a
	ld a, [wSystemType]
	cp $11
	jp nz, Func_f049
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	ld de, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	call Func_eae7
	call WaitVideoTransfer
	ld a, $2
	ld [wc24d], a
	ld a, $3
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, $6f36
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
	jp Func_f063

Func_f049: ; f049 (3:7049)
	ld a, BANK(DoFlashProgram)
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, DoFlashProgram
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
Func_f063: ; f063 (3:7063)
	pop hl
	push hl
	pop bc
	ret

Func_f067: ; f067
	push hl
	ld a, [wSystemType]
	cp $11
	jp nz, Func_f0b2
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	xor a
	ld [wc2e8], a
Func_f07c: ; f07c (3:707c)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_f07c
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	reg16swap de, hl
	ld hl, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
Func_f0a2: ; f0a2 (3:70a2)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_f0a2
	ld a, $4
	ld [wc24d], a
	jp Func_f0cd

Func_f0b2: ; f0b2 (3:70b2)
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	ld a, $e4
	ld [wOBP0], a
	ld [wBGP], a
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
Func_f0cd: ; f0cd (3:70cd)
	pop hl
	ret

Func_f0cf: ; f0cf (3:70cf)
	ld a, [hl]
	inc hl
	push hl
	push af
	ld a, [wLCDC]
	ld e, a
	push de
	ld a, [rIE]
	ld l, a
	push hl
	ld a, [wLCDC]
	and $fb
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	call DisableHBlank
	set_farcall_addrs_hli Func_da729
	pop hl
	pop de
	pop af
	push hl
	push de
	push af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld e, [hl]
	call FarCall
	pop af
	push hl
	push af
	set_farcall_addrs_hli Func_e2bf8
	pop af
	call FarCall
Func_f122: ; f122 (3:7122)
	call Func_0451
	callba_hli Func_e2c29
	set_farcall_addrs_hli Func_da093
	xor a
	call FarCall
	or a
	jp nz, Func_f149
	jp Func_f15a

Func_f149: ; f149 (3:7149)
	callba_hli Func_d9f55
	jp Func_f122

Func_f15a: ; f15a (3:715a)
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop de
	ld a, e
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop hl
	ld a, l
	and $2
	jp z, Func_f191
	call EnableHBlank
Func_f191: ; f191 (3:7191)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop hl
	ret

Func_f19f: ; f19f
	push hl
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	ld l, a
	ld h, $0
	ld de, $9c
	call MultiplyHLbyDE
	call Func_ddc2
	pop hl
	push hl
	pop bc
	ret

Func_f1b6: ; f1b6
	push hl
	read_hl_from wCurRobotPointer
	ld de, $7
	add hl, de
	ld [hl], $0
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $8
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $9
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $a
	add hl, de
	ld [hl], a
	ld a, BANK(DoShakeProgram)
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, DoShakeProgram
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
	pop hl
	push hl
	pop bc
	ret

Func_f210: ; f210
	push hl
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop hl
	ret

Func_f233: ; f233 (3:7233)
	push bc
	ld bc, wCGB_BGPalsBuffer
	read_hl_from wCurRobotPointer
	ld de, $24a
	add hl, de
	pop de
	push hl
	xor a
Func_f243: ; f243 (3:7243)
	cp $40
	jp nc, Func_f29b
	push af
	push bc
	ld l, c
	ld h, b
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $a
	call RightShiftHL
	ld a, l
	and $1f
	ld c, a
	ld b, $0
	call GetHLAtSPPlus6
	ld [hl], c
	inc hl
	call WriteHLToSPPlus6
	pop bc
	push bc
	ld l, c
	ld h, b
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $5
	call RightShiftHL
	ld a, l
	and $1f
	ld c, a
	ld b, $0
	call GetHLAtSPPlus6
	ld [hl], c
	inc hl
	call WriteHLToSPPlus6
	pop bc
	pop af
	push bc
	push af
	ld l, c
	ld h, b
	ld a, [hl]
	and $1f
	ld c, a
	inc hl
	ld b, $0
	call GetHLAtSPPlus6
	ld [hl], c
	inc hl
	call WriteHLToSPPlus6
	pop af
	inc a
	pop bc
	inc bc
	inc bc
	jp Func_f243

Func_f29b: ; f29b (3:729b)
	pop bc
	ret

Func_f29d: ; f29d
	push hl
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld [hl], a
	read_hl_from wCurRobotPointer
	inc hl
	ld [hl], $0
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	ld [hl], $0
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	ld [hl], $1
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $5
	add hl, de
	ld [hl], a
	ld a, [wSystemType]
	or a
	jp z, Func_f31b
	cp $ff
	jp z, Func_f31b
	cp $1
	jp z, Func_f31b
	cp $11
	jp nz, Func_f335
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	ld de, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	call Func_f233
	call WaitVideoTransfer
	ld a, $2
	ld [wc24d], a
	ld a, $1
	ld [wc2e8], a
	jp Func_f335

Func_f31b: ; f31b (3:731b)
	ld a, $1
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, $6a16
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
Func_f335: ; f335 (3:7335)
	pop hl
	push hl
	pop bc
	ret

Func_f339: ; f339
	push hl
	ld a, [wSystemType]
	cp $11
	jp nz, Func_f358
	xor a
	ld [wc2e8], a
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	ld [hl], $ff
	ld a, $1
	ld [wc2e8], a
	jp Func_f375

Func_f358: ; f358 (3:7358)
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	ld [hl], $ff
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
Func_f375: ; f375 (3:7375)
	pop hl
	ret

Func_f377: ; f377
	push hl
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $ff
	jp nz, Func_f395
Func_f386: ; f386 (3:7386)
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	ld a, [hl]
	or a
	jp z, Func_f3a2
	jp Func_f386

Func_f395: ; f395 (3:7395)
	read_hl_from wCurRobotPointer
	inc hl
	inc hl
	ld a, [hl]
	cp $10
	jp nz, Func_f395
Func_f3a2: ; f3a2 (3:73a2)
	pop hl
	ret

Func_f3a4: ; f3a4
	push hl
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	ld l, a
	xor a
Func_f3ad: ; f3ad (3:73ad)
	cp l
	jp nc, Func_f3bc
	push hl
	push af
	call Func_0451
	pop af
	inc a
	pop hl
	jp Func_f3ad

Func_f3bc: ; f3bc (3:73bc)
	pop hl
	push hl
	pop bc
	ret

Func_f3c0: ; f3c0
	push hl
	ld hl, Data_c009
	call Func_f723
	pop hl
	ret

Func_f3c9: ; f3c9
	push hl
	ld hl, Data_c016
	call Func_f723
	pop hl
	ret

Func_f3d2: ; f3d2
	push hl
	push bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	push af
	call GetHLAtSPPlus8
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus8
	ld l, a
	ld h, $0
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus8
	ld l, a
	ld h, $0
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld de, $80
	call CompareHLtoDE
	jp c, Func_f40c
	call GetHLAtSPPlus6
	dec h
	call WriteHLToSPPlus6
Func_f40c: ; f40c (3:740c)
	ld l, c
	ld h, b
	ld de, $80
	call CompareHLtoDE
	jp c, Func_f418
	dec b
Func_f418: ; f418 (3:7418)
	push bc
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_f434
	call GetHLAtSPPlus8
	ld a, l
	cpl
	ld l, a
	ld a, h
	cpl
	ld h, a
	inc hl
	call WriteHLToSPPlus8
Func_f434: ; f434 (3:7434)
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	pop bc
	pop af
Func_f496: ; f496 (3:7496)
	cp $1
	jp c, Func_f4ea
	push de
	push af
	push bc
	reg16swap de, hl
	add hl, bc
	push hl
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $c
	pop de
	add hl, de
	pop de
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	xor a
Func_f4bf: ; f4bf (3:74bf)
	cp $2
	jp nc, Func_f4cd
	push af
	call Func_0451
	pop af
	inc a
	jp Func_f4bf

Func_f4cd: ; f4cd (3:74cd)
	call GetHLAtSPPlus10
	ld a, l
	cpl
	ld l, a
	ld a, h
	cpl
	ld h, a
	inc hl
	call WriteHLToSPPlus10
	pop bc
	ld a, c
	cpl
	ld l, a
	ld a, b
	cpl
	ld h, a
	inc hl
	ld c, l
	ld b, h
	pop af
	dec a
	pop de
	jp Func_f496

Func_f4ea: ; f4ea (3:74ea)
	call GetHLAtSPPlus6
	pop bc
	pop bc
	pop bc
	ret

Func_f4f1: ; f4f1
	ld a, [hl]
	inc hl
	push hl
	push af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	pop bc
	pop af
Func_f554: ; f554 (3:7554)
	cp $1
	jp c, Func_f5c5
	push af
	push bc
	push de
	ld hl, $8
	add hl, bc
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop de
	pop bc
	push bc
	push de
	ld hl, -8
	add hl, de
	reg16swap de, hl
	ld hl, $8
	add hl, bc
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop de
	pop bc
	push bc
	push de
	ld hl, -8
	add hl, de
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop de
	pop bc
	pop af
	push bc
	push de
	push af
	ld l, c
	ld h, b
	call Func_de2c
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call DelayFrames_NoHalt
	pop af
	dec a
	pop de
	pop bc
	jp Func_f554

Func_f5c5: ; f5c5 (3:75c5)
	pop hl
	ret

Func_f5c7: ; f5c7
	push hl
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	ld c, a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	ld l, a
Func_f5d6: ; f5d6 (3:75d6)
	ld a, c
	cp $1
	jp c, Func_f5f5
	push hl
	push bc
	ld h, $0
	add hl, hl
	ld de, Data_c6e1
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_f723
	pop bc
	dec c
	pop hl
	jp Func_f5d6

Func_f5f5: ; f5f5 (3:75f5)
	pop hl
	push hl
	pop bc
	ret

Func_f5f9: ; f5f9
	push hl
	set_farcall_addrs_hli Func_6a77
	pop hl
	push hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call FarCall
	pop hl
	inc hl
	inc hl
	ret

Func_f612: ; f612
	push hl
.loop
	call CheckSFXFinished
	or a
	jp nz, .loop
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	call OverworldPlaySFX
	pop hl
	push hl
	pop bc
	ret

Func_f627: ; f627
	ld a, [hl]
	inc hl
	ld [wc318], a
	ret

Func_f62d: ; f62d
	push hl
	pop hl
	push hl
	ld a, [hl]
	inc hl
	pop de
	push hl
	call OverworldPlaySong
	pop hl
	push hl
	pop bc
	ret

Func_f63b: ; f63b
	push hl
	ld a, [wSystemType]
	cp $1
	jp z, Func_f64c
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_f660
Func_f64c: ; f64c (3:764c)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_f660: ; f660 (3:7660)
	pop hl
	ret

Func_f662: ; f662
	push hl
	ld a, [wSystemType]
	cp $1
	jp z, Func_f673
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_f687
Func_f673: ; f673 (3:7673)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $3
	ld a, $2
	call FarCall
Func_f687: ; f687 (3:7687)
	pop hl
	ret

Func_f689: ; f689
	push hl
	ld e, $0
	xor a
	call SetStringStartState
	ld hl, Data_f6cb
	push hl
	call PlaceString
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
.asm_f69e
	xor a
	call Func_3bc5
	pop bc
	xor a
	ld [wJoyHeld], a
Func_f6a8: ; f6a8 (3:76a8)
	call NextOverworldFrame
	or a
	jp z, Func_f6a8
	ld e, $0
	xor a
	call SetStringStartState
	ld hl, Data_f6d1
	push hl
	call PlaceString
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop hl
	ret

Data_f6cb: ; f6cb
	db "キー マチ", $0

Data_f6d1: ; f6d1
	db "     ", $0

Pointers_f6d7: ; f6d7
	dw $0
	dw Func_e3bd
	dw Func_e3d1
	dw Func_e4d1
	dw Func_e6b7
	dw Func_e787
	dw Func_e78d
	dw Func_e89b
	dw Func_e994
	dw Func_e9a4
	dw Func_e9bc
	dw Func_e9d4
	dw Func_eab8
	dw Func_eac8
	dw Func_ead8
	dw Func_eadf
	dw Func_efaa
	dw Func_f067
	dw Func_f0cf
	dw Func_f19f
	dw Func_f1b6
	dw Func_f210
	dw Func_f29d
	dw Func_f339
	dw Func_f377
	dw Func_f3a4
	dw Func_f3c0
	dw Func_f3c9
	dw Func_f3d2
	dw Func_f4f1
	dw Func_f5c7
	dw Func_f5f9
	dw Func_f612
	dw Func_f627
	dw Func_f62d
	dw Func_f63b
	dw Func_f662
	dw Func_f689

Func_f723: ; f723 (3:7723)
	push hl
.loop
	pop hl
	push hl
	ld a, [hl]
	or a
	jp z, Func_f748
	ld hl, .Return
	push hl
	call GetHLAtSPPlus4
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_f6d7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus6
	inc hl
	ret

.Return
	pop de
	push hl
	jp .loop

Func_f748: ; f748 (3:7748)
	pop bc
	ret

Data_f74a: ; f74a
	dr $f74a, $f752

Data_f752: ; f752
	dr $f752, $f758

Data_f758: ; f758
	dr $f758, $f771

Func_f771: ; f771
	ld hl, -$ee
	add hl, sp
	ld sp, hl
	ld hl, $e5
	add hl, sp
	reg16swap de, hl
	ld hl, Data_f74a
	ld bc, $8
	call MemCopy
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	write_hl_to_sp_plus $e4
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_f752
	ld bc, $6
	call MemCopy
	ld hl, sp+$6
	pop de
	push hl
	ld hl, Data_f758
	call WriteHLToSPPlus4
	ld hl, $0
	call WriteHLToSPPlus6
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	xor a
Func_f7c3: ; f7c3 (3:77c3)
	cp $4
	jp nc, Func_f7fd
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$57
	add hl, de
	push hl
	ld l, a
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call MemCopy
	pop af
	inc a
	jp Func_f7c3

Func_f7fd: ; f7fd (3:77fd)
	pop af
	call GetSRAMBank
	read_hl_from_sp_plus $e4
	ld de, $b
	add hl, de
	ld c, l
	ld b, h
	push bc
	read_hl_from_sp_plus $e6
	ld de, $5
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $e6
	ld de, $6
	add hl, de
	ld e, [hl]
	call Func_e015
	read_hl_from_sp_plus $e6
	ld de, $27
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, .skip_music
.loop
	call CheckSongFinished
	or a
	jp nz, .loop
	ld a, SONG_TRAINER_BATTLE
	call OverworldPlaySong
.skip_music
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_c896
	ld hl, $e7
	add hl, sp
	write_hl_to_sp_plus $e3
	ld hl, $e3
	add hl, sp
	ld [hl], $0
Func_f86a: ; f86a (3:786a)
	ld hl, $e3
	add hl, sp
	ld a, [hl]
	cp $4
	jp nc, Func_f91d
	ld hl, $e3
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$55
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_f906
	ld e, a
	dec e
	ld hl, sp+$26
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6adb3
	ld hl, $e3
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$55
	add hl, de
	ld de, $1f
	add hl, de
	ld e, [hl]
	ld hl, sp+$2b
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $e3
	ld [hl], a
	ld hl, $e3
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$55
	add hl, de
	inc hl
	reg16swap de, hl
	ld hl, sp+$8
	call LiteralStringInTree
	ld hl, sp+$8
	push hl
	ld hl, $e5
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $302
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
Func_f906: ; f906 (3:7906)
	ld hl, $e3
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $e3
	add hl, sp
	ld [hl], a
	read_hl_from_sp_plus $e3
	inc hl
	write_hl_to_sp_plus $e3
	jp Func_f86a

Func_f91d: ; f91d (3:791d)
	xor a
	pop bc
Func_f91f: ; f91f (3:791f)
	read_hl_from_sp_plus $e4
	inc hl
	inc hl
	inc hl
	cp [hl]
	jp nc, Func_f980
	push bc
	push af
	ld a, [bc]
	ld e, a
	ld hl, sp+$28
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6adb3
	ld hl, sp+$53
	ld e, [hl]
	ld hl, sp+$2d
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $e5
	ld [hl], a
	ld hl, sp+$35
	reg16swap de, hl
	ld hl, sp+$a
	call LiteralStringInTree
	pop af
	push af
	ld hl, sp+$a
	push hl
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $c02
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop af
	inc a
	pop bc
	ld hl, $7
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from_sp_plus $e1
	inc hl
	write_hl_to_sp_plus $e1
	jp Func_f91f

Func_f980: ; f980 (3:7980)
	call ClearSprites
	ld hl, $e5
	add hl, sp
	reg16swap de, hl
	xor a
	ld hl, $e4
	add hl, sp
	ld [hl], a
Func_f991: ; f991 (3:7991)
	cp $8
	jp nc, Func_f9d2
	push af
	ld a, [de]
	cp $ff
	jp z, Func_f9cc
	push de
	set_farcall_addrs_hli LoadSpriteGFX
	pop de
	push de
	ld a, [de]
	ld e, a
	ld d, $0
	ld hl, $e8
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $e8
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld e, $0
	ld c, $4
	call FarCall
	pop de
Func_f9cc: ; f9cc (3:79cc)
	pop af
	inc a
	inc de
	jp Func_f991

Func_f9d2: ; f9d2 (3:79d2)
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	ld hl, $e5
	add hl, sp
	ld c, l
	ld b, h
	ld e, $0
	ld hl, $e4
	add hl, sp
	ld [hl], e
Func_f9ee: ; f9ee (3:79ee)
	ld a, e
	cp $8
	jp nc, Func_fa45
	push bc
	ld a, [bc]
	cp $ff
	jp z, Func_fa3f
	push de
	ld a, e
	ld b, $4
	call DivideAbyB
	add a
	add a
	add a
	add a
	add a
	add a
	add a
	add $10
	ld l, a
	pop de
	push de
	push hl
	ld a, e
	and $3
	add a
	add a
	add a
	ld d, a
	add a
	add d
	add $18
	push af
	set_farcall_addrs_hli UpdateCurSprite
	pop af
	pop hl
	ld d, l
	ld e, a
	ld hl, $e8
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $e8
	add hl, sp
	ld [hl], a
	dec a
	add a
	add a
	ld bc, $200
	call FarCall
	pop de
Func_fa3f: ; fa3f (3:7a3f)
	inc e
	pop bc
	inc bc
	jp Func_f9ee

Func_fa45: ; fa45 (3:7a45)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	read_hl_from_sp_plus $e4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus4
	pop de
	call CopyUntilNull
	ld de, String_fa7b
	call CopyUntilNull
	ld c, $83
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $10e
	call PrintMapText_
	ld hl, $ee
	add hl, sp
	ld sp, hl
	ret

String_fa7b: ; fa7b
	db " (かﾞ)", $0

BattleIntro: ; fa81 (3:7a81)
	add sp, -$32
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	write_hl_to_sp_plus $32
	read_hl_from_sp_plus $32
	ld de, $b
	add hl, de
	ld c, l
	ld b, h
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	write_hl_to_sp_plus $32
	read_hl_from_sp_plus $34
	ld [hl], $10
	read_hl_from wCurRobotPointer
	ld de, $1aa
	add hl, de
	ld [hl], $0
	read_hl_from_sp_plus $34
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	ld a, l
	cp $1
	jp c, Func_fb2d
	push hl
	read_hl_from_sp_plus $36
	ld de, $27
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_faeb
	ld a, SONG_TRAINER_BATTLE
	call OverworldPlaySong
	jp Func_faf0

Func_faeb: ; faeb (3:7aeb)
	ld a, SONG_GYM_LEADER_BATTLE
	call OverworldPlaySong
Func_faf0: ; faf0 (3:7af0)
	call Func_f771
	read_hl_from_sp_plus $34
	ld de, $9
	add hl, de
	ld [hl], $3
	ld a, [hl]
	read_hl_from_sp_plus $34
	ld de, $8
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $36
	ld de, $5
	add hl, de
	ld e, [hl]
	ld hl, sp+$27
	ld [hl], e
	read_hl_from_sp_plus $36
	ld de, $6
	add hl, de
	ld e, [hl]
	ld hl, sp+$28
	ld [hl], e
	ld hl, sp+$2f
	ld [hl], $1
	read_hl_from_sp_plus $34
	ld [hl], $2
	pop hl
	jp Func_fb64

Func_fb2d: ; fb2d (3:7b2d)
	ld a, SONG_WILD_BATTLE
	call OverworldPlaySong
	ld hl, sp+$2d
	ld [hl], $0
	read_hl_from_sp_plus $32
	ld de, $9
	add hl, de
	ld [hl], $0
	ld a, [hl]
	read_hl_from_sp_plus $32
	ld de, $8
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $34
	ld de, $5
	add hl, de
	ld e, [hl]
	ld hl, sp+$25
	ld [hl], e
	ld hl, sp+$26
	ld [hl], $ff
	ld l, $1
	push hl
	read_hl_from_sp_plus $34
	ld [hl], $0
	pop hl
Func_fb64: ; fb64 (3:7b64)
	push hl
	read_hl_from_sp_plus $34
	ld de, $7
	add hl, de
	ld [hl], $0
	ld a, [hSRAMBank]
	ld e, a
	push de
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld a, [wca9c]
	pop de
	push de
	push af
	ld a, e
	call GetSRAMBank
	pop af
	and $1
	jp z, Func_fb90
	read_hl_from_sp_plus $36
	ld a, $4
	or [hl]
	ld [hl], a
Func_fb90: ; fb90 (3:7b90)
	xor a
	pop de
	pop hl
	pop bc
	push de
Func_fb95: ; fb95 (3:7b95)
	cp l
	jp nc, Func_fc20
	push hl
	push af
	push bc
	read_hl_from_sp_plus $38
	inc hl
	reg16swap de, hl
	ld l, c
	ld h, b
	inc hl
	ld bc, $6
	call MemCopy
	pop bc
	pop af
	push bc
	push af
	ld a, [bc]
	ld e, a
	ld hl, sp+$31
	ld [hl], e
	ld a, $1
	ld c, $1
	call Func_dbf5
	pop af
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $166
	add hl, de
	pop de
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $155
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	pop af
	push af
	ld e, a
	ld a, $1
	ld c, $6
	call Func_dbf5
	ld hl, sp+$31
	ld l, [hl]
	ld h, $0
	ld de, $8
	call DivideHLByDESigned
	ld de, wSaveScratchDexSeenFlags
	add hl, de
	push hl
	ld a, [hl]
	ld e, a
	ld hl, sp+$33
	ld a, [hl]
	and $7
	ld b, a
	ld a, $1
	call LeftShiftA
	or e
	ld e, a
	pop hl
	ld a, e
	ld [hl], a
	pop af
	inc a
	pop bc
	ld hl, $7
	add hl, bc
	ld c, l
	ld b, h
	pop hl
	jp Func_fb95

Func_fc20: ; fc20 (3:7c20)
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $30
	ld hl, sp+$2c
	ld [hl], $0
Func_fc31: ; fc31 (3:7c31)
	ld hl, sp+$2c
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_fccb
	ld hl, sp+$2c
	ld a, [hl]
	cp $4
	jp nc, Func_fccb
	ld c, $0
	ld hl, sp+$2c
	ld e, [hl]
	xor a
	call Func_dbf5
	ld hl, sp+$2c
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $32
	ld de, $82
	add hl, de
	pop de
	add hl, de
	push hl
	read_hl_from_sp_plus $32
	ld de, $71
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	read_hl_from_sp_plus $30
	ld de, $75
	add hl, de
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $22
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_6b74
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $c
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2c
	ld a, [hl]
	call FarCall
	ld hl, sp+$2c
	ld a, [hl]
	inc a
	ld hl, sp+$2c
	ld [hl], a
	jp Func_fc31

Func_fccb: ; fccb (3:7ccb)
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld hl, wc7bd
	ld l, [hl]
	ld h, $0
	ld de, wc7b1
	add hl, de
	ld a, [hl]
	pop de
	push de
	push af
	ld a, e
	call GetSRAMBank
	pop af
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld [hl], a
	ld c, $0
Func_fcef: ; fcef (3:7cef)
	ld a, c
	cp $4
	jp nc, Func_fd26
	push bc
	set_farcall_addrs_hli GetRobotInParty
	pop bc
	push bc
	ld a, c
	ld hl, sp+$4
	reg16swap de, hl
	call FarCall
	pop bc
	read_hl_from_sp_plus $10
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_fd22
	jp Func_fd26

Func_fd22: ; fd22 (3:7d22)
	inc c
	jp Func_fcef

Func_fd26: ; fd26 (3:7d26)
	push bc
	read_hl_from_sp_plus $36
	ld de, $b
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $34
	inc hl
	reg16swap de, hl
	ld l, c
	ld h, b
	inc hl
	ld bc, $6
	call MemCopy
	pop bc
	push bc
	ld b, c
	ld a, $1
	call LeftShiftA
	read_hl_from_sp_plus $36
	or [hl]
	ld [hl], a
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld [hl], c
	read_hl_from_sp_plus $36
	ld de, $7
	add hl, de
	ld [hl], c
	ld a, $3
	call GetSRAMBank
	pop bc
	ld a, c
	ld [wc98d], a
	pop de
	ld a, e
	call GetSRAMBank
	read_hl_from_sp_plus $32
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $27
	read_hl_from_sp_plus $32
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $29
	read_hl_from_sp_plus $32
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp c, Func_fda8
	ld hl, sp+$27
	ld [hl], $0
	ld hl, sp+$28
	ld [hl], $5
Func_fda8: ; fda8 (3:7da8)
	ld hl, sp+$23
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_d7f5
	add sp, $32
	ret

Func_fdb7: ; fdb7 (3:7db7)
	ld c, $4
	scf
	ccf
.asm_fdbb
	ld a, [de]
	ld b, a
	ld a, [hl]
	sbc b
	ld [hld], a
	dec de
	dec c
	jr nz, .asm_fdbb
	ld a, c
	jr nc, .asm_fdc8
	inc a
.asm_fdc8
	ret

Func_fdc9: ; fdc9 (3:7dc9)
	ld c, $4
	scf
	ccf
.asm_fdcd
	ld a, [de]
	ld b, a
	ld a, [hl]
	adc b
	ld [hld], a
	dec de
	dec c
	jr nz, .asm_fdcd
	ld a, c
	jr nc, .asm_fdda
	inc a
.asm_fdda
	ret

Func_fddb: ; fddb (3:7ddb)
	ld c, $4
.asm_fddd
	ld a, [de]
	inc de
	ld b, a
	ld a, [hli]
	sub b
	jr c, .asm_fdeb
	jr nz, .asm_fdee
	dec c
	jr nz, .asm_fddd
	xor a
	ret

.asm_fdeb
	ld a, $ff
	ret

.asm_fdee
	ld a, $1
	ret

Func_fdf1: ; fdf1
	ret

Func_fdf2: ; fdf2
	ret

SECTION "Bank 04", ROMX, BANK [$4]
Func_10000: ; 10000
	ret

Func_10001: ; 10001
	push af
	set_farcall_addrs_hli RandomRange
	pop af
	jp FarCall

Func_10011: ; 10011 (4:4011)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_17e95
	ld c, $a
	ld e, $a
	ld hl, $0
	call FarCall
	ld e, $2
	ld a, $1
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_1019d
	push hl
	call PlaceString
	pop bc
	pop bc
	ld e, $2
	ld a, $2
	call SetStringStartState
	ld hl, Data_101a0
	push hl
	call PlaceString
	pop bc
	ld e, $4
	ld a, $2
	call SetStringStartState
	ld hl, Data_101a8
	push hl
	call PlaceString
	pop bc
	ld e, $6
	ld a, $2
	call SetStringStartState
	ld hl, Data_101af
	push hl
	call PlaceString
	pop bc
	ld e, $8
	ld a, $2
	call SetStringStartState
	ld hl, Data_101b6
	push hl
	call PlaceString
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld e, $0
	ld c, e
	push bc
	push de
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop de
	pop bc
Func_100a4: ; 100a4 (4:40a4)
	push bc
	push de
	call NextOverworldFrame
	call GetJoyPressed
	ld l, a
	ld h, $0
	pop de
	pop bc
	ld a, l
	and $10
	jp z, Func_10102
	ld a, c
	cp $3
	jp z, Func_100ef
	cp $2
	jp z, Func_100e6
	cp $1
	jp z, Func_100d3
	or a
	jp nz, Func_100ff
	ld a, $2
	call Func_10abf
	jp Func_100ff

Func_100d3: ; 100d3 (4:40d3)
	set_farcall_addrs_hli Func_6c5bb
	ld a, $2
	call FarCall
	jp Func_100ff

Func_100e6: ; 100e6 (4:40e6)
	ld a, $2
	call Func_1228e
	ld a, l
	jp Func_100ff

Func_100ef: ; 100ef (4:40ef)
	set_farcall_addrs_hli Func_6d395
	ld a, $2
	call FarCall
Func_100ff: ; 100ff (4:40ff)
	jp Func_10190

Func_10102: ; 10102 (4:4102)
	ld a, l
	and $4
	jp z, Func_1013b
	ld a, c
	cp $1
	jp c, Func_1010f
	dec c
Func_1010f: ; 1010f (4:410f)
	push bc
	ld a, e
	add a
	add $2
	ld e, a
	ld a, $1
	call SetStringStartState
	read_hl_from $c261
	ld a, $8f
	ld [hl], a
	pop bc
	push bc
	ld a, c
	add a
	add $2
	ld e, a
	ld a, $1
	call SetStringStartState
	read_hl_from $c261
	ld a, $8b
	ld [hl], a
	pop bc
	ld e, c
	jp Func_1017d

Func_1013b: ; 1013b (4:413b)
	ld a, l
	and $8
	jp z, Func_10174
	ld a, c
	cp $3
	jp nc, Func_10148
	inc c
Func_10148: ; 10148 (4:4148)
	push bc
	ld a, e
	add a
	add $2
	ld e, a
	ld a, $1
	call SetStringStartState
	read_hl_from $c261
	ld a, $8f
	ld [hl], a
	pop bc
	push bc
	ld a, c
	add a
	add $2
	ld e, a
	ld a, $1
	call SetStringStartState
	read_hl_from $c261
	ld a, $8b
	ld [hl], a
	pop bc
	ld e, c
	jp Func_1017d

Func_10174: ; 10174 (4:4174)
	ld a, l
	and $20
	jp z, Func_1017d
	jp Func_10190

Func_1017d: ; 1017d (4:417d)
	push bc
	push de
	ld l, $a
	push hl
	ld c, $a
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop de
	pop bc
	jp Func_100a4

Func_10190: ; 10190 (4:4190)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ret

Data_1019d: ; 1019d
	TX_STACK
	db $0

Data_101a0: ; 101a0
	db "スヒﾟータﾞー", $0 ; speeder

Data_101a8: ; 101a8
	db "ハﾟンチャー", $0 ; puncher

Data_101af: ; 101af
	db "シールタﾞー", $0 ; shielder

Data_101b6: ; 101b6
	db "シﾞャンハﾟー", $0 ; jumper

Func_101be: ; 101be
	push bc
	push bc
	push de
	push hl
	ld de, $100
	call DivideHLByDESigned
	ld c, l
	pop hl
	ld a, l
	pop de
	push bc
	push af
	push de
	reg16swap de, hl
	ld de, $100
	call DivideHLByDESigned
	ld a, l
	ld hl, sp+$6
	ld [hl], a
	pop de
	ld l, e
	pop af
	pop bc
	push hl
	ld e, a
	ld a, c
	call SetStringStartState
	read_hl_from $c261
	ld c, l
	ld b, h
	xor a
	pop hl
Func_101f0: ; 101f0 (4:41f0)
	cp l
	jp nc, Func_10212
	push hl
	push af
	call GetHLAtSPPlus8
	ld a, l
	ld [bc], a
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_10206
	inc bc
	jp Func_1020c

Func_10206: ; 10206 (4:4206)
	ld hl, $14
	add hl, bc
	ld c, l
	ld b, h
Func_1020c: ; 1020c (4:420c)
	pop af
	inc a
	pop hl
	jp Func_101f0

Func_10212: ; 10212 (4:4212)
	pop bc
	pop bc
	ret

Func_10215: ; 10215
	push bc
	push bc
	call SetStringStartState
	read_hl_from $c261
	call WriteHLToSPPlus4
	xor a
	pop bc
Func_10224: ; 10224 (4:4224)
	ld hl, sp+$4
	cp [hl]
	jp nc, Func_1025b
	push af
	xor a
Func_1022c: ; 1022c (4:422c)
	cp c
	jp nc, Func_10240
	call GetHLAtSPPlus4
	ld [hl], $8f
	call GetHLAtSPPlus4
	inc hl
	call WriteHLToSPPlus4
	inc a
	jp Func_1022c

Func_10240: ; 10240 (4:4240)
	pop af
	push bc
	push af
	ld b, $0
	ld hl, $14
	ld a, l
	sub c
	ld c, a
	ld a, h
	sbc b
	ld b, a
	call GetHLAtSPPlus6
	add hl, bc
	call WriteHLToSPPlus6
	pop af
	inc a
	pop bc
	jp Func_10224

Func_1025b: ; 1025b (4:425b)
	pop bc
	ret

Func_1025d: ; 1025d (4:425d)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_1025d
	ret

Data_10268: ; 10268
	dr $10268, $1027d

Data_1027d: ; 1027d
	dr $1027d, $1028b

Func_1028b: ; 1028b
	push bc
	push bc
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	push hl
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, Data_10268
	ld bc, $4
	call MemCopy
	ld a, $2
	ld [wc2fa], a
	ld a, SONG_WILD_BATTLE
	call OverworldPlaySong
	pop de
	pop bc
	push de
	ld a, $11
	ld [bc], a
	read_hl_from wCurRobotPointer
	ld de, $1aa
	add hl, de
	ld [hl], $0
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld [hl], a
	pop de
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp c, Func_10327
	push bc
	push de
	callba_hli Func_f771
	pop de
	ld hl, $9
	add hl, de
	ld [hl], $3
	ld a, [hl]
	ld hl, $8
	add hl, de
	ld [hl], a
	pop bc
	ld hl, $5
	add hl, bc
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld hl, $6
	add hl, bc
	ld a, [hl]
	ld hl, sp+$1
	ld [hl], a
	ld a, $1
	jp Func_10342

Func_10327: ; 10327 (4:4327)
	xor a
	ld hl, $9
	add hl, de
	ld [hl], $0
	ld a, [hl]
	ld hl, $8
	add hl, de
	ld [hl], a
	ld hl, $5
	add hl, bc
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$1
	ld [hl], $ff
	ld a, $1
Func_10342: ; 10342 (4:4342)
	push de
	push bc
	ld a, [hSRAMBank]
	ld l, a
	push hl
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld hl, wc7bd
	ld l, [hl]
	ld h, $0
	ld de, wc7b1
	add hl, de
	ld a, [hl]
	pop hl
	push af
	ld a, l
	call GetSRAMBank
	pop af
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld [hl], a
	pop bc
	push bc
	ld hl, $7
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	ld hl, $9
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
Func_10381: ; 10381 (4:4381)
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $3
	call FarCall
	set_farcall_addrs_hli Func_6e1b
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	call FarCall
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_103b5
	jp Func_103fe

Func_103b5: ; 103b5 (4:43b5)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, $4
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, $10e
	call FarCall
	jp Func_10381

Func_103fe: ; 103fe (4:43fe)
	pop bc
	pop de
	inc de
	ld hl, $c
	add hl, bc
	ld bc, $6
	call MemCopy
	ld hl, sp+$a
	ld [hl], $0
Func_1040f: ; 1040f (4:440f)
	ld hl, sp+$a
	ld a, [hl]
	cp $2
	jp nc, Func_10472
	set_farcall_addrs_hli Func_dbf5
	ld hl, sp+$a
	ld a, [hl]
	or a
	jp nz, Func_10445
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	inc hl
	ld c, [hl]
	ld a, [wc2e9]
	ld e, a
	ld hl, sp+$a
	ld a, [hl]
	call FarCall
	jp Func_10468

Func_10445: ; 10445 (4:4445)
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	inc hl
	ld c, [hl]
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	ld e, [hl]
	ld hl, sp+$a
	ld a, [hl]
	call FarCall
Func_10468: ; 10468 (4:4468)
	ld hl, sp+$a
	ld a, [hl]
	inc a
	ld hl, sp+$a
	ld [hl], a
	jp Func_1040f

Func_10472: ; 10472 (4:4472)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld c, $0
Func_10480: ; 10480 (4:4480)
	ld a, c
	cp $2
	jp nc, Func_104b0
	push de
	push bc
	set_farcall_addrs_hli Func_dc0a
	pop bc
	pop de
	push de
	push bc
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, c
	call FarCall
	pop bc
	inc c
	pop de
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	jp Func_10480

Func_104b0: ; 104b0 (4:44b0)
	ld a, [wSystemType]
	cp $1
	jp z, Func_104c0
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_104c9
Func_104c0: ; 104c0 (4:44c0)
	ld de, $e
	ld hl, Data_1027d
	call Func_2b7d
Func_104c9: ; 104c9 (4:44c9)
	set_farcall_addrs_hli Func_d030
	xor a
	call FarCall
	xor a
	ld [wc2fa], a
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_104ef
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_10503
Func_104ef: ; 104ef (4:44ef)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_10503: ; 10503 (4:4503)
	add sp, $c
	ret

Func_10506: ; 10506 (4:4506)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_1051a: ; 1051a (4:451a)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_1052e: ; 1052e (4:452e)
	push bc
	ld hl, sp+$0
	ld [hl], $ff
	ld a, [wc319]
	cp $81
	jp nz, Func_1054c
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	jp Func_1055a

Func_1054c: ; 1054c (4:454c)
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_10506
Func_1055a: ; 1055a (4:455a)
	pop bc
	ret

Func_1055c: ; 1055c (4:455c)
	push af
	set_farcall_addrs_hli Func_667d
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $8f00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_105af
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_667d
	ld hl, sp+$1
	ld c, [hl]
	ld b, $0
	ld de, $1f1f
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_105af: ; 105af (4:45af)
	call WaitVideoTransfer
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_105c4
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_105cc

Func_105c4: ; 105c4 (4:45c4)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_105cc: ; 105cc (4:45cc)
	pop bc
	ret

Func_105ce: ; 105ce
	push af
	call Func_1052e
	ld a, [wc319]
	cp $81
	jp nz, Func_105e8
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld [hl], $3
	jp Func_105f3

Func_105e8: ; 105e8 (4:45e8)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld [hl], $1
Func_105f3: ; 105f3 (4:45f3)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_1063b
	set_farcall_addrs_hli Func_dbf5
	ld c, $7
	ld a, [wc307]
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dbf5
	ld c, $8
	ld a, [wc308]
	ld e, a
	ld a, $1
	call FarCall
	ld c, $0
	ld de, wRNGState
	ld hl, $2
	call Func_1051a
	jp Func_106b1

Func_1063b: ; 1063b (4:463b)
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_1067b
	set_farcall_addrs_hli Func_dbf5
	ld c, $8
	ld a, [wc307]
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dbf5
	ld c, $7
	ld a, [wc308]
	ld e, a
	ld a, $1
	call FarCall
	ld c, $0
	ld de, wRNGState
	ld hl, $2
	call Func_10506
	jp Func_106b1

Func_1067b: ; 1067b (4:467b)
	set_farcall_addrs_hli Func_dbf5
	ld c, $8
	ld a, [wc307]
	ld e, a
	ld a, $1
	call FarCall
	set_farcall_addrs_hli Func_dbf5
	ld c, $7
	ld a, [wc308]
	ld e, a
	xor a
	call FarCall
	ld c, $0
	ld de, wRNGState
	ld hl, $2
	call Func_10506
Func_106b1: ; 106b1 (4:46b1)
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	ld a, [wc2cd]
	call Func_1055c
	xor a
	ld [wSCX2], a
	ld [wSCX], a
	xor a
	ld [wSCY2], a
	ld [wSCY], a
.asm_106f9
	ld a, [wNextVBlankFlags]
	or $14
	ld [wNextVBlankFlags], a
	call Func_1025d
	ld a, [wc2cd]
	xor $1
	call Func_1055c
	ld a, [wSystemType]
	cp $1
	jp z, Func_1071e
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_10732
Func_1071e: ; 1071e (4:471e)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_10732: ; 10732 (4:4732)
	pop bc
	ret

Data_10734: ; 10734
	db "(てﾞはﾞっく)", $0

Data_1073d: ; 1073d
	dr $1073d, $10766

Func_10766: ; 10766
	add sp, -$32
	ld hl, sp+$29
	reg16swap de, hl
	ld hl, Data_10734
	ld bc, $9
	call MemCopy
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_1073d
	ld bc, $29
	call MemCopy
	callba_hli AllocateMonsterStruct
	ld hl, sp+$29
	call WriteHLToSPPlus3
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld bc, $29
	call MemCopy
	add sp, $32
	ret

Func_107b8: ; 107b8
	callba_hli FreeMonsterStruct
	ret

Data_107c7: ; 107c7
	db $21, $1, $3, $1a, $4, $1, $b, $8

Data_107cf: ; 107cf
	db $21, $1, $3, $1f, $4, $1, $b, $8

Func_107d7: ; 107d7
	push af
	push de
	ld a, b
	push af
	push bc
	ld hl, sp+$7
	ld a, [hl]
	ld [wc316], a
	ld a, [wSystemType]
	cp $1
	jp z, Func_107f2
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_1082a
Func_107f2: ; 107f2 (4:47f2)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
	ld hl, sp+$7
	ld a, [hl]
	or a
	jp nz, Func_10819
	ld de, $8
	ld hl, Data_107c7
	call Func_2b7d
	jp Func_1082a

Func_10819: ; 10819 (4:4819)
	ld hl, sp+$7
	ld a, [hl]
	cp $1
	jp nz, Func_1082a
	ld de, $8
	ld hl, Data_107cf
	call Func_2b7d
Func_1082a: ; 1082a (4:482a)
	call WaitVideoTransfer
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld e, $a
	ld a, $8
	call SetStringStartState
	ld hl, sp+$7
	ld a, [hl]
	or a
	jp nz, Func_10876
	ld hl, Data_1095c
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $401
	call FarCall
	jp Func_108b8

Func_10876: ; 10876 (4:4876)
	ld hl, sp+$7
	ld a, [hl]
	cp $1
	jp nz, Func_108b0
	ld hl, Data_10964
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $401
	call FarCall
	jp Func_108b8

Func_108b0: ; 108b0 (4:48b0)
	ld hl, Data_1096c
	push hl
	call PlaceString
	pop bc
Func_108b8: ; 108b8 (4:48b8)
	call WaitVideoTransfer
	pop bc
	pop af
	push bc
	push af
	cp $2
	jp z, Func_108d3
	ld e, $2
	ld a, $d
	call SetStringStartState
	ld hl, Data_10973
	push hl
	call PlaceString
	pop bc
Func_108d3: ; 108d3 (4:48d3)
	pop af
	pop bc
	pop de
	push bc
	cp $1
	jp nz, Func_108fb
	push de
	ld e, $3
	ld a, $e
	call SetStringStartState
	pop de
	push de
	ld hl, Data_10979
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_1097e
	ld hl, $f04
	call PlaceStringDEatCoordHL
	jp Func_10912

Func_108fb: ; 108fb (4:48fb)
	or a
	jp nz, Func_10912
	push de
	ld e, $3
	ld a, $e
	call SetStringStartState
	pop de
	push de
	ld hl, Data_10983
	push hl
	call PlaceString
	pop bc
	pop bc
Func_10912: ; 10912 (4:4912)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	push bc
	ld a, c
	cp $1
	jp nz, Func_10935
	xor a
Func_10927: ; 10927 (4:4927)
	cp $1e
	jp nc, Func_10935
.asm_1092c
	push af
	call NextOverworldFrame
.asm_1092f
	pop af
	inc a
	jp Func_10927

Func_10935: ; 10935 (4:4935)
	pop bc
	ld hl, sp+$1
	ld a, [hl]
.asm_10939
	or a
	jp nz, Func_1095a
	ld a, c
	cp $1
	jp z, Func_1095a
	ld a, $2
	ld [wc2fa], a
	callba_hli Func_222b7
.asm_1094b
	xor a
	ld [wc2fa], a
Func_1095a: ; 1095a (4:495a)
	pop bc
	ret

Data_1095c: ; 1095c
	db "(のしょうり)", $0

Data_10964: ; 10964
	db "(のしょうり)", $0

Data_1096c: ; 1096c
	db "(ひきわけ)", $0

Data_10973: ; 10973
	db "(きろく)", $0

Data_10979: ; 10979
	TX_SNUM
	db "キロ", $0

Data_1097e: ; 1097e
	db "メートル", $0

Data_10983: ; 10983
	TX_SNUM
	db "(とん)", $0

Data_1098a: ; 1098a
	dr $1098a, $10992

Data_10992: ; 10992
	dr $10992, $1099a

Func_1099a: ; 1099a
	add sp, -$2a
	push af
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, Data_1098a
	ld bc, $8
	call MemCopy
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_10992
	ld bc, $8
	call MemCopy
	pop af
	or a
	jp nz, Func_109cf
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	jp Func_109e3

Func_109cf: ; 109cf (4:49cf)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
Func_109e3: ; 109e3 (4:49e3)
	ld hl, $27
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	push af
	ld hl, $b
	add hl, de
	ld a, [hl]
	and $f
	push af
	push bc
	ld hl, $17
	add hl, de
	ld l, [hl]
	push hl
	ld hl, $2e
	add hl, de
	ld a, [hl]
	ld hl, sp+$18
	ld [hl], a
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop hl
	push af
	ld e, l
	ld hl, sp+$19
	call Func_241f
	pop af
	call GetSRAMBank
	pop bc
	ld hl, sp+$27
	ld l, [hl]
	ld h, $0
	add hl, bc
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli Func_e39a
	pop de
	ld hl, sp+$14
	ld a, [hl]
	call FarCall
	ld c, l
	ld b, h
	ld e, c
	ld d, b
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_10a58
	ld bc, $1
Func_10a58: ; 10a58 (4:4a58)
	pop af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld c, l
	ld b, h
	pop af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	reg16swap de, hl
	add sp, $2a
	reg16swap de, hl
	ret

Func_10a8b: ; 10a8b
	call Func_1099a
	reg16swap de, hl
	ld hl, 220
	call CompareHLtoDE
	jp c, Func_10aa0
	ld a, $1
	jp Func_10abe

Func_10aa0: ; 10aa0 (4:4aa0)
	ld hl, 338
	call CompareHLtoDE
	jp c, Func_10aae
	ld a, $2
	jp Func_10abe

Func_10aae: ; 10aae (4:4aae)
	ld hl, 580
	call CompareHLtoDE
	jp c, Func_10abc
	ld a, $4
	jp Func_10abe

Func_10abc: ; 10abc (4:4abc)
	ld a, $8
Func_10abe: ; 10abe (4:4abe)
	ret

Func_10abf: ; 10abf (4:4abf)
	push af
	ld c, $0
	ld e, c
	push bc
	push de
	ld hl, sp+$5
	ld a, [hl]
	cp $2
	jp nz, Func_10ad0
	call Func_10766
Func_10ad0: ; 10ad0 (4:4ad0)
	ld hl, sp+$5
	ld a, [hl]
	cp $1
	jp nz, Func_10ae1
	xor a
	call Func_105ce
	ld l, $1
	jp Func_10ae6

Func_10ae1: ; 10ae1 (4:4ae1)
	call Func_1028b
	ld l, $0
Func_10ae6: ; 10ae6 (4:4ae6)
	push hl
	ld a, $d
	call OverworldPlaySong
	pop hl
	pop de
	pop bc
Func_10aef: ; 10aef (4:4aef)
	push hl
	push bc
	push de
	ld a, l
	call Func_10b8a
	pop de
	pop bc
	or a
	jp nz, Func_10b00
	inc e
	jp Func_10b06

Func_10b00: ; 10b00 (4:4b00)
	cp $1
	jp nz, Func_10b06
	inc c
Func_10b06: ; 10b06 (4:4b06)
	push bc
	push de
	callba_hli WaitAorBButtonOverworld_17a44
	pop de
	pop bc
	pop hl
	ld a, e
	cp $1
	jp nz, Func_10b24
	ld c, $0
	jp Func_10b32

Func_10b24: ; 10b24 (4:4b24)
	ld a, c
	cp $1
	jp nz, Func_10b2f
	ld c, $1
	jp Func_10b32

Func_10b2f: ; 10b2f (4:4b2f)
	jp Func_10aef

Func_10b32: ; 10b32 (4:4b32)
	push bc
	ld e, l
	ld a, c
	call Func_11fda
	ld hl, sp+$3
	ld a, [hl]
	cp $2
	jp nz, Func_10b43
	call Func_107b8
Func_10b43: ; 10b43 (4:4b43)
	pop bc
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_10b57
	ld a, c
	cp $1
	jp nz, Func_10b57
	ld hl, $1
	jp Func_10b88

Func_10b57: ; 10b57 (4:4b57)
	ld hl, sp+$1
	ld a, [hl]
	cp $1
	jp nz, Func_10b85
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_10b74
	ld l, c
	ld h, $0
	jp Func_10b88

Func_10b74: ; 10b74 (4:4b74)
	inc c
	dec c
	jp nz, Func_10b7f
	ld hl, $1
	jp Func_10b88

Func_10b7f: ; 10b7f (4:4b7f)
	ld hl, $0
	jp Func_10b88

Func_10b85: ; 10b85 (4:4b85)
	ld hl, $0
Func_10b88: ; 10b88 (4:4b88)
	pop bc
	ret

Func_10b8a: ; 10b8a (4:4b8a)
	push af
	add sp, -$1a
	ld hl, sp+$1b
	ld c, [hl]
	ld hl, sp+$b
	reg16swap de, hl
	ld hl, sp+$1
	call Func_11cfb
	set_farcall_addrs_hli AllocateMemory
	ld hl, $1e
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $605
	ld hl, $705
	call BackUpTileMapRectangle
	ld hl, sp+$1d
	ld a, [hl]
	or a
	jp nz, Func_10bed
	ld hl, sp+$d
	reg16swap de, hl
	xor a
	call Func_115af
	ld hl, sp+$13
	ld a, [hl]
	cp $1
	jp nz, Func_10be3
	ld hl, sp+$12
	ld a, [hl]
	or a
	jp nz, Func_10be3
	ld hl, sp+$d
	reg16swap de, hl
	ld a, $4
	call Func_115af
Func_10be3: ; 10be3 (4:4be3)
	ld de, $0
	ld hl, sp+$2
	ld [hl], $0
	jp Func_10c0a

Func_10bed: ; 10bed (4:4bed)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_10c03
	ld hl, sp+$2
	ld [hl], $0
	jp Func_10c07

Func_10c03: ; 10c03 (4:4c03)
	ld hl, sp+$2
	ld [hl], $ff
Func_10c07: ; 10c07 (4:4c07)
	ld de, $0
Func_10c0a: ; 10c0a (4:4c0a)
	reg16swap de, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3
	add hl, de
	call Func_10ff0
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $605
	ld hl, $705
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_10c8f
	ld hl, sp+$1b
	ld a, [hl]
	cp $1
	jp nz, Func_10c8f
	ld c, $1
	ld hl, sp+$11
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $1
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $1
	ld hl, sp+$10
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $0
	ld de, wRNGState
	ld hl, $2
	call Func_1051a
	jp Func_10cda

Func_10c8f: ; 10c8f (4:4c8f)
	ld hl, sp+$1b
	ld a, [hl]
	cp $1
	jp nz, Func_10cda
	ld c, $1
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $1
	ld hl, sp+$11
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $1
	ld hl, sp+$10
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $0
	ld de, wRNGState
	ld hl, $2
	call Func_10506
Func_10cda: ; 10cda (4:4cda)
	ld bc, $0
Func_10cdd: ; 10cdd (4:4cdd)
	ld l, c
	ld h, b
	ld de, $2
	call CompareHLtoDE
	jp nc, Func_10d19
	ld l, c
	ld h, b
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1
	add hl, de
	ld de, $6
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_10d15
	ld l, c
	ld h, b
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1
	add hl, de
	ld de, $6
	add hl, de
	ld [hl], $15
Func_10d15: ; 10d15 (4:4d15)
	inc bc
	jp Func_10cdd

Func_10d19: ; 10d19 (4:4d19)
	ld hl, $2
	write_hl_to_sp_plus $18
	ld hl, $0
	write_hl_to_sp_plus $1a
	ld hl, $0
Func_10d2a: ; 10d2a (4:4d2a)
	ld hl, $0
Func_10d2d: ; 10d2d (4:4d2d)
	ld de, $5
	call CompareHLtoDE
	jp nc, Func_10d3f
	push hl
	call NextOverworldFrame
	pop hl
	inc hl
	jp Func_10d2d

Func_10d3f: ; 10d3f (4:4d3f)
	read_hl_from_sp_plus $18
	inc hl
	write_hl_to_sp_plus $18
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_10d57
	ld hl, sp+$1
	call Func_10e03
	jp Func_10d5c

Func_10d57: ; 10d57 (4:4d57)
	ld hl, sp+$1
	call Func_10efa
Func_10d5c: ; 10d5c (4:4d5c)
	read_hl_from_sp_plus $1a
	inc hl
	write_hl_to_sp_plus $1a
	read_hl_from_sp_plus $1a
	ld a, l
	sub $4
	or h
	jp nz, Func_10d77
	ld hl, $0
	write_hl_to_sp_plus $1a
Func_10d77: ; 10d77 (4:4d77)
	read_hl_from_sp_plus $1a
	push hl
	ld hl, sp+$11
	ld l, [hl]
	push hl
	ld hl, sp+$9
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $15
	push hl
	read_hl_from_sp_plus $15
	ld c, l
	ld b, h
	read_hl_from_sp_plus $d
	push hl
	read_hl_from_sp_plus $d
	pop de
	call Func_12029
	pop bc
	pop bc
	pop bc
	pop bc
	read_hl_from_sp_plus $f
	push hl
	read_hl_from_sp_plus $f
	ld c, l
	ld b, h
	call GetHLAtSPPlus7
	push hl
	call GetHLAtSPPlus7
	pop de
	call Func_11176
	pop bc
	ld hl, sp+$15
	ld [hl], a
	ld hl, sp+$15
	ld a, [hl]
	cp $ff
	jp z, Func_10dd3
	read_hl_from_sp_plus $18
	ld c, l
	ld b, h
	ld e, $4
	ld hl, sp+$15
	ld a, [hl]
	call Func_11b60
	jp Func_10dfd

Func_10dd3: ; 10dd3 (4:4dd3)
	read_hl_from_sp_plus $18
	ld de, $a
	call DivideHLByDESigned
	reg16swap de, hl
	ld hl, $63
	call CompareHLtoDE
	jp nc, Func_10dfa
	read_hl_from_sp_plus $18
	ld c, l
	ld b, h
	ld e, $4
	ld a, $2
	call Func_11b60
	jp Func_10dfd

Func_10dfa: ; 10dfa (4:4dfa)
	jp Func_10d2a

Func_10dfd: ; 10dfd (4:4dfd)
	ld hl, sp+$15
	ld a, [hl]
	add sp, $1c
	ret

Func_10e03: ; 10e03 (4:4e03)
	push hl
	push bc
	ld hl, sp+$0
	ld [hl], $0
Func_10e09: ; 10e09 (4:4e09)
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call Func_1108a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld de, $5
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_10ee2
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld de, $6
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_10ee2
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $8
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_10ee2
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $8
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_10ee2
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_114ea
	cp $1e
	jp z, Func_10ee2
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	reg16swap de, hl
	call Func_115af
Func_10ee2: ; 10ee2 (4:4ee2)
	ld hl, sp+$0
	ld a, [hl]
	cp $1
	jp nz, Func_10eed
	jp Func_10ef7

Func_10eed: ; 10eed (4:4eed)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_10e09

Func_10ef7: ; 10ef7 (4:4ef7)
	pop bc
	pop bc
	ret

Func_10efa: ; 10efa (4:4efa)
	push hl
	push bc
	ld hl, sp+$0
	ld [hl], $1
Func_10f00: ; 10f00 (4:4f00)
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call Func_1108a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld de, $5
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_10fd9
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld de, $6
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_10fd9
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $8
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_10fd9
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $8
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_10fd9
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_114ea
	cp $1e
	jp z, Func_10fd9
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	reg16swap de, hl
	call Func_11872
Func_10fd9: ; 10fd9 (4:4fd9)
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_10fe3
	jp Func_10fed

Func_10fe3: ; 10fe3 (4:4fe3)
	ld hl, sp+$0
	ld a, [hl]
	dec a
	ld hl, sp+$0
	ld [hl], a
	jp Func_10f00

Func_10fed: ; 10fed (4:4fed)
	pop bc
	pop bc
	ret

Func_10ff0: ; 10ff0 (4:4ff0)
	push hl
	push bc
	xor a
	ld hl, $3
	pop de
	push hl
Func_10ff8: ; 10ff8 (4:4ff8)
	pop hl
	push hl
	inc h
	dec h
	bit 7, h
	jr nz, asm_1105a
	ld c, $0
Func_11002: ; 11002 (4:5002)
	ld a, c
	cp $3c
	jp nc, Func_11048
	push bc
	call CheckButton
	ld l, a
	ld h, $0
	pop bc
	ld a, l
	and $10
	jp z, Func_11044
	call GetHLAtSPPlus4
	ld de, $6
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_11044
	call GetHLAtSPPlus4
	ld de, $6
	add hl, de
	ld [hl], $1
	pop hl
	push hl
	ld a, l
	or h
	jp nz, Func_1103b
	ld a, c
	cp $3a
	jp c, Func_1103b
	jp Func_11044

Func_1103b: ; 1103b (4:503b)
	call GetHLAtSPPlus4
	ld de, $5
	add hl, de
	ld [hl], $4
Func_11044: ; 11044 (4:5044)
	inc c
	jp Func_11002

Func_11048: ; 11048 (4:5048)
	ld bc, $0
	pop hl
	push hl
	ld e, l
	xor a
	call Func_11b60
	pop hl
	push hl
	dec hl
	pop de
	push hl
	jp Func_10ff8

asm_1105a
	xor a
Func_1105b: ; 1105b (4:505b)
	cp $a
	jp nc, Func_11087
	push af
	call CheckButton
	ld l, a
	ld h, $0
	ld a, l
	and $10
	jp z, Func_11082
	call GetHLAtSPPlus6
	ld de, $6
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_11082
	call GetHLAtSPPlus6
	ld de, $6
	add hl, de
	ld [hl], $1
Func_11082: ; 11082 (4:5082)
	pop af
	inc a
	jp Func_1105b

Func_11087: ; 11087 (4:5087)
	pop bc
	pop bc
	ret

Func_1108a: ; 1108a (4:508a)
	push hl
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_110c3
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, $1
	add [hl]
	ld [hl], a
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $4
	jp nz, Func_110c0
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
Func_110c0: ; 110c0 (4:50c0)
	jp Func_11174

Func_110c3: ; 110c3 (4:50c3)
	pop hl
	push hl
	ld de, $9
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_110df
	pop hl
	push hl
	inc hl
	inc hl
	ld a, [hl]
	add $10
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
	jp Func_11174

Func_110df: ; 110df (4:50df)
	pop hl
	push hl
	ld de, $6
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_1115d
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $3
	jp z, Func_11148
	cp $2
	jp z, Func_11131
	cp $1
	jp z, Func_1111c
	or a
	jp nz, Func_1115a
	pop hl
	push hl
	ld de, $7
	add hl, de
	ld c, [hl]
	ld b, $0
	pop hl
	push hl
	inc hl
	inc hl
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	jp Func_1115a

Func_1111c: ; 1111c (4:511c)
	pop hl
	push hl
	ld de, $7
	add hl, de
	ld c, [hl]
	ld b, $0
	pop hl
	push hl
	ld a, [hl]
	sub c
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc b
	ld [hl], a
	jp Func_1115a

Func_11131: ; 11131 (4:5131)
	pop hl
	push hl
	ld de, $7
	add hl, de
	ld c, [hl]
	ld b, $0
	pop hl
	push hl
	inc hl
	inc hl
	ld a, [hl]
	sub c
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc b
	ld [hl], a
	jp Func_1115a

Func_11148: ; 11148 (4:5148)
	pop hl
	push hl
	ld de, $7
	add hl, de
	ld c, [hl]
	ld b, $0
	pop hl
	push hl
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
Func_1115a: ; 1115a (4:515a)
	jp Func_11174

Func_1115d: ; 1115d (4:515d)
	pop hl
	push hl
	ld de, $6
	add hl, de
	ld a, [hl]
	cp $2
	jp c, Func_11174
	pop hl
	push hl
	ld de, $6
	add hl, de
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
Func_11174: ; 11174 (4:5174)
	pop bc
	ret

Func_11176: ; 11176 (4:5176)
	push hl
	push de
	call GetHLAtSPPlus4
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp nz, Func_111ac
	call GetHLAtSPPlus8
	push hl
	call GetHLAtSPPlus4
	pop de
	call CompareHLtoDE
	jp nz, Func_111ac
	call GetHLAtSPPlus4
	ld a, l
	sub $48
	or h
	jp nz, Func_111a9
	pop hl
	push hl
	ld a, l
	sub $78
	or h
	jp nz, Func_111a9
	ld a, $2
	jp Func_111db

Func_111a9: ; 111a9 (4:51a9)
	jp Func_111d9

Func_111ac: ; 111ac (4:51ac)
	call GetHLAtSPPlus4
	ld a, l
	sub $48
	or h
	jp nz, Func_111c3
	pop hl
	push hl
	ld a, l
	sub $78
	or h
	jp nz, Func_111c3
	xor a
	jp Func_111db

Func_111c3: ; 111c3 (4:51c3)
	ld a, c
	sub $48
	or b
	jp nz, Func_111d9
	call GetHLAtSPPlus8
	ld a, l
	sub $78
	or h
	jp nz, Func_111d9
	ld a, $1
	jp Func_111db

Func_111d9: ; 111d9 (4:51d9)
	ld a, $ff
Func_111db: ; 111db (4:51db)
	pop bc
	pop bc
	ret

Data_111de: ; 111de
	dr $111de, $114e0

Data_114e0: ; 114e0
	dr $114e0, $114e5

Data_114e5: ; 114e5
	dr $114e5, $114ea

Func_114ea: ; 114ea (4:54ea)
	push af
	push de
	push bc
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, Data_114e0
	ld bc, $5
	call MemCopy
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_114e5
	ld bc, $5
	call MemCopy
	ld c, $0
Func_11511: ; 11511 (4:5511)
	ld a, c
	cp $5
	jp nc, Func_1156f
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	add a
	add a
	add a
	ld hl, sp+$a
	cp [hl]
	jp nz, Func_1156b
	ld hl, sp+$d
	ld a, [hl]
	cp $88
	jp z, Func_1155f
	cp $58
	jp z, Func_11553
	cp $38
	jp z, Func_11548
	cp $8
	jp nz, Func_1156b
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld a, [hl]
	jp Func_11590

Func_11548: ; 11548 (4:5548)
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld a, [hl]
	inc a
	jp Func_11590

Func_11553: ; 11553 (4:5553)
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld a, [hl]
	add $2
	jp Func_11590

Func_1155f: ; 1155f (4:555f)
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld a, [hl]
	add $3
	jp Func_11590

Func_1156b: ; 1156b (4:556b)
	inc c
	jp Func_11511

Func_1156f: ; 1156f (4:556f)
	ld hl, sp+$a
	ld a, [hl]
	cp $30
	jp nz, Func_1158e
	ld hl, sp+$d
	ld a, [hl]
	cp $58
	jp z, Func_11589
	cp $38
	jp nz, Func_1158e
	ld a, $9
	jp Func_11590

Func_11589: ; 11589 (4:5589)
	ld a, $a
	jp Func_11590

Func_1158e: ; 1158e (4:558e)
	ld a, $1e
Func_11590: ; 11590 (4:5590)
	add sp, $e
	ret

Data_11593: ; 11593
	dr $11593, $115a8

Data_115a8: ; 115a8
	dr $115a8, $115af

Func_115af: ; 115af (4:55af)
	push af
	push de
	add sp, -$20
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, Data_11593
	ld bc, $15
	call MemCopy
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_115a8
	ld bc, $7
	call MemCopy
	ld hl, sp+$23
	ld a, [hl]
	or a
	jp nz, Func_11658
	ld a, $64
	call Func_10001
	ld hl, sp+$1e
	ld [hl], a
	ld hl, sp+$1e
	ld a, [hl]
	cp $23
	jp nc, Func_11609
	read_hl_from_sp_plus $22
	ld de, $5
	add hl, de
	ld [hl], $4
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	read_hl_from_sp_plus $22
	ld de, $6
	add hl, de
	ld [hl], $1
	jp Func_1185a

Func_11609: ; 11609 (4:5609)
	ld hl, sp+$1e
	ld a, [hl]
	cp $41
	jp nc, Func_11628
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	read_hl_from_sp_plus $22
	ld de, $6
	add hl, de
	ld [hl], $1
	jp Func_11658

Func_11628: ; 11628 (4:5628)
	ld a, $64
	call Func_10001
	ld hl, sp+$1e
	ld [hl], a
	ld c, $0
Func_11632: ; 11632 (4:5632)
	ld a, c
	cp $7
	jp nc, Func_11658
	ld hl, sp+$1e
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	cp [hl]
	jp nc, Func_11654
	ld a, c
	add $32
	read_hl_from_sp_plus $22
	ld de, $6
	add hl, de
	ld [hl], a
	jp Func_1185a

Func_11654: ; 11654 (4:5654)
	inc c
	jp Func_11632

Func_11658: ; 11658 (4:5658)
	read_hl_from_sp_plus $22
	ld de, $9
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_1168e
	ld hl, sp+$23
	ld a, [hl]
	cp $10
	jp z, Func_11676
	ld hl, sp+$23
	ld a, [hl]
	cp $11
	jp nz, Func_1168b
Func_11676: ; 11676 (4:5676)
	read_hl_from_sp_plus $22
	ld de, $9
	add hl, de
	ld [hl], $0
	ld e, $1
	ld hl, sp+$23
	ld a, [hl]
	call Func_11a81
	jp Func_1168e

Func_1168b: ; 1168b (4:568b)
	jp Func_1185a

Func_1168e: ; 1168e (4:568e)
	ld a, $64
	call Func_10001
	ld hl, sp+$1e
	ld [hl], a
	read_hl_from_sp_plus $22
	ld de, $8
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$7
	add hl, de
	ld e, [hl]
	ld hl, sp+$1d
	ld [hl], e
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld e, [hl]
	ld hl, sp+$1c
	ld [hl], e
	ld hl, sp+$1e
	ld a, [hl]
	ld hl, sp+$1c
	cp [hl]
	jp nc, Func_116e3
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $2
	jp Func_1185a

Func_116e3: ; 116e3 (4:56e3)
	ld hl, sp+$1c
	ld a, [hl]
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	add [hl]
	ld hl, sp+$1c
	ld [hl], a
	ld hl, sp+$1e
	ld a, [hl]
	ld hl, sp+$1c
	cp [hl]
	jp nc, Func_11722
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	jp Func_1185a

Func_11722: ; 11722 (4:5722)
	ld hl, sp+$1c
	ld a, [hl]
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	add [hl]
	ld hl, sp+$1c
	ld [hl], a
	ld hl, sp+$1e
	ld a, [hl]
	ld hl, sp+$1c
	cp [hl]
	jp nc, Func_11762
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $1
	jp Func_1185a

Func_11762: ; 11762 (4:5762)
	ld hl, sp+$1c
	ld a, [hl]
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	add [hl]
	ld hl, sp+$1c
	ld [hl], a
	ld hl, sp+$1e
	ld a, [hl]
	ld hl, sp+$1c
	cp [hl]
	jp nc, Func_117a3
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $3
	jp Func_1185a

Func_117a3: ; 117a3 (4:57a3)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp nz, Func_117db
	read_hl_from_sp_plus $22
	ld de, $5
	add hl, de
	ld [hl], $4
	jp Func_1185a

Func_117db: ; 117db (4:57db)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $2
	jp nz, Func_11813
	read_hl_from_sp_plus $22
	ld de, $5
	add hl, de
	ld [hl], $8
	jp Func_1185a

Func_11813: ; 11813 (4:5813)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $3
	jp nz, Func_1185a
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	read_hl_from_sp_plus $22
	ld de, $9
	add hl, de
	ld [hl], $1
	ld e, $0
	ld hl, sp+$23
	ld a, [hl]
	call Func_11a81
Func_1185a: ; 1185a (4:585a)
	add sp, $24
	ret

Data_1185d: ; 1185d
	dr $1185d, $11872

Func_11872: ; 11872 (4:5872)
	push af
	push de
	add sp, -$18
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_1185d
	ld bc, $15
	call MemCopy
	read_hl_from_sp_plus $1a
	ld de, $9
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_118bb
	ld hl, sp+$1b
	ld a, [hl]
	cp $10
	jp z, Func_118a3
	ld hl, sp+$1b
	ld a, [hl]
	cp $11
	jp nz, Func_118b8
Func_118a3: ; 118a3 (4:58a3)
	read_hl_from_sp_plus $1a
	ld de, $9
	add hl, de
	ld [hl], $0
	ld e, $1
	ld hl, sp+$1b
	ld a, [hl]
	call Func_11a81
	jp Func_118bb

Func_118b8: ; 118b8 (4:58b8)
	jp Func_11a7e

Func_118bb: ; 118bb (4:58bb)
	ld a, $64
	call Func_10001
	read_hl_from_sp_plus $1a
	ld de, $8
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld e, [hl]
	ld hl, sp+$16
	ld [hl], e
	ld hl, sp+$1b
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld e, [hl]
	ld hl, sp+$15
	ld [hl], e
	ld hl, sp+$15
	cp [hl]
	jp nc, Func_1190a
	read_hl_from_sp_plus $1a
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $2
	jp Func_11a7e

Func_1190a: ; 1190a (4:590a)
	push af
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$18
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	add [hl]
	ld hl, sp+$17
	ld [hl], a
	pop af
	ld hl, sp+$15
	cp [hl]
	jp nc, Func_11948
	read_hl_from_sp_plus $1a
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	jp Func_11a7e

Func_11948: ; 11948 (4:5948)
	push af
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$18
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	add [hl]
	ld hl, sp+$17
	ld [hl], a
	pop af
	ld hl, sp+$15
	cp [hl]
	jp nc, Func_11988
	read_hl_from_sp_plus $1a
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $3
	jp Func_11a7e

Func_11988: ; 11988 (4:5988)
	push af
	ld hl, sp+$17
	ld a, [hl]
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$18
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	add [hl]
	ld hl, sp+$17
	ld [hl], a
	pop af
	ld hl, sp+$15
	cp [hl]
	jp nc, Func_119c7
	read_hl_from_sp_plus $1a
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $1
	jp Func_11a7e

Func_119c7: ; 119c7 (4:59c7)
	ld hl, sp+$1b
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp nz, Func_119ff
	read_hl_from_sp_plus $1a
	ld de, $5
	add hl, de
	ld [hl], $4
	jp Func_11a7e

Func_119ff: ; 119ff (4:59ff)
	ld hl, sp+$1b
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $2
	jp nz, Func_11a37
	read_hl_from_sp_plus $1a
	ld de, $5
	add hl, de
	ld [hl], $8
	jp Func_11a7e

Func_11a37: ; 11a37 (4:5a37)
	ld hl, sp+$1b
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_111de - 35
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $3
	jp nz, Func_11a7e
	read_hl_from_sp_plus $1a
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	read_hl_from_sp_plus $1a
	ld de, $9
	add hl, de
	ld [hl], $1
	ld e, $0
	ld hl, sp+$1b
	ld a, [hl]
	call Func_11a81
Func_11a7e: ; 11a7e (4:5a7e)
	add sp, $1c
	ret

Func_11a81: ; 11a81 (4:5a81)
	cp $6
	jp z, Func_11a8b
	cp $10
	jp nz, Func_11a90
Func_11a8b: ; 11a8b (4:5a8b)
	ld l, $0
	jp Func_11a92

Func_11a90: ; 11a90 (4:5a90)
	ld l, $4
Func_11a92: ; 11a92 (4:5a92)
	inc e
	dec e
	jp nz, Func_11a9c
	ld a, $8a
	jp Func_11a9e

Func_11a9c: ; 11a9c (4:5a9c)
	ld a, $8f
Func_11a9e: ; 11a9e (4:5a9e)
	push hl
	push af
	ld a, l
	add $7
	ld e, $4
	call SetStringStartState
	pop af
	pop hl
	push af
	push hl
	ld l, a
	ld h, $0
	push hl
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_11b47
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop hl
	push hl
	ld a, l
	add $7
	ld e, $6
	call SetStringStartState
	pop hl
	pop af
	push af
	push hl
	ld l, a
	ld h, $0
	push hl
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_11b4c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop hl
	push hl
	ld a, l
	add $7
	ld e, $8
	call SetStringStartState
	pop hl
	pop af
	push af
	push hl
	ld l, a
	ld h, $0
	push hl
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_11b51
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop hl
	push hl
	ld a, l
	add $7
	ld e, $a
	call SetStringStartState
	pop hl
	pop af
	push af
	push hl
	ld l, a
	ld h, $0
	push hl
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_11b56
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop hl
	ld a, l
	add $7
	ld e, $c
	call SetStringStartState
	pop af
	ld l, a
	ld h, $0
	push hl
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_11b5b
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ret

Data_11b47: ; 11b47
	TX_STACK
	TX_STACK
	db $0

Data_11b4c: ; 11b4c
	TX_STACK
	TX_STACK
	db $0

Data_11b51: ; 11b51
	TX_STACK
	TX_STACK
	db $0

Data_11b56: ; 11b56
	TX_STACK
	TX_STACK
	db $0

Data_11b5b: ; 11b5b
	TX_STACK
	TX_STACK
	db $0

Func_11b60: ; 11b60 (4:5b60)
	push af
	push bc
	push de
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	pop de
	push de
	ld a, e
	cp $3
	jp z, Func_11b9b
	cp $4
	jp nz, Func_11baf
	ld c, $6
	ld e, $a
	ld hl, $505
	call FarCall
	ld e, $6
	ld a, $6
	call SetStringStartState
	jp Func_11bb6

Func_11b9b: ; 11b9b (4:5b9b)
	ld c, $5
	ld e, $6
	ld hl, $705
	call FarCall
	ld e, $7
	ld a, $8
	call SetStringStartState
	jp Func_11bb6

Func_11baf: ; 11baf (4:5baf)
	ld e, $7
	ld a, $8
	call SetStringStartState
Func_11bb6: ; 11bb6 (4:5bb6)
	pop de
	ld a, e
	cp $4
	jp z, Func_11beb
	cp $3
	jp z, Func_11bdb
	cp $2
	jp z, Func_11bdb
	cp $1
	jp z, Func_11bdb
	or a
	jp nz, Func_11cb2
	ld hl, Data_11cc1
	push hl
	call PlaceString
	pop bc
	jp Func_11cb2

Func_11bdb: ; 11bdb (4:5bdb)
	ld l, e
	ld h, $0
	push hl
	ld hl, Data_11cc6
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_11cb2

Func_11beb: ; 11beb (4:5beb)
	ld hl, sp+$3
	ld a, [hl]
	cp $2
	jp z, Func_11c12
	cp $1
	jp z, Func_11c07
	or a
	jp nz, Func_11c1a
	ld hl, Data_11cca
	push hl
	call PlaceString
	pop bc
	jp Func_11c1a

Func_11c07: ; 11c07 (4:5c07)
	ld hl, Data_11cd3
	push hl
	call PlaceString
	pop bc
	jp Func_11c1a

Func_11c12: ; 11c12 (4:5c12)
	ld hl, Data_11cdc
	push hl
	call PlaceString
	pop bc
Func_11c1a: ; 11c1a (4:5c1a)
	pop hl
	push hl
	ld de, $a
	call DivideHLByDESigned
	reg16swap de, hl
	ld hl, $63
	call CompareHLtoDE
	jp nc, Func_11c41
	ld e, $8
	ld a, $6
	call SetStringStartState
	ld hl, Data_11ce3
	push hl
	call PlaceString
	pop bc
	jp Func_11c9e

Func_11c41: ; 11c41 (4:5c41)
	ld e, $8
	ld a, $6
	call SetStringStartState
	ld hl, Data_11cec
	push hl
	call PlaceString
	pop bc
	pop hl
	push hl
	ld de, $a
	call DivideHLByDESigned
	reg16swap de, hl
	ld hl, $64
	call CompareHLtoDE
	jp nc, Func_11c7a
	pop hl
	push hl
	ld de, $a
	call DivideHLByDESigned
	push hl
	ld hl, Data_11cf0
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_11c8c

Func_11c7a: ; 11c7a (4:5c7a)
	pop hl
	push hl
	ld de, $a
	call DivideHLByDESigned
	push hl
	ld hl, Data_11cf3
	push hl
	call PlaceString
	pop bc
	pop bc
Func_11c8c: ; 11c8c (4:5c8c)
	pop hl
	push hl
	ld de, $a
	call DivideHLByDESigned
	push de
	ld hl, Data_11cf7
	push hl
	call PlaceString
	pop bc
	pop bc
Func_11c9e: ; 11c9e (4:5c9e)
	set_farcall_addrs_hli Func_da901
	ld de, $a06
	ld hl, $505
	call FarCall
Func_11cb2: ; 11cb2 (4:5cb2)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	pop bc
	ret

Data_11cc1: ; 11cc1
	db "スタート", $0

Data_11cc6: ; 11cc6
	db " "
	TX_SNUM
	db $0

Data_11cca: ; 11cca
	db "(あなたのかち)", $0

Data_11cd3: ; 11cd3
	db "(あなたのまけ)", $0

Data_11cdc: ; 11cdc
	db "(ひきわけ)", $0

Data_11ce3: ; 11ce3
	db "タイムオーハﾞー", $0

Data_11cec: ; 11cec
	db "タイム", $0

Data_11cf0: ; 11cf0
	TX_SNUM
	db $0

Data_11cf3: ; 11cf3
	db " "
	TX_SNUM
	db $0

Data_11cf7: ; 11cf7
	db ":"
	TX_SNUM
	db $0

Func_11cfb: ; 11cfb (4:5cfb)
	push hl
	push de
	push bc
	push bc
	push bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_17e95
	ld c, $12
	ld e, $14
	ld hl, $0
	call FarCall
	ld c, $2
	ld e, $4
	ld hl, $306
	call FarCall
	ld c, $2
	ld e, $4
	ld hl, $d06
	call FarCall
	ld c, $4
	ld e, $2
	ld hl, $908
	call FarCall
	ld c, $2
	ld e, $6
	ld hl, $10a
	call FarCall
	ld c, $2
	ld e, $6
	ld hl, $d0a
	call FarCall
	ld c, $2
	ld e, $2
	ld hl, $90f
	call FarCall
	ld bc, $84
	ld de, $4
	ld hl, Func_0303
	call Func_101be
	ld bc, $84
	ld de, $4
	ld hl, $d03
	call Func_101be
	ld bc, $84
	ld de, $e
	ld hl, $30e
	call Func_101be
	ld bc, $87
	ld de, $105
	ld hl, $901
	call Func_101be
	ld bc, $86
	ld de, $105
	ld hl, $a01
	call Func_101be
	pop bc
	push bc
	inc c
	dec c
	jp z, Func_11db8
	ld a, c
	cp $1
	jp nz, Func_11ddb
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_11ddb
Func_11db8: ; 11db8 (4:5db8)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	jp Func_11dfb

Func_11ddb: ; 11ddb (4:5ddb)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	ld c, l
	ld b, h
	pop de
Func_11dfb: ; 11dfb (4:5dfb)
	push de
	push bc
	ld hl, $5
	add hl, bc
	ld a, [hl]
	ld hl, sp+$8
	ld [hl], a
	ld hl, $5
	add hl, de
	ld a, [hl]
	ld hl, sp+$9
	ld [hl], a
	ld hl, $2b
	add hl, bc
	ld a, [hl]
	ld hl, sp+$6
	ld [hl], a
	ld hl, $2b
	add hl, de
	ld a, [hl]
	ld hl, sp+$7
	ld [hl], a
	ld c, $0
Func_11e1f: ; 11e1f (4:5e1f)
	ld a, c
	cp $2
	jp nc, Func_11e6b
	push bc
	set_farcall_addrs_hli Func_6adb3
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$8
	add hl, de
	ld e, [hl]
	call FarCall
	ld l, a
	pop bc
	push bc
	push hl
	ld a, c
	add a
	add a
	ld d, a
	add a
	add a
	add a
	add d
	push af
	set_farcall_addrs_hli LoadSpriteGFX
	pop af
	pop hl
	ld h, a
	ld e, $0
	ld c, $24
	call FarCall
	pop bc
	inc c
	jp Func_11e1f

Func_11e6b: ; 11e6b (4:5e6b)
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	read_hl_from_sp_plus $e
	ld de, $8
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $e
	inc hl
	inc hl
	ld de, $8
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $e
	ld de, $9
	add hl, de
	ld [hl], $0
	ld a, [hl]
	read_hl_from_sp_plus $e
	ld de, $6
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $e
	ld de, $5
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $e
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	pop bc
	ld hl, $2e
	add hl, bc
	ld a, [hl]
	dec a
	read_hl_from_sp_plus $c
	ld de, $8
	add hl, de
	ld [hl], a
	call GetHLAtSPPlus10
	ld de, $88
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	inc hl
	inc hl
	ld de, $8
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	ld de, $9
	add hl, de
	ld [hl], $0
	ld a, [hl]
	call GetHLAtSPPlus10
	ld de, $6
	add hl, de
	ld [hl], a
	call GetHLAtSPPlus10
	ld de, $5
	add hl, de
	ld [hl], a
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	pop de
	ld hl, $2e
	add hl, de
	ld a, [hl]
	dec a
	call GetHLAtSPPlus8
	ld de, $8
	add hl, de
	ld [hl], a
	pop bc
	inc c
	dec c
	jp z, Func_11f26
	ld a, c
	cp $1
	jp nz, Func_11f42
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_11f42
Func_11f26: ; 11f26 (4:5f26)
	xor a
	call Func_10a8b
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld [hl], a
	ld a, $1
	call Func_10a8b
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld [hl], a
	jp Func_11f5b

Func_11f42: ; 11f42 (4:5f42)
	ld a, $1
	call Func_10a8b
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld [hl], a
	xor a
	call Func_10a8b
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld [hl], a
Func_11f5b: ; 11f5b (4:5f5b)
	ld l, $0
	push hl
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $c
	inc hl
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $c
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $e
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $10
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $12
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_12029
	pop bc
	pop bc
	pop bc
	pop bc
	ld a, [wSystemType]
	cp $11
	jp nz, Func_11fc9
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, $2
	ld [wc39a], a
Func_11fc9: ; 11fc9 (4:5fc9)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_11fda: ; 11fda (4:5fda)
	push de
	push af
	callba_hli Func_da4dc
	ld a, [wLCDC]
	or $3
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	ld a, $3
	ld [wc316], a
	pop af
	pop de
	or a
	jp nz, Func_12021
	inc e
	dec e
	jp nz, Func_12021
	ld a, $2
	ld [wc2fa], a
	callba_hli Func_222b7
	xor a
	ld [wc2fa], a
Func_12021: ; 12021 (4:6021)
	call FillVisibleAreaWithBlankTile
	ret

Data_12025: ; 12025
	db $0, $c, $18, $c

Func_12029: ; 12029 (4:6029)
	push hl
	add sp, -$12
	push de
	push bc
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_12025
	ld bc, $4
	call MemCopy
	read_hl_from_sp_plus $18
	ld de, $8
	add hl, de
	write_hl_to_sp_plus $10
	pop bc
	ld hl, $8
	add hl, bc
	write_hl_to_sp_plus $10
	pop de
	ld hl, $10
	add hl, de
	call WriteHLToSPPlus8
	read_hl_from_sp_plus $18
	ld de, $10
	add hl, de
	call WriteHLToSPPlus10
	ld hl, sp+$5
	xor a
	ld [hl], a
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$18
	ld a, [hl]
	cp $3
	jp nz, Func_12078
	ld hl, sp+$4
	ld [hl], $1
Func_12078: ; 12078 (4:6078)
	ld hl, sp+$1a
	ld a, [hl]
	cp $3
	jp nz, Func_12084
	ld hl, sp+$5
	ld [hl], $1
Func_12084: ; 12084 (4:6084)
	ld hl, sp+$1c
	ld a, [hl]
	cp $2
	jp nz, Func_12093
	ld hl, sp+$1c
	ld [hl], $0
	jp Func_1209f

Func_12093: ; 12093 (4:6093)
	ld hl, sp+$1c
	ld a, [hl]
	cp $3
	jp nz, Func_1209f
	ld hl, sp+$1c
	ld [hl], $2
Func_1209f: ; 1209f (4:609f)
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	ld hl, sp+$18
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld l, [hl]
	ld h, $0
	write_hl_to_sp_plus $10
	set_farcall_addrs_hli UpdateCurSprite
	ld hl, sp+$1c
	ld l, [hl]
	ld h, $0
	ld de, $3
	call DivideHLByDESigned
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10
	ld a, l
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $e
	ld h, l
	ld l, $0
	pop de
	add hl, de
	reg16swap de, hl
	call FarCall
	ld hl, sp+$1a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $24
	add hl, de
	write_hl_to_sp_plus $12
	set_farcall_addrs_hli UpdateCurSprite
	ld hl, sp+$1c
	ld l, [hl]
	ld h, $0
	ld de, $3
	call DivideHLByDESigned
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $12
	ld a, l
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $10
	ld h, l
	ld l, $0
	pop de
	add hl, de
	reg16swap de, hl
	call FarCall
	callba_hli Func_d9f55
	add sp, $14
	ret

Data_12155: ; 12155
	dr $12155, $1228e

Func_1228e: ; 1228e (4:628e)
	push af
	push bc
	push bc
	push bc
	push bc
	push bc
	xor a
	ld hl, sp+$b
	ld a, [hl]
	cp $2
	jp nz, Func_122a1
	call Func_10766
	xor a
Func_122a1: ; 122a1 (4:62a1)
	ld hl, sp+$b
	ld a, [hl]
	cp $1
	jp nz, Func_122b3
	ld a, $1
	call Func_105ce
	ld l, $1
	jp Func_122b8

Func_122b3: ; 122b3 (4:62b3)
	call Func_1028b
	ld l, $0
Func_122b8: ; 122b8 (4:62b8)
	push hl
	callba_hli Func_62865
	ld a, $f
	call OverworldPlaySong
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus6
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	pop hl
Func_1230c: ; 1230c (4:630c)
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call Func_12b93
	ld l, $0
	push hl
	ld c, $0
	ld e, $0
	xor a
	call Func_12acb
	pop bc
	ld a, [wSystemType]
	cp $11
	jp nz, Func_12352
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, $2
	ld [wc39a], a
Func_12352: ; 12352 (4:6352)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$b
	xor a
	ld [hl], a
	ld hl, sp+$a
	ld [hl], a
	pop hl
	push hl
	ld a, l
	call Func_12448
	ld c, a
	pop hl
	ld a, c
	cp $2
	jp nz, Func_123d2
	push hl
	call GetHLAtSPPlus8
	push hl
	call GetHLAtSPPlus8
	ld de, $18
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	push hl
	call GetHLAtSPPlus6
	ld de, $18
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld de, Data_12436
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	xor a
Func_123c0: ; 123c0 (4:63c0)
	cp $3c
	jp nc, Func_123ce
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_123c0

Func_123ce: ; 123ce (4:63ce)
	pop hl
	jp Func_123d5

Func_123d2: ; 123d2 (4:63d2)
	jp Func_123d8

Func_123d5: ; 123d5 (4:63d5)
	jp Func_1230c

Func_123d8: ; 123d8 (4:63d8)
	ld hl, sp+$b
	ld a, [hl]
	cp $1
	jp nz, Func_123fe
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_123f2
	jp Func_123fe

Func_123f2: ; 123f2 (4:63f2)
	inc c
	dec c
	jp nz, Func_123fc
	ld c, $1
	jp Func_123fe

Func_123fc: ; 123fc (4:63fc)
	ld c, $0
Func_123fe: ; 123fe (4:63fe)
	push bc
	ld hl, sp+$d
	ld a, [hl]
	cp $2
.asm_12403
	jp nz, Func_1240a
	call Func_107b8
Func_1240a: ; 1240a (4:640a)
	pop bc
	ld hl, sp+$b
	ld a, [hl]
	or a
	jp nz, Func_1241e
	ld a, c
	cp $1
	jp nz, Func_1241e
	ld hl, $1
	jp Func_1242f

Func_1241e: ; 1241e (4:641e)
	ld hl, sp+$b
	ld a, [hl]
	cp $1
	jp nz, Func_1242c
	ld l, c
	ld h, $0
	jp Func_1242f

Func_1242c: ; 1242c (4:642c)
	ld hl, $0
Func_1242f: ; 1242f (4:642f)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_12436: ; 12436
	db "(ひきわけなのてﾞ もういちとﾞ)", $0

Func_12448: ; 12448 (4:6448)
	push af
	add sp, -$4e
	xor a
Func_1244c: ; 1244c (4:644c)
	cp $3c
	jp nc, Func_1245d
	ld e, a
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld [hl], $0
	inc a
	jp Func_1244c

Func_1245d: ; 1245d (4:645d)
	ld de, $0
	ld hl, sp+$a
	call Func_12892
	ld c, $0
Func_12467: ; 12467 (4:6467)
	ld a, c
	cp $6
	jp nc, Func_1247f
	ld e, c
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$46
	add hl, de
	ld [hl], a
	inc c
	jp Func_12467

Func_1247f: ; 1247f (4:647f)
	xor a
	ld hl, sp+$9
	ld [hl], $6
	ld hl, sp+$8
	xor a
	ld [hl], a
	ld hl, sp+$7
	ld [hl], a
	ld c, $0
	ld hl, sp+$4c
	ld [hl], c
	ld hl, sp+$6
	ld [hl], c
	ld hl, sp+$5
	ld [hl], c
	xor a
	ld hl, sp+$4d
	ld [hl], a
	ld hl, sp+$4f
	ld a, [hl]
	or a
	jp nz, Func_124a8
	ld hl, sp+$4
	ld [hl], $0
	jp Func_124c2

Func_124a8: ; 124a8 (4:64a8)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_124be
	ld hl, sp+$4
	ld [hl], $0
	jp Func_124c2

Func_124be: ; 124be (4:64be)
	ld hl, sp+$4
	ld [hl], $1
Func_124c2: ; 124c2 (4:64c2)
	ld hl, sp+$3
	xor a
	ld [hl], a
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$1
	xor a
	ld [hl], a
	ld hl, sp+$0
	ld [hl], a
Func_124d0: ; 124d0 (4:64d0)
	push bc
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_12573
	call CheckButton
	ld l, a
	ld h, $0
	ld a, l
	and $1
	jp z, Func_124f6
	ld hl, sp+$9
	ld a, [hl]
	cp $5
	jp nc, Func_124f3
	ld hl, sp+$9
	ld a, [hl]
	inc a
	ld hl, sp+$9
	ld [hl], a
Func_124f3: ; 124f3 (4:64f3)
	jp Func_12570

Func_124f6: ; 124f6 (4:64f6)
	ld a, l
	and $2
	jp z, Func_1250e
	ld hl, sp+$9
	ld a, [hl]
	cp $1
	jp c, Func_1250b
	ld hl, sp+$9
	ld a, [hl]
	dec a
	ld hl, sp+$9
	ld [hl], a
Func_1250b: ; 1250b (4:650b)
	jp Func_12570

Func_1250e: ; 1250e (4:650e)
	ld a, l
	and $4
	jp z, Func_12527
	ld hl, sp+$9
	ld a, [hl]
	cp $3
	jp c, Func_12524
	ld hl, sp+$9
	ld a, [hl]
	add $fd
	ld hl, sp+$9
	ld [hl], a
Func_12524: ; 12524 (4:6524)
	jp Func_12570

Func_12527: ; 12527 (4:6527)
	ld a, l
	and $8
	jp z, Func_12540
	ld hl, sp+$9
	ld a, [hl]
	cp $3
	jp nc, Func_1253d
	ld hl, sp+$9
	ld a, [hl]
	add $3
	ld hl, sp+$9
	ld [hl], a
Func_1253d: ; 1253d (4:653d)
	jp Func_12570

Func_12540: ; 12540 (4:6540)
	ld a, l
	and $10
	jp z, Func_12570
	ld hl, sp+$5
	ld a, [hl]
	or a
	jp nz, Func_12554
	ld hl, sp+$4
	ld [hl], $1
	jp Func_12570

Func_12554: ; 12554 (4:6554)
	ld hl, sp+$5
	ld a, [hl]
	cp $1
	jp nz, Func_1256c
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$a
	cp [hl]
	jp z, Func_1256c
	ld hl, sp+$4
	ld [hl], $1
	jp Func_12570

Func_1256c: ; 1256c (4:656c)
	ld hl, sp+$4
	ld [hl], $0
Func_12570: ; 12570 (4:6570)
	jp Func_12576

Func_12573: ; 12573 (4:6573)
	call NextOverworldFrame
Func_12576: ; 12576 (4:6576)
	pop bc
	ld hl, sp+$4f
	ld a, [hl]
	or a
	jp nz, Func_125d4
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_125d4
	ld hl, sp+$4c
	ld a, [hl]
	cp $f
	jp nz, Func_125ca
	push bc
	call Func_1288c
	ld hl, sp+$a
	ld [hl], a
	ld hl, sp+$4e
	ld [hl], $0
	pop bc
	inc c
	ld a, c
	cp $6
	jp nz, Func_125c7
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp nz, Func_125b8
	ld hl, sp+$7
	ld a, [hl]
	ld hl, sp+$8
	cp [hl]
	jp z, Func_125b8
	ld hl, sp+$3
	ld [hl], $1
	jp Func_125c7

Func_125b8: ; 125b8 (4:65b8)
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp nz, Func_125c6
	ld hl, sp+$3
	ld [hl], $1
	jp Func_125c7

Func_125c6: ; 125c6 (4:65c6)
	dec c
Func_125c7: ; 125c7 (4:65c7)
	jp Func_125d1

Func_125ca: ; 125ca (4:65ca)
	ld hl, sp+$4c
	ld a, [hl]
	inc a
	ld hl, sp+$4c
	ld [hl], a
Func_125d1: ; 125d1 (4:65d1)
	jp Func_1265a

Func_125d4: ; 125d4 (4:65d4)
	ld hl, sp+$4f
	ld a, [hl]
	cp $1
	jp nz, Func_1265a
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_12620
	push bc
	ld c, $1
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $1
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $1
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	pop bc
	jp Func_1265a

Func_12620: ; 12620 (4:6620)
	push bc
	ld c, $1
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $1
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	ld c, $1
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, $1
	call Func_10506
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	pop bc
Func_1265a: ; 1265a (4:665a)
	push bc
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$7
	cp [hl]
	jp nz, Func_1266d
	ld hl, sp+$a
	ld a, [hl]
	ld hl, sp+$8
	cp [hl]
	jp z, Func_1268a
Func_1266d: ; 1266d (4:666d)
	ld hl, sp+$8
	ld l, [hl]
	push hl
	ld hl, sp+$c
	ld c, [hl]
	ld hl, sp+$9
	ld e, [hl]
	ld hl, sp+$b
	ld a, [hl]
	call Func_12acb
	pop bc
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$7
	ld [hl], a
	ld hl, sp+$a
	ld a, [hl]
	ld hl, sp+$8
	ld [hl], a
Func_1268a: ; 1268a (4:668a)
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp nz, Func_126b9
	ld hl, sp+$5
	ld a, [hl]
	cp $1
	jp z, Func_126b9
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp nz, Func_126b9
	ld e, $0
	ld hl, sp+$9
	ld a, [hl]
	call Func_128fd
	ld hl, sp+$2
	ld [hl], $1
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
Func_126b9: ; 126b9 (4:66b9)
	ld hl, sp+$5
	ld a, [hl]
	cp $1
	jp nz, Func_126e8
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp z, Func_126e8
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_126e8
	ld e, $1
	ld hl, sp+$a
	ld a, [hl]
	call Func_128fd
	ld hl, sp+$3
	ld [hl], $1
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
Func_126e8: ; 126e8 (4:66e8)
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp nz, Func_12815
	ld hl, sp+$3
	ld a, [hl]
	cp $1
	jp nz, Func_12815
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_12743
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_12743
	ld hl, sp+$7
	ld a, [hl]
	ld hl, sp+$8
	cp [hl]
	jp nz, Func_12743
	push bc
	ld hl, sp+$6
	ld a, [hl]
	or a
	jp nz, Func_1272d
	ld hl, sp+$5
	ld [hl], $0
	ld c, $1
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, $1
	call Func_1051a
	jp Func_1273f

Func_1272d: ; 1272d (4:672d)
	ld hl, sp+$4
	ld [hl], $0
	ld c, $1
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, $1
	call Func_10506
Func_1273f: ; 1273f (4:673f)
	pop bc
	jp Func_12815

Func_12743: ; 12743 (4:6743)
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$7
	ld h, [hl]
	ld d, h
	push de
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld hl, sp+$48
	add hl, de
	ld a, [hl]
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$48
	add hl, de
	ld l, [hl]
	ld h, a
	pop de
	call Func_12982
	xor a
Func_12763: ; 12763 (4:6763)
	cp $3c
	jp nc, Func_12771
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_12763

Func_12771: ; 12771 (4:6771)
	ld hl, sp+$1
	xor a
	ld [hl], a
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$3
	ld [hl], a
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$4c
	ld [hl], $0
	ld c, [hl]
	push bc
	ld hl, sp+$6
	ld c, [hl]
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld hl, sp+$48
	add hl, de
	ld a, [hl]
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$48
	add hl, de
	ld e, [hl]
	call Func_12db3
	ld e, a
	pop bc
	ld a, e
	cp $ff
	jp nz, Func_127de
	push bc
	callba_hli WaitAorBButtonOverworld_17a44
	ld hl, sp+$51
	ld a, [hl]
	cp $1
	jp nz, Func_127be
	call Func_1052e
Func_127be: ; 127be (4:67be)
	ld hl, sp+$4f
	ld l, [hl]
	push hl
	ld hl, sp+$d
	ld l, [hl]
	push hl
	ld hl, sp+$10
	ld c, l
	ld b, h
	ld hl, sp+$4c
	reg16swap de, hl
	ld hl, sp+$d
	call Func_12ca4
	pop bc
	pop bc
	ld hl, sp+$b
	ld [hl], a
	pop bc
	jp Func_12815

Func_127de: ; 127de (4:67de)
	ld hl, sp+$4f
	ld a, [hl]
	cp $1
	jp z, Func_127fe
	push de
	inc e
	dec e
	jp nz, Func_127fa
	callba_hli Func_222b7
Func_127fa: ; 127fa (4:67fa)
	pop de
	jp Func_12812

Func_127fe: ; 127fe (4:67fe)
	push de
	call FillVisibleAreaWithBlankTile
	pop de
	push de
	ld a, e
	ld de, $0
	ld bc, $201
	call Func_107d7
	call Func_1052e
	pop de
Func_12812: ; 12812 (4:6812)
	jp Func_12818

Func_12815: ; 12815 (4:6815)
	jp Func_124d0

Func_12818: ; 12818 (4:6818)
	push de
	call FillVisibleAreaWithBlankTile
	pop de
	ld a, e
	add sp, $50
	ret

Func_12821: ; 12821
	push hl
	push de
	call GetHLAtSPPlus8
	ld a, [hl]
	cp $f
	jp nz, Func_12881
	call Func_1288c
	pop hl
	push hl
	inc hl
	ld [hl], a
	call GetHLAtSPPlus8
	ld [hl], $0
	call GetHLAtSPPlus10
	ld a, $1
	add [hl]
	ld [hl], a
	call GetHLAtSPPlus10
	ld a, [hl]
	cp $a
	jp nz, Func_12855
	call GetHLAtSPPlus4
	ld a, [hl]
	or a
	jp nz, Func_12855
	ld a, $1
	jp Func_12889

Func_12855: ; 12855 (4:6855)
	call GetHLAtSPPlus10
	ld a, [hl]
	cp $a
	jp nz, Func_1287e
	call GetHLAtSPPlus4
	ld a, [hl]
	cp $1
	jp nz, Func_1287e
	pop hl
	push hl
	ld a, [hl]
	pop hl
	push hl
	inc hl
	cp [hl]
	jp nz, Func_12879
	call GetHLAtSPPlus10
	ld [hl], $9
	jp Func_1287e

Func_12879: ; 12879 (4:6879)
	ld a, $2
	jp Func_12889

Func_1287e: ; 1287e (4:687e)
	jp Func_12888

Func_12881: ; 12881 (4:6881)
	call GetHLAtSPPlus8
	ld a, $1
	add [hl]
	ld [hl], a
Func_12888: ; 12888 (4:6888)
	xor a
Func_12889: ; 12889 (4:6889)
	pop bc
	pop bc
	ret

Func_1288c: ; 1288c (4:688c)
	ld a, $6
	call Func_10001
	ret

Func_12892: ; 12892 (4:6892)
	push hl
	push bc
	push bc
	ld hl, sp+$2
	ld [hl], $0
Func_12899: ; 12899 (4:6899)
	ld hl, sp+$2
	ld a, [hl]
	cp $3c
	jp nc, Func_128f9
	ld a, $3c
	call Func_10001
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$3
	ld [hl], $0
	ld hl, sp+$1
	ld [hl], $0
Func_128b1: ; 128b1 (4:68b1)
	ld hl, sp+$1
	ld a, [hl]
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_128db
	ld hl, sp+$2
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	add hl, bc
	ld a, [hl]
	ld hl, sp+$0
	cp [hl]
	jp nz, Func_128d1
	ld hl, sp+$3
	ld [hl], $ff
	jp Func_128db

Func_128d1: ; 128d1 (4:68d1)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_128b1

Func_128db: ; 128db (4:68db)
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_128f6
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$2
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	add hl, bc
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
Func_128f6: ; 128f6 (4:68f6)
	jp Func_12899

Func_128f9: ; 128f9 (4:68f9)
	pop bc
	pop bc
	pop bc
	ret

Func_128fd: ; 128fd (4:68fd)
	push bc
	push de
	push bc
	push af
	ld b, $3
	call DivideAbyB
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	ld hl, sp+$6
	ld [hl], a
	pop af
	pop bc
	cp $5
	jp z, Func_12938
	cp $2
	jp z, Func_12938
	cp $4
	jp z, Func_12933
	cp $1
	jp z, Func_12933
	cp $3
	jp z, Func_1292e
	or a
	jp nz, Func_1293a
Func_1292e: ; 1292e (4:692e)
	ld c, $1
	jp Func_1293a

Func_12933: ; 12933 (4:6933)
	ld c, $8
	jp Func_1293a

Func_12938: ; 12938 (4:6938)
	ld c, $f
Func_1293a: ; 1293a (4:693a)
	push bc
	ld l, $6
	push hl
	ld a, c
	ld hl, sp+$6
	ld e, [hl]
	ld c, $5
	call Func_10215
	pop bc
	pop bc
	pop de
	inc e
	dec e
	jp nz, Func_1295f
	ld hl, sp+$0
	ld l, [hl]
	ld h, c
	inc hl
	inc hl
	inc hl
	ld de, Data_12974
	call PlaceStringDEatCoordHL
	jp Func_12972

Func_1295f: ; 1295f (4:695f)
	ld a, e
	cp $1
	jp nz, Func_12972
	ld hl, sp+$0
	ld l, [hl]
	ld h, c
	inc hl
	inc hl
	inc hl
	ld de, Data_1297c
	call PlaceStringDEatCoordHL
Func_12972: ; 12972 (4:6972)
	pop bc
	ret

Data_12974: ; 12974
	db "(しﾞふﾞん)", $0

Data_1297c: ; 1297c
	db "(あいて)", $0

Func_12982: ; 12982 (4:6982)
	push hl
	push bc
	push bc
	push bc
	push bc
	push de
	read_hl_from_sp_plus $c
	ld e, h
	ld hl, sp+$7
	ld [hl], e
	read_hl_from_sp_plus $c
	ld e, l
	ld hl, sp+$8
	ld [hl], e
	pop de
	ld hl, sp+$0
	ld [hl], d
	ld hl, sp+$1
	ld [hl], e
	ld hl, sp+$7
	ld [hl], $0
Func_129a3: ; 129a3 (4:69a3)
	ld hl, sp+$7
	ld a, [hl]
	cp $2
	jp nc, Func_129f7
	ld hl, sp+$2
	ld [hl], $0
	ld c, $0
Func_129b1: ; 129b1 (4:69b1)
	ld a, c
	cp $1b
	jp nc, Func_129ed
	ld hl, sp+$2
	ld a, [hl]
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	add [hl]
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld hl, sp+$5
	add hl, de
	cp [hl]
	jp c, Func_129e9
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld [hl], c
	jp Func_129ed

Func_129e9: ; 129e9 (4:69e9)
	inc c
	jp Func_129b1

Func_129ed: ; 129ed (4:69ed)
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	jp Func_129a3

Func_129f7: ; 129f7 (4:69f7)
	ld c, $0
Func_129f9: ; 129f9 (4:69f9)
	ld a, c
	cp $2
	jp nc, Func_12ab0
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	ld e, $2
	call Func_128fd
	pop bc
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	cp $5
	jp z, Func_12a6f
	cp $2
	jp z, Func_12a6f
	cp $4
	jp z, Func_12a50
	cp $1
	jp z, Func_12a50
	cp $3
	jp z, Func_12a31
	or a
	jp nz, Func_12a8b
Func_12a31: ; 12a31 (4:6a31)
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	ld b, $3
	call DivideAbyB
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	add $2
	ld e, a
	ld a, $1
	call SetStringStartState
	pop bc
	jp Func_12a8b

Func_12a50: ; 12a50 (4:6a50)
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	ld b, $3
	call DivideAbyB
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	add $2
	ld e, a
	ld a, $8
	call SetStringStartState
	pop bc
	jp Func_12a8b

Func_12a6f: ; 12a6f (4:6a6f)
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	ld b, $3
	call DivideAbyB
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	add $2
	ld e, a
	ld a, $f
	call SetStringStartState
	pop bc
Func_12a8b: ; 12a8b (4:6a8b)
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_12ac2
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	inc c
	jp Func_129f9

Func_12ab0: ; 12ab0 (4:6ab0)
	ld l, $e
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_12ac2: ; 12ac2
	TX_CALL
	db $0

Data_12ac5: ; 12ac5
	dr $12ac5, $12acb

Func_12acb: ; 12acb (4:6acb)
	push af
	push de
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_12ac5
	ld bc, $6
	call MemCopy
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	and $f
	ld l, a
	push hl
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	add hl, de
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	pop de
	call SetStringStartState
	read_hl_from $c261
	ld a, $8f
	ld [hl], a
	ld hl, sp+$e
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	and $f
	add $2
	ld l, a
	push hl
	ld hl, sp+$10
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	add hl, de
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	pop de
	call SetStringStartState
	read_hl_from $c261
	ld a, $8f
	ld [hl], a
	ld hl, sp+$b
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	and $f
	ld l, a
	push hl
	ld hl, sp+$d
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	add hl, de
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	pop de
	call SetStringStartState
	read_hl_from $c261
	ld a, $8b
	ld [hl], a
	pop bc
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	and $f
	add $2
	ld l, a
	push hl
	ld e, c
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	pop de
	call SetStringStartState
	read_hl_from $c261
	ld a, $8c
	ld [hl], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_12b93: ; 12b93 (4:6b93)
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_12ba6
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_12bba
Func_12ba6: ; 12ba6 (4:6ba6)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_12bba: ; 12bba (4:6bba)
	call Func_1fbe
	ld e, $5
	xor a
	call SetStringStartState
	ld a, BANK(Func_17e95)
	ld [wFarCallDestBank], a
	ld hl, Func_17e95
	write_hl_to wFarCallDestAddr
	ld c, $6
	ld e, $5
	ld hl, $100
	call FarCall
	ld c, $6
	ld e, $5
	ld hl, $800
	call FarCall
	ld c, $6
	ld e, $5
	ld hl, $f00
	call FarCall
	ld c, $6
	ld e, $5
	ld hl, $107
	call FarCall
	ld c, $6
	ld e, $5
	ld hl, $807
	call FarCall
	ld c, $6
	ld e, $5
	ld hl, $f07
	call FarCall
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $e602
	ld de, $404
	ld hl, $201
	call FarCall
	ld bc, $e602
	ld de, $b04
	ld hl, $901
	call FarCall
	ld bc, $e602
	ld de, $1204
	ld hl, $1001
	call FarCall
	ld bc, $e602
	ld de, $40b
	ld hl, $208
	call FarCall
	ld bc, $e602
	ld de, $b0b
	ld hl, $908
	call FarCall
	ld bc, $e602
	ld de, $120b
	ld hl, $1008
	call FarCall
	ld e, $e
	ld a, $1
	call SetStringStartState
	ld hl, Data_12c88
	push hl
	call PlaceString
	pop bc
	ld e, $10
	ld a, $1
	call SetStringStartState
	ld hl, Data_12c96
	push hl
	call PlaceString
	pop bc
	ret

Data_12c88: ; 12c88
	db "カートﾞ(を えらんてﾞ)", $0

Data_12c96: ; 12c96
	db "Aホﾞタン(を おしてね)", $0

Func_12ca4: ; 12ca4 (4:6ca4)
	push hl
	push de
	push bc
	push bc
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_12cbb
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_12ccf
Func_12cbb: ; 12cbb (4:6cbb)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_12ccf: ; 12ccf (4:6ccf)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call Func_12b93
	ld hl, sp+$c
	ld a, [hl]
	or a
	jp nz, Func_12cff
	call GetHLAtSPPlus8
	inc hl
	ld l, [hl]
	push hl
	call GetHLAtSPPlus10
	inc hl
	ld c, [hl]
	call GetHLAtSPPlus10
	ld a, [hl]
	call GetHLAtSPPlus10
	ld e, [hl]
	call Func_12acb
	pop bc
	jp Func_12d16

Func_12cff: ; 12cff (4:6cff)
	call GetHLAtSPPlus8
	ld l, [hl]
	push hl
	call GetHLAtSPPlus10
	ld c, [hl]
	call GetHLAtSPPlus10
	inc hl
	ld a, [hl]
	call GetHLAtSPPlus10
	inc hl
	ld e, [hl]
	call Func_12acb
	pop bc
Func_12d16: ; 12d16 (4:6d16)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_12d40
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, $2
	ld [wc39a], a
Func_12d40: ; 12d40 (4:6d40)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$2
	ld [hl], $0
	pop bc
Func_12d51: ; 12d51 (4:6d51)
	ld hl, sp+$0
	ld a, [hl]
	cp $6
	jp nc, Func_12d9e
	push bc
	ld hl, sp+$2
	ld a, [hl]
	call GetHLAtSPPlus8
	cp [hl]
	jp z, Func_12d6f
	ld hl, sp+$2
	ld a, [hl]
	call GetHLAtSPPlus8
	inc hl
	cp [hl]
	jp nz, Func_12d93
Func_12d6f: ; 12d6f (4:6d6f)
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, bc
	ld a, [hl]
	ld hl, sp+$2
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	add hl, bc
	ld [hl], a
	ld hl, sp+$a
	ld a, [hl]
	inc a
	ld hl, sp+$a
	ld [hl], a
	ld hl, sp+$a
	ld a, [hl]
	cp $3c
	jp nz, Func_12d93
	ld hl, sp+$a
	ld [hl], $0
Func_12d93: ; 12d93 (4:6d93)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	pop bc
	jp Func_12d51

Func_12d9e: ; 12d9e (4:6d9e)
	ld hl, sp+$8
	ld a, [hl]
	pop bc
	pop bc
	pop bc
	ret

Data_12da5: ; 12da5
	dr $12da5, $12db3

Func_12db3: ; 12db3 (4:6db3)
	add sp, -$e
	push bc
	ld hl, sp+$c
	ld [hl], a
	ld hl, sp+$d
	ld [hl], e
	ld hl, sp+$a
	ld [hl], $0
Func_12dc0: ; 12dc0 (4:6dc0)
	ld hl, sp+$a
	ld a, [hl]
	cp $2
	jp nc, Func_12e14
	ld hl, sp+$b
	ld [hl], $0
	ld c, $0
Func_12dce: ; 12dce (4:6dce)
	ld a, c
	cp $1b
	jp nc, Func_12e0a
	ld hl, sp+$b
	ld a, [hl]
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	add [hl]
	ld hl, sp+$b
	ld [hl], a
	ld hl, sp+$b
	ld a, [hl]
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	add hl, de
	cp [hl]
	jp c, Func_12e06
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$e
	add hl, de
	ld [hl], c
	jp Func_12e0a

Func_12e06: ; 12e06 (4:6e06)
	inc c
	jp Func_12dce

Func_12e0a: ; 12e0a (4:6e0a)
	ld hl, sp+$a
	ld a, [hl]
	inc a
	ld hl, sp+$a
	ld [hl], a
	jp Func_12dc0

Func_12e14: ; 12e14 (4:6e14)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call FillVisibleAreaWithBlankTile
	call Func_2009
	ld a, [wSystemType]
	cp $11
	jp nz, Func_12e48
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
Func_12e48: ; 12e48 (4:6e48)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	call WriteHLToSPPlus4
	set_farcall_addrs_hli Func_dc0a
	call GetHLAtSPPlus6
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	call GetHLAtSPPlus4
	ld de, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	callba_hli Func_d767
	ld a, [wSystemType]
	cp $1
	jp z, Func_12ebc
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_12ec5
Func_12ebc: ; 12ebc (4:6ebc)
	ld de, $e
	ld hl, Data_12da5
	call Func_2b7d
Func_12ec5: ; 12ec5 (4:6ec5)
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $105
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $b05
	call FarCall
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $a
	ld hl, $d
	call FarCall
	ld c, $5
	ld e, $a
	ld hl, $a0d
	call FarCall
	ld e, $e
	ld a, $1
	call SetStringStartState
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_13074
	push hl
	call PlaceString
	pop bc
	pop bc
	ld e, $e
	ld a, $b
	call SetStringStartState
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_13077
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	push bc
	ld l, c
	push hl
	ld hl, sp+$8
	ld c, l
	ld b, h
	ld hl, sp+$11
	ld e, [hl]
	ld hl, sp+$10
	ld a, [hl]
	call Func_1307a
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	ld hl, sp+$d
	ld e, [hl]
	ld hl, sp+$c
	ld a, [hl]
	call Func_13668
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld c, $0
Func_12fb0: ; 12fb0 (4:6fb0)
	ld a, c
	cp $2
	jp nc, Func_1302f
	ld l, c
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_12ff1
	push bc
	set_farcall_addrs_hli Func_616dd
	pop bc
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, c
	call FarCall
	pop bc
	jp Func_1302b

Func_12ff1: ; 12ff1 (4:6ff1)
	ld l, c
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc d
	dec d
	bit 7, d
	jr z, Func_1302b
	push bc
	set_farcall_addrs_hli Func_61a3e
	pop bc
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	ld a, [hl]
	cpl
	ld e, a
	inc hl
	ld a, [hl]
	cpl
	ld d, a
	inc de
	ld a, c
	call FarCall
	pop bc
Func_1302b: ; 1302b (4:702b)
	inc c
	jp Func_12fb0

Func_1302f: ; 1302f (4:702f)
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_1304d
	pop hl
	push hl
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_1304d
	ld a, $2
	jp Func_13071

Func_1304d: ; 1304d (4:704d)
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_1305f
	ld a, $1
	jp Func_13071

Func_1305f: ; 1305f (4:705f)
	pop hl
	push hl
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_1306f
	xor a
	jp Func_13071

Func_1306f: ; 1306f (4:706f)
	ld a, $ff
Func_13071: ; 13071 (4:7071)
	add sp, $e
	ret

Data_13074: ; 13074
	TX_CALL
	db $0

Data_13077: ; 13077
	TX_CALL
	db $0

Func_1307a: ; 1307a (4:707a)
	push af
	push de
	push bc
	add sp, -$4c
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $42
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	write_hl_to_sp_plus $40
	read_hl_from_sp_plus $42
	ld de, $13
	add hl, de
	ld e, [hl]
	ld hl, sp+$49
	ld [hl], e
	read_hl_from_sp_plus $40
	ld de, $13
	add hl, de
	ld e, [hl]
	ld hl, sp+$4a
	ld [hl], e
	read_hl_from_sp_plus $42
	ld de, $23
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $3c
	read_hl_from_sp_plus $40
	ld de, $23
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $3e
	read_hl_from_sp_plus $42
	ld de, $25
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $38
	read_hl_from_sp_plus $40
	ld de, $25
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $3a
	read_hl_from_sp_plus $42
	ld de, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$34
	ld [hl], e
	read_hl_from_sp_plus $40
	ld de, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$35
	ld [hl], e
	read_hl_from_sp_plus $42
	ld de, $2e
	add hl, de
	ld e, [hl]
	ld hl, sp+$47
	ld [hl], e
	read_hl_from_sp_plus $40
	ld de, $2e
	add hl, de
	ld e, [hl]
	ld hl, sp+$48
	ld [hl], e
	ld hl, sp+$46
	ld [hl], $0
Func_13130: ; 13130 (4:7130)
	ld hl, sp+$46
	ld a, [hl]
	cp $2
	jp nc, Func_131cd
	ld hl, sp+$46
	ld e, [hl]
	ld d, $0
	ld hl, sp+$34
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_131c3
	ld hl, sp+$46
	ld e, [hl]
	ld d, $0
	ld hl, sp+$34
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$48
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	pop de
	call Func_241f
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld de, $10
	add hl, de
	ld c, [hl]
	ld b, $0
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$3a
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld de, $11
	add hl, de
	ld c, [hl]
	ld b, $0
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$36
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
Func_131c3: ; 131c3 (4:71c3)
	ld hl, sp+$46
	ld a, [hl]
	inc a
	ld hl, sp+$46
	ld [hl], a
	jp Func_13130

Func_131cd: ; 131cd (4:71cd)
	ld hl, sp+$46
	ld [hl], $0
Func_131d1: ; 131d1 (4:71d1)
	ld hl, sp+$46
	ld a, [hl]
	cp $2
	jp nc, Func_13282
	set_farcall_addrs_hli Func_e39a
	ld hl, sp+$46
	ld e, [hl]
	ld d, $0
	ld hl, sp+$47
	add hl, de
	ld a, [hl]
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$36
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call FarCall
	ld c, l
	ld b, h
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$36
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $0
	call CompareHLtoBC
	jp c, Func_1322e
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$36
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_1322e: ; 1322e (4:722e)
	ld hl, sp+$46
	ld e, [hl]
	ld d, $0
	ld hl, sp+$47
	add hl, de
	ld a, [hl]
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$3a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call FarCall
	ld c, l
	ld b, h
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$3a
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $0
	call CompareHLtoBC
	jp c, Func_13278
	ld hl, sp+$46
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$3a
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_13278: ; 13278 (4:7278)
	ld hl, sp+$46
	ld a, [hl]
	inc a
	ld hl, sp+$46
	ld [hl], a
	jp Func_131d1

Func_13282: ; 13282 (4:7282)
	ld hl, sp+$51
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	ld hl, sp+$42
	ld [hl], a
	ld hl, sp+$4e
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	ld hl, sp+$43
	ld [hl], a
	ld hl, sp+$42
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4a
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $3e
	add hl, bc
	write_hl_to_sp_plus $3e
	ld hl, sp+$43
	ld e, [hl]
	ld d, $0
	ld hl, sp+$49
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $3c
	add hl, bc
	write_hl_to_sp_plus $3c
	read_hl_from_sp_plus $38
	ld c, l
	ld b, h
	read_hl_from_sp_plus $3e
	ld a, l
	sub c
	ld c, a
	ld a, h
	sbc b
	ld b, a
	read_hl_from_sp_plus $4e
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $3a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $3c
	ld a, l
	sub c
	ld c, a
	ld a, h
	sbc b
	ld b, a
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	xor a
Func_13319: ; 13319 (4:7319)
	cp $2
	jp nc, Func_1334b
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc d
	dec d
	bit 7, d
	jr z, .asm_13347
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
.asm_13347
	inc a
	jp Func_13319

Func_1334b: ; 1334b (4:734b)
	set_farcall_addrs_hli Func_e28f
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld hl, sp+$51
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $44
	ld de, $2c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call FarCall
	ld hl, sp+$0
	ld c, l
	ld b, h
	read_hl_from_sp_plus $4e
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$0
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$1
	ld c, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $4e
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $0
	call CompareHLtoBC
	jp c, Func_133b0
	read_hl_from_sp_plus $4e
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_133b0: ; 133b0 (4:73b0)
	read_hl_from_sp_plus $4e
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $a
	call CompareHLtoDE
	jp nc, Func_133ee
	ld hl, sp+$51
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	and $f
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $50
	pop de
	ld a, [hl]
	add e
	ld [hl], a
	inc hl
	ld a, [hl]
	adc d
	ld [hl], a
Func_133ee: ; 133ee (4:73ee)
	set_farcall_addrs_hli Func_e28f
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld hl, sp+$4e
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $42
	ld de, $2c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call FarCall
	ld hl, sp+$0
	ld c, l
	ld b, h
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$0
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$1
	ld c, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $0
	call CompareHLtoBC
	jp c, Func_13459
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_13459: ; 13459 (4:7459)
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $a
	call CompareHLtoDE
	jp nc, Func_1349b
	ld hl, sp+$4e
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_12155
	add hl, de
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	and $f
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $50
	inc hl
	inc hl
	pop de
	ld a, [hl]
	add e
	ld [hl], a
	inc hl
	ld a, [hl]
	adc d
	ld [hl], a
Func_1349b: ; 1349b (4:749b)
	ld c, $0
Func_1349d: ; 1349d (4:749d)
	ld a, c
	cp $2
	jp nc, Func_134d3
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_134cf
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $3e7
	ld [hl], e
	inc hl
	ld [hl], d
Func_134cf: ; 134cf (4:74cf)
	inc c
	jp Func_1349d

Func_134d3: ; 134d3 (4:74d3)
	ld hl, sp+$51
	ld a, [hl]
	ld hl, sp+$44
	ld [hl], a
	ld hl, sp+$4e
	ld a, [hl]
	ld hl, sp+$45
	ld [hl], a
	ld c, $0
Func_134e1: ; 134e1 (4:74e1)
	ld a, c
	cp $2
	jp nc, Func_13576
	ld e, c
	ld d, $0
	ld hl, sp+$44
	add hl, de
	ld a, [hl]
	cp $17
	jp z, Func_1355f
	cp $1a
	jp z, Func_13549
	cp $19
	jp z, Func_13533
	cp $18
	jp z, Func_1351d
	cp $16
	jp nz, Func_13572
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_13572

Func_1351d: ; 1351d (4:751d)
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $64
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_13572

Func_13533: ; 13533 (4:7533)
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $c8
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_13572

Func_13549: ; 13549 (4:7549)
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld de, hFFC9 + 5
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_13572

Func_1355f: ; 1355f (4:755f)
	read_hl_from_sp_plus $4e
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_13572: ; 13572 (4:7572)
	inc c
	jp Func_134e1

Func_13576: ; 13576 (4:7576)
	ld c, $0
Func_13578: ; 13578 (4:7578)
	ld a, c
	cp $2
	jp nc, Func_135ce
	ld e, c
	ld d, $0
	ld hl, sp+$44
	add hl, de
	ld a, [hl]
	cp $17
	jp nz, Func_135ca
	push bc
	inc c
	dec c
	jp nz, Func_135af
	read_hl_from_sp_plus $50
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $50
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $50
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_135c9

Func_135af: ; 135af (4:75af)
	read_hl_from_sp_plus $50
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $50
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $50
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_135c9: ; 135c9 (4:75c9)
	pop bc
Func_135ca: ; 135ca (4:75ca)
	inc c
	jp Func_13578

Func_135ce: ; 135ce (4:75ce)
	ld e, $10
	ld a, $1
	call SetStringStartState
	read_hl_from_sp_plus $4e
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc d
	dec d
	bit 7, d
	jr z, .asm_135ed
	ld hl, Data_13640
	push hl
	call PlaceString
	pop bc
	jp Func_135fe

.asm_135ed
	read_hl_from_sp_plus $4e
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_1364a
.asm_135f8
	push hl
	call PlaceString
	pop bc
	pop bc
Func_135fe: ; 135fe (4:75fe)
	ld e, $10
	ld a, $b
	call SetStringStartState
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld e, [hl]
.asm_1360c
	inc hl
	ld d, [hl]
	inc d
	dec d
	bit 7, d
	jr z, .asm_1361f
	ld hl, Data_13654
	push hl
	call PlaceString
	pop bc
	jp Func_13632

.asm_1361f
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_1365e
	push hl
	call PlaceString
	pop bc
	pop bc
Func_13632: ; 13632 (4:7632)
	ld hl, $0
	reg16swap de, hl
	add sp, $52
	reg16swap de, hl
	ret

Data_13640: ; 13640
	db "(かいふく) 50", $0

Data_1364a: ; 1364a
	db "タﾞメーシﾞ "
	TX_SNUM
	db $0

Data_13654: ; 13654
	db "(かいふく) 50", $0

Data_1365e: ; 1365e
	db "タﾞメーシﾞ "
	TX_SNUM
	db $0

Func_13668: ; 13668 (4:7668)
	inc c
	dec c
	jp nz, .asm_13691
	push af
	push de
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $0
	pop de
	ld a, e
	call Func_136cc
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $1
	pop af
	call Func_136cc
	jp Func_136b0

.asm_13691
	push de
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $1
	call Func_136cc
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $0
	pop de
	ld a, e
	call Func_136cc
Func_136b0: ; 136b0 (4:76b0)
	ret

Data_136b1: ; 136b1
	dr $136b1, $136cc

Func_136cc: ; 136cc (4:76cc)
	push af
	add sp, -$1c
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_136b1
	ld bc, $1b
	call MemCopy
	ld hl, sp+$1d
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_13726
	set_farcall_addrs_hli Func_dcaf
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	ld hl, sp+$1d
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld e, [hl]
	call FarCall
	set_farcall_addrs_hli Func_dd0a
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	ld e, $0
	call FarCall
Func_13726: ; 13726 (4:7726)
	add sp, $1e
	ret

SECTION "Bank 05", ROMX, BANK [$5]
INCLUDE "engine/menu/menu.asm"

Data_15399: ; 15399
	dr $15399, $153c6

Data_153c6: ; 153c6
	dr $153c6, $1551f

Func_1551f:
	push bc
	push bc
	push hl
	ld l, $e
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $e
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	pop de
	push hl
	ld hl, $64
	call AllocateMemory
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	xor a
	ld de, $19
	ld a, $3
	call GetBanks
	ld c, a
	pop hl
	push hl
	ld de, wc98e
	add hl, de
	ld l, [hl]
	ld h, $0
	reg16swap de, hl
	ld a, e
	and $3f
	ld l, a
	ld h, $0
	reg16swap de, hl
	push de
	ld a, c
	call GetSRAMBank
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_17e95
	call GetHLAtSPPlus4
	ld de, -1
	call Func_1564a
	ld c, a
	push bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	xor a
	pop bc
	pop de
Func_155bb: ; 155bb (5:55bb)
	push de
	push bc
	call WaitAorBButtonOverworld_17a44
	pop bc
	pop de
	cp $10
	jp nz, Func_15619
	ld a, c
	ld hl, Data_15399 - 1
	add hl, de
	cp [hl]
	jp nc, Func_155f9
	push de
	push bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_17e95
	pop bc
	call GetHLAtSPPlus4
	ld e, c
	ld d, $0
	call Func_1564a
	ld c, a
	push bc
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3bc5
	pop bc
	pop bc
	pop de
	jp Func_15616

Func_155f9: ; 155f9 (5:55f9)
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call RestoreTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3bc5
	pop bc
	jp Func_1563e

Func_15616: ; 15616 (5:5616)
	jp Func_1563b

Func_15619: ; 15619 (5:5619)
	cp $20
	jp nz, Func_1563b
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call RestoreTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3bc5
	pop bc
	jp Func_1563e

Func_1563b: ; 1563b (5:563b)
	jp Func_155bb

Func_1563e: ; 1563e (5:563e)
	call GetHLAtSPPlus4
	call FreeMemory
	ld hl, $8000
	pop bc
	pop bc
	ret

Func_1564a: ; 1564a (5:564a)
	push hl
	push de
	add sp, -$16
	ld de, $19
	ld a, $3
	call GetBanks
	ld c, a
	read_hl_from_sp_plus $1a
	ld de, wc98e
	add hl, de
	ld l, [hl]
	ld h, $0
	write_hl_to_sp_plus $1a
	read_hl_from_sp_plus $1a
	ld a, l
	and $3f
	ld l, a
	ld h, $0
	write_hl_to_sp_plus $1a
	ld a, c
	call GetSRAMBank
	ld hl, sp+$15
	ld [hl], $1
	read_hl_from_sp_plus $18
	ld c, l
	ld b, h
	ld a, c
	and b
	inc a
	jp nz, Func_15703
	ld bc, -1
	read_hl_from_sp_plus $1a
	ld e, l
	ld hl, sp+$0
	call Func_157c5
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call Func_16019
	ld de, Data_157b6
	lb hl, -1, -1
	call PlaceStringDEatCoordHL
	ld bc, $0
	xor a
Func_156af: ; 156af (5:56af)
	cp $3
	jp nc, Func_156f9
	push af
	push bc
	read_hl_from_sp_plus $1e
	ld e, l
	ld hl, sp+$4
	call Func_157c5
	ld hl, sp+$4
	call FindFirstNonzero
	reg16swap de, hl
	pop bc
	push de
	ld hl, sp+$19
	ld l, [hl]
	ld h, $0
	add hl, de
	ld de, $12
	call CompareHLtoDE
	jp nc, Func_156ec
	inc bc
	push bc
	ld hl, sp+$6
	ld c, l
	ld b, h
	ld de, $10
	ld hl, sp+$1b
	ld l, [hl]
	ld h, $0
	call Func_16019
	pop bc
Func_156ec: ; 156ec (5:56ec)
	pop de
	ld hl, sp+$17
	ld a, [hl]
	add e
	ld hl, sp+$17
	ld [hl], a
	pop af
	inc a
	jp Func_156af

Func_156f9: ; 156f9 (5:56f9)
	ld hl, $0
	write_hl_to_sp_plus $18
	jp Func_15780

Func_15703: ; 15703 (5:5703)
	ld hl, sp+$14
	ld [hl], $0
Func_15707: ; 15707 (5:5707)
	ld hl, sp+$14
	ld a, [hl]
	cp $2
	jp nc, Func_15780
	ld hl, sp+$15
	ld [hl], $1
	xor a
Func_15714: ; 15714 (5:5714)
	cp $3
	jp nc, Func_15769
	push af
	push bc
	read_hl_from_sp_plus $1e
	ld e, l
	ld hl, sp+$4
	call Func_157c5
	ld hl, sp+$4
	call FindFirstNonzero
	reg16swap de, hl
	pop bc
	push de
	ld hl, sp+$19
	ld l, [hl]
	ld h, $0
	add hl, de
	ld de, $12
	call CompareHLtoDE
	jp nc, Func_1575c
	push bc
	ld hl, sp+$6
	ld c, l
	ld b, h
	ld hl, sp+$1a
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, $e
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1b
	ld l, [hl]
	ld h, $0
	call Func_16019
	pop bc
	inc bc
Func_1575c: ; 1575c (5:575c)
	pop de
	ld hl, sp+$17
	ld a, [hl]
	add e
	ld hl, sp+$17
	ld [hl], a
	pop af
	inc a
	jp Func_15714

Func_15769: ; 15769 (5:5769)
	ld hl, sp+$14
	ld a, [hl]
	or a
	jp nz, Func_15776
	ld l, c
	ld h, b
	write_hl_to_sp_plus $18
Func_15776: ; 15776 (5:5776)
	ld hl, sp+$14
	ld a, [hl]
	inc a
	ld hl, sp+$14
.asm_1577b
	ld [hl], a
	jp Func_15707

Func_15780: ; 15780 (5:5780)
	read_hl_from_sp_plus $1a
	ld de, Data_15399 - 1
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_157aa
	ld e, $10
	ld a, $12
	call SetStringStartState
	ld hl, Data_157c3
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $18
	ld a, l
	jp Func_157b3

Func_157aa: ; 157aa (5:57aa)
	read_hl_from_sp_plus $1a
	ld de, Data_15399 - 1
	add hl, de
	ld a, [hl]
Func_157b3: ; 157b3 (5:57b3)
	add sp, $1a
	ret

Data_157b6: ; 157b6
	db "(てﾞ つかえるわさﾞ)", $0

Data_157c3: ; 157c3
	db "^", $0

Func_157c5: ; 157c5 (5:57c5)
	push hl
	push de
	push bc
	push bc
	ld hl, $0
	call WriteHLToSPPlus4
	ld a, c
	and b
	inc a
	jp nz, Func_157ea
	ld c, $5
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	dec hl
	call Func_15ad6
	jp Func_15887

Func_157ea: ; 157ea (5:57ea)
	push bc
	ld e, $0
Func_157ed: ; 157ed (5:57ed)
	ld hl, sp+$6
	ld a, [hl]
	dec a
	ld l, a
	ld a, e
	cp l
	jp nc, Func_1580d
	push de
	ld d, $0
	ld hl, Data_15399
	add hl, de
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus8
	add hl, bc
	call WriteHLToSPPlus8
	pop de
	inc e
	jp Func_157ed

Func_1580d: ; 1580d (5:580d)
	pop bc
	call GetHLAtSPPlus4
	add hl, bc
	ld de, Data_153c6
	add hl, de
	ld l, [hl]
	ld h, $0
	pop de
	push hl
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, Data_15399 - 1
	add hl, de
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_1587e
	pop hl
	push hl
	ld a, l
	or h
	jp nz, Func_1584b
	ld c, $5
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	dec hl
	call Func_15ad6
	jp Func_1585a

Func_1584b: ; 1584b (5:584b)
	ld c, $9
	call GetHLAtSPPlus8
	push hl
	call GetHLAtSPPlus4
	inc h
	dec hl
	pop de
	call Func_15ad6
Func_1585a: ; 1585a (5:585a)
	call GetHLAtSPPlus8
	call FindFirstNonzero
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	add hl, bc
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	ld [hl], $7f
	inc hl
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus8
	jp Func_15887

Func_1587e: ; 1587e (5:587e)
	call GetHLAtSPPlus8
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus8
Func_15887: ; 15887 (5:5887)
	call GetHLAtSPPlus8
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Pointers_1588f:
	dw Data_15895
	dw Data_158ae
	dw $0

Data_15895:
	db "フﾞート(そﾞくは) ソフト(の つけかえかﾞ)", $0

Data_158ae:
	db "(てﾞきないよ)", $0

Func_158b7: ; 158b7
	add sp, -$76
	push af
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Pointers_1588f
	ld bc, $6
	call MemCopy
	ld de, $19
	ld a, $3
	call GetBanks
	ld l, a
	pop af
	push hl
	ld e, a
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld a, [hl]
	and $3f
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld e, [hl]
	ld hl, sp+$75
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $9
	add hl, de
	ld e, [hl]
	ld hl, sp+$76
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $a
	add hl, de
	ld e, [hl]
	ld hl, sp+$77
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	pop hl
	push af
	push hl
	ld bc, $0
Func_15951: ; 15951 (5:5951)
	ld l, c
	ld h, b
	ld de, $3
	call CompareHLtoDE
	jp nc, Func_1598d
	ld hl, sp+$77
	add hl, bc
	ld a, [hl]
	or a
	jp z, Func_15989
	push bc
	set_farcall_addrs_hli Func_5601b
	pop bc
	push bc
	ld l, c
	ld h, b
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3d
	add hl, de
	ld e, c
	ld c, $1
	call FarCall
	pop bc
Func_15989: ; 15989 (5:5989)
	inc bc
	jp Func_15951

Func_1598d: ; 1598d (5:598d)
	pop hl
	ld a, l
	call GetSRAMBank
	pop af
	ld e, a
	dec e
	ld hl, sp+$6
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$b
	ld a, [hl]
	push af
	call Func_15ff9
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, $10d
	call Func_2230
	ld hl, Data_15aa2
	push hl
	call PlaceString
	pop bc
	ld de, Data_15aa4
	ld hl, $a01
	call PlaceStringDEatCoordHL
	ld de, Data_15aae
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld c, $7
	ld e, $a
	ld hl, $a02
	call Func_17e95
	ld c, $5
	ld e, $a
	ld hl, $a09
	call Func_17e95
	ld de, Data_15ab8
	ld hl, $c0a
	call PlaceStringDEatCoordHL
	ld de, Data_15ac3
	ld hl, $c0c
	call PlaceStringDEatCoordHL
	ld hl, sp+$75
	ld a, [hl]
	or a
	jp nz, Func_15a0e
	ld hl, sp+$75
	ld a, [hl]
	or a
	jp nz, Func_15a0e
	ld hl, sp+$75
	ld a, [hl]
	or a
	jp nz, Func_15a0e
	ld de, Data_15ace
	ld hl, $c03
	call PlaceStringDEatCoordHL
	jp Func_15a64

Func_15a0e: ; 15a0e (5:5a0e)
	ld hl, $0
	write_hl_to_sp_plus $39
Func_15a15: ; 15a15 (5:5a15)
	read_hl_from_sp_plus $39
	ld de, $3
	call CompareHLtoDE
	jp nc, Func_15a64
	read_hl_from_sp_plus $39
	reg16swap de, hl
	ld hl, sp+$75
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_15a58
	read_hl_from_sp_plus $39
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$39
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $39
	add hl, hl
	inc hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, $c
	call Func_16019
Func_15a58: ; 15a58 (5:5a58)
	read_hl_from_sp_plus $39
	inc hl
	write_hl_to_sp_plus $39
	jp Func_15a15

Func_15a64: ; 15a64 (5:5a64)
	pop af
	cp $b
	jp nz, Func_15a9e
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_17e95
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, $5
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $10e
	call FarCall
	ld a, $ff
	jp Func_15a9f

Func_15a9e: ; 15a9e (5:5a9e)
	xor a
Func_15a9f: ; 15a9f (5:5a9f)
	add sp, $76
	ret

Data_15aa2: ; 15aa2
	db "M", $0

Data_15aa4: ; 15aa4
	db "(そうひﾞ)ソフト", $0

Data_15aae: ; 15aae
	db "(もちもの)ソフト", $0

Data_15ab8: ; 15ab8
	db "(すへﾞてはすﾞす)", $0

Data_15ac3: ; 15ac3
	db "(つかえる わさﾞ)", $0

Data_15ace: ; 15ace
	db "ソフト(なし)", $0

Func_15ad6: ; 15ad6 (5:5ad6)
	push hl
	push de
	add sp, -$6c
	push bc
	read_hl_from_sp_plus $72
	ld de, Init
	call DivideHLByDESigned
	ld c, l
	read_hl_from_sp_plus $72
	reg16swap de, hl
	ld l, c
	ld h, $0
	ld h, l
	ld l, $0
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	ld a, BANK(Data_64093)
	ld [wFarCallDestBank], a
	ld a, c
	cp $7
	jp z, Func_15bae
	cp $6
	jp z, Func_15b9f
	cp $3
	jp z, Func_15b86
	cp $4
	jp z, Func_15b70
	cp $2
	jp z, Func_15b61
	cp $5
	jp z, Func_15b52
	cp $1
	jp z, Func_15b3b
	or a
	jp nz, Func_15bcb
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_64093
	add hl, de
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15b3b: ; 15b3b (5:5b3b)
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_64c90
	add hl, de
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15b52: ; 15b52 (5:5b52)
	ld e, l
	ld hl, sp+$54
	call Func_241f
	ld hl, sp+$5d
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15b61: ; 15b61 (5:5b61)
	ld e, l
	ld hl, sp+$54
	call Func_241f
	ld hl, sp+$54
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15b70: ; 15b70 (5:5b70)
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Func_157c5
	add hl, de
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15b86: ; 15b86 (5:5b86)
	ld h, $0
	get_party_bot
	inc hl
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15b9f: ; 15b9f (5:5b9f)
	ld e, l
	ld hl, sp+$25
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$32
	write_hl_to_sp_plus $6e
	jp Func_15bcb

Func_15bae: ; 15bae (5:5bae)
	push hl
	set_farcall_addrs_hli Func_7dfc
	pop hl
	ld a, l
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	ld hl, sp+$3
	write_hl_to_sp_plus $6e
Func_15bcb: ; 15bcb (5:5bcb)
	pop bc
	ld b, $0
	read_hl_from_sp_plus $6c
	push hl
	read_hl_from_sp_plus $70
	pop de
	call FarCopyVideoData
	add sp, $70
	ret

Func_15bde: ; 15bde
	push bc
	push bc
	push bc
	push bc
	push hl
	ld l, $f
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	call WriteHLToSPPlus7
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_15c59
	call GetHLAtSPPlus7
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld [wc311], a
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus7
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld de, $14
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus7
	call Func_16128
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, $4000
	jp Func_15fe4

Func_15c59: ; 15c59 (5:5c59)
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp c, Func_15e9c
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $17
	call CompareHLtoDE
	jp nc, Func_15e9c
	ld a, [wc311]
	cp $ff
	jp z, Func_15df5
	call Func_15ff9
	ld hl, sp+$2
	ld [hl], a
	ld de, $19
	ld a, $3
	call GetBanks
	ld hl, sp+$4
	ld [hl], a
	ld hl, wc311
	ld l, [hl]
	ld h, $0
	ld de, wc98e
	add hl, de
	ld e, [hl]
	ld hl, sp+$3
	ld [hl], e
	ld hl, sp+$1
	ld [hl], $0
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $ffec
	add hl, de
	add hl, bc
	ld a, [hl]
	or a
	jp z, Func_15d0b
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $ffec
	add hl, de
	add hl, bc
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
Func_15d0b: ; 15d0b (5:5d0b)
	ld hl, sp+$3
	ld a, [hl]
	rlca
	rlca
	and $3
	inc a
	ld e, a
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp z, Func_15d27
	ld hl, sp+$1
	ld a, [hl]
	rlca
	rlca
	and $3
	inc a
	ld c, a
	jp Func_15d29

Func_15d27: ; 15d27 (5:5d27)
	ld c, $0
Func_15d29: ; 15d29 (5:5d29)
	ld a, e
	add a
	ld d, a
	add a
	add a
	add d
	ld e, a
	ld a, c
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, sp+$2
	add [hl]
	cp e
	jp c, Func_15de5
	ld hl, sp+$3
	ld a, [hl]
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $ffec
	add hl, de
	add hl, bc
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	set_farcall_addrs_hli Func_4ec2b
	ld e, $1
	ld a, [wc311]
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp z, Func_15da0
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	jp Func_15db0

Func_15da0: ; 15da0 (5:5da0)
	call GetHLAtSPPlus7
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
Func_15db0: ; 15db0 (5:5db0)
	set_farcall_addrs_hli Func_fb2ed
	ld a, [wc2e9]
	call FarCall
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus7
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, $ff
	ld [wc311], a
	ld hl, $8000
	jp Func_15fe4

Func_15de5: ; 15de5 (5:5de5)
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	xor a
	call Func_15fe9
	ld hl, $4000
	jp Func_15fe4

Func_15df5: ; 15df5 (5:5df5)
	ld de, $19
	ld a, $3
	call GetBanks
	ld hl, sp+$4
	ld [hl], a
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $ffec
	add hl, de
	add hl, bc
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp z, Func_15e96
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $ffec
	add hl, de
	ld a, l
	ld [wc311], a
	ld a, $2
	call Func_15fe9
	or a
	jp z, Func_15e59
	cp $2
	jp nz, Func_15e91
Func_15e59: ; 15e59 (5:5e59)
	or a
	jp nz, Func_15e6d
	call GetHLAtSPPlus7
	ld de, $7
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_15e6d: ; 15e6d (5:5e6d)
	ld a, $ff
	ld [wc311], a
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus7
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $8000
	jp Func_15fe4

Func_15e91: ; 15e91 (5:5e91)
	ld a, $ff
	ld [wc311], a
Func_15e96: ; 15e96 (5:5e96)
	ld hl, $4000
	jp Func_15fe4

Func_15e9c: ; 15e9c (5:5e9c)
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	sub $17
	inc hl
	or [hl]
	jp nz, Func_15fcb
	ld a, $1
	call Func_15fe9
	or a
	jp nz, Func_15fc5
	ld de, $19
	ld a, $3
	call GetBanks
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$0
	ld [hl], $0
Func_15ec2: ; 15ec2 (5:5ec2)
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nc, Func_15f9b
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, de
	ld e, [hl]
	ld hl, sp+$3
	ld [hl], e
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp z, Func_15f91
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$3
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_15f5c
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$3
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_15f34
	ld a, $3
	call Func_15fe9
	ld hl, sp+$0
	ld [hl], $3
	jp Func_15f59

Func_15f34: ; 15f34 (5:5f34)
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, de
	ld [hl], $0
Func_15f59: ; 15f59 (5:5f59)
	jp Func_15f91

Func_15f5c: ; 15f5c (5:5f5c)
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, de
	ld [hl], $0
	call GetHLAtSPPlus7
	ld de, $7
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_15f91: ; 15f91 (5:5f91)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_15ec2

Func_15f9b: ; 15f9b (5:5f9b)
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus7
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, $ff
	ld [wc311], a
	ld hl, $8000
	jp Func_15fe4

Func_15fc5: ; 15fc5 (5:5fc5)
	ld hl, $4000
	jp Func_15fe4

Func_15fcb: ; 15fcb (5:5fcb)
	ld a, [wc2e9]
	ld [wc310], a
	set_farcall_addrs_hli Func_56b35
	ld a, $1
	call FarCall
	ld hl, $4000
Func_15fe4: ; 15fe4 (5:5fe4)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_15fe9: ; 15fe9 (5:5fe9)
	push af
	set_farcall_addrs_hli Func_624af
	pop af
	jp FarCall

Func_15ff9: ; 15ff9 (5:5ff9)
	jpba_hli Func_623d0

GetBanks:: ; 16007 (5:6007)
	push de
	push af
	ld a, [hSRAMBank]
	ld l, a
	pop af
	push hl
	call GetSRAMBank
	pop hl
	pop de
	ld a, e
	ld [wFarCallDestBank], a
	ld a, l
	ret

Func_16019: ; 16019 (5:6019)
	push hl
	push de
	add sp, -$1e
	ld e, c
	ld d, b
	ld hl, sp+$0
	call LiteralStringInTree
	ld hl, sp+$0
	ld c, l
	ld b, h
	read_hl_from_sp_plus $20
	push hl
	read_hl_from_sp_plus $24
	pop de
	call Func_173a1
	add sp, $22
	ret

Func_16038: ; 16038
	push bc
	push bc
	push bc
	push hl
	ld c, l
	ld b, h
	ld hl, $d
	add hl, bc
	ld a, [hl]
	pop hl
	cp $3
	jp nz, Func_16052
	ld de, $2
	call Func_16377
	jp Func_160be

Func_16052: ; 16052 (5:6052)
	ld hl, $9
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, $7
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus8
	push hl
	call GetHLAtSPPlus6
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_160a8
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus4
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	call WriteHLToSPPlus4
Func_160a8: ; 160a8 (5:60a8)
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, c
	ld h, b
	call Func_16777
	ld hl, $4000
Func_160be: ; 160be (5:60be)
	pop bc
	pop bc
	pop bc
	ret

Func_160c2: ; 160c2
	push hl
	ld c, l
	ld b, h
	ld hl, $d
	add hl, bc
	ld a, [hl]
	pop hl
	cp $3
	jp nz, Func_160d9
	ld de, $3
	call Func_16377
	jp Func_16103

Func_160d9: ; 160d9 (5:60d9)
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $9
	add hl, bc
	ld a, e
	sub [hl]
	ld e, a
	inc hl
	ld a, d
	sbc [hl]
	ld d, a
	inc d
	dec d
	bit 7, d
	jr z, .asm_160f4
	ld de, $0
.asm_160f4
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, c
	ld h, b
	call Func_16777
	ld hl, $4000
Func_16103: ; 16103 (5:6103)
	ret

Func_16104: ; 16104 (5:6104)
	push de
	ld l, a
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, de
	ld a, [hl]
	pop bc
	ret

Func_16128: ; 16128 (5:6128)
	push hl
	push bc
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$a
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	pop hl
	push hl
	ld de, $b
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop hl
	push hl
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $c
	pop hl
	push hl
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus10
	ld a, l
	and h
	inc a
	jp z, Func_1620c
	call GetHLAtSPPlus10
	ld de, $14
	call CompareHLtoDE
	jp c, Func_161c9
	call GetHLAtSPPlus10
	reg16swap de, hl
	ld hl, $16
	call CompareHLtoDE
	jp c, Func_161c9
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus10
	add hl, hl
	ld de, hFFD2 + 6
	add hl, de
	add hl, bc
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	add $b
	call SetStringStartState
	jp Func_16204

Func_161c9: ; 161c9 (5:61c9)
	call GetHLAtSPPlus10
	ld de, $17
	call CompareHLtoDE
	jp c, Func_161f1
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	inc bc
	inc bc
	call GetHLAtSPPlus10
	add hl, hl
	ld de, hFFD2 + 6
	add hl, de
	add hl, bc
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	add $b
	call SetStringStartState
	jp Func_16204

Func_161f1: ; 161f1 (5:61f1)
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus10
	add hl, hl
	add hl, bc
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	inc a
	call SetStringStartState
Func_16204: ; 16204 (5:6204)
	ld hl, Data_16367
	push hl
	call PlaceString
	pop bc
Func_1620c: ; 1620c (5:620c)
	ld c, $0
Func_1620e: ; 1620e (5:620e)
	read_hl_from_sp_plus $e
	reg16swap de, hl
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_16281
	push bc
	read_hl_from_sp_plus $e
	ld e, c
	ld d, $0
	call CompareHLtoDE
	jp z, Func_1624a
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld l, a
	ld a, c
	add a
	add l
	ld e, a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, $8f
	push hl
	ld hl, Data_16369
	push hl
	call PlaceString
	pop bc
	pop bc
Func_1624a: ; 1624a (5:624a)
	pop bc
	push bc
	call GetHLAtSPPlus10
	ld e, c
	ld d, $0
	add hl, de
	ld a, [wc311]
	ld e, a
	ld d, $0
	call CompareHLtoDE
	jp nz, Func_1627c
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld l, a
	ld a, c
	add a
	add l
	ld e, a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_1636c
	push hl
	call PlaceString
	pop bc
	pop bc
Func_1627c: ; 1627c (5:627c)
	pop bc
	inc c
	jp Func_1620e

Func_16281: ; 16281 (5:6281)
	read_hl_from_sp_plus $c
	ld de, $14
	call CompareHLtoDE
	jp c, Func_162bb
	read_hl_from_sp_plus $c
	reg16swap de, hl
	ld hl, $16
	call CompareHLtoDE
	jp c, Func_162bb
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	inc bc
	read_hl_from_sp_plus $c
	add hl, hl
	ld de, -$28
	add hl, de
	add hl, bc
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	add $b
	call SetStringStartState
	jp Func_162f9

Func_162bb: ; 162bb (5:62bb)
	read_hl_from_sp_plus $c
	ld de, $17
	call CompareHLtoDE
	jp c, Func_162e5
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	inc bc
	inc bc
	read_hl_from_sp_plus $c
	add hl, hl
	ld de, -$28
	add hl, de
	add hl, bc
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	add $b
	call SetStringStartState
	jp Func_162f9

Func_162e5: ; 162e5 (5:62e5)
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	inc bc
	read_hl_from_sp_plus $c
	add hl, hl
	add hl, bc
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	inc a
	call SetStringStartState
Func_162f9: ; 162f9 (5:62f9)
	ld hl, $8b
	push hl
	ld hl, Data_1636f
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	read_hl_from_sp_plus $c
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp z, Func_16364
	push bc
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$4
	add [hl]
	add $fe
	ld l, a
	push hl
	call GetHLAtSPPlus6
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$7
	add [hl]
	add $fe
	pop de
	call SetStringStartState
	pop bc
	read_hl_from_sp_plus $c
	push hl
	call GetHLAtSPPlus8
	pop de
	add hl, de
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp nc, Func_1635c
	ld hl, $8a
	push hl
	ld hl, Data_16372
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_16364

Func_1635c: ; 1635c (5:635c)
	ld hl, Data_16375
	push hl
	call PlaceString
	pop bc
Func_16364: ; 16364 (5:6364)
	add sp, $c
	ret

Data_16367: ; 16367
	db " ", $0

Data_16369: ; 16369
	TX_STACK
	db $0

Data_1636c: ; 1636c
	TX_STACK
	db $0

Data_1636f: ; 1636f
	TX_STACK
	db $0

Data_16372: ; 16372
	TX_STACK
	db $0

Data_16375: ; 16375
	db " ", $0

Func_16377: ; 16377 (5:6377)
	push hl
	add sp, -$12
	ld hl, sp+$12
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push de
	push hl
	ld hl, sp+$6
	ld [hl], $0
	pop hl
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $15
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $13
	read_hl_from_sp_plus $15
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $11
	read_hl_from_sp_plus $15
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $f
	read_hl_from_sp_plus $15
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$c
	ld [hl], a
	read_hl_from_sp_plus $15
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$b
	ld [hl], a
	read_hl_from_sp_plus $15
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$a
	ld [hl], a
	read_hl_from_sp_plus $15
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$9
	ld [hl], a
	read_hl_from_sp_plus $15
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$7
	ld [hl], e
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $17
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_16427
	read_hl_from_sp_plus $15
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $11
Func_16427: ; 16427 (5:6427)
	read_hl_from_sp_plus $13
	push hl
	read_hl_from_sp_plus $17
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld de, $19
	ld a, $3
	call GetBanks
	ld hl, sp+$8
	ld [hl], a
	ld hl, sp+$6
	ld [hl], $0
	ld a, [wc9a2]
	ld c, a
	push bc
	ld hl, sp+$7
	ld [hl], $0
Func_16450: ; 16450 (5:6450)
	ld hl, sp+$7
	ld a, [hl]
	cp $3
	jp nc, Func_16497
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_1648a
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	jp Func_1648d

Func_1648a: ; 1648a (5:648a)
	jp Func_16497

Func_1648d: ; 1648d (5:648d)
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	jp Func_16450

Func_16497: ; 16497 (5:6497)
	ld hl, sp+$8
	ld a, [hl]
	cp $3
	jp nz, Func_164a3
	ld hl, sp+$8
	ld [hl], $2
Func_164a3: ; 164a3 (5:64a3)
	ld hl, sp+$a
	ld a, [hl]
	call GetSRAMBank
	pop bc
	pop de
	ld a, e
	sub $3
	or d
	jp z, Func_16627
	ld a, e
	sub $2
	or d
	jp z, Func_16610
	ld a, e
	dec a
	or d
	jp z, Func_16558
	ld a, e
	or d
	jp nz, Func_16645
	read_hl_from_sp_plus $11
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_16507
	read_hl_from_sp_plus $11
	dec hl
	write_hl_to_sp_plus $11
	inc h
	dec h
	bit 7, h
	jr z, .asm_16504
	ld hl, $0
	write_hl_to_sp_plus $11
	read_hl_from_sp_plus $d
	dec hl
	write_hl_to_sp_plus $d
	inc h
	dec h
	bit 7, h
	jr z, .asm_16500
	ld hl, $0
	write_hl_to_sp_plus $d
	jp .asm_16504

.asm_16500
	ld hl, sp+$2
	ld [hl], $1
.asm_16504
	jp Func_16555

Func_16507: ; 16507 (5:6507)
	read_hl_from_sp_plus $11
	ld de, $17
	call CompareHLtoDE
	jp nc, Func_16531
	read_hl_from_sp_plus $11
	reg16swap de, hl
	ld hl, $14
	call CompareHLtoDE
	jp nc, Func_1652e
	read_hl_from_sp_plus $11
	dec hl
	write_hl_to_sp_plus $11
Func_1652e: ; 1652e (5:652e)
	jp Func_16555

Func_16531: ; 16531 (5:6531)
	read_hl_from_sp_plus $11
	ld a, l
	sub $17
	or h
	jp nz, Func_1654c
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	ld de, $14
	add hl, de
	write_hl_to_sp_plus $11
	jp Func_16555

Func_1654c: ; 1654c (5:654c)
	read_hl_from_sp_plus $11
	dec hl
	write_hl_to_sp_plus $11
Func_16555: ; 16555 (5:6555)
	jp Func_16645

Func_16558: ; 16558 (5:6558)
	read_hl_from_sp_plus $11
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_165c1
	read_hl_from_sp_plus $f
	push hl
	read_hl_from_sp_plus $13
	inc hl
	write_hl_to_sp_plus $13
	pop de
	call CompareHLtoDE
	jp c, Func_165be
	read_hl_from_sp_plus $f
	dec hl
	write_hl_to_sp_plus $11
	read_hl_from_sp_plus $d
	inc hl
	write_hl_to_sp_plus $d
	read_hl_from_sp_plus $f
	push hl
	read_hl_from_sp_plus $f
	pop de
	add hl, de
	push hl
	read_hl_from_sp_plus $15
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_165ba
	read_hl_from_sp_plus $d
	dec hl
	write_hl_to_sp_plus $d
	jp Func_165be

Func_165ba: ; 165ba (5:65ba)
	ld hl, sp+$2
	ld [hl], $2
Func_165be: ; 165be (5:65be)
	jp Func_1660d

Func_165c1: ; 165c1 (5:65c1)
	read_hl_from_sp_plus $11
	ld de, $17
	call CompareHLtoDE
	jp nc, Func_165f9
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	ld de, $14
	add hl, de
	push hl
	read_hl_from_sp_plus $13
	pop de
	call CompareHLtoDE
	jp nc, Func_165ef
	read_hl_from_sp_plus $11
	inc hl
	write_hl_to_sp_plus $11
	jp Func_165f6

Func_165ef: ; 165ef (5:65ef)
	ld hl, $17
	write_hl_to_sp_plus $11
Func_165f6: ; 165f6 (5:65f6)
	jp Func_1660d

Func_165f9: ; 165f9 (5:65f9)
	read_hl_from_sp_plus $11
	ld a, l
	sub $17
	or h
	jp nz, Func_1660d
	read_hl_from_sp_plus $11
	inc hl
	write_hl_to_sp_plus $11
Func_1660d: ; 1660d (5:660d)
	jp Func_16645

Func_16610: ; 16610 (5:6610)
	read_hl_from_sp_plus $11
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_16624
	ld hl, $14
	write_hl_to_sp_plus $11
Func_16624: ; 16624 (5:6624)
	jp Func_16645

Func_16627: ; 16627 (5:6627)
	read_hl_from_sp_plus $11
	ld de, $14
	call CompareHLtoDE
	jp c, Func_16645
	ld a, c
	cp $1
	jp c, Func_16645
	ld hl, $0
	write_hl_to_sp_plus $11
	ld hl, sp+$2
	ld [hl], $4
Func_16645: ; 16645 (5:6645)
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $15
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $d
	push hl
	read_hl_from_sp_plus $15
	ld de, $5
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_16748
	ld hl, sp+$2
	ld a, [hl]
	cp $3
	jp nc, Func_16748
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, de
	dec hl
	dec hl
	push hl
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	ld l, [hl]
	ld h, $0
	add hl, de
	ld h, l
	ld l, $0
	dec h
	dec h
	pop de
	add hl, de
	call Coord2TileMap
	pop de
	push hl
	ld hl, sp+$2
	ld a, [hl]
	dec a
	ld c, a
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	dec de
	dec de
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	dec h
	dec h
	dec h
	add hl, de
	push hl
	ld hl, sp+$b
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	pop de
	call Func_17ef7
	ld a, $3
	call GetSRAMBank
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp nz, Func_166f2
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $f
	ld c, l
	ld hl, sp+$b
	ld a, [hl]
	inc a
	ld e, a
	ld hl, sp+$c
	ld a, [hl]
	add $2
	call Func_171ab
	pop bc
	pop hl
	push hl
	ld [hl], $8a
	jp Func_16742

Func_166f2: ; 166f2 (5:66f2)
	ld hl, sp+$2
	ld a, [hl]
	cp $2
	jp nz, Func_16742
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $11
	pop de
	add hl, de
	dec hl
	push hl
	ld hl, sp+$d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $13
	add hl, hl
	add hl, bc
	dec hl
	ld e, l
	ld hl, sp+$e
	ld a, [hl]
	add $2
	pop bc
	call Func_171ab
	pop bc
	read_hl_from_sp_plus $13
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $f
	push hl
	read_hl_from_sp_plus $f
	pop de
	add hl, de
	call CompareHLtoBC
	jp c, Func_16742
	pop hl
	push hl
	ld [hl], $8f
Func_16742: ; 16742 (5:6742)
	ld hl, sp+$6
	ld a, [hl]
	call GetSRAMBank
Func_16748: ; 16748 (5:6748)
	read_hl_from_sp_plus $13
	call Func_16128
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	cp $3
	jp c, Func_16769
	ld hl, $8000
	jp Func_1676c

Func_16769: ; 16769 (5:6769)
	ld hl, $4000
Func_1676c: ; 1676c (5:676c)
	reg16swap de, hl
	add sp, $14
	reg16swap de, hl
	ret

Func_16777: ; 16777 (5:6777)
	push hl
	add sp, -$e
	ld hl, sp+$e
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	pop hl
	write_hl_to_sp_plus $e
	read_hl_from_sp_plus $e
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $10
	read_hl_from_sp_plus $10
	ld e, [hl]
	ld hl, sp+$9
	ld [hl], e
	read_hl_from_sp_plus $10
	inc hl
	ld e, [hl]
	ld hl, sp+$8
	ld [hl], e
	read_hl_from_sp_plus $10
	inc hl
	inc hl
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $12
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	read_hl_from_sp_plus $12
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	read_hl_from_sp_plus $12
	ld de, $b
	add hl, de
	ld l, [hl]
	inc hl
	ld h, [hl]
	read_hl_from_sp_plus $12
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from_sp_plus $12
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop af
	push af
	push bc
	read_hl_from_sp_plus $14
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$a
	ld [hl], e
	add $fe
	ld b, $2
	call DivideAbyB
	ld hl, sp+$10
	ld [hl], a
	pop bc
	ld hl, sp+$e
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_1681b
	ld hl, sp+$e
	ld [hl], c
Func_1681b: ; 1681b (5:681b)
	ld hl, sp+$e
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $12
	ld de, $9
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$8
	ld a, [hl]
	cp $8
	jp nz, Func_16841
	callba_hli Func_566fe
Func_16841: ; 16841 (5:6841)
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$8
	ld l, [hl]
	ld h, a
	call Func_17e95
	ld hl, sp+$4
	ld a, [hl]
	cp $3
	jp nz, Func_16866
	ld a, $ff
	ld [wc311], a
	read_hl_from_sp_plus $e
	call Func_16128
	jp Func_1686d

Func_16866: ; 16866 (5:6866)
	read_hl_from_sp_plus $e
	call Func_17863
Func_1686d: ; 1686d (5:686d)
	call GetHLAtSPPlus4
	push hl
	read_hl_from_sp_plus $10
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld de, $19
	ld a, $3
	call GetBanks
	ld hl, sp+$b
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	cp $1b
	jp z, Func_16ae2
	cp $1a
	jp z, Func_16ae2
	cp $21
	jp z, Func_16ae2
	cp $15
	jp z, Func_16ae2
	cp $11
	jp z, Func_16ae2
	cp $6
	jp z, Func_16a92
	cp $1f
	jp z, Func_16a5c
	cp $8
	jp z, Func_16a5c
	cp $a
	jp z, Func_16a31
	cp $7
	jp z, Func_169e0
	cp $3
	jp z, Func_169e0
	cp $1
	jp z, Func_169e0
	cp $b
	jp z, Func_169b5
	cp $5
	jp z, Func_16966
	cp $9
	jp z, Func_16926
	cp $2
	jp z, Func_16926
	cp $e
	jp z, Func_16910
	cp $d
	jp z, Func_168e9
	or a
	jp nz, Func_16b21
Func_168e9: ; 168e9 (5:68e9)
	ld a, [wSaveScratchca6c]
	or a
	jp nz, Func_168fc
	ld hl, sp+$b
	ld a, [hl]
	call Func_16d2d
	ld hl, -1
	jp Func_16ce3

Func_168fc: ; 168fc (5:68fc)
	read_hl_from_sp_plus $e
	ld de, $7
	add hl, de
	ld a, [wSaveScratchca6c]
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_16b21

Func_16910: ; 16910 (5:6910)
	ld a, [wSaveBlock2]
	or a
	jp nz, Func_16923
	ld hl, sp+$b
	ld a, [hl]
	call Func_16d2d
	ld hl, -1
	jp Func_16ce3

Func_16923: ; 16923 (5:6923)
	jp Func_16b21

Func_16926: ; 16926 (5:6926)
	ld a, [wc9b7]
	or a
	jp nz, Func_16963
	ld hl, sp+$b
	ld c, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	call Func_16d47
	ld hl, sp+$4
	ld a, [hl]
	cp $9
	jp z, Func_1694e
	read_hl_from_sp_plus $e
	call Func_15388
	call Func_16d1a
	jp Func_1695d

Func_1694e: ; 1694e (5:694e)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call WaitAorBButtonOverworld_17a44
Func_1695d: ; 1695d (5:695d)
	ld hl, -1
	jp Func_16ce3

Func_16963: ; 16963 (5:6963)
	jp Func_16b21

Func_16966: ; 16966 (5:6966)
	ld a, [wc9b7]
	or a
	jp nz, Func_169b2
	ld hl, sp+$b
	ld c, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	call Func_16d47
	callba_hli Func_33bd0
	set_farcall_addrs_hli Func_569d9
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call WaitAorBButtonOverworld_17a44
	ld hl, -1
	jp Func_16ce3

Func_169b2: ; 169b2 (5:69b2)
	jp Func_16b21

Func_169b5: ; 169b5 (5:69b5)
	ld a, [$cc34]
	or a
	jp nz, Func_169dd
	ld hl, sp+$b
	ld c, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	call Func_16d47
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call WaitAorBButtonOverworld_17a44
	ld hl, -1
	jp Func_16ce3

Func_169dd: ; 169dd (5:69dd)
	jp Func_16b21

Func_169e0: ; 169e0 (5:69e0)
	ld a, [wc9a2]
	or a
	jp nz, Func_16a2e
	ld hl, sp+$b
	ld c, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	call Func_16d6b
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp nz, Func_16a02
	read_hl_from_sp_plus $e
	call Func_15388
Func_16a02: ; 16a02 (5:6a02)
	ld hl, sp+$4
	ld a, [hl]
	cp $3
	jp z, Func_16a13
	call Func_16d1a
	ld hl, -1
	jp Func_16ce3

Func_16a13: ; 16a13 (5:6a13)
	read_hl_from_sp_plus $e
	ld de, $b
	add hl, de
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $e
	inc hl
	inc hl
	inc hl
	ld de, $14
	ld [hl], e
	inc hl
	ld [hl], d
Func_16a2e: ; 16a2e (5:6a2e)
	jp Func_16b21

Func_16a31: ; 16a31 (5:6a31)
	ld a, [$cd10]
	or a
	jp nz, Func_16a59
	ld hl, sp+$b
	ld c, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	call Func_16d6b
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call WaitAorBButtonOverworld_17a44
	ld hl, -1
	jp Func_16ce3

Func_16a59: ; 16a59 (5:6a59)
	jp Func_16b21

Func_16a5c: ; 16a5c (5:6a5c)
	ld hl, sp+$b
	ld a, [hl]
	call GetSRAMBank
	read_hl_from_sp_plus $e
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_16a8f
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $6cee
	call PlaceStringDEatCoordHL
	call Func_16d1a
	ld hl, -1
	jp Func_16ce3

Func_16a8f: ; 16a8f (5:6a8f)
	jp Func_16b21

Func_16a92: ; 16a92 (5:6a92)
	read_hl_from_sp_plus $e
	ld de, $7
	add hl, de
	ld de, $96
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$7
	ld [hl], $96
Func_16aa4: ; 16aa4 (5:6aa4)
	ld hl, sp+$7
	ld a, [hl]
	cp $a8
	jp nc, Func_16adf
	set_farcall_addrs_hli Func_53b1e
	ld e, $0
	ld hl, sp+$7
	ld a, [hl]
	call FarCall
	cp $1
	jp nz, Func_16ad5
	read_hl_from_sp_plus $e
	ld de, $7
	add hl, de
	ld de, $a8
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_16adf

Func_16ad5: ; 16ad5 (5:6ad5)
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	jp Func_16aa4

Func_16adf: ; 16adf (5:6adf)
	jp Func_16b21

Func_16ae2: ; 16ae2 (5:6ae2)
	ld hl, sp+$b
	ld a, [hl]
	call GetSRAMBank
	read_hl_from_sp_plus $e
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_16b21
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, $6cf7
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call WaitAorBButtonOverworld_17a44
	ld hl, -1
	jp Func_16ce3

Func_16b21: ; 16b21 (5:6b21)
	ld hl, sp+$9
	ld a, [hl]
	add $2
	ld hl, sp+$6
	ld [hl], a
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$5
	ld [hl], a
	xor a
Func_16b31: ; 16b31 (5:6b31)
	ld hl, sp+$a
	cp [hl]
	jp nc, Func_16b5b
	push af
	ld hl, sp+$6
	ld l, [hl]
	push hl
	call GetHLAtSPPlus6
	ld e, a
	ld d, $0
	add hl, de
	ld c, l
	ld hl, sp+$9
	ld e, [hl]
	ld hl, sp+$a
	ld a, [hl]
	call Func_171ab
	pop bc
	ld hl, sp+$7
	ld a, [hl]
	add $2
	ld hl, sp+$7
	ld [hl], a
	pop af
	inc a
	jp Func_16b31

Func_16b5b: ; 16b5b (5:6b5b)
	ld hl, sp+$b
	ld a, [hl]
	call GetSRAMBank
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_16c8e
	cp $21
	jp z, Func_16c78
	cp $1a
	jp z, Func_16c4f
	cp $6
	jp z, Func_16c3e
	cp $5
	jp z, Func_16c17
	cp $2
	jp z, Func_16bf7
	cp $3
	jp z, Func_16bab
	cp $1
	jp nz, Func_16cd4
	read_hl_from_sp_plus $e
	call Func_15388
	set_farcall_addrs_hli Func_5712f
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call FarCall
	jp Func_16cd4

Func_16bab: ; 16bab (5:6bab)
	callba_hli Func_5615c
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld a, l
	call Func_158b7
	cp $ff
	jp nz, Func_16bd0
	ld hl, -1
	jp Func_16ce3

Func_16bd0: ; 16bd0 (5:6bd0)
	read_hl_from_sp_plus $e
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	sub $14
	inc hl
	or [hl]
	jp nz, Func_16bf4
	read_hl_from_sp_plus $e
	call Func_16128
	read_hl_from_sp_plus $e
	ld de, $b
	add hl, de
	ld de, $14
	ld [hl], e
	inc hl
	ld [hl], d
Func_16bf4: ; 16bf4 (5:6bf4)
	jp Func_16cd4

Func_16bf7: ; 16bf7 (5:6bf7)
	read_hl_from_sp_plus $e
	call Func_15388
	set_farcall_addrs_hli Func_56abf
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call FarCall
	jp Func_16cd4

Func_16c17: ; 16c17 (5:6c17)
	callba_hli Func_33bd0
	set_farcall_addrs_hli Func_569d9
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call FarCall
	jp Func_16cd4

Func_16c3e: ; 16c3e (5:6c3e)
	callba_hli Func_57840
	jp Func_16cd4

Func_16c4f: ; 16c4f (5:6c4f)
	callba_hli Func_681a6
	set_farcall_addrs_hli Func_681bd
	ld hl, sp+$a
	ld c, [hl]
	pop hl
	push hl
	ld a, l
	call GetHLAtSPPlus4
	ld e, l
	call FarCall
	jp Func_16cd4

Func_16c78: ; 16c78 (5:6c78)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_17e95
	ld de, Data_16d03
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_16cd4

Func_16c8e: ; 16c8e (5:6c8e)
	ld de, $19
	ld a, $3
	call GetBanks
	ld hl, sp+$b
	ld [hl], a
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	ld de, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	push af
	ld hl, sp+$d
	ld a, [hl]
	call GetSRAMBank
	ld c, $3
	ld e, $14
	ld hl, $0
	call Func_17e95
	set_farcall_addrs_hli Func_61133
	pop af
	ld l, a
	ld h, $0
	ld de, $a8
	add hl, de
	reg16swap de, hl
	ld hl, $101
	call FarCall
Func_16cd4: ; 16cd4 (5:6cd4)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, $4000
Func_16ce3: ; 16ce3 (5:6ce3)
	reg16swap de, hl
	add sp, $10
	reg16swap de, hl
	ret

Data_16cee: ; 16cee
	db "(わさﾞ なし)", $0

Data_16cf7: ; 16cf7
	db "ロホﾞホﾟン (なし)", $0

Data_16d03: ; 16d03
	db "(とﾞの)ロホﾞホﾟン(をさくしﾞょする)?", $0

Func_16d1a: ; 16d1a (5:6d1a)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call WaitAorBButtonOverworld_17a44
.asm_16d27
	call Func_3af6
	ret

Func_16d2d: ; 16d2d (5:6d2d)
	call GetSRAMBank
	ld de, Data_16d3d
	ld hl, $104
	call PlaceStringDEatCoordHL
	call Func_16d1a
	ret

Data_16d3d: ; 16d3d
	db "アイテム (なし)", $0

Func_16d47: ; 16d47 (5:6d47)
	push de
	push af
	ld a, c
	call GetSRAMBank
	pop af
	pop de
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	ld d, $0
	inc de
	add hl, de
	ld de, Data_16d61
	call PlaceStringDEatCoordHL
	ret

Data_16d61: ; 16d61
	db "ハﾟーツ (なし)", $0

Func_16d6b: ; 16d6b (5:6d6b)
	push de
	push af
	ld a, c
	call GetSRAMBank
	pop af
	pop de
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	ld d, $0
	inc de
	add hl, de
	ld de, Data_16d85
	call PlaceStringDEatCoordHL
	ret

Data_16d85: ; 16d85
	db "ソフト (なし)", $0

Func_16d8e: ; 16d8e
	push hl
	add sp, -$e
	ld hl, sp+$e
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push de
	push hl
	ld hl, sp+$6
	ld [hl], $0
	pop hl
	write_hl_to_sp_plus $12
	read_hl_from_sp_plus $12
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $10
	read_hl_from_sp_plus $12
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $e
	read_hl_from_sp_plus $12
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $c
	read_hl_from_sp_plus $12
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$9
	ld [hl], a
	read_hl_from_sp_plus $12
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$8
	ld [hl], a
	read_hl_from_sp_plus $12
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$7
	ld [hl], a
	read_hl_from_sp_plus $12
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$6
	ld [hl], a
	read_hl_from_sp_plus $12
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$5
	ld [hl], e
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $14
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_16e3e
	read_hl_from_sp_plus $12
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $e
Func_16e3e: ; 16e3e (5:6e3e)
	ld a, [hSRAMBank]
	ld c, a
	read_hl_from_sp_plus $10
	push hl
	read_hl_from_sp_plus $14
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop de
	push bc
	ld a, e
	dec a
	or d
	jp z, Func_16e95
	ld a, e
	or d
	jp nz, Func_16eee
	read_hl_from_sp_plus $10
	dec hl
	write_hl_to_sp_plus $10
	inc h
	dec h
	bit 7, h
	jr z, .asm_16e92
	ld hl, $0
	write_hl_to_sp_plus $10
	read_hl_from_sp_plus $c
	dec hl
	write_hl_to_sp_plus $c
	inc h
	dec h
	bit 7, h
	jr z, .asm_16e8e
	ld hl, $0
	write_hl_to_sp_plus $c
	jp .asm_16e92

.asm_16e8e
	ld hl, sp+$4
	ld [hl], $1
.asm_16e92
	jp Func_16eee

Func_16e95: ; 16e95 (5:6e95)
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $12
	inc hl
	write_hl_to_sp_plus $12
	pop de
	call CompareHLtoDE
	jp c, Func_16eee
	read_hl_from_sp_plus $e
	dec hl
	write_hl_to_sp_plus $10
	read_hl_from_sp_plus $c
	inc hl
	write_hl_to_sp_plus $c
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $e
	pop de
	add hl, de
	push hl
	read_hl_from_sp_plus $14
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_16eea
	read_hl_from_sp_plus $c
	dec hl
	write_hl_to_sp_plus $c
	jp Func_16eee

Func_16eea: ; 16eea (5:6eea)
	ld hl, sp+$4
	ld [hl], $2
Func_16eee: ; 16eee (5:6eee)
	read_hl_from_sp_plus $10
	push hl
	read_hl_from_sp_plus $14
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $14
	ld de, $5
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_16fee
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, de
	dec hl
	dec hl
	push hl
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	add hl, de
	ld h, l
	ld l, $0
	dec h
	dec h
	pop de
	add hl, de
	call Coord2TileMap
	call WriteHLToSPPlus4
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld c, a
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	dec de
	dec de
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	dec h
	dec h
	dec h
	add hl, de
	push hl
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	pop de
	call Func_17ef7
	ld hl, sp+$5
	ld a, [hl]
	cp $8
	jp z, Func_16f7e
	ld hl, sp+$5
	ld a, [hl]
	cp $1f
	jp z, Func_16f7e
	ld a, $3
	call GetSRAMBank
Func_16f7e: ; 16f7e (5:6f7e)
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp nz, Func_16fa5
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $e
	ld c, l
	ld hl, sp+$a
	ld a, [hl]
	inc a
	ld e, a
	ld hl, sp+$b
	ld a, [hl]
	add $2
	call Func_171ab
	pop bc
	call GetHLAtSPPlus4
	ld [hl], $8a
	jp Func_16fee

Func_16fa5: ; 16fa5 (5:6fa5)
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $10
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	dec hl
	push hl
	ld hl, sp+$c
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $12
	add hl, hl
	add hl, bc
	dec hl
	ld e, l
	ld hl, sp+$d
	ld a, [hl]
	add $2
	pop bc
	call Func_171ab
	pop bc
	read_hl_from_sp_plus $12
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $e
	push hl
	read_hl_from_sp_plus $e
	pop de
	add hl, de
	call CompareHLtoBC
	jp c, Func_16fee
	call GetHLAtSPPlus4
	ld [hl], $8f
Func_16fee: ; 16fee (5:6fee)
	pop bc
	ld hl, sp+$3
	ld a, [hl]
	cp $8
	jp z, Func_17003
	ld hl, sp+$3
	ld a, [hl]
	cp $1f
	jp z, Func_17003
	ld a, c
	call GetSRAMBank
Func_17003: ; 17003 (5:7003)
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp z, Func_17080
	cp $5
	jp z, Func_17065
	cp $3
	jp z, Func_17054
	cp $2
	jp z, Func_17039
	cp $1
	jp nz, Func_170c4
	set_farcall_addrs_hli Func_5712f
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	call FarCall
	jp Func_170c4

Func_17039: ; 17039 (5:7039)
	set_farcall_addrs_hli Func_56abf
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	call FarCall
	jp Func_170c4

Func_17054: ; 17054 (5:7054)
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	ld a, l
	call Func_158b7
	jp Func_170c4

Func_17065: ; 17065 (5:7065)
	set_farcall_addrs_hli Func_569d9
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	call FarCall
	jp Func_170c4

Func_17080: ; 17080 (5:7080)
	ld de, $19
	ld a, $3
	call GetBanks
	ld c, a
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	ld de, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	push af
	ld a, c
	call GetSRAMBank
	ld c, $3
	ld e, $14
	ld hl, $0
	call Func_17e95
	set_farcall_addrs_hli Func_61133
	pop af
	ld l, a
	ld h, $0
	ld de, $a8
	add hl, de
	reg16swap de, hl
	ld hl, $101
	call FarCall
Func_170c4: ; 170c4 (5:70c4)
	read_hl_from_sp_plus $10
	call Func_17863
	ld hl, sp+$3
	ld a, [hl]
	cp $1a
	jp nz, Func_170ef
	set_farcall_addrs_hli Func_681bd
	read_hl_from_sp_plus $c
	ld c, l
	call GetHLAtSPPlus10
	ld a, l
	read_hl_from_sp_plus $e
	ld e, l
	call FarCall
Func_170ef: ; 170ef (5:70ef)
	ld a, [wc39b]
	cp $ff
	jp z, Func_17195
	ld c, $0
Func_170f9: ; 170f9 (5:70f9)
	read_hl_from_sp_plus $10
	ld de, $9
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_17195
	read_hl_from_sp_plus $10
	ld de, $5
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	add hl, de
	ld a, [wc39b]
	ld e, a
	ld d, $0
	call CompareHLtoDE
	jp nz, Func_1715d
	push bc
	read_hl_from_sp_plus $12
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp z, Func_17159
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld l, a
	ld a, c
	add a
	add l
	ld e, a
	ld hl, sp+$9
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_171a6
	push hl
	call PlaceString
	pop bc
	pop bc
Func_17159: ; 17159 (5:7159)
	pop bc
	jp Func_17191

Func_1715d: ; 1715d (5:715d)
	read_hl_from_sp_plus $10
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp z, Func_17191
	push bc
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	inc de
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, Data_171a9
	call PlaceStringDEatCoordHL
	pop bc
Func_17191: ; 17191 (5:7191)
	inc c
	jp Func_170f9

Func_17195: ; 17195 (5:7195)
	call Func_1401b
	ld hl, $4000
	reg16swap de, hl
	add sp, $10
	reg16swap de, hl
	ret

Data_171a6: ; 171a6
	TX_STACK
	db $0

Data_171a9: ; 171a9
	db " ", $0

Func_171ab: ; 171ab (5:71ab)
	push af
	push bc
	add sp, -$20
	push de
	ld hl, sp+$28
	ld a, [hl]
	cp $1b
	jp z, Func_172cd
	cp $1a
	jp z, Func_172cd
	cp $21
	jp z, Func_172cd
	cp $15
	jp z, Func_172cd
	cp $11
	jp z, Func_172cd
	cp $1f
	jp z, Func_172b7
	cp $8
	jp z, Func_172b7
	cp $6
	jp z, Func_172a1
	cp $b
	jp z, Func_17289
	cp $9
	jp z, Func_17271
	cp $5
	jp z, Func_17271
	cp $2
	jp z, Func_17271
	cp $a
	jp z, Func_17259
	cp $7
	jp z, Func_17241
	cp $3
	jp z, Func_17241
	cp $1
	jp z, Func_17241
	cp $e
	jp z, Func_17229
	cp $d
	jp z, Func_17211
	or a
	jp nz, Func_17352
Func_17211: ; 17211 (5:7211)
	set_farcall_addrs_hli Func_55ed2
	ld c, $0
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_17229: ; 17229 (5:7229)
	set_farcall_addrs_hli Func_55ed2
	ld c, $1
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_17241: ; 17241 (5:7241)
	set_farcall_addrs_hli Func_5601b
	ld c, $0
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_17259: ; 17259 (5:7259)
	set_farcall_addrs_hli Func_5601b
	ld c, $2
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_17271: ; 17271 (5:7271)
	set_farcall_addrs_hli Func_55f95
	ld c, $0
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_17289: ; 17289 (5:7289)
	set_farcall_addrs_hli Func_55f95
	ld c, $1
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_172a1: ; 172a1 (5:72a1)
	set_farcall_addrs_hli Func_576c1
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_172b7: ; 172b7 (5:72b7)
	set_farcall_addrs_hli Func_56d87
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_17352

Func_172cd: ; 172cd (5:72cd)
	set_farcall_addrs_hli Func_55dd6
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	ld hl, sp+$28
	ld a, [hl]
	cp $1a
	jp nz, Func_17352
	ld hl, sp+$3
	ld [hl], $0
Func_172ec: ; 172ec (5:72ec)
	ld hl, sp+$3
	ld a, [hl]
	cp $3
	jp nc, Func_17352
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_17348
	ld hl, sp+$2
	ld [hl], $0
Func_17312: ; 17312 (5:7312)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_17348
	ld hl, sp+$2
	ld c, [hl]
	ld b, $0
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$22
	cp [hl]
	jp nz, Func_1733e
	ld hl, sp+$d
	ld [hl], $80
	jp Func_17348

Func_1733e: ; 1733e (5:733e)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_17312

Func_17348: ; 17348 (5:7348)
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
	jp Func_172ec

Func_17352: ; 17352 (5:7352)
	pop de
	push de
	ld a, [wc39b]
	ld hl, sp+$22
	cp [hl]
	jp nz, Func_17371
	ld hl, sp+$25
	ld a, [hl]
	dec a
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_1739e
	push hl
	call PlaceString
	pop bc
	pop bc
Func_17371: ; 17371 (5:7371)
	pop de
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld d, $0
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	call Func_16019
	ld hl, sp+$26
	ld a, [hl]
	cp $5
	jp nz, Func_1739b
	set_farcall_addrs_hli Func_6810b
	ld e, $0
	ld hl, sp+$20
	ld a, [hl]
	call FarCall
Func_1739b: ; 1739b (5:739b)
	add sp, $24
	ret

Data_1739e: ; 1739e
	TX_STACK
	db $0

Func_173a1: ; 173a1 (5:73a1)
	push bc
	ld a, l
	and h
	inc a
	jp z, Func_173b2
	ld a, e
	and d
	inc a
	jp z, Func_173b2
	ld a, l
	call SetStringStartState
Func_173b2: ; 173b2 (5:73b2)
	pop bc
	push bc
	ld hl, Data_173c1
	push hl
	call PlaceString
	pop bc
	pop bc
	ld hl, $4000
	ret

Data_173c1: ; 173c1
	TX_CALL
	db $0

Func_173c4: ; 173c4 (5:73c4)
	push bc
	push bc
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$1
	ld [hl], a
	reg16swap de, hl
	inc hl
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld c, $0
Func_173df: ; 173df (5:73df)
	call GetHLAtSPPlus4
	ld de, $9
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_17429
	push bc
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp z, Func_17424
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	inc de
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, Data_1743d
	call PlaceStringDEatCoordHL
Func_17424: ; 17424 (5:7424)
	pop bc
	inc c
	jp Func_173df

Func_17429: ; 17429 (5:7429)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld a, $ff
	ld [wc39b], a
	pop bc
	pop bc
	ret

Data_1743d: ; 1743d
	db " ", $0

Func_1743f: ; 1743f
	ld a, [wc39b]
	cp $ff
	jp z, Func_17450
	call Func_173c4
	ld hl, $8000
	jp Func_17453

Func_17450: ; 17450 (5:7450)
	ld hl, -1
Func_17453: ; 17453 (5:7453)
	ret

Func_17454: ; 17454
	ld a, [wc39b]
	cp $ff
	jp z, Func_17465
	call Func_173c4
	ld hl, $8000
	jp Func_1746b

Func_17465: ; 17465 (5:7465)
	call Func_3af6
	ld hl, -1
Func_1746b: ; 1746b (5:746b)
	ret

Func_1746c: ; 1746c
	ld hl, $4000
	ret

Func_17470:: ; 17470 (5:7470)
	call WaitVideoTransfer
	ld a, BANK(GFX_4ce2)
	ld [wFarCallDestBank], a
	ld bc, $10
IF DEF(SUN)
	ld de, GFX_4ce2 + $f0
ENDC
IF DEF(STAR)
	ld de, GFX_4ce2 + $100
ENDC
	ld hl, $88e0
	call FarRequestVideoData
	call WaitVideoTransfer
	ret

Func_17488:: ; 17488 (5:7488)
	call FillVisibleAreaWithBlankTile
	call WaitVideoTransfer
	ld a, BANK(GFX_4a02)
	ld [wFarCallDestBank], a
	ld bc, $10
	ld de, GFX_4a02
	ld hl, $88e0
	call FarRequestVideoData
	call WaitVideoTransfer
	ret

Data_174a3: ; 174a3
	dw 1000
	dw  100
	dw   10
	dw    1

INCLUDE "engine/menu/func_174ab.asm"

Func_17863: ; 17863 (5:7863)
	push bc
	push bc
	push bc
	push bc
	push bc
	pop de
	push hl
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus4
	ld de, $b
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus4
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	call GetHLAtSPPlus4
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $c
	call GetHLAtSPPlus4
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	call GetHLAtSPPlus4
	ld de, $d
	add hl, de
	ld a, [hl]
	ld a, c
	and b
	inc a
	jp z, Func_178e5
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	inc de
	ld l, c
	ld h, b
	add hl, hl
	add hl, de
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, Data_1796b
	push hl
	call PlaceString
	pop bc
Func_178e5: ; 178e5 (5:78e5)
	pop bc
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	inc de
	ld l, c
	ld h, b
	add hl, hl
	add hl, de
	ld e, l
	ld hl, sp+$3
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_1796d
	push hl
	call PlaceString
	pop bc
	pop bc
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $c
	pop de
	call CompareHLtoDE
	jp z, Func_17965
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$2
	add [hl]
	add $fe
	ld l, a
	push hl
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$5
	add [hl]
	add $fe
	pop de
	call SetStringStartState
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $c
	push hl
	call GetHLAtSPPlus10
	pop de
	add hl, de
	pop de
	call CompareHLtoDE
	jp nc, Func_1795d
	ld hl, $8a
	push hl
	ld hl, Data_17970
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_17965

Func_1795d: ; 1795d (5:795d)
	ld hl, Data_17973
	push hl
	call PlaceString
	pop bc
Func_17965: ; 17965 (5:7965)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_1796b: ; 1796b
	db " ", $0

Data_1796d: ; 1796d
	TX_STACK
	db $0

Data_17970: ; 17970
	TX_STACK
	db $0

Data_17973: ; 17973
	db " ", $0

Func_17975: ; 17975
	push hl
	push bc
	push bc
	push bc
	xor a
	ld a, c
	and $80
	ld hl, sp+$2
	ld [hl], a
	ld a, c
	and $7f
	ld hl, sp+$3
	ld [hl], a
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_1799c
	push de
	ld hl, Data_174a3
	call WriteHLToSPPlus4
	ld hl, sp+$6
	ld [hl], $4
	pop de
	jp Func_179ba

Func_1799c: ; 1799c (5:799c)
	push de
	ld hl, sp+$5
	ld e, [hl]
	ld d, $0
	ld hl, $4
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	add hl, hl
	ld de, Data_174a3
	add hl, de
	call WriteHLToSPPlus4
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$6
	ld [hl], a
	pop de
Func_179ba: ; 179ba (5:79ba)
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp c, Func_17a39
	push de
	ld c, $0
Func_179c5: ; 179c5 (5:79c5)
	call GetHLAtSPPlus10
	inc h
	dec h
	bit 7, h
	jr nz, .asm_179e8
	push bc
	call GetHLAtSPPlus6
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $c
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	write_hl_to_sp_plus $c
	pop bc
	inc c
	jp Func_179c5

.asm_179e8
	push bc
	call GetHLAtSPPlus6
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $c
	add hl, bc
	write_hl_to_sp_plus $c
	pop bc
	pop de
	ld a, c
	cp $2
	jp nc, Func_17a0f
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_17a0f
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp nz, Func_17a19
Func_17a0f: ; 17a0f (5:7a0f)
	ld hl, sp+$2
	ld [hl], $0
	ld a, c
	ld [de], a
	inc de
	jp Func_17a25

Func_17a19: ; 17a19 (5:7a19)
	ld hl, sp+$3
	ld a, [hl]
	cp $1
	jp c, Func_17a25
	ld a, $90
	ld [de], a
	inc de
Func_17a25: ; 17a25 (5:7a25)
	push de
	ld hl, sp+$6
	ld a, [hl]
	dec a
	ld hl, sp+$6
	ld [hl], a
	call GetHLAtSPPlus4
	inc hl
	inc hl
	call WriteHLToSPPlus4
	pop de
	jp Func_179ba

Func_17a39: ; 17a39 (5:7a39)
	xor a
	ld [de], a
	reg16swap de, hl
	pop bc
	pop bc
	pop bc
	pop bc
	ret

WaitAorBButtonOverworld_17a44: ; 17a44 (5:7a44)
	call NextOverworldFrame
	call CheckButton
	ld l, a
	ld h, $0
	ld a, l
	and A_BUTTON
	jp z, Func_17a58
	ld a, A_BUTTON
	jp Func_17a66

Func_17a58: ; 17a58 (5:7a58)
	ld a, l
	and B_BUTTON
	jp z, Func_17a63
	ld a, B_BUTTON
	jp Func_17a66

Func_17a63: ; 17a63 (5:7a63)
	jp WaitAorBButtonOverworld_17a44

Func_17a66: ; 17a66 (5:7a66)
	ret

INCLUDE "engine/malloc.asm"

Func_17e95:: ; 17e95 (5:7e95)
	push bc
	push de
	push hl
	ld b, e
	push bc
	call Coord2TileMap
	pop bc
	ld de, SCREEN_WIDTH * SCREEN_HEIGHT
	add hl, de
.asm_17ea2
	push hl
	ld d, b
	xor a
.asm_17ea5
	ld [hli], a
	dec b
	jr nz, .asm_17ea5
	ld b, d
	pop hl
	ld de, $14
	add hl, de
	dec c
	jr nz, .asm_17ea2
	pop hl
	pop de
	pop bc
	ld d, c
	call Coord2TileMap
	ld a, $14
	sub e
	ld c, a
	ld b, $0
	dec e
	dec d
	push de
	ld a, $80
	ld [hli], a
	ld a, $81
	jr .asm_17eca

.asm_17ec9
	ld [hli], a
.asm_17eca
	dec e
	jr nz, .asm_17ec9
	ld a, $82
	ld [hli], a
	add hl, bc
	pop de
	jr .asm_17ee5

.asm_17ed4
	push de
	ld a, $86
	ld [hli], a
	ld a, $8f
	jr .asm_17edd

.asm_17edc
	ld [hli], a
.asm_17edd
	dec e
	jr nz, .asm_17edc
	ld a, $87
	ld [hli], a
	add hl, bc
	pop de
.asm_17ee5
	dec d
	jr nz, .asm_17ed4
	ld a, $83
	ld [hli], a
	ld a, $84
	jr .asm_17ef0

.asm_17eef
	ld [hli], a
.asm_17ef0
	dec e
	jr nz, .asm_17eef
	ld a, $85
	ld [hli], a
	ret

Func_17ef7: ; 17ef7 (5:7ef7)
	bit 0, c
	jr nz, .asm_17f48
	ld a, h
	add d
	ld h, a
	dec h
	ld a, l
	add e
	ld l, a
	dec l
	call Coord2TileMap
	ld a, e
	push af
	ld a, $14
	sub d
	ld e, a
	ld a, l
	sub $28
	ld c, a
	ld a, h
	sbc $0
	ld b, a
	pop af
	sub $3
.asm_17f17
	push af
	push de
.asm_17f19
	ld a, [bc]
	dec bc
	ld [hld], a
	dec d
	jr nz, .asm_17f19
	pop de
	ld a, c
	sub e
	ld c, a
	ld a, b
	sbc $0
	ld b, a
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc $0
	ld h, a
	pop af
	dec a
	jr nz, .asm_17f17
.asm_17f32
	ld a, [bc]
	dec bc
	ld e, $42
	cp $88
	jr z, .asm_17f42
	ld e, $43
	cp $89
	jr z, .asm_17f42
	ld e, $8f
.asm_17f42
	ld a, e
	ld [hld], a
	dec d
	jr nz, .asm_17f32
	ret

.asm_17f48
	call Coord2TileMap
	ld a, e
	push af
	ld a, $14
	sub d
	ld e, a
	ld a, l
	add $28
	ld c, a
	ld a, h
	adc $0
	ld b, a
	pop af
	sub $3
	push af
	push de
.asm_17f5e
	ld a, [bc]
	inc bc
	ld e, $88
	cp $42
	jr z, .asm_17f6e
	ld e, $89
	cp $43
	jr z, .asm_17f6e
	ld e, $81
.asm_17f6e
	ld a, e
	ld [hli], a
	dec d
	jr nz, .asm_17f5e
	pop de
	ld a, c
	add e
	ld c, a
	ld a, b
	adc $0
	ld b, a
	ld a, l
	add e
	ld l, a
	ld a, h
	adc $0
	ld h, a
	pop af
.asm_17f83
	push af
	push de
.asm_17f85
	ld a, [bc]
	ld [hli], a
	inc bc
	dec d
	jr nz, .asm_17f85
	pop de
	ld a, c
	add e
	ld c, a
	ld a, b
	adc $0
	ld b, a
	ld a, l
	add e
	ld l, a
	ld a, h
	adc $0
	ld h, a
	pop af
	dec a
	jr nz, .asm_17f83
	ret

SECTION "Bank 06", ROMX, BANK [$6]
MapTiles_SGB_DMG: INCBIN "gfx/tiles/dmg_sgb.2bpp" ; 18000

SECTION "Bank 07", ROMX, BANK [$7]
Pointers_1c000: ; 1c000
	dbw BANK(Data_1c018) - BANK(Pointers_1c000), Data_1c018
	dbw BANK(Data_1c4fe) - BANK(Pointers_1c000), Data_1c4fe
	dbw BANK(Data_1c9e0) - BANK(Pointers_1c000), Data_1c9e0
	dbw BANK(Data_1ce64) - BANK(Pointers_1c000), Data_1ce64
	dbw BANK(Data_1d352) - BANK(Pointers_1c000), Data_1d352
	dbw BANK(Data_1d90f) - BANK(Pointers_1c000), Data_1d90f
	dbw BANK(Data_1dda1) - BANK(Pointers_1c000), Data_1dda1
	dbw BANK(Data_1e2bf) - BANK(Pointers_1c000), Data_1e2bf

Data_1c018: INCBIN "maps/unknown_1c018/unknown_1c018.bin.rz"
Data_1c4fe: INCBIN "maps/unknown_1c018/unknown_1c4fe.bin.rz"
Data_1c9e0: INCBIN "maps/unknown_1c018/unknown_1c9e0.bin.rz"
Data_1ce64: INCBIN "maps/unknown_1c018/unknown_1ce64.bin.rz"
Data_1d352: INCBIN "maps/unknown_1c018/unknown_1d352.bin.rz"
Data_1d90f: INCBIN "maps/unknown_1c018/unknown_1d90f.bin.rz"
Data_1dda1: INCBIN "maps/unknown_1c018/unknown_1dda1.bin.rz"
Data_1e2bf: INCBIN "maps/unknown_1c018/unknown_1e2bf.bin.rz"

SECTION "Bank 08", ROMX [$4000], BANK [$8]
INCLUDE "charmap2.asm"
Func_20000: ; 20000
	ret

Data_20001: ; 20001
	dr $20001, $200fd

Text_200fd: ; 200fd
	db "エネだま", $0

Text_20102: ; 20102
	db "は", $0

Text_20104: ; 20104
	db "G", $0

Text_20106: ; 20106
	db "レベル", $0

Text_2010a: ; 2010a
	db "の", $0

Pointers_2010c: ; 2010c
	dw Text_200fd
	dw Text_20102
	dw Text_20104
	dw Text_20106
	dw Text_2010a

Text_20116: ; 20116
	db "を ひろった", $0

Text_2011d: ; 2011d
	db "ひかっている", $0

Text_20124: ; 20124
	db "しかし いっぱいなので すてた", $0

Text_20134: ; 20134
	db "けいけんちが ふえた", $0

Text_2013f: ; 2013f
	db "に なった", $0

Text_20145: ; 20145
	db "ほかくに せいこうした", $0

Text_20151: ; 20151
	db "ほかくに しっぱいした", $0

Text_2015d: ; 2015d
	db "しかし だれもたべられない", $0

Text_2016b: ; 2016b
	db "そのコマンドは つかえません", $0

Pointers_2017a: ; 2017a
	dw Text_20116
	dw Text_2011d
	dw Text_20124
	dw Text_20134
	dw Text_2013f
	dw Text_20145
	dw Text_20151
	dw Text_2015d
	dw Text_2016b

Text_2018c: ; 2018c
	db "ここでは", $0

Text_20191: ; 20191
	db "しようできない", $0

Pointers_20199: ; 20199
	dw Text_2018c
	dw Text_20191
	dw $0

Text_2019f: ; 2019f
	db "ひとのものを", $0

Text_201a6: ; 201a6
	db "とっちゃいけないよ!", $0

Pointers_201b1: ; 201b1
	dw Text_2019f
	dw Text_201a6
	dw $0

Text_201b7: ; 201b7
	db "は まだ がまんしている!", $0

Pointers_201c5: ; 201c5
	dw Text_201b7

INCLUDE "text/attack_categories.asm"
Text_202d7: ; 202d7
	db "エネルギー ポイントが", $0

Text_202e3: ; 202e3
	db "たりません!", $0

Pointers_202ea: ; 202ea
	dw Text_202d7
	dw Text_202e3
	dw $0

SECTION "Bank 8 part 2", ROMX [$42f0], BANK [$8]
INCLUDE "charmap.asm"

Func_202f0: ; 202f0 (8:42f0)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_20304: ; 20304 (8:4304)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_20318: ; 20318
	push bc
	ld hl, sp+$0
	ld [hl], $ff
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_2033d
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_20304
	jp Func_2034b

Func_2033d: ; 2033d (8:433d)
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_202f0
Func_2034b: ; 2034b (8:434b)
	pop bc
	ret

Func_2034d: ; 2034d (8:434d)
	push af
	set_farcall_addrs_hli RandomRange
	pop af
	call FarCall
	ret

Func_2035e: ; 2035e
	callba_hli Func_5ec5e
	ret

Func_2036d: ; 2036d (8:436d)
	push hl
	push de
	set_farcall_addrs_hli Func_667d
	pop de
	pop hl
	ld bc, $8f02
	call FarCall
	ret

Func_20383: ; 20383 (8:4383)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_20398: ; 20398 (8:4398)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_20383
	ret

Func_203a3: ; 203a3 (8:43a3)
	push hl
	push de
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli PrintMapText_
	ld c, $a8
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $10e
	call FarCall
	pop bc
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	pop bc
	ret

Func_203fa: ; 203fa (8:43fa)
	push hl
	push de
	call Func_20398
	pop de
	pop hl
	call Func_203a3
	ret

Func_20405: ; 20405
	push af
	push de
	set_farcall_addrs_hli Func_d3a2
	pop de
	pop af
	jp FarCall

Func_20417: ; 20417
	ld hl, $4000
	ret

Func_2041b: ; 2041b (8:441b)
	ld a, [wc2cd]
	or a
	jp nz, Func_2042d
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_20435

Func_2042d: ; 2042d (8:442d)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_20435: ; 20435 (8:4435)
	ret

Func_20436: ; 20436 (8:4436)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_20436
	ret

Pointers_20441: ; 20441
	dw Data_2044d
	dw Data_20454
	dw Data_2045b
	dw Data_20460
	dw Data_20467
	dw Data_20470

Data_2044d: ; 2044d
	db "(たたかう)", $0

Data_20454: ; 20454
	db "ロホﾞホﾟン", $0

Data_2045b: ; 2045b
	db "アイテム", $0

Data_20460: ; 20460
	db "(にけﾞる)", $0

Data_20467: ; 20467
	db "(ほﾞうきﾞょ)", $0

Data_20470: ; 20470
	db "(かいひ)", $0

DrawBattleSelectionMenu: ; 20476 (8:4476)
	push hl
	push bc
	ld c, $5
	ld e, $d
	ld hl, $70d
	call Func_20383
	call GetHLAtSPPlus4
	ld de, $b
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	call GetHLAtSPPlus4
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, e
	or d
	jp nz, .second_row
	ld e, $0
	jp .got_starting_string

.second_row
	ld e, $2
.got_starting_string
	ld l, $0
.loop
	ld a, l
	cp $4
	jp nc, .done
	push hl
	push de
	ld a, l
	and $1
	jp nz, .column_2
	ld a, $9
	jp .got_x_coord

.column_2
	ld a, $e
.got_x_coord
	ld c, a
	push bc
	ld a, l
	ld b, $2
	call DivideAbyB
	add a
	add $e
	pop bc
	pop de
	push de
	ld l, e
	ld h, $0
	add hl, hl
	ld de, Pointers_20441
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld h, c
	ld l, a
	call PlaceStringDEatCoordHL
	pop de
	pop hl
	inc l
	inc e
	jp .loop

.done
	pop bc
	push de
	push bc
	call GetHLAtSPPlus6
	ld a, l
	and h
	inc a
	jp z, .skip_blank_tile
	call GetHLAtSPPlus6
	ld a, l
	and $1
	jp nz, .blank_tile_column_2
	ld a, $8
	jp .got_blank_tile_x

.blank_tile_column_2
	ld a, $d
.got_blank_tile_x
	ld e, a
	push de
	ld a, l
	ld b, $2
	call DivideAbyB
	add a
	add $e
	pop de
	ld h, e
	ld l, a
	ld de, Data_2058f
	call PlaceStringDEatCoordHL
.skip_blank_tile
	pop bc
	push bc
	ld l, c
	ld a, l
	and $1
	jp nz, .cursor_column_2
	ld a, $8
	jp .got_cursor_x

.cursor_column_2
	ld a, $d
.got_cursor_x
	ld c, a
	push bc
	ld a, l
	ld b, $2
	call DivideAbyB
	add a
	add $e
	pop bc
	ld e, a
	ld a, c
	call SetStringStartState
	ld hl, $8b ; selection cursor
	push hl
	ld hl, Data_20591
	push hl
	call PlaceString
	pop bc
	pop bc
	ld e, $10
	ld a, $12
	call SetStringStartState
	pop bc
	pop de
	push bc
	ld a, e
	cp $5
	jp nc, .clear_down_arrow
	ld hl, $8a ; down arrow
	push hl
	ld hl, Data_20594
	push hl
	call PlaceString
	pop bc
	pop bc
	jp .finish

.clear_down_arrow
	ld hl, Data_20597
	push hl
	call PlaceString
	pop bc
.finish
	ld l, $5
	push hl
	ld c, $d
	ld e, $d
	ld a, $7
	call Func_3ca1
	pop bc
	pop bc
	call GetHLAtSPPlus4
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $4000
	pop bc
	pop bc
	ret

Data_2058f: ; 2058f
	db " ", $0

Data_20591: ; 20591
	TX_STACK
	db $0

Data_20594: ; 20594
	TX_STACK
	db $0

Data_20597: ; 20597
	db " ", $0

Func_20599: ; 20599
	push hl
	push bc
	push de
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	pop de
	ld a, e
	sub $3
	or d
	jp z, Func_20616
	ld a, e
	sub $2
	or d
	jp z, Func_2060c
	ld a, e
	dec a
	or d
	jp z, Func_205ee
	ld a, e
	or d
	jp nz, Func_2061d
	dec bc
	dec bc
	inc b
	dec b
	bit 7, b
	jr z, .asm_205eb
	inc bc
	inc bc
	pop hl
	push hl
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, .asm_205eb
	ld hl, $0
	pop de
	push hl
.asm_205eb
	jp Func_2061d

Func_205ee: ; 205ee (8:45ee)
	inc bc
	inc bc
	ld l, c
	ld h, b
	ld de, $4
	call CompareHLtoDE
	jp c, Func_20609
	dec bc
	dec bc
	pop hl
	push hl
	ld a, l
	or h
	jp nz, Func_20609
	ld hl, $2
	pop de
	push hl
Func_20609: ; 20609 (8:4609)
	jp Func_2061d

Func_2060c: ; 2060c (8:460c)
	ld a, c
	and $1
	jp z, Func_20613
	dec bc
Func_20613: ; 20613 (8:4613)
	jp Func_2061d

Func_20616: ; 20616 (8:4616)
	ld a, c
	and $1
	jp nz, Func_2061d
	inc bc
Func_2061d: ; 2061d (8:461d)
	push bc
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	call DrawBattleSelectionMenu
	pop hl
	pop bc
	pop bc
	ret

Func_20640: ; 20640
	ld de, $2
	jp Func_20599

Func_20646: ; 20646
	ld de, $3
	jp Func_20599

Func_2064c: ; 2064c (8:464c)
	add sp, -$3e
	push af
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $40
	ld hl, $17
	add hl, bc
	ld e, [hl]
	ld hl, sp+$26
	call Func_241f
	pop af
	read_hl_from_sp_plus $3e
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld a, [hl]
	cp $fe
	jp z, Func_20692
	or a
	jp nz, Func_206ae
	read_hl_from_sp_plus $39
	jp Func_206d5

Func_20692: ; 20692 (8:4692)
	inc hl
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $3e
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$13
	call Func_248f
	read_hl_from_sp_plus $21
	jp Func_206d5

Func_206ae: ; 206ae (8:46ae)
	ld a, BANK(GFX_64c7d)
	ld [wFarCallDestBank], a
	ld a, [hl]
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld bc, $13
	call FarCopyVideoData
	read_hl_from_sp_plus $e
Func_206d5: ; 206d5 (8:46d5)
	ld a, l
	and $80
	jp z, Func_206e1
	ld a, l
	and $7f
	jp Func_206e4

Func_206e1: ; 206e1 (8:46e1)
	ld a, l
	and $f
Func_206e4: ; 206e4 (8:46e4)
	add sp, $3e
	ret

Data_206e7: ; 206e7
	dr $206e7, $206f5

Func_206f5: ; 206f5
	push af
	add sp, -$e
	push de
	push bc
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_206e7
	ld bc, $e
	call MemCopy
	pop bc
	pop de
	ld a, [wSystemType]
	cp $1
	jp z, Func_2071b
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_20743
Func_2071b: ; 2071b (8:471b)
	ld hl, sp+$f
	ld a, [hl]
	add a
	add a
	ld hl, sp+$f
	add [hl]
	ld l, a
	ld a, c
	add a
	add a
	add a
	add a
	add l
	ld hl, sp+$3
	ld [hl], a
	ld a, c
	add a
	add a
	add a
	add a
	ld l, a
	ld a, e
	add a
	add a
	add e
	add l
	ld hl, sp+$9
	ld [hl], a
	ld de, $e
	ld hl, sp+$0
	call Func_2b83
Func_20743: ; 20743 (8:4743)
	add sp, $10
	ret

Data_20746: ; 20746
	dr $20746, $20754

PrintMoveInfoInBattle: ; 20754 (8:4754)
	push hl
	add sp, -$34
	xor a
	read_hl_from_sp_plus $36
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $34
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	push bc
	ld c, $7
	ld e, $a
	ld hl, $a0b
	call Func_20383
	ld c, $4
	ld e, $b
	ld hl, $e
	call Func_20383
	ld c, $3
	ld e, $6
	ld hl, $b
	call Func_20383
	pop bc
	pop de
	push bc
	push de
	ld hl, $1c
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $3
	ld hl, $c0c
	call Func_2230
	ld de, Data_2094f
	ld hl, $f0c
	call PlaceStringDEatCoordHL
	pop de
	ld hl, $1e
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $100
	ld hl, $100c
	call Func_2230
	ld a, BANK(Text_66efb)
	ld [wFarCallDestBank], a
	pop bc
	push bc
	read_hl_from_sp_plus $36
	reg16swap de, hl
	ld hl, $36
	add hl, bc
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Text_66efb
	add hl, de
	reg16swap de, hl
	ld hl, sp+$16
	call LiteralStringInTree
	ld e, $e
	ld a, $b
	call SetStringStartState
	ld hl, sp+$16
	push hl
	ld hl, Data_20951
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	push bc
	read_hl_from_sp_plus $36
	add hl, hl
	reg16swap de, hl
	ld hl, $26
	add hl, bc
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $3
	ld hl, $10c
	call Func_2230
	ld de, Data_20959
	ld hl, $40c
	call PlaceStringDEatCoordHL
	ld de, Data_2095b
	ld hl, $b10
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $36
	ld a, l
	call Func_2064c
	ld l, a
	ld a, BANK(Pointers_2027f)
	ld [wFarCallDestBank], a
	ld h, $0
	add hl, hl
	ld de, Pointers_2027f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$16
	call LiteralStringInTree
	ld hl, sp+$16
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_56d87
	read_hl_from_sp_plus $36
	ld e, l
	ld hl, sp+$2
	call FarCall
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$16
	call LiteralStringInTree
	ld hl, sp+$16
	reg16swap de, hl
	ld hl, $10f
	call PlaceStringDEatCoordHL
	pop bc
	read_hl_from_sp_plus $34
	ld de, $7
	call CompareHLtoDE
	jp nc, .no_more_moves
	read_hl_from_sp_plus $34
	add hl, hl
	add hl, hl
	inc hl
	inc hl
	inc hl
	inc hl
	add hl, bc
	ld a, [hl]
	or a
	jp z, .no_more_moves
	ld e, $10
	ld a, $9
	call SetStringStartState
	ld hl, $8a ; down arrow
	push hl
	ld hl, Data_20962
	push hl
	call PlaceString
	pop bc
	pop bc
.no_more_moves
	ld a, [wSystemType]
	cp $1
	jp z, .sgb
	ld a, [wSystemType]
	cp $ff
	jp nz, .check_cgb
.sgb
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	call Func_2041b
	set_farcall_addrs_hli Func_62a3
	ld bc, $b
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld c, $1
	ld de, $e
	ld hl, Data_20746
	call Func_2a79
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_20436
	ld l, $7
	push hl
	ld c, $14
	ld e, $b
	xor a
	call Func_3bc5
	pop bc
	jp .finish

.check_cgb
	ld a, [wSystemType]
	cp $11
	jp nz, .not_cgb
	ld a, $2
	ld [wc39a], a
.not_cgb
	ld l, $7
	push hl
	ld c, $14
	ld e, $b
	xor a
	call Func_3ca1
	pop bc
.finish
	read_hl_from_sp_plus $34
	push hl
	read_hl_from_sp_plus $38
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $4000
	reg16swap de, hl
	add sp, $36
	reg16swap de, hl
	ret

Data_2094f: ; 2094f
	db "/", $0

Data_20951: ; 20951
	db "タイフﾟ:"
	TX_CALL
	db $0

Data_20959: ; 20959
	db "P", $0

Data_2095b: ; 2095b
	db "(こうか:)", $0

Data_20962: ; 20962
	TX_STACK
	db $0

Func_20965: ; 20965
	push bc
	push bc
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	pop hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $26
	add hl, bc
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus5
	ld de, $1c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp c, Func_209bb
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	jp Func_209e5

Func_209bb: ; 209bb (8:49bb)
	ld de, $1405
	ld hl, $d
	call Func_2801
	push hl
	call Func_20398
	set_farcall_addrs_hli PrintMapText_
	ld c, $a0 | BANK(Pointers_202ea)
	ld de, Pointers_202ea
	ld hl, $10e
	call FarCall
	pop hl
	call Func_2887
	ld hl, $8000
Func_209e5: ; 209e5 (8:49e5)
	pop bc
	pop bc
	ret

Func_209e8: ; 209e8
	push hl
	push bc
	push de
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	pop de
	ld a, e
	dec a
	or d
	jp z, Func_20a1e
	ld a, e
	or d
	jp nz, Func_20a3c
	pop hl
	push hl
	ld a, l
	or h
	jp z, Func_20a1b
	pop hl
	push hl
	dec hl
	pop de
	push hl
Func_20a1b: ; 20a1b (8:4a1b)
	jp Func_20a3c

Func_20a1e: ; 20a1e (8:4a1e)
	pop hl
	push hl
	ld de, $7
	call CompareHLtoDE
	jp nc, Func_20a3c
	pop hl
	push hl
	add hl, hl
	add hl, hl
	inc hl
	inc hl
	inc hl
	inc hl
	add hl, bc
	ld a, [hl]
	or a
	jp z, Func_20a3c
	pop hl
	push hl
	inc hl
	pop de
	push hl
Func_20a3c: ; 20a3c (8:4a3c)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	call PrintMoveInfoInBattle
	pop hl
	push hl
	pop bc
	pop bc
	ret

Data_20a54: ; 20a54
	dr $20a54, $20a63

Data_20a63: ; 20a63
	dr $20a63, $20a82

Data_20a82: ; 20a82
	dr $20a82, $20a91

Data_20a91: ; 20a91
	dr $20a91, $20ab0

Func_20ab0: ; 20ab0
	push hl
	add sp, -$2e
	ld hl, sp+$2e
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $32
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	reg16swap de, hl
	push de
	set_farcall_addrs_hli Func_15281
	pop de
	pop hl
	push de
	call FarCall
	write_hl_to_sp_plus $30
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	read_hl_from_sp_plus $32
	ld de, wSaveScratchBagItems
	add hl, de
	ld e, [hl]
	ld hl, sp+$2f
	ld [hl], e
	pop af
	call GetSRAMBank
	ld hl, sp+$2d
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$20
	call Func_24bb
	pop de
	ld hl, sp+$28
	ld a, [hl]
	and $2
	jp nz, Func_20b38
	call Func_20398
	set_farcall_addrs_hli PrintMapText_
	ld c, $a0 | BANK(Pointers_20199)
	ld de, Pointers_20199
	ld hl, $10e
	call FarCall
	jp Func_20c68

Func_20b38: ; 20b38 (8:4b38)
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp c, Func_20ba3
	ld hl, sp+$2b
	ld a, [hl]
	cp $48
	jp nz, Func_20b67
	call Func_20398
	set_farcall_addrs_hli PrintMapText_
	ld c, $a0 | BANK(Pointers_20199)
	ld de, Pointers_20199
	ld hl, $10e
	call FarCall
	jp Func_20c68

Func_20b67: ; 20b67 (8:4b67)
	ld hl, sp+$2b
	ld a, [hl]
	cp $4c
	jp z, Func_20b87
	ld hl, sp+$2b
	ld a, [hl]
	cp $4d
	jp z, Func_20b87
	ld hl, sp+$2b
	ld a, [hl]
	cp $4e
	jp z, Func_20b87
	ld hl, sp+$2b
	ld a, [hl]
	cp $4f
	jp nz, Func_20ba3
Func_20b87: ; 20b87 (8:4b87)
	call Func_20398
	set_farcall_addrs_hli PrintMapText_
	ld c, $a0 | BANK(Pointers_201b1)
	ld de, Pointers_201b1
	ld hl, $10e
	call FarCall
	jp Func_20c68

Func_20ba3: ; 20ba3 (8:4ba3)
	call Func_20398
	ld hl, sp+$1e
	reg16swap de, hl
	ld hl, sp+$0
	call LiteralStringInTree
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_20c99
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp z, Func_20be8
	jp Func_20c68

Func_20be8: ; 20be8 (8:4be8)
	ld hl, sp+$2b
	ld a, [hl]
	dec a
	ld [wc311], a
	ld hl, sp+$28
	ld a, [hl]
	and $4
	jp z, Func_20c61
	set_farcall_addrs_hli Func_dbf5
	ld c, $3
	read_hl_from_sp_plus $30
	ld de, $c6
	add hl, de
	ld e, [hl]
	xor a
	call FarCall
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $8
	call FarCall
	ld a, l
	and h
	inc a
	jp nz, Func_20c33
	call Func_3af6
	ld hl, $8000
	jp Func_20c8e

Func_20c33: ; 20c33 (8:4c33)
	set_farcall_addrs_hli Func_fb42d
	ld a, [wc311]
	inc a
	call FarCall
	callba_hli Func_54af8
	cp $ff
	jp nz, Func_20c61
	call Func_3af6
	ld hl, $8000
	jp Func_20c8e

Func_20c61: ; 20c61 (8:4c61)
	read_hl_from_sp_plus $2e
	jp Func_20c8e

Func_20c68: ; 20c68 (8:4c68)
	set_farcall_addrs_hli Func_667d
	ld bc, $8e02
	ld de, $1311
	ld hl, $d
	call FarCall
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
Func_20c8e: ; 20c8e (8:4c8e)
	reg16swap de, hl
	add sp, $30
.asm_20c93
	reg16swap de, hl
	ret

Data_20c99: ; 20c99
	db "(を つかいますか?)", $0

Data_20ca5: ; 20ca5
	dr $20ca5, $20cb4

Data_20cb4: ; 20cb4
	dr $20cb4, $20d21

Func_20d21: ; 20d21 (8:4d21)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17975
	pop bc
	pop de
	pop hl
	jp FarCall

Func_20d35: ; 20d35 (8:4d35)
	ld c, $80
	jp Func_20d21

Func_20d3a: ; 20d3a (8:4d3a)
	push bc
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	call WriteHLToSPPlus10
	ld hl, $0
	call WriteHLToSPPlus6
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	ld a, e
	cp $1
	jp nc, Func_20d74
	ld a, $ff
	jp Func_20e6f

Func_20d74: ; 20d74 (8:4d74)
	ld hl, sp+$7
	ld [hl], e
	ld hl, sp+$6
	ld [hl], $0
Func_20d7b: ; 20d7b (8:4d7b)
	ld hl, sp+$6
	ld a, [hl]
	cp e
	jp nc, Func_20e52
	push de
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_20da8
	jp Func_20e47

Func_20da8: ; 20da8 (8:4da8)
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld de, $64
	ld hl, sp+$2
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$3
	ld l, [hl]
	ld h, a
	ld c, l
	ld b, h
	ld e, c
	ld d, b
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_20e0c
	jp Func_20e47

Func_20e0c: ; 20e0c (8:4e0c)
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp nc, Func_20e47
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$9
	ld [hl], a
	ld l, c
	ld h, b
	call WriteHLToSPPlus8
Func_20e47: ; 20e47 (8:4e47)
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	pop de
	jp Func_20d7b

Func_20e52: ; 20e52 (8:4e52)
	ld hl, sp+$7
	ld a, [hl]
	cp e
	jp nc, Func_20e67
	ld hl, sp+$7
	ld a, [hl]
	call GetHLAtSPPlus10
	ld de, $c6
	add hl, de
	cp [hl]
	jp nz, Func_20e6c
Func_20e67: ; 20e67 (8:4e67)
	ld a, $ff
	jp Func_20e6f

Func_20e6c: ; 20e6c (8:4e6c)
	ld hl, sp+$7
	ld a, [hl]
Func_20e6f: ; 20e6f (8:4e6f)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_20e75: ; 20e75 (8:4e75)
	push bc
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	call WriteHLToSPPlus10
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	call WriteHLToSPPlus8
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $c6
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus6
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$0
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus8
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld de, $64
	ld hl, sp+$0
	call MultiplyULongAtHLByUShortDE
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp nc, Func_20f12
	xor a
	jp Func_20f9b

Func_20f12: ; 20f12 (8:4f12)
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	or a
	jp nz, Func_20f22
	xor a
	jp Func_20f9b

Func_20f22: ; 20f22 (8:4f22)
	ld a, $64
	call Func_2034d
	ld e, a
	ld d, $0
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$1
	ld l, [hl]
	ld h, a
	call CompareHLtoDE
	jp nc, Func_20f5e
	call GetHLAtSPPlus8
	ld de, $5e
	add hl, de
	ld [hl], $2
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	call GetHLAtSPPlus8
	ld de, $5f
	add hl, de
	ld [hl], a
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	ld a, $1
	jp Func_20f9b

Func_20f5e: ; 20f5e (8:4f5e)
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$1
	ld l, [hl]
	ld h, a
	ld de, $32
	call CompareHLtoDE
	jp c, Func_20f7c
	ld a, $64
	call Func_2034d
	cp $46
	jp nc, Func_20f7c
	xor a
	jp Func_20f9b

Func_20f7c: ; 20f7c (8:4f7c)
	call Func_20d3a
	cp $ff
	jp nz, Func_20f88
	xor a
	jp Func_20f9b

Func_20f88: ; 20f88 (8:4f88)
	call GetHLAtSPPlus8
	ld de, $5e
	add hl, de
	ld [hl], $1
	call GetHLAtSPPlus8
	ld de, $5f
	add hl, de
	ld [hl], a
	ld a, $1
Func_20f9b: ; 20f9b (8:4f9b)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_20fa1: ; 20fa1
	dr $20fa1, $20fa2

Data_20fa2: ; 20fa2
	dr $20fa2, $20fa4

Data_20fa4: ; 20fa4
	dr $20fa4, $20fa7

Data_20fa7: ; 20fa7
	dr $20fa7, $20fab

Data_20fab: ; 20fab
	dr $20fab, $20fb0

Data_20fb0: ; 20fb0
	dr $20fb0, $20fb6

Data_20fb6: ; 20fb6
	dr $20fb6, $20fbd

Data_20fbd: ; 20fbd
	dr $20fbd, $20fc5

Pointers_20fc5: ; 20fc5
	dw Data_20fa1
	dw Data_20fa2
	dw Data_20fa4
	dw Data_20fa7
	dw Data_20fab
	dw Data_20fb0
	dw Data_20fb6
	dw Data_20fbd

Func_20fd5: ; 20fd5
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	call WriteHLToSPPlus7
	read_hl_from wCurRobotPointer
.asm_20ff0
	ld de, $e4
	add hl, de
	call WriteHLToSPPlus5
	call GetHLAtSPPlus5
	ld de, $75
	add hl, de
.asm_20fff
	ld e, [hl]
	ld hl, sp+$0
	ld [hl], e
	call GetHLAtSPPlus5
	ld de, $6f
.asm_21008
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	jp z, Func_21020
	ld hl, sp+$0
	ld [hl], $18
Func_21020: ; 21020 (8:5020)
	ld hl, sp+$0
	ld a, [hl]
	cp $a
	jp z, Func_2104a
	ld hl, sp+$0
	ld a, [hl]
	cp $18
	jp z, Func_2104a
	ld hl, sp+$0
	ld a, [hl]
	cp $7
	jp z, Func_2104a
	ld hl, sp+$0
	ld a, [hl]
	cp $8
	jp nz, Func_21056
	ld a, $64
	call Func_2034d
	cp $3c
	jp nc, Func_21056
Func_2104a: ; 2104a (8:504a)
	call GetHLAtSPPlus5
	ld de, $5e
	add hl, de
	ld [hl], $ff
	jp Func_2114d

Func_21056: ; 21056 (8:5056)
	ld hl, sp+$0
	ld a, [hl]
	cp $9
	jp nz, Func_21073
	call GetHLAtSPPlus5
	ld de, $5e
	add hl, de
	ld [hl], $0
	call GetHLAtSPPlus5
	ld de, $5f
	add hl, de
	ld [hl], $0
	jp Func_2114d

Func_21073: ; 21073 (8:5073)
	call Func_20e75
	or a
	jp z, Func_2107d
	jp Func_2114d

Func_2107d: ; 2107d (8:507d)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $13
	add hl, bc
	ld a, [hl]
	ld hl, $13
	add hl, de
	cp [hl]
	jp c, Func_210af
	ld hl, sp+$2
	ld [hl], $1
	jp Func_210bc

Func_210af: ; 210af (8:50af)
	ld hl, $13
	add hl, de
	ld a, [hl]
	ld hl, $13
	add hl, bc
	sub [hl]
	ld hl, sp+$2
	ld [hl], a
Func_210bc: ; 210bc (8:50bc)
	ld a, $64
	call Func_2034d
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_210de
	call GetHLAtSPPlus7
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	or a
	jp nz, Func_210de
	call GetHLAtSPPlus5
	ld de, $5e
	add hl, de
	ld [hl], $3
	jp Func_2114d

Func_210de: ; 210de (8:50de)
	call GetHLAtSPPlus5
	inc hl
	inc hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, sp+$2
	ld [hl], $1
Func_210ed: ; 210ed (8:50ed)
	ld hl, sp+$2
	ld a, [hl]
	cp $8
	jp nc, Func_2110b
	ld a, [de]
	or a
	jp nz, Func_210fd
	jp Func_2110b

Func_210fd: ; 210fd (8:50fd)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	inc de
	inc de
	inc de
	inc de
	jp Func_210ed

Func_2110b: ; 2110b (8:510b)
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_20fc5 - 2
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	ld a, $64
	call Func_2034d
	ld e, a
	ld hl, sp+$3
	ld [hl], $0
	pop bc
Func_21124: ; 21124 (8:5124)
	ld a, [bc]
	ld l, a
	ld a, e
	cp l
	jp nc, Func_2112e
	jp Func_21139

Func_2112e: ; 2112e (8:512e)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	inc bc
	jp Func_21124

Func_21139: ; 21139 (8:5139)
	call GetHLAtSPPlus5
	ld de, $5e
	add hl, de
	ld [hl], $0
	ld hl, sp+$1
	ld a, [hl]
	call GetHLAtSPPlus5
	ld de, $5f
	add hl, de
	ld [hl], a
Func_2114d: ; 2114d (8:514d)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_21152: ; 21152
	dr $21152, $21160

Func_21160: ; 21160 (8:5160)
	callba_hli Func_d767
	ld de, $130d
	ld hl, $5
	call Func_2036d
	callba_hli Func_5d113
	call Func_20398
	ld a, [wSystemType]
	cp $1
	jp z, Func_21198
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_211e1
Func_21198: ; 21198 (8:5198)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	call Func_2041b
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld c, $1
	ld de, $e
	ld hl, Data_21152
	call Func_2a79
	ld a, [wLCDC]
	ld [rLCDC], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	jp Func_211fa

Func_211e1: ; 211e1 (8:51e1)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_211ee
	ld a, $2
	ld [wc39a], a
Func_211ee: ; 211ee (8:51ee)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
Func_211fa: ; 211fa (8:51fa)
	ret

Func_211fb: ; 211fb (8:51fb)
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	call WriteHLToSPPlus8
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	call WriteHLToSPPlus4
	ld hl, sp+$1
	ld a, [hSRAMBank]
	ld [hl], a
	ld hl, sp+$0
	ld [hl], $0
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_2133c
	push bc
	call GetHLAtSPPlus10
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $1
	jp z, Func_2126c
	call GetHLAtSPPlus10
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $2
	jp nz, Func_212cb
Func_2126c: ; 2126c (8:526c)
	ld c, $1
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, $2f
	call Func_20304
	call GetHLAtSPPlus8
	ld de, $c
	add hl, de
	ld c, [hl]
	call GetHLAtSPPlus10
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_212c2
	ld a, c
	cp $ab
	jp c, Func_212c2
	ld a, c
	cp $af
	jp nc, Func_212c2
	push bc
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop bc
	ld l, c
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, ($b29f - $351 * $ab) & $ffff
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $1
	call Func_20304
	ld hl, sp+$3
	ld a, [hl]
	call GetSRAMBank
Func_212c2: ; 212c2 (8:52c2)
	call GetHLAtSPPlus10
	ld de, $5e
	add hl, de
	ld [hl], $ff
Func_212cb: ; 212cb (8:52cb)
	pop bc
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp z, Func_212e0
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $2
	jp nz, Func_21339
Func_212e0: ; 212e0 (8:52e0)
	push bc
	ld c, $1
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $2f
	call Func_202f0
	pop bc
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_212ff
	ld hl, sp+$0
	ld [hl], $1
Func_212ff: ; 212ff (8:52ff)
	push bc
	call GetHLAtSPPlus6
	ld de, $c
	add hl, de
	ld e, [hl]
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_21332
	ld a, e
	cp $ab
	jp c, Func_21332
	ld a, e
	cp $af
	jp nc, Func_21332
	ld c, $1
	read_hl_from wCurRobotPointer
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $351
	call Func_202f0
Func_21332: ; 21332 (8:5332)
	pop bc
	ld hl, $5e
	add hl, bc
	ld [hl], $ff
Func_21339: ; 21339 (8:5339)
	jp Func_21422

Func_2133c: ; 2133c (8:533c)
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp z, Func_21350
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $2
	jp nz, Func_213a9
Func_21350: ; 21350 (8:5350)
	push bc
	ld c, $1
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $2f
	call Func_202f0
	pop bc
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_2136f
	ld hl, sp+$0
	ld [hl], $1
Func_2136f: ; 2136f (8:536f)
	push bc
	call GetHLAtSPPlus6
	ld de, $c
	add hl, de
	ld e, [hl]
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_213a2
	ld a, e
	cp $ab
	jp c, Func_213a2
	ld a, e
	cp $af
	jp nc, Func_213a2
	ld c, $1
	read_hl_from wCurRobotPointer
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $351
	call Func_202f0
Func_213a2: ; 213a2 (8:53a2)
	pop bc
	ld hl, $5e
	add hl, bc
	ld [hl], $ff
Func_213a9: ; 213a9 (8:53a9)
	call GetHLAtSPPlus8
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $1
	jp z, Func_213c3
	call GetHLAtSPPlus8
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $2
	jp nz, Func_21422
Func_213c3: ; 213c3 (8:53c3)
	ld c, $1
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $2f
	call Func_20304
	call GetHLAtSPPlus6
	ld de, $c
	add hl, de
	ld c, [hl]
	call GetHLAtSPPlus8
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_21419
	ld a, c
	cp $ab
	jp c, Func_21419
	ld a, c
	cp $af
	jp nc, Func_21419
	push bc
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop bc
	ld l, c
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, ($b29f - $351 * $ab) & $ffff
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $1
	call Func_20304
	ld hl, sp+$1
	ld a, [hl]
	call GetSRAMBank
Func_21419: ; 21419 (8:5419)
	call GetHLAtSPPlus8
	ld de, $5e
	add hl, de
	ld [hl], $ff
Func_21422: ; 21422 (8:5422)
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp z, Func_2143c
	set_farcall_addrs_hli Func_d7f5
	ld de, $0
	ld a, $6
	call FarCall
Func_2143c: ; 2143c (8:543c)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_21441: ; 21441 (8:5441)
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_2152f
	push bc
	set_farcall_addrs_hli Func_dbf5
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld e, [hl]
	xor a
	ld c, $3
	call FarCall
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	reg16swap de, hl
	ld hl, $71
	add hl, bc
	ld bc, $11
	call MemCopy
	pop bc
	push bc
	ld hl, $5f
	add hl, bc
	ld a, [hl]
	ld hl, $c6
	add hl, bc
	ld [hl], a
	push af
	ld hl, $71
	add hl, bc
	push hl
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	set_farcall_addrs_hli Func_dbf5
	pop af
	push af
	ld e, a
	xor a
	ld c, $0
	call FarCall
	pop af
	pop bc
	push bc
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, $75
	add hl, bc
	ld [hl], a
	call GetHLAtSPPlus4
	ld de, $22
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_d7f5
	ld de, $0
	ld a, $5
	call FarCall
	pop bc
Func_2152f: ; 2152f (8:552f)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_2155a
	ld e, c
	ld d, b
	ld hl, $c8
	ld c, $1
	call Func_20304
	ld c, $1
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $c8
	call Func_202f0
	jp Func_21573

Func_2155a: ; 2155a (8:555a)
	push bc
	ld c, $1
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $c8
	call Func_202f0
	pop de
	ld hl, $c8
	ld c, $1
	call Func_20304
Func_21573: ; 21573 (8:5573)
	call Func_211fb
	pop hl
	push hl
	ld de, $2f
	add hl, de
	pop de
	push hl
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld a, [hl]
	pop hl
	push hl
	ld de, $22
	add hl, de
	ld [hl], a
	call Func_21160
	pop bc
	pop bc
	ret

Func_21593: ; 21593
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$0
	ld [hl], $0
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_215b1
	ld hl, sp+$1
	ld [hl], $1
	jp Func_215b5

Func_215b1: ; 215b1 (8:55b1)
	ld hl, sp+$1
	ld [hl], $0
Func_215b5: ; 215b5 (8:55b5)
	ld e, $0
Func_215b7: ; 215b7 (8:55b7)
	ld a, e
	cp $2
	jp nc, Func_216cd
	push de
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus9
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_215f8
	ld hl, $0
	jp Func_215fb

Func_215f8: ; 215f8 (8:55f8)
	ld hl, $2f
Func_215fb: ; 215fb (8:55fb)
	add hl, de
	call WriteHLToSPPlus7
	call GetHLAtSPPlus9
	ld de, $5e
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $6
	jp z, Func_21634
	cp $4
	jp nz, Func_216b5
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_21631
	ld a, $64
	call Func_2034d
	cp $32
	jp nc, Func_21631
	ld hl, sp+$4
	ld [hl], $fe
Func_21631: ; 21631 (8:5631)
	jp Func_216b5

Func_21634: ; 21634 (8:5634)
	ld a, $64
	call Func_2034d
	ld c, a
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_2169e
	ld a, c
	cp $14
	jp nc, Func_21654
	ld hl, sp+$4
	ld [hl], $0
	call GetHLAtSPPlus9
	ld de, $5f
	add hl, de
	ld [hl], $0
Func_21654: ; 21654 (8:5654)
	ld a, c
	cp $28
	jp nc, Func_21661
	ld hl, sp+$4
	ld [hl], $ff
	jp Func_2169e

Func_21661: ; 21661 (8:5661)
	ld a, c
	cp $46
	jp nc, Func_2166e
	ld hl, sp+$4
	ld [hl], $fe
	jp Func_2169e

Func_2166e: ; 2166e (8:566e)
	ld a, c
	cp $50
	jp nc, Func_2168d
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld [hl], $9
	ld a, [hl]
	call GetHLAtSPPlus7
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, sp+$2
	ld [hl], $1
	jp Func_2169e

Func_2168d: ; 2168d (8:568d)
	ld a, c
	cp $55
	jp nc, Func_2169a
	ld hl, sp+$4
	ld [hl], $3
	jp Func_2169e

Func_2169a: ; 2169a (8:569a)
	ld hl, sp+$4
	ld [hl], $fd
Func_2169e: ; 2169e (8:569e)
	call GetHLAtSPPlus9
	ld de, $5e
	add hl, de
	ld a, [hl]
	ld hl, sp+$4
	cp [hl]
	jp z, Func_216b5
	call GetHLAtSPPlus9
	ld de, $5f
	add hl, de
	ld [hl], $0
Func_216b5: ; 216b5 (8:56b5)
	ld hl, sp+$4
	ld a, [hl]
	call GetHLAtSPPlus9
	ld de, $5e
	add hl, de
	ld [hl], a
	pop de
	inc e
	ld hl, sp+$1
	ld a, [hl]
	xor $1
	ld hl, sp+$1
	ld [hl], a
	jp Func_215b7

Func_216cd: ; 216cd (8:56cd)
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp z, Func_216d7
	call Func_21160
Func_216d7: ; 216d7 (8:56d7)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_216dc: ; 216dc
	ds 6

Func_216e2: ; 216e2 (8:56e2)
	push bc
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	write_hl_to_sp_plus $e
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, Data_216dc
	ld bc, $6
	call MemCopy
	pop de
	pop bc
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp z, Func_21744
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $fc
	jp nz, Func_21820
Func_21744: ; 21744 (8:5744)
	push de
	push bc
	set_farcall_addrs_hli Func_dbf5
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld e, [hl]
	ld a, $1
	ld c, $6
	call FarCall
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	reg16swap de, hl
	ld hl, $71
	add hl, bc
	ld bc, $11
	call MemCopy
	pop bc
	pop de
	push bc
	push de
	ld hl, $5f
	add hl, bc
	ld a, [hl]
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from_sp_plus $e
	ld de, $b
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	ld hl, sp+$a
	ld [hl], a
	ld hl, sp+$b
	ld [hl], $5
	pop de
	push af
	ld l, e
	ld h, d
	ld a, $fe
	and [hl]
	ld [hl], a
	inc de
	ld l, c
	ld h, b
	inc hl
	ld bc, $6
	call MemCopy
	pop af
	pop bc
	push af
	push bc
	ld hl, $71
	add hl, bc
	push hl
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	pop bc
	pop af
	push af
	ld hl, $c6
	add hl, bc
	ld [hl], a
	ld hl, $6f
	add hl, bc
	ld a, [hl]
	and $cf
	ld e, a
	inc hl
	ld d, [hl]
	ld hl, $6f
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	add $4
	ld b, a
	ld a, $1
	call LeftShiftA
	call GetHLAtSPPlus10
	or [hl]
	ld [hl], a
	set_farcall_addrs_hli Func_d7f5
	ld hl, sp+$2
	reg16swap de, hl
	ld a, $3
	call FarCall
Func_21820: ; 21820 (8:5820)
	pop bc
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_218dd
	push bc
	set_farcall_addrs_hli Func_dbf5
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld e, [hl]
	xor a
	ld c, $3
	call FarCall
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	reg16swap de, hl
	ld hl, $71
	add hl, bc
	ld bc, $11
	call MemCopy
	pop bc
	push bc
	ld hl, $5f
	add hl, bc
	ld a, [hl]
	ld hl, sp+$4
	ld [hl], a
	push af
	ld hl, sp+$7
	ld [hl], $2
	ld hl, $71
	add hl, bc
	push hl
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $82
	add hl, bc
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	pop af
	push af
	ld b, a
	ld a, $1
	call LeftShiftA
	read_hl_from_sp_plus $c
	or [hl]
	ld [hl], a
	pop af
	pop bc
	push bc
	ld hl, $c6
	add hl, bc
	ld [hl], a
	ld hl, $6f
	add hl, bc
	ld a, [hl]
	and $cf
	ld e, a
	inc hl
	ld d, [hl]
	ld hl, $6f
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli Func_d7f5
	ld hl, sp+$2
	reg16swap de, hl
	ld a, $2
	call FarCall
	pop bc
	ld hl, $5e
	add hl, bc
	ld [hl], $ff
Func_218dd: ; 218dd (8:58dd)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_218e2: ; 218e2
	add sp, -$46
	xor a
	ld hl, sp+$44
	ld [hl], a
Func_218e8: ; 218e8 (8:58e8)
	cp $4
	jp nc, Func_21912
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$3e
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_218e8

Func_21912: ; 21912 (8:5912)
	ld hl, sp+$44
	ld a, [hl]
	inc a
	ld hl, sp+$44
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$3c
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_2016b
	call CopyUntilNull
	ld hl, sp+$44
	ld e, [hl]
	ld hl, sp+$3c
	call Func_203fa
	add sp, $46
	ret

Func_2193a: ; 2193a
	push bc
	push bc
	ld hl, sp+$2
	ld [hl], $1
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_21a35
	push bc
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $1
	jp z, Func_219b7
	ld hl, sp+$4
	ld [hl], $1
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld de, wSaveScratchParty
	ld c, $0
Func_21988: ; 21988 (8:5988)
	ld a, c
	cp $4
	jp nc, Func_219b0
	ld a, [de]
	or a
	jp z, Func_219a4
	ld hl, $c
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_219a4
	ld hl, sp+$6
	ld [hl], $0
	jp Func_219b0

Func_219a4: ; 219a4 (8:59a4)
	inc c
	ld hl, $23
	add hl, de
	reg16swap de, hl
	jp Func_21988

Func_219b0: ; 219b0 (8:59b0)
	pop af
	call GetSRAMBank
	jp Func_219bb

Func_219b7: ; 219b7 (8:59b7)
	ld hl, sp+$4
	ld [hl], $0
Func_219bb: ; 219bb (8:59bb)
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_20304
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_219d6
	ld a, $2
	jp Func_21b0a

Func_219d6: ; 219d6 (8:59d6)
	push bc
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_202f0
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_219f2
	ld a, $1
	jp Func_21b0a

Func_219f2: ; 219f2 (8:59f2)
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld [hl], $ff
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $1
	jp z, Func_21a32
	ld hl, sp+$2
	ld [hl], $1
Func_21a08: ; 21a08 (8:5a08)
	ld hl, $0
	call Func_21bc5
	ld a, l
	or h
	jp nz, Func_21a2f
	call Func_21160
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld [hl], $1
	pop hl
	push hl
	ld de, $5f
	add hl, de
	ld a, [wc2e9]
	ld [hl], a
	ld hl, sp+$2
	ld [hl], $0
	jp Func_21a32

Func_21a2f: ; 21a2f (8:5a2f)
	jp Func_21a08

Func_21a32: ; 21a32 (8:5a32)
	jp Func_21afb

Func_21a35: ; 21a35 (8:5a35)
	push bc
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_202f0
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_21a51
	ld a, $1
	jp Func_21b0a

Func_21a51: ; 21a51 (8:5a51)
	push bc
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $1
	jp z, Func_21a9c
	ld hl, sp+$4
	ld [hl], $1
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld de, wSaveScratchParty
	ld c, $0
Func_21a6d: ; 21a6d (8:5a6d)
	ld a, c
	cp $4
	jp nc, Func_21a95
	ld a, [de]
	or a
	jp z, Func_21a89
	ld hl, $c
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_21a89
	ld hl, sp+$6
	ld [hl], $0
	jp Func_21a95

Func_21a89: ; 21a89 (8:5a89)
	inc c
	ld hl, $23
	add hl, de
	reg16swap de, hl
	jp Func_21a6d

Func_21a95: ; 21a95 (8:5a95)
	pop af
	call GetSRAMBank
	jp Func_21aa0

Func_21a9c: ; 21a9c (8:5a9c)
	ld hl, sp+$4
	ld [hl], $0
Func_21aa0: ; 21aa0 (8:5aa0)
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_20304
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_21abb
	ld a, $2
	jp Func_21b0a

Func_21abb: ; 21abb (8:5abb)
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld [hl], $ff
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $1
	jp z, Func_21afb
	ld hl, sp+$2
	ld [hl], $1
Func_21ad1: ; 21ad1 (8:5ad1)
	ld hl, $0
	call Func_21bc5
	ld a, l
	or h
	jp nz, Func_21af8
	call Func_21160
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld [hl], $1
	pop hl
	push hl
	ld de, $5f
	add hl, de
	ld a, [wc2e9]
	ld [hl], a
	ld hl, sp+$2
	ld [hl], $0
	jp Func_21afb

Func_21af8: ; 21af8 (8:5af8)
	jp Func_21ad1

Func_21afb: ; 21afb (8:5afb)
	read_hl_from wCurRobotPointer
	ld de, $142
	add hl, de
	ld [hl], $ff
	call Func_21441
	xor a
Func_21b0a: ; 21b0a (8:5b0a)
	pop bc
	pop bc
	ret

Func_21b0d: ; 21b0d
	push bc
	push bc
	push bc
	ld hl, sp+$4
	ld [hl], $1
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	pop de
	push hl
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $1
	jp z, Func_21bc0
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld de, wSaveScratchParty
	ld c, $0
Func_21b54: ; 21b54 (8:5b54)
	ld a, c
	cp $4
	jp nc, Func_21b7c
	ld a, [de]
	or a
	jp z, Func_21b70
	ld hl, $c
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_21b70
	ld hl, sp+$6
	ld [hl], $0
	jp Func_21b7c

Func_21b70: ; 21b70 (8:5b70)
	inc c
	ld hl, $23
	add hl, de
	reg16swap de, hl
	jp Func_21b54

Func_21b7c: ; 21b7c (8:5b7c)
	pop af
	call GetSRAMBank
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_21b8d
	ld hl, sp+$4
	ld a, [hl]
	jp Func_21bc1

Func_21b8d: ; 21b8d (8:5b8d)
	ld hl, $0
	call Func_21bc5
	ld a, l
	or h
	jp nz, Func_21bb2
	call Func_21160
	call GetHLAtSPPlus4
	ld de, $5e
	add hl, de
	ld [hl], $1
	call GetHLAtSPPlus4
	ld de, $5f
	add hl, de
	ld a, [wc2e9]
	ld [hl], a
	jp Func_21bb5

Func_21bb2: ; 21bb2 (8:5bb2)
	jp Func_21b8d

Func_21bb5: ; 21bb5 (8:5bb5)
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld [hl], $ff
	call Func_216e2
Func_21bc0: ; 21bc0 (8:5bc0)
	xor a
Func_21bc1: ; 21bc1 (8:5bc1)
	pop bc
	pop bc
	pop bc
	ret

Func_21bc5: ; 21bc5 (8:5bc5)
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	ld hl, $6f
	add hl, bc
	ld a, [hl]
	and $cf
	ld e, a
	inc hl
	ld d, [hl]
	ld hl, $6f
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli DisplayPartyMenu
	ld de, $0
	ld a, $1
	call FarCall
	ret

Func_21bf5: ; 21bf5
	push af
	ld hl, -$114
	add hl, sp
	ld sp, hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $113
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $111
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld a, [hl]
	cp $b
	jp z, Func_21c4b
	cp $a
	jp z, Func_21c3d
	cp $9
	jp nz, Func_21c51
	ld hl, $115
	add hl, sp
	ld [hl], $5
	jp Func_21c51

Func_21c3d: ; 21c3d (8:5c3d)
	ld hl, $115
	add hl, sp
	ld a, [hl]
	add a
	ld hl, $115
	add hl, sp
	ld [hl], a
	jp Func_21c51

Func_21c4b: ; 21c4b (8:5c4b)
	ld hl, $115
	add hl, sp
	ld [hl], $1
Func_21c51: ; 21c51 (8:5c51)
	xor a
Func_21c52: ; 21c52 (8:5c52)
	cp $a
	jp nc, Func_21c7e
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$31
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fc
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_21c52

Func_21c7e: ; 21c7e (8:5c7e)
	ld hl, $f9
	add hl, sp
	ld [hl], $0
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $f9
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fa
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_200fd
	call CopyUntilNull
	reg16swap de, hl
	ld hl, $115
	add hl, sp
	ld l, [hl]
	ld h, $0
	call Func_20d35
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $f9
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fa
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20116
	call CopyUntilNull
	ld hl, $10e
	add hl, sp
	ld [hl], $0
Func_21cde: ; 21cde (8:5cde)
	ld hl, $10e
	add hl, sp
	ld a, [hl]
	cp $4
	jp nc, Func_21d47
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$c
	reg16swap de, hl
	ld hl, $10e
	add hl, sp
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $2b
	ld c, l
	ld b, h
	ld hl, sp+$c
	ld a, [hl]
	or a
	jp nz, Func_21d11
	jp Func_21d39

Func_21d11: ; 21d11 (8:5d11)
	push bc
	ld hl, sp+$e
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp z, Func_21d33
	call GetHLAtSPPlus5
	reg16swap de, hl
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp c, Func_21d36
Func_21d33: ; 21d33 (8:5d33)
	jp Func_21d39

Func_21d36: ; 21d36 (8:5d36)
	jp Func_21d47

Func_21d39: ; 21d39 (8:5d39)
	ld hl, $10e
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $10e
	add hl, sp
	ld [hl], a
	jp Func_21cde

Func_21d47: ; 21d47 (8:5d47)
	ld hl, $10e
	add hl, sp
	ld a, [hl]
	cp $4
	jp c, Func_21d74
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $f9
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fa
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_2015d
	call CopyUntilNull
Func_21d74: ; 21d74 (8:5d74)
	ld hl, $f9
	add hl, sp
	ld e, [hl]
	ld hl, $fa
	add hl, sp
	call Func_203fa
	call Func_20398
	ld hl, $10e
	add hl, sp
	ld a, [hl]
	cp $4
	jp c, Func_21d90
	jp Func_21f1c

Func_21d90: ; 21d90 (8:5d90)
	ld de, Data_21f22
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp z, Func_21dbb
	jp Func_21f1c

Func_21dbb: ; 21dbb (8:5dbb)
	set_farcall_addrs_hli DisplayPartyMenu
	ld hl, $115
	add hl, sp
	ld e, [hl]
	ld d, $0
	ld a, $3
	call FarCall
	push hl
	call Func_21160
	pop hl
	ld a, l
	and h
	inc a
	jp nz, Func_21de0
	jp Func_21d90

Func_21de0: ; 21de0 (8:5de0)
	set_farcall_addrs_hli Func_6b94
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld de, $900
	add hl, de
	reg16swap de, hl
	ld hl, $115
	add hl, sp
	ld l, [hl]
	ld h, $0
	call FarCall
	set_farcall_addrs_hli Func_6e1b
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld de, $900
	add hl, de
	call FarCall
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$e
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$e
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	call GetHLAtSPPlus7
	write_hl_to_sp_plus $33
	pop bc
	ld a, [wc2e9]
	read_hl_from_sp_plus $111
	ld de, $c6
	add hl, de
	cp [hl]
	jp nz, Func_21e63
	read_hl_from_sp_plus $113
	ld de, $29
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_21e63: ; 21e63 (8:5e63)
	read_hl_from_sp_plus $31
	reg16swap de, hl
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_21e76
	jp Func_21f1c

Func_21e76: ; 21e76 (8:5e76)
	read_hl_from_sp_plus $31
	push hl
	read_hl_from_sp_plus $115
	ld de, $29
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli Func_6ebf
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld de, $900
	add hl, de
	push hl
	read_hl_from_sp_plus $33
	pop de
	call FarCall
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$c
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, $f9
	add hl, sp
	ld [hl], $0
	ld hl, sp+$d
	push hl
	ld hl, $fb
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $fb
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fc
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld de, Text_20102
	call CopyUntilNull
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $f9
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fa
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_2011d
	call CopyUntilNull
	ld hl, $f9
	add hl, sp
	ld e, [hl]
	ld hl, $fa
	add hl, sp
	call Func_203fa
Func_21f1c: ; 21f1c (8:5f1c)
	ld hl, $116
	add hl, sp
	ld sp, hl
	ret

Data_21f22: ; 21f22
	db "(たへﾞさせますか?)", $0

Func_21f2e: ; 21f2e
	push af
	ld hl, -$ea
	add hl, sp
	ld sp, hl
	xor a
Func_21f35: ; 21f35 (8:5f35)
	cp $a
	jp nc, Func_21f61
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d8
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_21f35

Func_21f61: ; 21f61 (8:5f61)
	ld hl, $d5
	add hl, sp
	ld [hl], $0
	ld hl, $eb
	add hl, sp
	ld e, [hl]
	ld hl, sp+$0
	call Func_24bb
	ld hl, sp+$0
	push hl
	ld hl, $d7
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d7
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d8
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld hl, $d5
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d5
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d6
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20116
	call CopyUntilNull
	ld hl, $eb
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $eb
	add hl, sp
	ld [hl], a
	set_farcall_addrs_hli Func_5a149
	ld c, $0
	ld e, $1
	ld hl, $eb
	add hl, sp
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_21ff6
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $1
	ld hl, $eb
	add hl, sp
	ld a, [hl]
	call FarCall
Func_21ff6: ; 21ff6 (8:5ff6)
	cp $ff
	jp nz, Func_2201e
	ld hl, $d5
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d5
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d6
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20124
	call CopyUntilNull
Func_2201e: ; 2201e (8:601e)
	ld hl, $d5
	add hl, sp
	ld e, [hl]
	ld hl, $d6
	add hl, sp
	call Func_203fa
	ld hl, $ec
	add hl, sp
	ld sp, hl
	ret

Func_22030: ; 22030
	push af
	ld hl, -$f6
	add hl, sp
	ld sp, hl
	xor a
Func_22037: ; 22037 (8:6037)
	cp $a
	jp nc, Func_22063
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$18
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $e3
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_22037

Func_22063: ; 22063 (8:6063)
	ld hl, $e0
	add hl, sp
	ld [hl], $0
	ld hl, $f7
	add hl, sp
	ld e, [hl]
	ld hl, sp+$0
	call Func_241f
	ld hl, sp+$0
	push hl
	ld hl, $e2
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $e2
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $e3
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld hl, $e0
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $e0
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $e1
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20116
	call CopyUntilNull
	ld hl, BankSwitch_00f7
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, BankSwitch_00f7
	add hl, sp
	ld [hl], a
	set_farcall_addrs_hli Func_4ed70
	ld e, $0
	ld hl, BankSwitch_00f7
	add hl, sp
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_220f4
	set_farcall_addrs_hli Func_4ed70
	ld e, $2
	ld hl, BankSwitch_00f7
	add hl, sp
	ld a, [hl]
	call FarCall
Func_220f4: ; 220f4 (8:60f4)
	cp $ff
	jp nz, Func_2211c
	ld hl, $e0
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $e0
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $e1
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20124
	call CopyUntilNull
Func_2211c: ; 2211c (8:611c)
	ld hl, $e0
	add hl, sp
	ld e, [hl]
	ld hl, $e1
	add hl, sp
	call Func_203fa
	ld hl, $f8
	add hl, sp
	ld sp, hl
	ret

Func_2212e: ; 2212e
	push hl
	ld hl, -$e4
	add hl, sp
	ld sp, hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	ld c, l
	ld b, h
	ld hl, $b
	add hl, bc
	write_hl_to_sp_plus $e3
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld a, [hl]
	push af
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc c
	dec c
	jp nz, Func_22166
	ld c, $1
Func_22166: ; 22166 (8:6166)
	ld hl, $0
	write_hl_to_sp_plus $e1
	xor a
Func_2216e: ; 2216e (8:616e)
	cp c
	jp nc, Func_22196
	push bc
	read_hl_from_sp_plus $e7
	inc hl
	inc hl
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $e3
	add hl, bc
	write_hl_to_sp_plus $e3
	inc a
	read_hl_from_sp_plus $e7
	ld de, $7
	add hl, de
	write_hl_to_sp_plus $e7
	pop bc
	jp Func_2216e

Func_22196: ; 22196 (8:6196)
	read_hl_from_sp_plus $e1
	push hl
	read_hl_from_sp_plus $ea
	ld de, $b
	add hl, de
	ld l, [hl]
	ld h, $0
	pop de
	call MultiplyHLbyDE
	write_hl_to_sp_plus $e3
	pop af
	cp $e
	jp z, Func_221e2
	cp $d
	jp z, Func_221d6
	cp $c
	jp nz, Func_221f0
	read_hl_from_sp_plus $e1
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $e1
	add hl, bc
	write_hl_to_sp_plus $e1
	jp Func_221f0

Func_221d6: ; 221d6 (8:61d6)
	read_hl_from_sp_plus $e1
	add hl, hl
	write_hl_to_sp_plus $e1
	jp Func_221f0

Func_221e2: ; 221e2 (8:61e2)
	read_hl_from_sp_plus $e1
	ld de, $2
	call DivideHLByDESigned
	write_hl_to_sp_plus $e1
Func_221f0: ; 221f0 (8:61f0)
	read_hl_from_sp_plus $e1
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_2220b
	ld hl, $1
	write_hl_to_sp_plus $e1
	jp Func_22223

Func_2220b: ; 2220b (8:620b)
	read_hl_from_sp_plus $e1
	reg16swap de, hl
	ld hl, 9990
	call CompareHLtoDE
	jp nc, Func_22223
	ld hl, 9990
	write_hl_to_sp_plus $e1
Func_22223: ; 22223 (8:6223)
	xor a
Func_22224: ; 22224 (8:6224)
	cp $a
	jp nc, Func_22250
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $cb
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_22224

Func_22250: ; 22250 (8:6250)
	ld hl, $c8
	add hl, sp
	ld [hl], $0
	ld hl, $c8
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $c8
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $c9
	add hl, sp
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $e3
	pop de
	call Func_20d35
	ld de, Text_20104
	call CopyUntilNull
	ld de, Text_20116
	call CopyUntilNull
	ld hl, $c8
	add hl, sp
	ld e, [hl]
	ld hl, $c9
	add hl, sp
	call Func_203fa
	push hl
	push hl
	read_hl_from_sp_plus $e5
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_222a3
	dec bc
.asm_222a3
	push bc
	push hl
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	ld hl, $e6
	add hl, sp
	ld sp, hl
	ret

Data_222b2: ; 222b2
	dr $222b2, $222b7

Func_222b7: ; 222b7 (8:62b7)
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	ld c, l
	ld b, h
	push bc
	ld hl, $28
	add hl, bc
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $4001
	add hl, de
	call WriteHLToSPPlus5
	ld hl, $28
	add hl, bc
	ld a, [hl]
	cp $15
	jp c, Func_22304
	ld hl, $28
	add hl, bc
	ld [hl], $0
	ld hl, $28
	add hl, bc
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $4001
	add hl, de
	call WriteHLToSPPlus5
Func_22304: ; 22304 (8:6304)
	ld a, $64
	call Func_2034d
	ld hl, sp+$2
	ld [hl], a
	ld c, $0
Func_2230e: ; 2230e (8:630e)
	ld a, c
	cp $5
	jp nc, Func_22329
	ld hl, sp+$2
	ld a, [hl]
	call GetHLAtSPPlus5
	ld e, c
	ld d, $0
	add hl, de
	cp [hl]
	jp nc, Func_22325
	jp Func_22329

Func_22325: ; 22325 (8:6325)
	inc c
	jp Func_2230e

Func_22329: ; 22329 (8:6329)
	ld e, c
	ld d, $0
	ld hl, Data_222b2
	add hl, de
	ld c, [hl]
	ld a, [wc2fa]
	cp $2
	jp nz, Func_2234d
	push bc
	set_farcall_addrs_hli Func_6c11d
	pop bc
	ld a, c
	call FarCall
	jp Func_22351

Func_2234d: ; 2234d (8:634d)
	ld a, c
	call Func_21bf5
Func_22351: ; 22351 (8:6351)
	ld a, $64
	call Func_2034d
	cp $28
	jp nc, Func_223a3
	ld a, $64
	call Func_2034d
	ld hl, sp+$2
	ld [hl], a
	ld c, $0
Func_22365: ; 22365 (8:6365)
	ld a, c
	cp $2
	jp nc, Func_22384
	ld hl, sp+$2
	ld a, [hl]
	call GetHLAtSPPlus5
	ld de, $8
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	cp [hl]
	jp nc, Func_22380
	jp Func_22384

Func_22380: ; 22380 (8:6380)
	inc c
	jp Func_22365

Func_22384: ; 22384 (8:6384)
	call GetHLAtSPPlus5
	ld de, $5
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld c, [hl]
	ld a, c
	and $80
	jp nz, Func_2239d
	ld a, c
	call Func_21f2e
	jp Func_223a3

Func_2239d: ; 2239d (8:639d)
	ld a, c
	and $7f
	call Func_22030
Func_223a3: ; 223a3 (8:63a3)
	pop bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	cp $1
	jp c, Func_223b5
	call GetHLAtSPPlus3
	call Func_2212e
Func_223b5: ; 223b5 (8:63b5)
	pop bc
	pop bc
	ret

Func_223b8: ; 223b8 (8:63b8)
	ld hl, -$13a
	add hl, sp
	ld sp, hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	write_hl_to_sp_plus $11f
	read_hl_from_sp_plus $11f
	ld de, $b
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld a, [hl]
	push af
	ld hl, $0
	write_hl_to_sp_plus $11e
	xor a
Func_223f1: ; 223f1 (8:63f1)
	cp $a
	jp nc, Func_2241d
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $124
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_223f1

Func_2241d: ; 2241d (8:641d)
	xor a
	read_hl_from_sp_plus $121
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	inc l
	dec l
	jp nz, Func_2242e
	ld l, $1
Func_2242e: ; 2242e (8:642e)
	ld e, $0
Func_22430: ; 22430 (8:6430)
	ld a, e
	cp l
	jp nc, Func_2248c
	push hl
	push de
	push bc
	ld a, [bc]
	ld e, a
	ld hl, $f3
	add hl, sp
	call GetRobotOrTrainerBaseStats
	ld hl, $f8
	add hl, sp
	ld a, [hl]
	cp $8
	jp nc, Func_22450
	ld a, $4
	jp Func_22461

Func_22450: ; 22450 (8:6450)
	ld hl, $f8
	add hl, sp
	ld a, [hl]
	cp $b
	jp nc, Func_2245f
	ld a, $3
	jp Func_22461

Func_2245f: ; 2245f (8:645f)
	ld a, $2
Func_22461: ; 22461 (8:6461)
	pop bc
	pop de
	push bc
	push de
	ld l, c
	ld h, b
	inc hl
	inc hl
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $124
	add hl, bc
	write_hl_to_sp_plus $124
	pop de
	inc e
	pop bc
	ld hl, $7
	add hl, bc
	ld c, l
	ld b, h
	pop hl
	jp Func_22430

Func_2248c: ; 2248c (8:648c)
	pop af
	cp $11
	jp z, Func_224c5
	cp $10
	jp z, Func_224b7
	cp $f
	jp nz, Func_224d5
	read_hl_from_sp_plus $11c
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $11c
	add hl, bc
	write_hl_to_sp_plus $11c
	jp Func_224d5

Func_224b7: ; 224b7 (8:64b7)
	read_hl_from_sp_plus $11c
	add hl, hl
	write_hl_to_sp_plus $11c
	jp Func_224d5

Func_224c5: ; 224c5 (8:64c5)
	read_hl_from_sp_plus $11c
	ld de, $2
	call DivideHLByDESigned
	write_hl_to_sp_plus $11c
Func_224d5: ; 224d5 (8:64d5)
	ld c, $0
	ld hl, $138
	add hl, sp
	ld [hl], c
Func_224dc: ; 224dc (8:64dc)
	ld a, c
	cp $4
	jp nc, Func_2253a
	push bc
	set_farcall_addrs_hli GetRobotInParty
	pop bc
	push bc
	ld a, c
	ld hl, $ca
	add hl, sp
	reg16swap de, hl
	call FarCall
	pop bc
	read_hl_from_sp_plus $d6
	ld a, l
	or h
	jp z, Func_2250f
	ld hl, $c8
	add hl, sp
	ld a, [hl]
	or a
	jp nz, Func_22512
Func_2250f: ; 2250f (8:650f)
	jp Func_22536

Func_22512: ; 22512 (8:6512)
	ld b, c
	ld a, $1
	call LeftShiftA
	read_hl_from_sp_plus $11f
	and [hl]
	jp z, Func_22536
	ld hl, $138
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $138
	add hl, sp
	ld [hl], a
	dec a
	ld e, a
	ld d, $0
	ld hl, $134
	add hl, sp
	add hl, de
	ld [hl], c
Func_22536: ; 22536 (8:6536)
	inc c
	jp Func_224dc

Func_2253a: ; 2253a (8:653a)
	ld hl, $138
	add hl, sp
	ld l, [hl]
	ld h, $0
	push hl
	read_hl_from_sp_plus $11e
	pop de
	call DivideHLByDESigned
	write_hl_to_sp_plus $11c
	ld a, l
	or h
	jp nz, Func_2255d
	ld hl, $1
	write_hl_to_sp_plus $11c
Func_2255d: ; 2255d (8:655d)
	ld e, $0
Func_2255f: ; 2255f (8:655f)
	ld a, e
	ld hl, $138
	add hl, sp
	cp [hl]
	jp nc, Func_228c5
	push de
	ld hl, $11e
	add hl, sp
	ld [hl], $0
	read_hl_from_sp_plus $11e
	ld c, l
	ld b, h
	pop de
	push bc
	push de
	set_farcall_addrs_hli GetRobotInParty
	pop de
	push de
	ld d, $0
	ld hl, $138
	add hl, sp
	add hl, de
	ld a, [hl]
	ld hl, $cc
	add hl, sp
	reg16swap de, hl
	call FarCall
	pop de
	pop bc
	ld hl, $cf
	add hl, sp
	ld a, [hl]
	cp $63
	jp c, Func_225a8
	jp Func_228c1

Func_225a8: ; 225a8 (8:65a8)
	push de
	push bc
	ld hl, $123
	add hl, sp
	ld [hl], $0
	ld hl, $cd
	add hl, sp
	push hl
	ld hl, $125
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $125
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $126
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld de, Text_20102
	call CopyUntilNull
	pop bc
	push bc
	ld hl, $123
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $123
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $124
	add hl, sp
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	call Func_20d35
	ld de, Text_20134
	call CopyUntilNull
	ld hl, $123
	add hl, sp
	ld e, [hl]
	ld hl, $124
	add hl, sp
	call Func_203fa
	pop bc
	read_hl_from_sp_plus $e0
	add hl, bc
	write_hl_to_sp_plus $e0
	ld hl, $ca
	add hl, sp
	ld a, [hl]
	dec a
	ld e, a
	ld hl, $ed
	add hl, sp
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_dbe2
	ld hl, $d1
	add hl, sp
	ld e, [hl]
	ld hl, $ed
	add hl, sp
	call FarCall
	read_hl_from_sp_plus $109
	push hl
	read_hl_from_sp_plus $dc
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $da
	read_hl_from_sp_plus $10d
	push hl
	read_hl_from_sp_plus $e0
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $de
	read_hl_from_sp_plus $112
	push hl
	read_hl_from_sp_plus $e5
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $e3
	read_hl_from_sp_plus $116
	push hl
	read_hl_from_sp_plus $e9
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $e7
	read_hl_from_sp_plus $114
	push hl
	read_hl_from_sp_plus $e7
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $e5
	ld de, $0
	ld hl, $f2
	add hl, sp
	ld a, [hl]
	ld hl, $d1
	add hl, sp
	ld l, [hl]
	ld h, a
	call Func_270a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $e0
	ld a, l
	sub c
	ld a, h
	sbc b
	jp c, Func_227d3
	push bc
	ld hl, $120
	add hl, sp
	ld [hl], $1
	ld hl, $123
	add hl, sp
	ld [hl], $0
	ld hl, $cd
	add hl, sp
	push hl
	ld hl, $125
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $125
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $126
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld de, Text_20102
	call CopyUntilNull
	pop bc
Func_22701: ; 22701 (8:6701)
	read_hl_from_sp_plus $e0
	ld a, l
	sub c
	ld a, h
	sbc b
	jp c, .music
	ld hl, $d1
	add hl, sp
	ld a, [hl]
	cp $63
	jp nc, .music
	push bc
	ld hl, $123
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $123
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $124
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20106
	call CopyUntilNull
	reg16swap de, hl
	ld hl, $d3
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d3
	add hl, sp
	ld [hl], a
	ld hl, $d3
	add hl, sp
	ld l, [hl]
	ld h, $0
	call Func_20d35
	reg16swap de, hl
	reg16swap de, hl
	ld de, Text_2013f
	call CopyUntilNull
	reg16swap de, hl
	ld hl, $123
	add hl, sp
	ld e, [hl]
	ld hl, $124
	add hl, sp
	call Func_203fa
	ld hl, $123
	add hl, sp
	ld [hl], $0
	pop bc
	read_hl_from_sp_plus $e0
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	write_hl_to_sp_plus $e0
	ld de, $0
	ld hl, $f2
	add hl, sp
	ld a, [hl]
	ld hl, $d1
	add hl, sp
	ld l, [hl]
	ld h, a
	call Func_270a
	ld c, l
	ld b, h
	jp .okay

.music
	ld a, $17
	call OverworldPlaySong
.loop
	call CheckSongFinished
	or a
	jp nz, .loop
	jp .next

.okay
	jp Func_22701

.next
	ld hl, $ca
	add hl, sp
	ld a, [hl]
	dec a
	ld e, a
	ld hl, $ed
	add hl, sp
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_dbe2
	ld hl, $d1
	add hl, sp
	ld e, [hl]
	ld hl, $ed
	add hl, sp
	call FarCall
Func_227d3: ; 227d3 (8:67d3)
	read_hl_from_sp_plus $109
	push hl
	read_hl_from_sp_plus $dc
	pop de
	add hl, de
	write_hl_to_sp_plus $da
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_227f7
	ld hl, $3e7
	write_hl_to_sp_plus $da
Func_227f7: ; 227f7 (8:67f7)
	read_hl_from_sp_plus $10d
	push hl
	read_hl_from_sp_plus $e0
	pop de
	add hl, de
	write_hl_to_sp_plus $de
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_2281b
	ld hl, $3e7
	write_hl_to_sp_plus $de
Func_2281b: ; 2281b (8:681b)
	read_hl_from_sp_plus $112
	push hl
	read_hl_from_sp_plus $e5
	pop de
	add hl, de
	write_hl_to_sp_plus $e3
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_2283f
	ld hl, $3e7
	write_hl_to_sp_plus $e3
Func_2283f: ; 2283f (8:683f)
	read_hl_from_sp_plus $116
	push hl
	read_hl_from_sp_plus $e9
	pop de
	add hl, de
	write_hl_to_sp_plus $e7
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_22863
	ld hl, $3e7
	write_hl_to_sp_plus $e7
Func_22863: ; 22863 (8:6863)
	read_hl_from_sp_plus $114
	push hl
	read_hl_from_sp_plus $e7
	pop de
	add hl, de
	write_hl_to_sp_plus $e5
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_22887
	ld hl, $3e7
	write_hl_to_sp_plus $e5
Func_22887: ; 22887 (8:6887)
	ld hl, $11e
	add hl, sp
	ld a, [hl]
	or a
	jp z, Func_228a0
	read_hl_from_sp_plus $da
	write_hl_to_sp_plus $d8
	read_hl_from_sp_plus $de
	write_hl_to_sp_plus $dc
Func_228a0: ; 228a0 (8:68a0)
	set_farcall_addrs_hli Func_6b74
	pop de
	push de
	ld d, $0
	ld hl, $136
	add hl, sp
	add hl, de
	ld a, [hl]
	ld hl, $ca
	add hl, sp
	reg16swap de, hl
	call FarCall
	pop de
Func_228c1: ; 228c1 (8:68c1)
	inc e
	jp Func_2255f

Func_228c5: ; 228c5 (8:68c5)
	ld hl, $13a
	add hl, sp
	ld sp, hl
	ret

Data_228cb: ; 228cb
	dw 10, 20, 30, 1000

Func_228d3: ; 228d3
	ld hl, -$f0
	add hl, sp
	ld sp, hl
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	write_hl_to_sp_plus $f0
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	write_hl_to_sp_plus $f0
	read_hl_from_sp_plus $f2
	ld de, $c6
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from_sp_plus $f0
	ld de, $b
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	write_hl_to_sp_plus $ee
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	write_hl_to_sp_plus $ec
	ld hl, $d2
	add hl, sp
	ld [hl], $0
	read_hl_from_sp_plus $ec
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $cc
	xor a
Func_22962: ; 22962 (8:6962)
	cp $a
	jp nc, Func_2298e
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d8
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp Func_22962

Func_2298e: ; 2298e (8:698e)
	ld hl, $d5
	add hl, sp
	ld [hl], $0
	pop de
	push bc
	ld hl, $5f
	add hl, de
	ld a, [hl]
	add $b4
	ld hl, $d4
	add hl, sp
	ld [hl], a
	read_hl_from_sp_plus $ee
	ld de, $9
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_229b9
	ld hl, $d2
	add hl, sp
	ld [hl], $2
	jp Func_22ae7

Func_229b9: ; 229b9 (8:69b9)
	ld hl, $ce
	add hl, sp
	ld c, l
	ld b, h
	read_hl_from_sp_plus $ec
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $ee
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, $ce
	add hl, sp
	ld c, l
	ld b, h
	ld de, $64
	ld hl, $ce
	add hl, sp
	call MultiplyULongAtHLByUShortDE
	ld hl, $ce
	add hl, sp
	ld a, [hl]
	ld hl, $cf
	add hl, sp
	ld l, [hl]
	ld h, a
	write_hl_to_sp_plus $ce
	read_hl_from_sp_plus $ce
	ld de, $64
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	write_hl_to_sp_plus $ce
	read_hl_from_sp_plus $ec
	ld de, $13
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $ce
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	write_hl_to_sp_plus $ce
	ld hl, $d4
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_228cb
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $ce
	add hl, bc
	write_hl_to_sp_plus $ce
	read_hl_from_sp_plus $ce
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_22a57
	ld hl, $0
	write_hl_to_sp_plus $ce
Func_22a57: ; 22a57 (8:6a57)
	read_hl_from_sp_plus $f2
	ld de, $71
	add hl, de
	ld a, [hl]
	and $f0
	ld e, a
	inc hl
	ld d, $0
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	or h
	jp z, Func_22a83
	read_hl_from_sp_plus $ce
	ld de, $32
	add hl, de
	write_hl_to_sp_plus $ce
	jp Func_22acd

Func_22a83: ; 22a83 (8:6a83)
	read_hl_from_sp_plus $f2
	ld de, $75
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_22acd
	read_hl_from_sp_plus $f2
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $4
	jp z, Func_22ab2
	cp $7
	jp nz, Func_22ac1
	read_hl_from_sp_plus $ce
	ld de, $1e
	add hl, de
	write_hl_to_sp_plus $ce
	jp Func_22acd

Func_22ab2: ; 22ab2 (8:6ab2)
	read_hl_from_sp_plus $ce
	ld de, $14
	add hl, de
	write_hl_to_sp_plus $ce
	jp Func_22acd

Func_22ac1: ; 22ac1 (8:6ac1)
	read_hl_from_sp_plus $ce
	ld de, $a
	add hl, de
	write_hl_to_sp_plus $ce
Func_22acd: ; 22acd (8:6acd)
	read_hl_from_sp_plus $ce
	push hl
	ld a, $64
	call Func_2034d
	ld l, a
	ld h, $0
	pop de
	call CompareHLtoDE
	jp c, Func_22ae7
	ld hl, $d2
	add hl, sp
	ld [hl], $1
Func_22ae7: ; 22ae7 (8:6ae7)
	read_hl_from_sp_plus $ec
	ld de, $d
	add hl, de
	push hl
	ld hl, $d7
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d7
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d8
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld de, Text_2010a
	call CopyUntilNull
	ld hl, $d2
	add hl, sp
	ld a, [hl]
	cp $2
	jp z, Func_22baa
	cp $1
	jp z, Func_22b6f
	or a
	jp nz, Func_22baa
	read_hl_from_sp_plus $ee
	ld de, $9
	add hl, de
	ld a, $4
	or [hl]
	ld [hl], a
	ld hl, $d5
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d5
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d6
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20145
	call CopyUntilNull
	set_farcall_addrs_hli Func_dd29
	ld hl, $d4
	add hl, sp
	ld a, [hl]
	call FarCall
	jp Func_22baa

Func_22b6f: ; 22b6f (8:6b6f)
	ld hl, $d5
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $d5
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $d6
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20151
	call CopyUntilNull
	set_farcall_addrs_hli Func_dd29
	ld hl, $d4
	add hl, sp
	ld a, [hl]
	add $4
	call FarCall
	jp Func_22baa

Func_22baa: ; 22baa (8:6baa)
	ld hl, $d5
	add hl, sp
	ld e, [hl]
	ld hl, $d6
	add hl, sp
	call Func_203fa
	pop bc
	ld hl, $d0
	add hl, sp
	ld a, [hl]
	or a
	jp z, Func_22bc3
	jp Func_22cca

Func_22bc3: ; 22bc3 (8:6bc3)
	ld a, [bc]
	inc a
	ld hl, $d2
	add hl, sp
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	inc hl
	ld a, [hl]
	ld hl, $d1
	add hl, sp
	ld [hl], a
	set_farcall_addrs_hli Func_620d5
	ld hl, $d2
	add hl, sp
	ld c, [hl]
	read_hl_from_sp_plus $ca
	reg16swap de, hl
	ld hl, $d1
	add hl, sp
	ld l, [hl]
	ld h, $0
	call FarCall
	cp $ff
	jp z, Func_22bfe
	jp Func_22cb6

Func_22bfe: ; 22bfe (8:6bfe)
	set_farcall_addrs_hli Func_620d5
	ld hl, $d2
	add hl, sp
	ld c, [hl]
	read_hl_from_sp_plus $ca
	push hl
	ld hl, $d3
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $500
	add hl, de
	pop de
	call FarCall
	cp $ff
	jp z, Func_22c2a
	jp Func_22cb6

Func_22c2a: ; 22c2a (8:6c2a)
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
	read_hl_from wCurRobotPointer
	ld de, $1c8
	add hl, de
	ld a, [hl]
	ld [wc307], a
	read_hl_from wCurRobotPointer
	ld de, $1c9
	add hl, de
	ld a, [hl]
	ld [wc308], a
	callba_hli Func_52d1f
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $3
	ld a, $2
	call FarCall
	set_farcall_addrs_hli Func_613fc
	ld a, [wc308]
	ld e, a
	ld a, [wc307]
	call FarCall
	set_farcall_addrs_hli Func_620d5
	ld hl, $d2
	add hl, sp
	ld c, [hl]
	read_hl_from_sp_plus $ca
	push hl
	ld hl, $d3
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $500
	add hl, de
	pop de
	call FarCall
Func_22cb6: ; 22cb6 (8:6cb6)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $65
	add hl, de
	ld a, $10
	or [hl]
	ld [hl], a
Func_22cca: ; 22cca (8:6cca)
	ld hl, $f0
	add hl, sp
	ld sp, hl
	ret

Func_22cd0: ; 22cd0
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	pop de
	push hl
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $2
	jp z, Func_22d50
	call Func_20d3a
	cp $ff
	jp nz, Func_22d2b
	ld a, SONG_VICTORY
	call OverworldPlaySong
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_22d26
	call Func_222b7
	call Func_223b8
Func_22d26: ; 22d26 (8:6d26)
	ld a, $1
	jp Func_22d60

Func_22d2b: ; 22d2b (8:6d2b)
	push af
	call GetHLAtSPPlus4
	ld de, $5e
	add hl, de
	ld [hl], $ff
	call Func_21160
	call GetHLAtSPPlus6
	ld de, $5e
	add hl, de
	ld [hl], $fc
	pop af
	call GetHLAtSPPlus4
	ld de, $5f
	add hl, de
	ld [hl], a
	call Func_216e2
	jp Func_22d5f

Func_22d50: ; 22d50 (8:6d50)
	ld hl, $7
	add hl, bc
	ld a, [hl]
	and $10
	jp z, Func_22d5f
	ld a, $1
	jp Func_22d60

Func_22d5f: ; 22d5f (8:6d5f)
	xor a
Func_22d60: ; 22d60 (8:6d60)
	pop bc
	pop bc
	ret

Func_22d63: ; 22d63 (8:6d63)
	push hl
	pop hl
	push hl
	inc hl
	inc hl
	ld a, $f
	and [hl]
	ld [hl], a
	pop hl
	push hl
	ld de, $e
	add hl, de
	ld [hl], $0
	ld a, [hl]
	pop hl
	push hl
	ld de, $b
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $8
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $f
	add hl, de
	ld bc, $0
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $9
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $6
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	ret

Func_22db3: ; 22db3 (8:6db3)
	push hl
	pop hl
	push hl
	inc hl
	inc hl
	ld a, $f
	and [hl]
	ld [hl], a
	pop hl
	push hl
	ld de, $e
	add hl, de
	ld [hl], $0
	ld a, [hl]
	pop hl
	push hl
	ld de, $b
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $8
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $f
	add hl, de
	ld bc, $0
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $9
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $6
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	ret

Func_22e03: ; 22e03
	read_hl_from wCurRobotPointer
	ld de, $e4
	add hl, de
	reg16swap de, hl
	ld hl, $5f
	add hl, de
	ld a, [hl]
	cp $32
	jp z, Func_22e3b
	cp $31
	jp z, Func_22e35
	cp $30
	jp z, Func_22e2f
	cp $2f
	jp nz, Func_22e3e
	ld bc, $14
	jp Func_22e3e

Func_22e2f: ; 22e2f (8:6e2f)
	ld bc, $32
	jp Func_22e3e

Func_22e35: ; 22e35 (8:6e35)
	ld bc, $c8
	jp Func_22e3e

Func_22e3b: ; 22e3b (8:6e3b)
	ld bc, $3e8
Func_22e3e: ; 22e3e (8:6e3e)
	ld e, c
	ld d, b
	ld a, $1
	call Func_20405
	ld c, l
	ld b, h
	ret

Func_22e48: ; 22e48 (8:6e48)
	add sp, -$16
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $16
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $12
	ld hl, sp+$f
	ld a, [wc311]
	inc a
	ld [hl], a
	ld hl, sp+$e
	ld [hl], $0
	ld a, [wc311]
	ld e, a
	ld hl, sp+$0
	call Func_24bb
	ld hl, sp+$a
	ld a, [hl]
	and $4
	jp z, Func_23137
	read_hl_from_sp_plus $16
	ld de, $c6
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $18
	ld de, $82
	add hl, de
	pop de
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $16
	ld de, $71
	add hl, de
	ld e, c
	ld d, b
	ld bc, $11
	call MemCopy
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $18
	ld de, $82
	add hl, de
	pop de
	add hl, de
	write_hl_to_sp_plus $14
	read_hl_from_sp_plus $14
	inc hl
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$d
	ld [hl], e
	set_farcall_addrs_hli GetRobotInParty
	read_hl_from_sp_plus $12
	ld de, $c
	add hl, de
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	set_farcall_addrs_hli Func_5c6e3
	read_hl_from_sp_plus $12
	call FarCall
	ld c, a
	ld hl, sp+$f
	ld a, [hl]
	cp $42
	jp z, Func_23061
	cp $41
	jp z, Func_2305b
	cp $40
	jp z, Func_23049
	cp $3f
	jp z, Func_23036
	cp $3e
	jp z, Func_23021
	cp $3d
	jp z, Func_2300b
	cp $3c
	jp z, Func_22ffc
	cp $3b
	jp z, Func_22fe5
	cp $3a
	jp z, Func_22fce
	cp $29
	jp z, Func_22fc0
	cp $28
	jp z, Func_22fa4
	cp $27
	jp z, Func_22f8d
	cp $26
	jp z, Func_22f7e
	cp $25
	jp z, Func_22f68
	cp $24
	jp nz, Func_23064
	ld hl, sp+$d
	ld a, [hl]
	cp $3
	jp nz, Func_22f65
	ld hl, sp+$d
	ld [hl], $0
Func_22f65: ; 22f65 (8:6f65)
	jp Func_23064

Func_22f68: ; 22f68 (8:6f68)
	ld hl, sp+$d
	ld a, [hl]
	cp $2
	jp nz, Func_22f7b
	ld hl, sp+$d
	ld [hl], $0
	read_hl_from_sp_plus $14
	call Func_22d63
Func_22f7b: ; 22f7b (8:6f7b)
	jp Func_23064

Func_22f7e: ; 22f7e (8:6f7e)
	ld hl, sp+$d
	ld a, [hl]
	cp $4
	jp nz, Func_22f8a
	ld hl, sp+$d
	ld [hl], $0
Func_22f8a: ; 22f8a (8:6f8a)
	jp Func_23064

Func_22f8d: ; 22f8d (8:6f8d)
	ld hl, sp+$d
	ld a, [hl]
	cp $7
	jp z, Func_22f9d
	ld hl, sp+$d
	ld a, [hl]
	cp $8
	jp nz, Func_22fa1
Func_22f9d: ; 22f9d (8:6f9d)
	ld hl, sp+$d
	ld [hl], $0
Func_22fa1: ; 22fa1 (8:6fa1)
	jp Func_23064

Func_22fa4: ; 22fa4 (8:6fa4)
	ld hl, sp+$d
	ld a, [hl]
	cp $8
	jp nz, Func_22fb0
	ld hl, sp+$d
	ld [hl], $0
Func_22fb0: ; 22fb0 (8:6fb0)
	read_hl_from_sp_plus $14
	ld a, [hl]
	and $f7
	ld [hl], a
	inc hl
	ld hl, sp+$e
	ld [hl], $1
	jp Func_23064

Func_22fc0: ; 22fc0 (8:6fc0)
	ld hl, sp+$d
	ld [hl], $0
	read_hl_from_sp_plus $14
	call Func_22d63
	jp Func_23064

Func_22fce: ; 22fce (8:6fce)
	ld hl, sp+$d
	ld a, [hl]
	cp $8
	jp z, Func_22fde
	ld hl, sp+$d
	ld a, [hl]
	cp $7
	jp nz, Func_22fe2
Func_22fde: ; 22fde (8:6fde)
	ld hl, sp+$d
	ld [hl], $0
Func_22fe2: ; 22fe2 (8:6fe2)
	jp Func_23064

Func_22fe5: ; 22fe5 (8:6fe5)
	ld hl, sp+$d
	ld a, [hl]
	cp $8
	jp z, Func_22ff5
	ld hl, sp+$d
	ld a, [hl]
	cp $3
	jp nz, Func_22ff9
Func_22ff5: ; 22ff5 (8:6ff5)
	ld hl, sp+$d
	ld [hl], $0
Func_22ff9: ; 22ff9 (8:6ff9)
	jp Func_23064

Func_22ffc: ; 22ffc (8:6ffc)
	ld hl, sp+$d
	ld a, [hl]
	cp $4
	jp nz, Func_23008
	ld hl, sp+$d
	ld [hl], $0
Func_23008: ; 23008 (8:7008)
	jp Func_23064

Func_2300b: ; 2300b (8:700b)
	ld hl, sp+$d
	ld a, [hl]
	cp $2
	jp nz, Func_2301e
	ld hl, sp+$d
	ld [hl], $0
	read_hl_from_sp_plus $14
	call Func_22d63
Func_2301e: ; 2301e (8:701e)
	jp Func_23064

Func_23021: ; 23021 (8:7021)
	ld hl, sp+$d
	ld a, [hl]
	cp $1
	jp nz, Func_23036
	push bc
	ld hl, sp+$f
	ld [hl], $0
	read_hl_from_sp_plus $16
	call Func_22db3
	pop bc
Func_23036: ; 23036 (8:7036)
	read_hl_from_sp_plus $14
	ld a, [hl]
	and $f7
	ld [hl], a
	inc hl
	ld hl, sp+$e
	ld [hl], $1
	ld hl, sp+$d
	ld [hl], c
	jp Func_23064

Func_23049: ; 23049 (8:7049)
	ld hl, sp+$d
	ld [hl], $0
	read_hl_from_sp_plus $14
	call Func_22d63
	ld hl, sp+$e
	ld [hl], $1
	jp Func_23064

Func_2305b: ; 2305b (8:705b)
	ld hl, sp+$d
	ld [hl], c
	jp Func_23064

Func_23061: ; 23061 (8:7061)
	ld hl, sp+$d
	ld [hl], c
Func_23064: ; 23064 (8:7064)
	ld hl, sp+$e
	ld a, [hl]
	or a
	jp z, Func_230ad
	read_hl_from_sp_plus $16
	ld de, $71
	add hl, de
	push hl
	read_hl_from_sp_plus $16
	pop de
	ld bc, $11
	call MemCopy
	read_hl_from_sp_plus $16
	ld de, $71
	add hl, de
	ld [hl], $0
	inc hl
	set_farcall_addrs_hli Func_673ff
	xor a
	call FarCall
	read_hl_from_sp_plus $14
	push hl
	read_hl_from_sp_plus $18
	ld de, $71
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
Func_230ad: ; 230ad (8:70ad)
	ld hl, sp+$d
	ld a, [hl]
	read_hl_from_sp_plus $14
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	read_hl_from_sp_plus $16
	ld de, $c6
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $18
	ld de, $82
	add hl, de
	pop de
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $16
	ld de, $71
	add hl, de
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $11
	call MemCopy
	set_farcall_addrs_hli GetRobotInParty
	read_hl_from_sp_plus $16
	ld de, $c6
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $12
.asm_23104
	ld de, $c
	add hl, de
	reg16swap de, hl
	call FarCall
.asm_2310f
	read_hl_from_sp_plus $16
	ld de, $75
.asm_23114
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $12
	ld de, $22
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_5a149
	ld c, $1
	ld e, $1
	ld a, [wc311]
	inc a
	call FarCall
Func_23137: ; 23137 (8:7137)
	add sp, $16
	ret

Pointers_2313a: ; 2313a
	dw Data_23140
	dw Data_23150
	dw $0

Data_23140: ; 23140
	db "(つうしん)ハﾞトル(てﾞは)", $0

Data_23150: ; 23150
	db "(つかえない)!", $0

Func_23159: ; 23159
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_23184
	call Func_20398
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_2313a)
	ld de, Pointers_2313a
	ld hl, $10e
	call FarCall
	ld hl, -1
	ret

Func_23184: ; 23184 (8:7184)
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_23197
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_231ab
Func_23197: ; 23197 (8:7197)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_231ab: ; 231ab (8:71ab)
	call Func_1fbe
	ld a, BANK(GFX_4ce2)
	ld [wFarCallDestBank], a
	ld bc, $10
IF DEF(SUN)
	ld de, GFX_4ce2 + $f0
ENDC
IF DEF(STAR)
	ld de, GFX_4ce2 + $100
ENDC
	ld hl, $88e0
	call FarRequestVideoData
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_20ca5)
	ld de, Data_20ca5
	ld hl, Data_20cb4
	call FarCall
	ld a, l
	and h
	inc a
	jp z, Func_231e5
	call Func_22e48
	ld hl, wc311
	ld l, [hl]
	ld h, $0
	inc hl
Func_231e5: ; 231e5 (8:71e5)
	push hl
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_231f9
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_2320d
Func_231f9: ; 231f9 (8:71f9)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $3
	ld a, $2
	call FarCall
Func_2320d: ; 2320d (8:720d)
	call Func_2009
	ld a, BANK(GFX_4a02)
	ld [wFarCallDestBank], a
	ld bc, $10
	ld de, GFX_4a02
	ld hl, $88e0
	call FarRequestVideoData
	set_farcall_addrs_hli Func_dc0a
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_dc0a
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $3b
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	call WaitVideoTransfer
	pop hl
	ret

INCLUDE "battle/core.asm"

Func_237be: ; 237be
	set_farcall_addrs_hli Func_6183
	ld a, [wLCDC]
	and $7f
	call FarCall
	ld bc, $800
	ld e, $8f
	hlbgcoord 0, 0
	call FillMemory
	ld a, [wSystemType]
	cp $11
	jp nz, Func_237fb
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld bc, $800
	ld e, $0
	hlbgcoord 0, 0
	call FillMemory
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_237fb: ; 237fb (8:77fb)
	set_farcall_addrs_hli Func_6183
	ld a, [wLCDC]
	or $80
	call FarCall
	ret

Func_2380f: ; 2380f
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
Func_23824: ; 23824 (8:7824)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_23824
	ld a, [wSystemType]
	cp $11
	jp nz, Func_238c7
	call WaitVideoTransfer
Func_23839: ; 23839 (8:7839)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_23839
	ld c, $0
Func_23843: ; 23843 (8:7843)
	ld a, c
	cp $8
	jp nc, Func_23896
	ld a, c
	and $1
	jp nz, Func_23872
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 2
	add hl, de
	ld de, $f7f
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 4
	add hl, de
	deRGB 04, 07, 22
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_23892

Func_23872: ; 23872 (8:7872)
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 2
	add hl, de
	deRGB 04, 07, 22
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 4
	add hl, de
	deRGB 31, 27, 03
	ld [hl], e
	inc hl
	ld [hl], d
Func_23892: ; 23892 (8:7892)
	inc c
	jp Func_23843

Func_23896: ; 23896 (8:7896)
	ld bc, $40
	ld de, wCGB_BGPalsBuffer
	ld hl, wCGB_OBPalsBuffer
	call CopyFromDEtoHL
	call WaitVideoTransfer
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
Func_238ad: ; 238ad (8:78ad)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_238ad
Func_238b5: ; 238b5 (8:78b5)
	ld a, [wRTCTicker]
	cp $11
	jp nc, Func_238c3
	call NextOverworldFrame
	jp Func_238b5

Func_238c3: ; 238c3 (8:78c3)
	xor a
	ld [wRTCTicker], a
Func_238c7: ; 238c7 (8:78c7)
	ret

LoadDebugSaveState: ; 238c8 (8:78c8)
	ld a, BANK(DebugSaveState)
	ld [wFarCallDestBank], a
	ld bc, $214
	ld de, DebugSaveState
	ld hl, $c980
	call FarCopyVideoData
	ld bc, $32
	ld de, $ca9d
	ld hl, wEventFlags
	call CopyFromDEtoHL
	ld bc, $64
	ld de, $cacf
	ld hl, wc789
	call CopyFromDEtoHL
	ld bc, $3c
	ld de, $cb58
	ld hl, wc347
	call CopyFromDEtoHL
	read_hl_from wcb3b
	write_hl_to wc391
	read_hl_from wcb3d
	write_hl_to wc391 + 2
	ld bc, $5
	ld de, $c980
	ld hl, wPlayerName
	call CopyFromDEtoHL
	ret

Func_2391e: ; 2391e
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	push af
	ld l, $b
	push hl
	ld c, $b
	ld e, $3
	ld a, $4
	call Func_3bc5
	pop bc
	pop af
	cp $4
	jp z, Func_23a31
	cp $3
	jp z, Func_23a05
	cp $2
	jp z, Func_239cf
	cp $1
	jp z, Func_239a5
	or a
	jp nz, Func_23a64
	callba_hli LoadGame
	cp $ff
	jp z, Func_239a2
	callba_hli Func_58df9
	or a
	jp nz, Func_239a2
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	ld c, $1
	ld e, $0
	xor a
	call FarCall
Func_239a2: ; 239a2 (8:79a2)
	jp Func_23a64

Func_239a5: ; 239a5 (8:79a5)
	call NewSaveFileInWRam
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_23a64

Func_239cf: ; 239cf (8:79cf)
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_52df8
	callba_hli Func_17470
	call Func_204c
	call Func_3af6
	jp Func_23a64

Func_23a05: ; 23a05 (8:7a05)
	call FillVisibleAreaWithBlankTile
	call Func_237be
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_17488
	call Func_2097
	call Func_2380f
	call GBKiss
	jp Func_23a64

Func_23a31: ; 23a31 (8:7a31)
	call LoadDebugSaveState
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_144bd
	callba_hli Func_17470
	call Func_204c
Func_23a64: ; 23a64 (8:7a64)
	ld hl, $8000
	ret

Func_23a68: ; 23a68
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	push af
	ld l, $b
	push hl
	ld c, $b
	ld e, $3
	ld a, $4
	call Func_3bc5
	pop bc
	pop af
	cp $3
	jp z, Func_23b2a
	cp $2
	jp z, Func_23afe
	cp $1
	jp z, Func_23ac8
	or a
	jp nz, Func_23b5d
	; New Game
	call NewSaveFileInWRam
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_23b5d

Func_23ac8: ; 23ac8 (8:7ac8)
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_52df8
	callba_hli Func_17470
	call Func_204c
	call Func_3af6
	jp Func_23b5d

Func_23afe: ; 23afe (8:7afe)
	call FillVisibleAreaWithBlankTile
	call Func_237be
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_17488
	call Func_2097
	call Func_2380f
	call GBKiss
	jp Func_23b5d

Func_23b2a: ; 23b2a (8:7b2a)
	call LoadDebugSaveState
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_144bd
	callba_hli Func_17470
	call Func_204c
Func_23b5d: ; 23b5d (8:7b5d)
	ld hl, $8000
	ret

SECTION "Bank 09", ROMX, BANK [$9]
INCLUDE "charmap2.asm"
Func_24000: ; 24000
	ret

Func_24001: ; 24001
	callba_hli Func_5cf1d
	ret

Func_24010: ; 24010
	push hl
	set_farcall_addrs_hli Func_5cf85
	pop hl
	ld e, $9
	call FarCall
	ret

Func_24023: ; 24023
	push hl
	set_farcall_addrs_hli Func_5d02d
	pop hl
	ld e, $9
	call FarCall
	ret

Func_24036: ; 24036
	callba_hli Func_5d107
	ret

Func_24045: ; 24045
	callba_hli Func_5d10d
	ret

Func_24054: ; 24054
	push af
	set_farcall_addrs_hli Func_5d096
	pop af
	call FarCall
	ret

Text_24065: ; 24065
	db " ", $0

Text_24067: ; 24067
	db "!", $0

Text_24069: ; 24069
	db "は", $0

Text_2406b: ; 2406b
	db "に", $0

Text_2406d: ; 2406d
	db "が", $0

Text_2406f: ; 2406f
	db "の", $0

Text_24071: ; 24071
	db "を", $0

Text_24073: ; 24073
	db "で", $0

Text_24075: ; 24075
	db "/", $0

Text_24077: ; 24077
	db "G", $0

Pointers_24079: ; 24079
	dw Text_24065
	dw Text_24067
	dw Text_24069
	dw Text_2406b
	dw Text_2406d
	dw Text_2406f
	dw Text_24071
	dw Text_24073
	dw Text_24075
	dw Text_24077

Text_2408d: ; 2408d
	db " ", $0

Text_2408f: ; 2408f
	db "いのり", $0

Text_24093: ; 24093
	db "のろい", $0

Text_24097: ; 24097
	db "ねつ", $0

Text_2409a: ; 2409a
	db "バグ", $0

Text_2409d: ; 2409d
	db "のうむ", $0

Text_240a1: ; 240a1
	db "めいれいむし", $0

Text_240a8: ; 240a8
	db "ていし", $0

Text_240ac: ; 240ac
	db "サビ", $0

Text_240af: ; 240af
	db "ぼうそう", $0

Text_240b4: ; 240b4
	db "はんどう", $0

Text_240b9: ; 240b9
	db "みずびたし", $0

Text_240bf: ; 240bf
	db "あぶらまみれ", $0

Text_240c6: ; 240c6
	db "バリヤ", $0

Text_240ca: ; 240ca
	db "ふのう", $0

Pointers_240ce: ; 240ce
	dw Text_2408d
	dw Text_2408f
	dw Text_24093
	dw Text_24097
	dw Text_2409a
	dw Text_2409d
	dw Text_240a1
	dw Text_240a8
	dw Text_240ac
	dw Text_240af
	dw Text_240b4
	dw Text_240b9
	dw Text_240bf
	dw Text_240c6
	dw Text_240ca

Text_240ec: ; 240ec
	db "ぼうぎょ", $0

Text_240f1: ; 240f1
	db "こうげき", $0

Text_240f6: ; 240f6
	db "すばやさ", $0

Text_240fb: ; 240fb
	db "めいちゅう", $0

Text_24101: ; 24101
	db "ポイント", $0

Text_24106: ; 24106
	db "エネルギー", $0

Text_2410c: ; 2410c
	db "ヒット", $0

Text_24110: ; 24110
	db "こうげき", $0

Text_24115: ; 24115
	db "わざ", $0

Text_24118: ; 24118
	db "はんどう", $0

Text_2411d: ; 2411d
	db "ばくはつ", $0

Pointers_24122: ; 24122
	dw Text_240ec
	dw Text_240f1
	dw Text_240f6
	dw Text_240fb
	dw Text_24101
	dw Text_24106
	dw Text_2410c
	dw Text_24110
	dw Text_24115
	dw Text_24118
	dw Text_2411d

Text_24138: ; 24138
	db "たたかう", $0

Text_2413d: ; 2413d
	db "アイテム", $0

Text_24142: ; 24142
	db "ロボポン", $0

Text_24147: ; 24147
	db "にげる", $0

Text_2414b: ; 2414b
	db "コマンド", $0

Text_24150: ; 24150
	db "すべて", $0

Pointers_24154: ; 24154
	dw Text_24138
	dw Text_2413d
	dw Text_24142
	dw Text_24147
	dw Text_2414b
	dw Text_24150

Text_24160: ; 24160
	db "あがった", $0

Text_24165: ; 24165
	db "さがった", $0

Text_2416a: ; 2416a
	db "うけた", $0

Text_2416e: ; 2416e
	db "つかえません", $0

Text_24175: ; 24175
	db "はずれた", $0

Text_2417a: ; 2417a
	db "なっている", $0

Text_24180: ; 24180
	db "なおった", $0

Text_24185: ; 24185
	db "ふせいだ", $0

Text_2418a: ; 2418a
	db "すいとった", $0

Text_24190: ; 24190
	db "あたえた", $0

Text_24195: ; 24195
	db "ダメージ", $0

Text_2419a: ; 2419a
	db "はんげきした", $0

Text_241a1: ; 241a1
	db "ひろった", $0

Text_241a6: ; 241a6
	db "かけてきた", $0

Text_241ac: ; 241ac
	db "かけている", $0

Text_241b2: ; 241b2
	db "しっぱいした", $0

Text_241b9: ; 241b9
	db "になった", $0

Text_241be: ; 241be
	db "ダメージをうけとめた", $0

Text_241c9: ; 241c9
	db "にへった", $0

Text_241ce: ; 241ce
	db "しようできなくなった", $0

Text_241d9: ; 241d9
	db "の ばくははしっぱいした", $0

Text_241e6: ; 241e6
	db "つかった", $0

Text_241eb: ; 241eb
	db "スクラップ", $0

Text_241f1: ; 241f1
	db "にした", $0

Pointers_241f5: ; 241f5
	dw Text_24160
	dw Text_24165
	dw Text_2416a
	dw Text_2416e
	dw Text_24175
	dw Text_2417a
	dw Text_24180
	dw Text_24185
	dw Text_2418a
	dw Text_24190
	dw Text_24195
	dw Text_2419a
	dw Text_241a1
	dw Text_241a6
	dw Text_241ac
	dw Text_241b2
	dw Text_241b9
	dw Text_241be
	dw Text_241c9
	dw Text_241ce
	dw Text_241d9
	dw Text_241e6
	dw Text_241eb
	dw Text_241f1

Text_24225: ; 24225
	db "えいきょうで ", $0

Text_2422d: ; 2422d
	db "こうかで ", $0

Text_24233: ; 24233
	db "のこうかが きれた", $0

Text_2423d: ; 2423d
	db "で まもられている", $0

Text_24247: ; 24247
	db "は こんらんしている", $0

Text_24252: ; 24252
	db "しかし ", $0

Text_24257: ; 24257
	db "で つつまれた", $0

Text_2425f: ; 2425f
	db "バリアにはねかえされた", $0

Text_2426b: ; 2426b
	db "さらに", $0

Text_2426f: ; 2426f
	db "のこうかで", $0

Text_24275: ; 24275
	db "HP", $0

Text_24278: ; 24278
	db "そのわざは", $0

Text_2427e: ; 2427e
	db "ぞくせいは", $0

Text_24284: ; 24284
	db "にげようとした", $0

Text_2428c: ; 2428c
	db "しかし にげられなかった", $0

Text_24299: ; 24299
	db "うまく にげた", $0

Text_242a1: ; 242a1
	db "ばくはつした", $0

Pointers_242a8: ; 242a8
	dw Text_24225
	dw Text_2422d
	dw Text_24233
	dw Text_2423d
	dw Text_24247
	dw Text_24252
	dw Text_24257
	dw Text_2425f
	dw Text_2426b
	dw Text_2426f
	dw Text_24275
	dw Text_24278
	dw Text_2427e
	dw Text_24284
	dw Text_2428c
	dw Text_24299
	dw Text_242a1

Text_242ca: ; 242ca
	db "ノーマル", $0

Text_242cf: ; 242cf
	db "ひ", $0

Text_242d1: ; 242d1
	db "みず", $0

Text_242d4: ; 242d4
	db "かぜ", $0

Text_242d7: ; 242d7
	db "つち", $0

Text_242da: ; 242da
	db "かみなり", $0

Text_242df: ; 242df
	db "こおり", $0

Text_242e3: ; 242e3
	db "せい", $0

Text_242e6: ; 242e6
	db "じゃ", $0

Text_242e9: ; 242e9
	db "りく", $0

Text_242ec: ; 242ec
	db "かい", $0

Text_242ef: ; 242ef
	db "くう", $0

Pointers_242f2: ; 242f2
	dw Text_242ca
	dw Text_242cf
	dw Text_242d1
	dw Text_242d4
	dw Text_242d7
	dw Text_242da
	dw Text_242df
	dw Text_242e3
	dw Text_242e6
	dw Text_242e9
	dw Text_242ec
	dw Text_242ef

Text_2430a: ; 2430a
	db "こうか17", $0

Text_24310: ; 24310
	db "EP", $0

Text_24313: ; 24313
	db "ついかダメージ", $0

Text_2431b: ; 2431b
	db "ごうげきのはんどうで", $0

Text_24326: ; 24326
	db "じばくした", $0

Text_2432c: ; 2432c
	db "はんげき", $0

Text_24331: ; 24331
	db "いちげきひっさつ", $0

Text_2433a: ; 2433a
	db "がまんしている", $0

Text_24342: ; 24342
	db "してきた", $0

Text_24347: ; 24347
	db "した", $0

Text_2434a: ; 2434a
	db "27", $0

Text_2434d: ; 2434d
	db "28", $0

Text_24350: ; 24350
	db "はんてんかいふく", $0

Text_24359: ; 24359
	db "きゅうしゅう", $0

Text_24360: ; 24360
	db "HPかいふく", $0

Text_24367: ; 24367
	db "32", $0

Text_2436a: ; 2436a
	db "ぼうぎょ", $0

Text_2436f: ; 2436f
	db "うけみ", $0

Text_24373: ; 24373
	db "35", $0

Text_24376: ; 24376
	db "36", $0

Text_24379: ; 24379
	db "37", $0

Text_2437c: ; 2437c
	db "38", $0

Text_2437f: ; 2437f
	db "れんぞくこうげき", $0

Text_24388: ; 24388
	db "こうか40", $0

Text_2438e: ; 2438e
	db "こうか41", $0

Text_24394: ; 24394
	db "こうか42", $0

Text_2439a: ; 2439a
	db "こうか43", $0

Text_243a0: ; 243a0
	db "こうか44", $0

Pointers_243a6: ; 243a6
	dw Text_2430a
	dw Text_24310
	dw Text_24313
	dw Text_2431b
	dw Text_24326
	dw Text_2432c
	dw Text_24331
	dw Text_2433a
	dw Text_24342
	dw Text_24347
	dw Text_2434a
	dw Text_2434d
	dw Text_24350
	dw Text_24359
	dw Text_24360
	dw Text_24367
	dw Text_2436a
	dw Text_2436f
	dw Text_24373
	dw Text_24376
	dw Text_24379
	dw Text_2437c
	dw Text_2437f
	dw Text_24388
	dw Text_2438e
	dw Text_24394
	dw Text_2439a
	dw Text_243a0

Text_243de: ; 243de
	db "ていしじょうたいで うごけない!", $0

Text_243ef: ; 243ef
	db "ぼうぎょしている", $0

Text_243f8: ; 243f8
	db "かいひしようとしている", $0

Text_24404: ; 24404
	db "なにもしない", $0

Pointers_2440b: ; 2440b
	dw Text_243de
	dw Text_243ef
	dw Text_243f8
	dw Text_24404

Text_24413: ; 24413
	db "こうげきの はんどうで", $0

Text_2441f: ; 2441f
	db "の ダメージ", $0

Pointers_24426: ; 24426
	dw Text_24413
	dw Text_2441f

Text_2442a: ; 2442a
	db "しかし", $0

Text_2442e: ; 2442e
	db "バリアに はねかえされた", $0

Pointers_2443b: ; 2443b
	dw Text_2442a
	dw Text_2442e

Text_2443f: ; 2443f
	db "きゅうしょ にあたって", $0

Text_2444b: ; 2444b
	db "いちげきひっさつ にした!", $0

Pointers_24459: ; 24459
	dw Text_2443f
	dw Text_2444b

Text_2445d: ; 2445d
	db "は すべての わざの", $0

Text_24468: ; 24468
	db "しようが できなくなった!", $0

Pointers_24476: ; 24476
	dw Text_2445d
	dw Text_24468

Text_2447a: ; 2447a
	db "きあい をいれた!", $0

Pointers_24484: ; 24484
	dw Text_2447a

Text_24486: ; 24486
	db "しようできなくなった!", $0

Pointers_24492: ; 24492
	dw Text_24486

Text_24494: ; 24494
	db "りく こうげき をふうじた!", $0

Text_244a3: ; 244a3
	db "うみ こうげき をふうじた!", $0

Text_244b2: ; 244b2
	db "そら こうげき をふうじた!", $0

Text_244c1: ; 244c1
	db "ノーマル こうげき をふうじた!", $0

Pointers_244d2: ; 244d2
	dw Text_24494
	dw Text_244a3
	dw Text_244b2
	dw Text_244c1

Text_244da: ; 244da
	db "を ぬすんだ", $0

Pointers_244e1: ; 244e1
	dw Text_244da

Text_244e3: ; 244e3
	db "は ", $0

Text_244e6: ; 244e6
	db "を", $0

Text_244e8: ; 244e8
	db "スキャニングした!", $0

Text_244f2: ; 244f2
	db "の ぼうぎょぞくせいは", $0

Text_244fe: ; 244fe
	db "ヒットポイントの", $0

Text_24507: ; 24507
	db "じょうたいも わかった!", $0

Pointers_24514: ; 24514
	dw Text_244e3
	dw Text_244e6
	dw Text_244e8
	dw Text_244f2
	dw Text_244fe
	dw Text_24507

Text_24520: ; 24520
	db "は ", $0

Text_24523: ; 24523
	db "から", $0

Text_24526: ; 24526
	db "ゴールド ごうだつした!", $0

Pointers_24533: ; 24533
	dw Text_24520
	dw Text_24523
	dw Text_24526

Text_24539: ; 24539
	db "は ", $0

Text_2453c: ; 2453c
	db "れんぞくこうげき した!", $0

Pointers_24549: ; 24549
	dw Text_24539
	dw Text_2453c

Text_2454d: ; 2454d
	db "は ", $0

Text_24550: ; 24550
	db "せんせいこうげき した!", $0

Pointers_2455d: ; 2455d
	dw Text_2454d
	dw Text_24550

Text_24561: ; 24561
	db "かけた", $0

Text_24565: ; 24565
	db "かけてきた", $0

Pointers_2456b: ; 2456b
	dw Text_24561
	dw Text_24565

Text_2456f: ; 2456f
	db "よしっ!", $0

Text_24574: ; 24574
	db "かなりきいたみたいだぞ", $0

Pointers_24580: ; 24580
	dw Text_2456f
	dw Text_24574

Text_24584: ; 24584
	db "しまった!", $0

Text_2458a: ; 2458a
	db "かなりやられたみたいだ", $0

Pointers_24596: ; 24596
	dw Text_24584
	dw Text_2458a

Text_2459a: ; 2459a
	db "しまった!", $0

Text_245a0: ; 245a0
	db "ぜんぜんきいていないみたいだ", $0

Pointers_245af: ; 245af
	dw Text_2459a
	dw Text_245a0

Text_245b3: ; 245b3
	db "よしっ!", $0

Text_245b8: ; 245b8
	db "ぜんぜんきいていないぞ", $0

Pointers_245c4: ; 245c4
	dw Text_245b3
	dw Text_245b8

SECTION "Bank 9 part 2", ROMX [$45c8], BANK [$9]
INCLUDE "charmap.asm"
Data_245c8: ; 245c8
	dr $245c8, $245d0

Data_245d0: ; 245d0
	dr $245d0, $245d8

Func_245d8: ; 245d8
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_245ec: ; 245ec
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_24600: ; 24600 (9:4600)
	push af
	set_farcall_addrs_hli RandomRange
	pop af
	call FarCall
	ret

Func_24611: ; 24611
	callba_hli Func_5ec5e
	ret

Func_24620: ; 24620 (9:4620)
	push af
	push de
	set_farcall_addrs_hli Func_616dd
	pop de
	pop af
	jp FarCall

Func_24632: ; 24632 (9:4632)
	push af
	push de
	set_farcall_addrs_hli Func_61a3e
	pop de
	pop af
	jp FarCall

Func_24644: ; 24644
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ret

Func_2465a: ; 2465a (9:465a)
	push af
	push de
	set_farcall_addrs_hli Func_dcaf
	pop de
	pop af
	call FarCall
	ret

Func_2466d: ; 2466d (9:466d)
	push af
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_2469a
	ld hl, $0
	jp Func_2469d

Func_2469a: ; 2469a (9:469a)
	ld hl, $2f
Func_2469d: ; 2469d (9:469d)
	add hl, de
	reg16swap de, hl
	ld hl, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_246c2
	push de
	ld hl, sp+$5
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus4
	ld de, $8
	add hl, de
	add hl, bc
	ld a, $4
	or [hl]
	ld [hl], a
	pop de
	jp Func_246c5

Func_246c2: ; 246c2 (9:46c2)
	jp Func_2472d

Func_246c5: ; 246c5 (9:46c5)
	push de
	ld a, $2d
	call OverworldPlaySFX
	set_farcall_addrs_hli Func_dd47
	ld hl, sp+$5
	ld a, [hl]
	call FarCall
	pop de
	push de
	ld hl, $d
	add hl, de
	call Func_24023
	ld hl, sp+$5
	ld a, [hl]
	or a
	jp z, Func_24701
	ld hl, Text_24071
	call Func_24010
	ld hl, Text_241eb
	call Func_24023
	ld hl, Text_241f1
	call Func_24010
	jp Func_24713

Func_24701: ; 24701 (9:4701)
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_241eb
	call Func_24023
	ld hl, Text_241b9
	call Func_24010
Func_24713: ; 24713 (9:4713)
	call Func_24045
	pop de
	ld hl, $22
	add hl, de
	ld [hl], $e
	ld a, $1
	ld hl, sp+$3
	ld b, [hl]
	call LeftShiftA
	pop hl
	push hl
	ld de, $7
	add hl, de
	or [hl]
	ld [hl], a
Func_2472d: ; 2472d (9:472d)
	pop bc
	pop bc
	ret

Func_24730: ; 24730 (9:4730)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17975
	pop bc
	pop de
	pop hl
	jp FarCall

Func_24744: ; 24744 (9:4744)
	ld c, $80
	jp Func_24730

Func_24749: ; 24749 (9:4749)
	push hl
	set_farcall_addrs_hli Func_5c6e3
	pop hl
	jp FarCall

Func_24759: ; 24759 (9:4759)
	push de
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Pointers_243a6 - $11 * 2
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus4
	pop de
	call CopyUntilNull
	pop de
	push hl
	pop hl
	push hl
	ld de, Text_2426f
	call CopyUntilNull
	pop bc
	ret

Func_24779: ; 24779 (9:4779)
	push af
	push de
	set_farcall_addrs_hli Func_e39a
	pop de
	pop af
	jp FarCall

Func_2478b: ; 2478b (9:478b)
	push hl
	push de
	set_farcall_addrs_hli Func_5c732
	pop de
	pop hl
	jp FarCall

Data_2479d: ; 2479d
	db $0, $0, $26, $66

Func_247a1: ; 247a1 (9:47a1)
	add sp, -$16
	xor a
	ld a, $2
	call Func_24600
	ld hl, sp+$13
	ld [hl], a
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_247c3
	ld hl, sp+$13
	ld a, [hl]
	xor $1
	ld hl, sp+$13
	ld [hl], a
Func_247c3: ; 247c3 (9:47c3)
	ld hl, sp+$a
	ld [hl], $0
Func_247c7: ; 247c7 (9:47c7)
	ld hl, sp+$a
	ld a, [hl]
	cp $2
	jp nc, Func_24bd4
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$13
	ld a, [hl]
	or a
	jp nz, Func_247e8
	ld hl, $0
	jp Func_247eb

Func_247e8: ; 247e8 (9:47e8)
	ld hl, $2f
Func_247eb: ; 247eb (9:47eb)
	add hl, de
	write_hl_to_sp_plus $13
	ld hl, sp+$13
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $11
	read_hl_from_sp_plus $13
	call Func_24749
	call Func_24001
	ld hl, sp+$14
	ld [hl], $0
	read_hl_from_sp_plus $13
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	read_hl_from_sp_plus $11
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $3
	jp z, Func_2486e
	read_hl_from_sp_plus $11
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $2
	jp z, Func_24858
	ld hl, Text_240b9
	call Func_24023
	jp Func_2485e

Func_24858: ; 24858 (9:4858)
	ld hl, Text_240bf
	call Func_24023
Func_2485e: ; 2485e (9:485e)
	ld hl, sp+$14
	ld [hl], $1
	ld hl, Text_2406b
	call Func_24010
	ld hl, Text_2417a
	call Func_24010
Func_2486e: ; 2486e (9:486e)
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_248a9
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, sp+$14
	ld [hl], $1
	ld hl, Text_2406b
	call Func_24010
	ld hl, Text_2417a
	call Func_24010
	ld hl, sp+$14
	ld [hl], $1
Func_248a9: ; 248a9 (9:48a9)
	read_hl_from_sp_plus $11
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $4
	jp nz, Func_248c7
	read_hl_from_sp_plus $11
	ld de, $74
	add hl, de
	ld a, $a
	add [hl]
	ld [hl], a
	jp Func_248f7

Func_248c7: ; 248c7 (9:48c7)
	ld hl, sp+$14
	ld [hl], $1
	ld hl, Text_240c6
	call Func_24023
	ld a, $64
	call Func_24600
	cp $1e
	jp nc, Func_248f1
	ld hl, Text_24233
	call Func_24010
	read_hl_from_sp_plus $11
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $fb
	ld [hl], a
	jp Func_248f7

Func_248f1: ; 248f1 (9:48f1)
	ld hl, Text_2423d
	call Func_24010
Func_248f7: ; 248f7 (9:48f7)
	ld hl, sp+$14
	ld a, [hl]
	or a
	jp z, Func_24901
	call Func_24036
Func_24901: ; 24901 (9:4901)
	call Func_24001
	ld hl, sp+$14
	ld [hl], $0
	read_hl_from_sp_plus $13
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld bc, $0
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $1
	jp z, Func_24a7a
	cp $2
	jp z, Func_249ea
	cp $3
	jp z, Func_24985
	cp $8
	jp nz, Func_24b00
	read_hl_from_sp_plus $13
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	ld c, l
	ld b, h
	push bc
	ld hl, sp+$16
	ld [hl], $1
	ld hl, Text_240ac
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24225
	call Func_24010
	pop bc
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_24744
	ld hl, sp+$2
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24195
	call Func_24010
	ld hl, Text_24067
	call Func_24010
	pop bc
	jp Func_24b00

Func_24985: ; 24985 (9:4985)
	ld hl, sp+$b
	ld c, l
	ld b, h
	read_hl_from_sp_plus $13
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, Data_2479d
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$b
	ld a, [hl]
	ld hl, sp+$c
	ld l, [hl]
	ld h, a
	ld c, l
	ld b, h
	ld a, c
	or b
	jp nz, Func_249ab
	ld bc, $1
Func_249ab: ; 249ab (9:49ab)
	push bc
	ld hl, sp+$16
	ld [hl], $1
	ld hl, Text_24097
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24225
	call Func_24010
	pop bc
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_24744
	ld hl, sp+$2
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24195
	call Func_24010
	ld hl, Text_24067
	call Func_24010
	pop bc
	jp Func_24b00

Func_249ea: ; 249ea (9:49ea)
	push bc
	ld hl, sp+$16
	ld [hl], $1
	ld hl, Text_24093
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24225
	call Func_24010
	read_hl_from_sp_plus $13
	ld de, $73
	add hl, de
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	ld c, a
	push bc
	read_hl_from_sp_plus $15
	ld de, $76
	add hl, de
	push hl
	ld hl, sp+$6
	ld [hl], $0
	ld hl, sp+$6
	call Func_24023
	ld e, $0
	pop hl
	pop bc
Func_24a28: ; 24a28 (9:4a28)
	ld a, e
	cp $4
	jp nc, Func_24a6a
	push bc
	push de
	ld a, c
	and $1
	jp z, Func_24a5c
	push hl
	ld l, e
	ld h, $0
	add hl, hl
	ld de, Pointers_24122
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24010
	ld hl, Text_24065
	call Func_24010
	pop hl
	ld a, $14
	add [hl]
	ld [hl], a
	cp $65
	jp c, Func_24a5c
	ld a, $64
	ld [hl], a
Func_24a5c: ; 24a5c (9:4a5c)
	pop de
	inc e
	pop bc
	ld a, c
	rrca
	and $7f
	ld c, a
	inc hl
	inc hl
	inc hl
	jp Func_24a28

Func_24a6a: ; 24a6a (9:4a6a)
	ld hl, Text_2406d
	call Func_24010
	ld hl, Text_24165
	call Func_24010
	pop bc
	jp Func_24b00

Func_24a7a: ; 24a7a (9:4a7a)
	push bc
	ld hl, sp+$16
	ld [hl], $1
	ld hl, Text_2408f
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_2422d
	call Func_24010
	read_hl_from_sp_plus $13
	ld de, $73
	add hl, de
	ld c, [hl]
	push bc
	read_hl_from_sp_plus $15
	ld de, $76
	add hl, de
	push hl
	ld hl, sp+$6
	ld [hl], $0
	ld hl, sp+$6
	call Func_24023
	ld e, $0
	pop hl
	pop bc
Func_24ab1: ; 24ab1 (9:4ab1)
	ld a, e
	cp $4
	jp nc, Func_24af3
	push bc
	push de
	ld a, c
	and $1
	jp z, Func_24ae5
	push hl
	ld l, e
	ld h, $0
	add hl, hl
	ld de, Pointers_24122
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24010
	ld hl, Text_24065
	call Func_24010
	pop hl
	ld a, $a
	add [hl]
	ld [hl], a
	cp $65
	jp c, Func_24ae5
	ld a, $64
	ld [hl], a
Func_24ae5: ; 24ae5 (9:4ae5)
	pop de
	inc e
	pop bc
	ld a, c
	rrca
	and $7f
	ld c, a
	inc hl
	inc hl
	inc hl
	jp Func_24ab1

Func_24af3: ; 24af3 (9:4af3)
	ld hl, Text_2406d
	call Func_24010
	ld hl, Text_24160
	call Func_24010
	pop bc
Func_24b00: ; 24b00 (9:4b00)
	push bc
	ld hl, sp+$16
	ld a, [hl]
	or a
	jp z, Func_24b0b
	call Func_24036
Func_24b0b: ; 24b0b (9:4b0b)
	pop bc
	ld a, c
	or b
	jp z, Func_24b4d
	ld e, c
	ld d, b
	ld hl, sp+$13
	ld a, [hl]
	call Func_24620
	ld c, l
	ld b, h
	read_hl_from_sp_plus $13
	ld de, $18
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld a, c
	or b
	jp nz, Func_24b4d
	ld hl, sp+$13
	ld a, [hl]
	call Func_2466d
	ld a, $1
	ld hl, sp+$13
	ld b, [hl]
	call LeftShiftA
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $65
	add hl, de
	ld [hl], a
	jp Func_24bd4

Func_24b4d: ; 24b4d (9:4b4d)
	read_hl_from_sp_plus $11
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_24ba5
	cp $5
	jp z, Func_24b85
	cp $4
	jp nz, Func_24bc2
	call Func_24001
	read_hl_from_sp_plus $13
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_243ef
	call Func_24023
	call Func_24036
	jp Func_24bc2

Func_24b85: ; 24b85 (9:4b85)
	call Func_24001
	read_hl_from_sp_plus $13
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_243f8
	call Func_24023
	call Func_24036
	jp Func_24bc2

Func_24ba5: ; 24ba5 (9:4ba5)
	call Func_24001
	read_hl_from_sp_plus $13
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_24404
	call Func_24023
	call Func_24036
Func_24bc2: ; 24bc2 (9:4bc2)
	ld hl, sp+$a
	ld a, [hl]
	inc a
	ld hl, sp+$a
	ld [hl], a
	ld hl, sp+$13
	ld a, [hl]
	xor $1
	ld hl, sp+$13
	ld [hl], a
	jp Func_247c7

Func_24bd4: ; 24bd4 (9:4bd4)
	call Func_24001
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $65
	add hl, de
	ld a, [hl]
	add sp, $16
	ret

Func_24beb: ; 24beb (9:4beb)
	push af
	set_farcall_addrs_hli Func_5c796
	pop af
	call FarCall
	ret

Func_24bfc: ; 24bfc (9:4bfc)
	callba_hli Func_5cdb0
	ret

Func_24c0b: ; 24c0b
	add sp, -$34
	ld l, $0
	ld c, l
Func_24c10: ; 24c10 (9:4c10)
	ld a, l
	cp $2
	jp nc, Func_24cd6
	push bc
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc c
	dec c
	jp nz, Func_24c2f
	ld hl, $0
	jp Func_24c32

Func_24c2f: ; 24c2f (9:4c2f)
	ld hl, $2f
Func_24c32: ; 24c32 (9:4c32)
	add hl, de
	write_hl_to_sp_plus $37
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $34
	read_hl_from_sp_plus $37
	call Func_24749
	ld c, a
	read_hl_from_sp_plus $34
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $a
	jp nz, Func_24ccc
	push bc
	call Func_24001
	read_hl_from_sp_plus $39
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	read_hl_from_sp_plus $36
	ld de, $75
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	pop bc
	read_hl_from_sp_plus $34
	ld de, $75
	add hl, de
	ld [hl], c
	read_hl_from_sp_plus $37
	ld de, $22
	add hl, de
	ld [hl], c
	ld hl, Text_2406d
	call Func_24010
	ld hl, Text_24180
	call Func_24010
	call Func_24036
	callba_hli Func_d767
Func_24ccc: ; 24ccc (9:4ccc)
	pop hl
	inc l
	pop bc
	ld a, c
	xor $1
	ld c, a
	jp Func_24c10

Func_24cd6: ; 24cd6 (9:4cd6)
	call Func_247a1
	or a
	jp z, Func_24ce0
	jp Func_251ce

Func_24ce0: ; 24ce0 (9:4ce0)
	push af
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_24cf5
	ld c, $1
	jp Func_24cf7

Func_24cf5: ; 24cf5 (9:4cf5)
	ld c, $0
Func_24cf7: ; 24cf7 (9:4cf7)
	ld l, $0
Func_24cf9: ; 24cf9 (9:4cf9)
	ld a, l
	cp $2
	jp nc, Func_2518e
	push bc
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc c
	dec c
	jp nz, Func_24d18
	ld hl, $0
	jp Func_24d1b

Func_24d18: ; 24d18 (9:4d18)
	ld hl, $2f
Func_24d1b: ; 24d1b (9:4d1b)
	add hl, de
	write_hl_to_sp_plus $39
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $36
	read_hl_from_sp_plus $36
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $9
	jp nz, Func_24daf
	read_hl_from_sp_plus $39
	ld de, $23
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, hl
	push hl
	read_hl_from_sp_plus $38
	ld de, $60
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $39
	ld de, $25
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $62
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $39
	ld de, $27
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $64
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_25025

Func_24daf: ; 24daf (9:4daf)
	read_hl_from_sp_plus $39
	ld de, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$17
	call Func_241f
	read_hl_from_sp_plus $39
	ld de, $2e
	add hl, de
	ld a, [hl]
	push af
	read_hl_from_sp_plus $3b
	ld de, $25
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$2a
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	call Func_24779
	ld c, l
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $62
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$32
	ld c, l
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $76
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $64
	call Func_2617
	ld hl, sp+$32
	ld c, l
	ld b, h
	read_hl_from_sp_plus $3b
	ld de, $25
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$32
	call MultiplyULongAtHLByUShortDE
	read_hl_from_sp_plus $38
	ld de, $73
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_24e3c
	ld hl, sp+$33
	ld c, [hl]
	ld hl, sp+$32
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $62
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	jp Func_24e60

Func_24e3c: ; 24e3c (9:4e3c)
	read_hl_from_sp_plus $38
	ld de, $73
	add hl, de
	ld a, [hl]
	and $10
	jp z, Func_24e60
	ld hl, sp+$33
	ld c, [hl]
	ld hl, sp+$32
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $62
	add hl, de
	ld a, [hl]
	sub c
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc b
	ld [hl], a
Func_24e60: ; 24e60 (9:4e60)
	read_hl_from_sp_plus $38
	ld de, $77
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $38
	ld de, $62
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	pop af
	push af
	read_hl_from_sp_plus $3b
	ld de, $27
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$2b
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	call Func_24779
	ld c, l
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $64
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$32
	ld c, l
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $7c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $64
	call Func_2617
	ld hl, sp+$32
	ld c, l
	ld b, h
	read_hl_from_sp_plus $3b
	ld de, $27
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$32
	call MultiplyULongAtHLByUShortDE
	read_hl_from_sp_plus $38
	ld de, $73
	add hl, de
	ld a, [hl]
	and $4
	jp z, Func_24ef1
	ld hl, sp+$33
	ld c, [hl]
	ld hl, sp+$32
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $64
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	jp Func_24f15

Func_24ef1: ; 24ef1 (9:4ef1)
	read_hl_from_sp_plus $38
	ld de, $73
	add hl, de
	ld a, [hl]
	and $40
	jp z, Func_24f15
	ld hl, sp+$33
	ld c, [hl]
	ld hl, sp+$32
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $38
	ld de, $64
	add hl, de
	ld a, [hl]
	sub c
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc b
	ld [hl], a
Func_24f15: ; 24f15 (9:4f15)
	read_hl_from_sp_plus $38
	ld de, $7d
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $38
	ld de, $64
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	read_hl_from_sp_plus $38
	ld de, $5f
	add hl, de
	ld e, [hl]
	ld hl, sp+$31
	ld [hl], e
	pop af
	read_hl_from_sp_plus $39
	ld de, $23
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$27
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	call Func_24779
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_24f71
	read_hl_from_sp_plus $36
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $fe
	jp nz, Func_25025
Func_24f71: ; 24f71 (9:4f71)
	read_hl_from_sp_plus $36
	ld de, $3e
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2f
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	add hl, de
	push hl
	read_hl_from_sp_plus $38
	ld de, $60
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$30
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $79
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $64
	call Func_2617
	ld hl, sp+$30
	ld c, l
	ld b, h
	read_hl_from_sp_plus $39
	ld de, $23
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$30
	call MultiplyULongAtHLByUShortDE
	read_hl_from_sp_plus $36
	ld de, $73
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_24fe7
	ld hl, sp+$31
	ld c, [hl]
	ld hl, sp+$30
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $60
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	jp Func_2500b

Func_24fe7: ; 24fe7 (9:4fe7)
	read_hl_from_sp_plus $36
	ld de, $73
	add hl, de
	ld a, [hl]
	and $20
	jp z, Func_2500b
	ld hl, sp+$31
	ld c, [hl]
	ld hl, sp+$30
	ld h, [hl]
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $60
	add hl, de
	ld a, [hl]
	sub c
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc b
	ld [hl], a
Func_2500b: ; 2500b (9:500b)
	read_hl_from_sp_plus $36
	ld de, $7a
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $36
	ld de, $60
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
Func_25025: ; 25025 (9:5025)
	ld hl, sp+$36
	ld [hl], $0
Func_25029: ; 25029 (9:5029)
	ld hl, sp+$36
	ld a, [hl]
	cp $3
	jp nc, Func_2511e
	ld hl, sp+$36
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $36
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	or a
	jp z, Func_25114
	ld hl, sp+$36
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $36
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$6
	call Func_248f
	read_hl_from_sp_plus $14
	ld a, l
	and $80
	jp z, Func_25114
	read_hl_from_sp_plus $14
	ld a, l
	and $7f
	ld l, a
	ld h, $0
	ld a, l
	cp $2b
	jp nz, Func_25114
	read_hl_from_sp_plus $14
	ld de, $100
	call DivideHLByDESigned
	ld a, l
	cp $2
	jp z, Func_250e9
	cp $1
	jp z, Func_250bb
	or a
	jp nz, Func_25114
	read_hl_from_sp_plus $e
	push hl
	ld hl, sp+$38
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $38
	ld de, $20
	add hl, de
	add hl, bc
	ld l, [hl]
	ld h, $0
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $62
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	jp Func_25114

Func_250bb: ; 250bb (9:50bb)
	read_hl_from_sp_plus $e
	push hl
	ld hl, sp+$38
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $38
	ld de, $20
	add hl, de
	add hl, bc
	ld l, [hl]
	ld h, $0
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $60
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	jp Func_25114

Func_250e9: ; 250e9 (9:50e9)
	read_hl_from_sp_plus $e
	push hl
	ld hl, sp+$38
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $38
	ld de, $20
	add hl, de
	add hl, bc
	ld l, [hl]
	ld h, $0
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $36
	ld de, $64
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
Func_25114: ; 25114 (9:5114)
	ld hl, sp+$36
	ld a, [hl]
	inc a
	ld hl, sp+$36
	ld [hl], a
	jp Func_25029

Func_2511e: ; 2511e (9:511e)
	read_hl_from_sp_plus $36
	ld de, $60
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_25140
	read_hl_from_sp_plus $36
	ld de, $60
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_25140: ; 25140 (9:5140)
	read_hl_from_sp_plus $36
	ld de, $62
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_25162
	read_hl_from_sp_plus $36
	ld de, $62
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_25162: ; 25162 (9:5162)
	read_hl_from_sp_plus $36
	ld de, $64
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_25184
	read_hl_from_sp_plus $36
	ld de, $64
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_25184: ; 25184 (9:5184)
	pop hl
	inc l
	pop bc
	ld a, c
	xor $1
	ld c, a
	jp Func_24cf9

Func_2518e: ; 2518e (9:518e)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_2519f
	call Func_24bfc
Func_2519f: ; 2519f (9:519f)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_251b3
	ld l, $1
	jp Func_251b5

Func_251b3: ; 251b3 (9:51b3)
	ld l, $0
Func_251b5: ; 251b5 (9:51b5)
	ld e, $0
Func_251b7: ; 251b7 (9:51b7)
	ld a, e
	cp $2
	jp nc, Func_251cd
	push hl
	push de
	ld a, l
	call Func_24beb
	pop de
	inc e
	pop hl
	ld a, l
	xor $1
	ld l, a
	jp Func_251b7

Func_251cd: ; 251cd (9:51cd)
	pop af
Func_251ce: ; 251ce (9:51ce)
	add sp, $34
	ret

Func_251d1: ; 251d1
	push bc
	push bc
	push bc
	push bc
	xor a
	ld c, $0
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_251eb
	ld a, c
	xor $1
	ld c, a
Func_251eb: ; 251eb (9:51eb)
	xor a
Func_251ec: ; 251ec (9:51ec)
	cp $2
	jp nc, Func_253e9
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc c
	dec c
	jp nz, Func_25209
	ld hl, $0
	jp Func_2520c

Func_25209: ; 25209 (9:5209)
	ld hl, $2f
Func_2520c: ; 2520c (9:520c)
	add hl, de
	call WriteHLToSPPlus9
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus7
	pop bc
	push bc
	push af
	ld l, c
	ld h, $0
	ld a, l
	xor $1
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus7
	read_hl_from_sp_plus $b
	call Func_24749
	ld hl, sp+$4
	ld [hl], a
	call Func_24001
	xor a
	read_hl_from_sp_plus $b
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_25395
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $a
	jp z, Func_25395
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	call GetHLAtSPPlus9
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $4
	jp nz, Func_25395
	ld a, $64
	call Func_24600
	call GetHLAtSPPlus9
	ld de, $74
	add hl, de
	cp [hl]
	jp nc, Func_25395
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	ld hl, sp+$4
	cp [hl]
	jp z, Func_25395
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $1
	jp z, Func_252e4
	cp $2
	jp nz, Func_25310
Func_252e4: ; 252e4 (9:52e4)
	call GetHLAtSPPlus9
	ld de, $73
	add hl, de
	ld [hl], $0
	call GetHLAtSPPlus9
	ld de, $76
	add hl, de
	ld c, l
	ld b, h
	xor a
Func_252f7: ; 252f7 (9:52f7)
	cp $4
	jp nc, Func_25310
	push af
	xor a
	ld [bc], a
	ld l, c
	ld h, b
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	inc a
	inc bc
	inc bc
	inc bc
	jp Func_252f7

Func_25310: ; 25310 (9:5310)
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $4
	jp nz, Func_2534d
	call GetHLAtSPPlus9
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $fe
	jp nz, Func_2534a
	call GetHLAtSPPlus9
	ld de, $5e
	add hl, de
	ld [hl], $0
	call GetHLAtSPPlus9
	ld de, $71
	add hl, de
	ld a, [hl]
	and $cf
	ld c, a
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus9
	ld de, $71
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_2534a: ; 2534a (9:534a)
	jp Func_25363

Func_2534d: ; 2534d (9:534d)
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $6
	jp nz, Func_25363
	call GetHLAtSPPlus9
	ld de, $5e
	add hl, de
	ld [hl], $ff
Func_25363: ; 25363 (9:5363)
	ld hl, sp+$4
	ld a, [hl]
	call GetHLAtSPPlus9
	ld de, $75
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $b
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, Text_2406d
	call Func_24010
	ld hl, Text_24180
	call Func_24010
	xor a
	call Func_24036
	callba_hli Func_d767
Func_25395: ; 25395 (9:5395)
	call GetHLAtSPPlus7
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	ld l, a
	ld h, $0
	ld a, l
	dec a
	or h
	jp nz, Func_253dd
	call GetHLAtSPPlus9
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $80
	jp z, Func_253dd
	call GetHLAtSPPlus7
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $cf
	ld e, a
	inc hl
	ld d, [hl]
	ld a, e
	or $20
	ld c, a
	ld b, d
	call GetHLAtSPPlus7
	ld de, $6f
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_253dd: ; 253dd (9:53dd)
	pop af
	inc a
	pop bc
	push af
	ld a, c
	xor $1
	ld c, a
	pop af
	jp Func_251ec

Func_253e9: ; 253e9 (9:53e9)
	push bc
	call Func_24001
	ld l, $0
	pop bc
Func_253f0: ; 253f0 (9:53f0)
	ld a, l
	cp $2
	jp nc, Func_2542b
	push bc
	push hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, $6f
	add hl, de
	ld a, [hl]
	and $7f
	ld [hl], a
	inc hl
	pop hl
	inc l
	pop bc
	ld a, c
	xor $1
	ld c, a
	jp Func_253f0

Func_2542b: ; 2542b (9:542b)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_25430: ; 25430
	callba_hli Func_5c386
	ret

Func_2543f: ; 2543f (9:543f)
	push af
	push de
	add sp, -$18
	read_hl_from_sp_plus $1a
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $18
	read_hl_from_sp_plus $1a
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $16
	ld c, $0
	push bc
	xor a
	call Func_24001
	read_hl_from_sp_plus $18
	ld de, $d
	add hl, de
	call Func_24010
	pop bc
	read_hl_from_sp_plus $18
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	ld l, a
	ld h, $0
	ld a, l
	dec a
	or h
	jp nz, Func_25497
	ld c, $18
	jp Func_254a7

Func_25497: ; 25497 (9:5497)
	read_hl_from_sp_plus $18
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_254a7
	ld c, $16
Func_254a7: ; 254a7 (9:54a7)
	ld a, c
	cp $16
	jp z, Func_254c4
	cp $18
	jp nz, Func_254f4
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_2433a
	call Func_24023
	call Func_24036
	jp Func_25662

Func_254c4: ; 254c4 (9:54c4)
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_2432c
	call Func_24023
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp nz, Func_254e0
	ld hl, Text_24347
	call Func_24010
	jp Func_254e6

Func_254e0: ; 254e0 (9:54e0)
	ld hl, Text_24342
	call Func_24010
Func_254e6: ; 254e6 (9:54e6)
	call Func_24036
	read_hl_from_sp_plus $16
	ld de, $d
	add hl, de
	call Func_24010
Func_254f4: ; 254f4 (9:54f4)
	read_hl_from_sp_plus $18
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_25532
	cp $fe
	jp nz, Func_25662
	ld hl, Text_24247
	call Func_24010
	read_hl_from_sp_plus $16
	ld de, $17
	add hl, de
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $1c
	ld de, $12
	add hl, de
	pop de
	call Func_241f
	call Func_24036
	ld e, $1
	ld hl, sp+$1b
	ld a, [hl]
	xor $1
	call Func_2465a
	jp Func_25662

Func_25532: ; 25532 (9:5532)
	read_hl_from_sp_plus $18
	ld de, $5f
	add hl, de
	ld a, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $1a
	pop de
	add hl, de
	ld c, l
	ld b, h
	push bc
	push af
	ld hl, Text_2406f
	call Func_24010
	set_farcall_addrs_hli Func_56ba1
	pop af
	ld c, a
	ld hl, sp+$1d
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	call FarCall
	ld hl, sp+$2
	call Func_24023
	ld hl, Text_24067
	call Func_24010
	read_hl_from_sp_plus $18
	ld de, $17
	add hl, de
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $1e
	ld de, $12
	add hl, de
	pop de
	call Func_241f
	call Func_24036
	pop bc
	read_hl_from_sp_plus $18
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $8
	jp nz, Func_2564d
	read_hl_from_sp_plus $1a
	ld de, $4e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_2564a
	ld a, [bc]
	cp $fe
	jp z, Func_255c4
	or a
	jp nz, Func_25604
	read_hl_from_sp_plus $1a
	ld de, $29
	add hl, de
	ld e, [hl]
	ld hl, sp+$1b
	ld a, [hl]
	call Func_2465a
	jp Func_2564a

Func_255c4: ; 255c4 (9:55c4)
	push bc
	read_hl_from_sp_plus $1c
	ld de, $29
	add hl, de
	ld e, [hl]
	ld hl, sp+$1d
	ld a, [hl]
	call Func_2465a
	pop hl
	inc hl
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $18
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld l, a
	push hl
	read_hl_from_sp_plus $1c
	ld de, $2a
	add hl, de
	pop de
	call Func_248f
	read_hl_from_sp_plus $1a
	ld de, $3a
	add hl, de
	ld e, [hl]
	ld hl, sp+$1b
	ld a, [hl]
	call Func_2465a
	jp Func_2564a

Func_25604: ; 25604 (9:5604)
	ld a, BANK(GFX_64c7d)
	ld [wFarCallDestBank], a
	ld a, [bc]
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	push hl
	read_hl_from_sp_plus $1c
	ld de, $3b
	add hl, de
	pop de
	ld bc, $13
	call FarCopyVideoData
	xor a
Func_2562c: ; 2562c (9:562c)
	cp $3
	jp nc, Func_2564a
	push af
	read_hl_from_sp_plus $1c
	ld de, $49
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld e, [hl]
	ld hl, sp+$1d
	ld a, [hl]
	call Func_2465a
	pop af
	inc a
	jp Func_2562c

Func_2564a: ; 2564a (9:564a)
	jp Func_25662

Func_2564d: ; 2564d (9:564d)
	ld hl, Text_24252
	call Func_24010
	ld hl, Text_24278
	call Func_24023
	ld hl, Text_241ce
	call Func_24010
	call Func_24045
Func_25662: ; 25662 (9:5662)
	read_hl_from_sp_plus $18
	ld de, $66
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $1a
	ld de, $e
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $18
	ld de, $67
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $1a
	ld de, $8
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $18
	ld de, $69
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $1a
	ld de, $a
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	add sp, $1c
	ret

Func_256a3: ; 256a3 (9:56a3)
	push de
	push bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus3
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$2
	ld [hl], $0
	call GetHLAtSPPlus5
	ld de, $6b
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $f
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop de
	ld hl, $6f
	add hl, de
	ld a, [hl]
	and $40
	jp nz, Func_25707
	call GetHLAtSPPlus6
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld a, $64
	call Func_24600
	ld l, a
	ld h, $0
	pop de
	call CompareHLtoDE
	jp c, Func_25703
	call GetHLAtSPPlus3
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $fe
	jp nz, Func_25707
Func_25703: ; 25703 (9:5703)
	ld hl, sp+$0
	ld [hl], $1
Func_25707: ; 25707 (9:5707)
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	pop bc
	pop bc
	ret

Func_2570e: ; 2570e (9:570e)
	push af
	push de
	add sp, -$28
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	write_hl_to_sp_plus $27
	read_hl_from_sp_plus $2a
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $25
	read_hl_from_sp_plus $2a
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $23
	read_hl_from_sp_plus $2a
	ld de, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $21
	read_hl_from_sp_plus $2a
	ld de, $e
	add hl, de
	ld e, [hl]
	ld hl, sp+$1e
	ld [hl], e
	read_hl_from_sp_plus $2a
	ld de, $a
	add hl, de
	ld c, [hl]
	push bc
	read_hl_from_sp_plus $2c
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $69
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $20
	ld hl, sp+$1d
	ld [hl], $1
	xor a
	ld hl, sp+$1c
	ld [hl], $0
	call Func_24001
	pop bc
	read_hl_from_sp_plus $25
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	ld l, a
	ld h, $0
	ld a, l
	dec a
	or h
	jp nz, Func_257ab
	jp Func_25c7e

Func_257ab: ; 257ab (9:57ab)
	ld a, c
	and $80
	jp z, Func_257c4
	read_hl_from_sp_plus $25
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_257c4
	ld a, c
	and $7f
	ld hl, sp+$1a
	ld [hl], a
Func_257c4: ; 257c4 (9:57c4)
	ld hl, sp+$1a
	ld a, [hl]
	cp $12
	jp z, Func_25813
	cp $1f
	jp z, Func_25802
	cp $d
	jp z, Func_257f1
	cp $26
	jp z, Func_257e0
	cp $25
	jp nz, Func_25813
Func_257e0: ; 257e0 (9:57e0)
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_2639a
	jp Func_25c7e

Func_257f1: ; 257f1 (9:57f1)
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_2639a
	jp Func_25c7e

Func_25802: ; 25802 (9:5802)
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_26c02
	jp Func_25c7e

Func_25813: ; 25813 (9:5813)
	read_hl_from_sp_plus $25
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $fe
	jp nz, Func_25881
	read_hl_from_sp_plus $25
	ld de, $60
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $18
	call DivideHLByDESigned
	inc hl
	ld a, l
	call Func_24600
	ld l, a
	ld h, $0
	push hl
	read_hl_from_sp_plus $27
	ld de, $60
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $c
	call DivideHLByDESigned
	pop de
	add hl, de
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_25869
	ld de, $1
	jp Func_25869

Func_25869: ; 25869 (9:5869)
	ld hl, sp+$2b
	ld a, [hl]
	call Func_24620
	reg16swap de, hl
	ld a, e
	or d
	jp nz, Func_2587e
	ld hl, sp+$2b
	ld a, [hl]
	call Func_2466d
Func_2587e: ; 2587e (9:587e)
	jp Func_25c7e

Func_25881: ; 25881 (9:5881)
	read_hl_from_sp_plus $25
	ld de, $6d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from_sp_plus $23
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_25a7b
	read_hl_from_sp_plus $1e
	ld a, l
	and $80
	jp z, Func_25a7b
	read_hl_from_sp_plus $1e
	ld a, l
	and $7f
	ld l, a
	ld h, $0
	ld a, l
	sub $22
	or h
	jp z, Func_259a4
	ld a, l
	sub $21
	or h
	jp z, Func_25944
	ld a, l
	sub $1d
	or h
	jp nz, Func_25a75
	read_hl_from_sp_plus $1e
	ld e, h
	ld d, $0
	ld hl, sp+$1e
	ld l, [hl]
	ld h, $0
	call CompareHLtoDE
	jp nz, Func_2593e
	ld a, $1
	ld hl, Text_24252
	call Func_24010
	ld hl, sp+$6
	reg16swap de, hl
	ld a, $1d
	call Func_24759
	ld hl, sp+$6
	call Func_24010
	read_hl_from_sp_plus $21
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24275
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, sp+$6
	push hl
	call GetHLAtSPPlus8
	pop de
	call Func_24744
	ld hl, sp+$6
	call Func_24010
	ld hl, Text_24160
	call Func_24010
	call Func_24045
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	xor $1
	call Func_24632
	call WriteHLToSPPlus6
	ld hl, sp+$1b
	ld [hl], $0
	jp Func_25941

Func_2593e: ; 2593e (9:593e)
	jp Func_25a7b

Func_25941: ; 25941 (9:5941)
	jp Func_25a78

Func_25944: ; 25944 (9:5944)
	read_hl_from_sp_plus $1e
	ld e, h
	ld d, $0
	ld hl, sp+$1e
	ld l, [hl]
	ld h, $0
	call CompareHLtoDE
	jp nz, Func_2599e
	ld a, $2
	ld hl, Text_24252
	call Func_24023
	ld hl, sp+$6
	reg16swap de, hl
	ld a, $21
	call Func_24759
	ld hl, sp+$6
	call Func_24010
	ld hl, Text_241be
	call Func_24023
	ld hl, sp+$2b
	ld a, [hl]
	or a
	jp nz, Func_25981
	call Func_24045
	jp Func_25984

Func_25981: ; 25981 (9:5981)
	call Func_24036
Func_25984: ; 25984 (9:5984)
	ld hl, sp+$4
	ld bc, $1
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $25
	ld de, $6d
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$1b
	ld [hl], $0
	jp Func_259a1

Func_2599e: ; 2599e (9:599e)
	jp Func_25a7b

Func_259a1: ; 259a1 (9:59a1)
	jp Func_25a78

Func_259a4: ; 259a4 (9:59a4)
	ld hl, Text_24252
	call Func_24023
	ld hl, sp+$6
	reg16swap de, hl
	ld a, $22
	call Func_24759
	ld hl, sp+$6
	call Func_24010
	ld hl, sp+$0
	push hl
	read_hl_from_sp_plus $20
	ld e, $81
	call Func_2478b
	ld l, a
	ld h, $0
	ld de, $64
	pop bc
	call Func_2617
	ld hl, sp+$0
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$0
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$1
	ld c, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld b, h
	call GetHLAtSPPlus6
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	call WriteHLToSPPlus6
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_25a06
	ld hl, $1
	call WriteHLToSPPlus6
Func_25a06: ; 25a06 (9:5a06)
	ld hl, Text_24195
	call Func_24023
	ld hl, sp+$6
	push hl
	call GetHLAtSPPlus8
	pop de
	call Func_24744
	ld hl, sp+$6
	call Func_24010
	ld hl, Text_241c9
	call Func_24010
	call GetHLAtSPPlus6
	push hl
	read_hl_from_sp_plus $27
	ld de, $6d
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	xor $1
	call Func_24620
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_25a66
	ld hl, sp+$2b
	ld a, [hl]
	or a
	jp nz, Func_25a60
	call Func_24045
	jp Func_25a63

Func_25a60: ; 25a60 (9:5a60)
	call Func_24036
Func_25a63: ; 25a63 (9:5a63)
	jp Func_25a6e

Func_25a66: ; 25a66 (9:5a66)
	ld hl, sp+$2b
	ld a, [hl]
	xor $1
	call Func_2466d
Func_25a6e: ; 25a6e (9:5a6e)
	ld hl, sp+$1b
	ld [hl], $0
	jp Func_25a78

Func_25a75: ; 25a75 (9:5a75)
	jp Func_25a7b

Func_25a78: ; 25a78 (9:5a78)
	jp Func_25b71

Func_25a7b: ; 25a7b (9:5a7b)
	read_hl_from_sp_plus $25
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $80
	ld [hl], a
	inc hl
	read_hl_from_sp_plus $25
	ld de, $6d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	read_hl_from_sp_plus $21
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, sp+$1a
	ld a, [hl]
	cp $12
	jp nz, Func_25ab0
	ld hl, Text_24310
	call Func_24010
Func_25ab0: ; 25ab0 (9:5ab0)
	ld hl, Text_2406b
	call Func_24010
	ld hl, sp+$6
	push hl
	call GetHLAtSPPlus8
	pop de
	call Func_24744
	ld hl, sp+$6
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24195
	call Func_24010
	ld hl, Text_24067
	call Func_24010
	ld hl, sp+$1a
	ld a, [hl]
	cp $12
	jp nz, Func_25b19
	call GetHLAtSPPlus6
	push hl
	read_hl_from_sp_plus $23
	ld de, $1c
	add hl, de
	pop de
	ld a, [hl]
	sub e
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc d
	ld [hl], a
	ld hl, sp+$1b
	ld [hl], $0
	read_hl_from_sp_plus $21
	ld de, $1c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc d
	dec d
	bit 7, d
	jr z, .asm_25b16
	read_hl_from_sp_plus $21
	ld de, $1c
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
.asm_25b16
	jp Func_25b71

Func_25b19: ; 25b19 (9:5b19)
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	xor $1
	call Func_24620
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_25b48
	ld hl, sp+$2b
	ld a, [hl]
	or a
	jp nz, Func_25b48
	call Func_24045
	jp Func_25b71

Func_25b48: ; 25b48 (9:5b48)
	call Func_24036
	ld hl, sp+$2b
	ld a, [hl]
	xor $1
	call Func_2466d
	ld hl, sp+$1a
	ld a, [hl]
	cp $1e
	jp nz, Func_25b71
	call GetHLAtSPPlus6
	ld a, l
	or h
	jp nz, Func_25b71
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_26bab
Func_25b71: ; 25b71 (9:5b71)
	read_hl_from_sp_plus $27
	ld de, $7
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_25b81
	jp Func_25c7e

Func_25b81: ; 25b81 (9:5b81)
	read_hl_from_sp_plus $2a
	ld de, $11
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_25c7e
	read_hl_from_sp_plus $2a
	ld de, $11
	add hl, de
	ld [hl], $1
	read_hl_from_sp_plus $25
	ld de, $5f
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_25c40
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp z, Func_25c40
	ld hl, sp+$2b
	ld a, [hl]
	or a
	jp nz, Func_25bec
	read_hl_from_sp_plus $25
	ld de, $c7
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_25bcf
	ld hl, Text_2456f
	call Func_24023
	ld hl, Text_24574
	call Func_24023
	jp Func_25be9

Func_25bcf: ; 25bcf (9:5bcf)
	read_hl_from_sp_plus $25
	ld de, $c7
	add hl, de
	ld a, [hl]
	cp $4
	jp nz, Func_25be9
	ld hl, Text_2459a
	call Func_24023
	ld hl, Text_245a0
	call Func_24023
Func_25be9: ; 25be9 (9:5be9)
	jp Func_25c22

Func_25bec: ; 25bec (9:5bec)
	read_hl_from_sp_plus $25
	ld de, $c7
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_25c08
	ld hl, Text_24584
	call Func_24023
	ld hl, Text_2458a
	call Func_24023
	jp Func_25c22

Func_25c08: ; 25c08 (9:5c08)
	read_hl_from_sp_plus $25
	ld de, $c7
	add hl, de
	ld a, [hl]
	cp $4
	jp nz, Func_25c22
	ld hl, Text_245b3
	call Func_24023
	ld hl, Text_245b8
	call Func_24023
Func_25c22: ; 25c22 (9:5c22)
	read_hl_from_sp_plus $25
	ld de, $c7
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_25c3d
	read_hl_from_sp_plus $25
	ld de, $c7
	add hl, de
	ld a, [hl]
	cp $4
	jp nz, Func_25c40
Func_25c3d: ; 25c3d (9:5c3d)
	call Func_24036
Func_25c40: ; 25c40 (9:5c40)
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_2639a
	read_hl_from_sp_plus $27
	ld de, $8
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $27
	ld de, $9
	add hl, de
	or [hl]
	jp z, Func_25c66
	jp Func_25c7e

Func_25c66: ; 25c66 (9:5c66)
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, sp+$2b
	ld a, [hl]
	call Func_25c81
	read_hl_from_sp_plus $2a
	ld de, $11
	add hl, de
	ld [hl], $0
Func_25c7e: ; 25c7e (9:5c7e)
	add sp, $2c
	ret

Func_25c81: ; 25c81 (9:5c81)
	push af
	push de
	add sp, -$54
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $58
	pop de
	ld bc, $4f
	call MemCopy
	read_hl_from_sp_plus $56
	ld de, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	read_hl_from_sp_plus $56
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $c
	read_hl_from_sp_plus $56
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop de
	push hl
	read_hl_from_sp_plus $56
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	ld c, l
	ld b, h
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_25cdc
	jp Func_25dd2

Func_25cdc: ; 25cdc (9:5cdc)
	pop hl
	push hl
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_25d05
	ld hl, $75
	add hl, bc
	ld a, [hl]
	cp $a
	jp z, Func_25d05
	ld hl, $6f
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	jp z, Func_25d08
Func_25d05: ; 25d05 (9:5d05)
	jp Func_25dd2

Func_25d08: ; 25d08 (9:5d08)
	pop hl
	push hl
	ld de, $67
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $e
	pop hl
	push hl
	ld de, $69
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $10
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld e, $81
	call Func_2478b
	push af
	ld a, $64
	call Func_24600
	pop bc
	cp b
	jp c, Func_25d3d
	jp Func_25dd2

Func_25d3d: ; 25d3d (9:5d3d)
	call GetHLAtSPPlus4
	ld e, l
	ld hl, sp+$10
	ld [hl], e
	call GetHLAtSPPlus4
	ld e, h
	ld hl, sp+$11
	ld [hl], e
	pop hl
	push hl
	ld de, $66
	add hl, de
	ld e, [hl]
	ld hl, sp+$12
	ld [hl], e
	pop hl
	push hl
	ld de, $6b
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $15
	pop hl
	push hl
	ld de, $6d
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus4
	ld de, $6d
	add hl, de
	ld de, $2
	call DividePointerByDESigned
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_25d94
	call GetHLAtSPPlus4
	ld de, $6d
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_25d94: ; 25d94 (9:5d94)
	call GetHLAtSPPlus4
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $2
	ld [hl], a
	inc hl
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, sp+$59
	ld a, [hl]
	xor $1
	call Func_2543f
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, sp+$59
	ld a, [hl]
	xor $1
	call Func_2570e
	call GetHLAtSPPlus4
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $fd
	ld [hl], a
	inc hl
	pop bc
	pop hl
	push hl
	ld de, $6d
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_25dd2: ; 25dd2 (9:5dd2)
	add sp, $58
	ret

Func_25dd5: ; 25dd5 (9:5dd5)
	push de
	ld hl, Text_24252
	call Func_24010
	pop hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $d
	add hl, de
	call Func_24010
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_240f1
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_24175
	call Func_24023
	call Func_24045
	ret

Func_25e07: ; 25e07 (9:5e07)
	push af
	add sp, -$12
	push de
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $13
	pop de
	push de
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $11
	pop de
	push de
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $f
	pop de
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $d
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	ld hl, sp+$8
	ld [hl], a
	ld hl, $d
	add hl, de
	ld a, [hl]
	ld hl, sp+$7
	ld [hl], a
	ld hl, $a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus7
	ld hl, sp+$4
	ld [hl], $0
	read_hl_from_sp_plus $d
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld hl, sp+$8
	ld a, [hl]
	and $f
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	cp $1
	jp z, Func_25e90
	ld hl, sp+$0
	ld a, [hl]
	cp $d
	jp nz, Func_25f9c
Func_25e90: ; 25e90 (9:5e90)
	read_hl_from_sp_plus $11
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $4
	jp nz, Func_25f99
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, Text_24071
	call Func_24010
	ld hl, Text_241ac
	call Func_24010
	ld hl, sp+$0
	ld a, [hl]
	cp $d
	jp nz, Func_25f12
	ld a, $64
	call Func_24600
	push af
	ld hl, sp+$9
	ld a, [hl]
	and $f
	ld e, a
	ld d, $0
	ld hl, Data_245d0
	add hl, de
	pop af
	cp [hl]
	jp nc, Func_25f12
	ld a, $64
	call Func_24600
	push af
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld b, $4
	call RightShiftHL
	ld bc, Data_245d0
	add hl, bc
	pop af
	cp [hl]
	jp nc, Func_25f0b
	ld hl, sp+$4
	ld [hl], $3
	read_hl_from_sp_plus $11
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	or $4
	ld [hl], a
	jp Func_25f0f

Func_25f0b: ; 25f0b (9:5f0b)
	ld hl, sp+$4
	ld [hl], $2
Func_25f0f: ; 25f0f (9:5f0f)
	jp Func_25f99

Func_25f12: ; 25f12 (9:5f12)
	ld hl, sp+$0
	ld a, [hl]
	cp $1
	jp nz, Func_25f99
	ld a, $64
	call Func_24600
	push af
	ld hl, sp+$9
	ld a, [hl]
	and $f
	ld e, a
	ld d, $0
	ld hl, Data_245d0
	add hl, de
	pop af
	cp [hl]
	jp nc, Func_25f99
	ld a, $64
	call Func_24600
	push af
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld b, $4
	call RightShiftHL
	ld bc, Data_245d0
	add hl, bc
	pop af
	cp [hl]
	jp nc, Func_25f95
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $1
	jp nc, Func_25f95
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld [hl], $1
	ld a, [hl]
	read_hl_from_sp_plus $d
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	ld b, $4
	call RightShiftHL
	ld bc, Data_245c8
	add hl, bc
	ld a, [hl]
	read_hl_from_sp_plus $11
	ld de, $74
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $11
	ld de, $73
	add hl, de
	ld [hl], $7
	ld hl, sp+$4
	ld [hl], $3
	jp Func_25f99

Func_25f95: ; 25f95 (9:5f95)
	ld hl, sp+$4
	ld [hl], $2
Func_25f99: ; 25f99 (9:5f99)
	jp Func_26265

Func_25f9c: ; 25f9c (9:5f9c)
	ld hl, sp+$0
	ld a, [hl]
	cp $a
	jp nz, Func_26008
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_26005
	read_hl_from_sp_plus $11
	ld de, $75
	add hl, de
	ld [hl], $a
	ld a, [hl]
	read_hl_from_sp_plus $d
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, sp+$1
	ld [hl], $64
	ld hl, sp+$4
	ld [hl], $5
	read_hl_from_sp_plus $11
	ld de, $74
	add hl, de
	ld [hl], $64
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, Text_241b9
	call Func_24010
	call Func_24045
	callba_hli Func_d767
	jp Func_26397

Func_26005: ; 26005 (9:6005)
	jp Func_26265

Func_26008: ; 26008 (9:6008)
	ld hl, sp+$0
	ld a, [hl]
	cp $d
	jp z, Func_261cc
	cp $c
	jp z, Func_261a8
	cp $b
	jp z, Func_26184
	cp $9
	jp z, Func_26160
	cp $8
	jp z, Func_2613c
	cp $7
	jp z, Func_26118
	cp $6
	jp z, Func_260f4
	cp $5
	jp z, Func_260d0
	cp $4
	jp z, Func_260ac
	cp $3
	jp z, Func_26088
	cp $2
	jp z, Func_2606b
	cp $1
	jp nz, Func_261ed
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $82
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_2606b: ; 2606b (9:606b)
	ld hl, sp+$3
	ld [hl], $64
	call GetHLAtSPPlus7
	ld e, $81
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_26088: ; 26088 (9:6088)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_260ac: ; 260ac (9:60ac)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_260d0: ; 260d0 (9:60d0)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_260f4: ; 260f4 (9:60f4)
	call GetHLAtSPPlus7
	ld e, $81
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $82
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_26118: ; 26118 (9:6118)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_2613c: ; 2613c (9:613c)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_26160: ; 26160 (9:6160)
	call GetHLAtSPPlus7
	ld e, $81
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_26184: ; 26184 (9:6184)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_261a8: ; 261a8 (9:61a8)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $80
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
	jp Func_261ed

Func_261cc: ; 261cc (9:61cc)
	call GetHLAtSPPlus7
	ld e, $83
	call Func_2478b
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $82
	call Func_2478b
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld e, $0
	call Func_2478b
	ld hl, sp+$1
	ld [hl], a
Func_261ed: ; 261ed (9:61ed)
	ld a, $64
	call Func_24600
	ld hl, sp+$3
	cp [hl]
	jp nc, Func_26265
	ld hl, sp+$4
	ld [hl], $1
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, Text_24071
	call Func_24010
	ld hl, sp+$13
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_2456b
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24010
	ld a, $64
	call Func_24600
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_26261
	read_hl_from_sp_plus $f
	ld de, $75
	add hl, de
	ld a, [hl]
	ld hl, sp+$0
	cp [hl]
	jp nc, Func_26261
	read_hl_from_sp_plus $f
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $4
	jp z, Func_2625a
	ld hl, sp+$4
	ld [hl], $4
	jp Func_2625e

Func_2625a: ; 2625a (9:625a)
	ld hl, sp+$4
	ld [hl], $5
Func_2625e: ; 2625e (9:625e)
	jp Func_26265

Func_26261: ; 26261 (9:6261)
	ld hl, sp+$4
	ld [hl], $2
Func_26265: ; 26265 (9:6265)
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_26397
	ld hl, sp+$4
	ld a, [hl]
	cp $5
	jp z, Func_262e0
	cp $4
	jp z, Func_262d1
	cp $3
	jp z, Func_26292
	cp $2
	jp nz, Func_26394
	ld hl, Text_24252
	call Func_24023
	ld hl, Text_241b2
	call Func_24010
	jp Func_26394

Func_26292: ; 26292 (9:6292)
	read_hl_from_sp_plus $d
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, Text_24257
	call Func_24010
	call Func_24045
	callba_hli Func_d767
	jp Func_26397

Func_262d1: ; 262d1 (9:62d1)
	ld hl, Text_24252
	call Func_24023
	ld hl, Text_2425f
	call Func_24010
	jp Func_26394

Func_262e0: ; 262e0 (9:62e0)
	call Func_24036
	read_hl_from_sp_plus $b
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_240ce
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, Text_241b9
	call Func_24010
	ld hl, sp+$0
	ld a, [hl]
	cp $b
	jp z, Func_2631e
	ld hl, sp+$0
	ld a, [hl]
	cp $c
	jp nz, Func_26346
Func_2631e: ; 2631e (9:631e)
	ld hl, sp+$0
	ld a, [hl]
	cp $b
	jp nz, Func_26336
	read_hl_from_sp_plus $f
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	or $2
	ld [hl], a
	jp Func_26343

Func_26336: ; 26336 (9:6336)
	read_hl_from_sp_plus $f
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	or $1
	ld [hl], a
Func_26343: ; 26343 (9:6343)
	jp Func_26380

Func_26346: ; 26346 (9:6346)
	ld hl, sp+$1
	ld a, [hl]
	read_hl_from_sp_plus $f
	ld de, $74
	add hl, de
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	read_hl_from_sp_plus $b
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	read_hl_from_sp_plus $f
	ld de, $75
	add hl, de
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	cp $2
	jp nz, Func_26380
	ld hl, sp+$7
	ld a, [hl]
	and $f0
	read_hl_from_sp_plus $f
	ld de, $73
	add hl, de
	ld [hl], a
Func_26380: ; 26380 (9:6380)
	call Func_24045
	callba_hli Func_d767
	jp Func_26397

Func_26394: ; 26394 (9:6394)
	call Func_24045
Func_26397: ; 26397 (9:6397)
	add sp, $14
	ret

Func_2639a: ; 2639a (9:639a)
	push af
	ld hl, $a
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld a, c
	or b
	jp nz, Func_263aa
	jp Func_263c9

Func_263aa: ; 263aa (9:63aa)
	ld hl, $c
	add hl, de
	ld [hl], c
	ld a, c
	ld hl, $d
	add hl, de
	ld [hl], b
	and $80
	jp nz, Func_263c3
	ld hl, sp+$1
	ld a, [hl]
	call Func_25e07
	jp Func_263c9

Func_263c3: ; 263c3 (9:63c3)
	ld hl, sp+$1
	ld a, [hl]
	call Func_26fe8
Func_263c9: ; 263c9 (9:63c9)
	pop bc
	ret

Func_263cb: ; 263cb (9:63cb)
	push af
	push bc
	push bc
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	pop de
	push hl
	ld hl, Text_24284
	call Func_24010
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_2644e
	ld hl, sp+$5
	ld c, [hl]
	ld b, $0
	pop hl
	push hl
	ld de, $8
	add hl, de
	add hl, bc
	ld a, [hl]
	and $1
	jp nz, Func_2644e
	ld a, $64
	call Func_24600
	push af
	call GetHLAtSPPlus6
	ld de, $69
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, $83
	call Func_2478b
	pop bc
	cp b
	jp c, Func_2644e
	ld hl, Text_24299
	call Func_24023
	ld hl, sp+$5
	ld a, [hl]
	add $2
	ld b, a
	ld a, $1
	call LeftShiftA
	pop hl
	push hl
	ld de, $7
	add hl, de
	or [hl]
	ld [hl], a
	ld hl, $1
	jp Func_26457

Func_2644e: ; 2644e (9:644e)
	ld hl, Text_2428c
	call Func_24023
	ld hl, $0
Func_26457: ; 26457 (9:6457)
	pop bc
	pop bc
	pop bc
	ret

Func_2645b: ; 2645b (9:645b)
	push af
	push bc
	push bc
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	pop de
	push hl
	ld hl, Text_24284
	call Func_24010
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_264de
	ld hl, sp+$5
	ld c, [hl]
	ld b, $0
	pop hl
	push hl
	ld de, $8
	add hl, de
	add hl, bc
	ld a, [hl]
	and $1
	jp nz, Func_264de
	ld a, $64
	call Func_24600
	push af
	call GetHLAtSPPlus6
	ld de, $69
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, $81
	call Func_2478b
	pop bc
	cp b
	jp c, Func_264de
	ld hl, Text_24299
	call Func_24023
	ld hl, sp+$5
	ld a, [hl]
	add $2
	ld b, a
	ld a, $1
	call LeftShiftA
	pop hl
	push hl
	ld de, $7
	add hl, de
	or [hl]
	ld [hl], a
	ld hl, $1
	jp Func_264e7

Func_264de: ; 264de (9:64de)
	ld hl, Text_2428c
	call Func_24023
	ld hl, $0
Func_264e7: ; 264e7 (9:64e7)
	pop bc
	pop bc
	pop bc
	ret

Func_264eb: ; 264eb
	ret

Func_264ec: ; 264ec
	ret

Data_264ed: ; 264ed
	dr $264ed, $264f1

Func_264f1: ; 264f1
	push af
	add sp, -$1e
	push de
	ld hl, $6
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $1f
	pop de
	push bc
	ld hl, $a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	reg16swap de, hl
	ld e, $83
	call Func_2478b
	ld hl, sp+$1e
	ld [hl], a
	pop hl
	ld b, $c
	call RightShiftHL
	ld a, l
	and $f
	ld c, a
	ld b, $0
	ld hl, sp+$1b
	ld [hl], c
	pop bc
	ld hl, $2c
	add hl, bc
	ld a, [hl]
	and $f
	ld e, a
	inc hl
	ld d, $0
	ld hl, sp+$18
	ld [hl], e
	ld a, $64
	call Func_24600
	ld hl, sp+$1a
	cp [hl]
	jp nc, Func_265cd
	ld hl, sp+$19
	ld a, [hl]
	ld hl, sp+$18
	cp [hl]
	jp z, Func_26570
	ld hl, sp+$19
	ld a, [hl]
	cp $d
	jp z, Func_26570
	ld hl, sp+$19
	ld a, [hl]
	cp $e
	jp nz, Func_265cd
	ld hl, sp+$18
	ld a, [hl]
	cp $a
	jp z, Func_26570
	ld hl, sp+$18
	ld a, [hl]
	cp $c
	jp nz, Func_265cd
Func_26570: ; 26570 (9:6570)
	ld hl, Text_2426b
	call Func_24010
	ld hl, Text_24313
	call Func_24023
	ld hl, sp+$14
	ld c, l
	ld b, h
	read_hl_from_sp_plus $1d
	ld de, $6d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, Data_264ed
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$14
	ld a, [hl]
	ld hl, sp+$15
	ld l, [hl]
	ld h, a
	ld c, l
	ld b, h
	ld e, c
	ld d, b
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_265a8
	ld bc, $1
Func_265a8: ; 265a8 (9:65a8)
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_24744
	ld hl, sp+$2
	call Func_24010
	call Func_24036
	pop de
	ld hl, sp+$1f
	ld a, [hl]
	xor $1
	call Func_24620
	ld hl, sp+$1f
	ld a, [hl]
	xor $1
	call Func_2466d
Func_265cd: ; 265cd (9:65cd)
	add sp, $20
	ret

Func_265d0: ; 265d0
	push af
	add sp, -$1c
	push de
	reg16swap de, hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $1e
	pop de
	ld hl, $a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	reg16swap de, hl
	ld e, $81
	call Func_2478b
	ld hl, sp+$1b
	ld [hl], a
	pop hl
	ld e, $80
	call Func_2478b
	ld hl, sp+$18
	ld [hl], a
	ld a, $64
	call Func_24600
	ld hl, sp+$19
	cp [hl]
	jp nc, Func_26672
	ld hl, Text_24413
	call Func_24010
	ld hl, sp+$14
	ld c, l
	ld b, h
	ld de, $64
	ld hl, sp+$18
	ld l, [hl]
	ld h, $0
	call Func_2617
	ld hl, sp+$14
	ld c, l
	ld b, h
	read_hl_from_sp_plus $1c
	ld de, $6d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$14
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$14
	ld a, [hl]
	ld hl, sp+$15
	ld l, [hl]
	ld h, a
	ld c, l
	ld b, h
	ld e, c
	ld d, b
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_26649
	ld bc, $1
Func_26649: ; 26649 (9:6649)
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_24744
	ld hl, sp+$2
	call Func_24023
	ld hl, Text_2441f
	call Func_24010
	call Func_24036
	pop de
	ld hl, sp+$1d
	ld a, [hl]
	call Func_24620
	ld c, l
	ld b, h
	ld hl, sp+$1d
	ld a, [hl]
	call Func_2466d
Func_26672: ; 26672 (9:6672)
	add sp, $1e
	ret

Func_26675: ; 26675 (9:6675)
	push af
	push bc
	push bc
	push bc
	push bc
	push bc
	push de
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $b
	pop de
	push de
	push bc
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $b
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	call WriteHLToSPPlus9
	ld e, $b
	ld hl, sp+$f
	ld a, [hl]
	xor $1
	call Func_2465a
	pop bc
	push bc
	ld hl, $d
	add hl, bc
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_24326
	call Func_24023
	call Func_24045
	pop bc
	ld hl, $18
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	call GetHLAtSPPlus5
	reg16swap de, hl
	ld hl, sp+$d
	ld a, [hl]
	call Func_24620
	pop de
	ld hl, $a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, $81
	call Func_2478b
	ld hl, sp+$0
	ld [hl], a
	ld a, $64
	call Func_24600
	ld hl, sp+$0
	cp [hl]
	jp c, Func_2671a
	call GetHLAtSPPlus9
	ld de, $18
	add hl, de
	ld a, [hl]
	dec a
	inc hl
	or [hl]
	jp nz, Func_267a8
Func_2671a: ; 2671a (9:671a)
	call GetHLAtSPPlus9
	ld de, $d
	add hl, de
	call Func_24010
	call GetHLAtSPPlus7
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $4
	jp z, Func_26759
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_2411d
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_240c6
	call Func_24010
	ld hl, Text_2406d
	call Func_24010
	ld hl, Text_24185
	call Func_24010
	jp Func_267a5

Func_26759: ; 26759 (9:6759)
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_242a1
	call Func_24023
	ld e, $b
	ld hl, sp+$b
	ld a, [hl]
	call Func_2465a
	call GetHLAtSPPlus3
	push hl
	read_hl_from_sp_plus $b
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_26796
	call GetHLAtSPPlus9
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	dec hl
	call WriteHLToSPPlus3
Func_26796: ; 26796 (9:6796)
	call GetHLAtSPPlus3
	reg16swap de, hl
	ld hl, sp+$b
	ld a, [hl]
	xor $1
	call Func_24620
Func_267a5: ; 267a5 (9:67a5)
	jp Func_267be

Func_267a8: ; 267a8 (9:67a8)
	ld hl, Text_24252
	call Func_24010
	call GetHLAtSPPlus9
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_241d9
	call Func_24023
Func_267be: ; 267be (9:67be)
	ld hl, sp+$b
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus5
	ld de, $8
	add hl, de
	add hl, bc
	ld a, $4
	or [hl]
	ld [hl], a
	set_farcall_addrs_hli Func_dd47
	ld hl, sp+$b
	ld a, [hl]
	call FarCall
	call GetHLAtSPPlus9
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_26816
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	ld a, l
	xor $1
	ld c, a
	ld b, h
	call GetHLAtSPPlus5
	ld de, $8
	add hl, de
	add hl, bc
	ld a, $4
	or [hl]
	ld [hl], a
	set_farcall_addrs_hli Func_dd47
	ld hl, sp+$b
	ld a, [hl]
	xor $1
	call FarCall
Func_26816: ; 26816 (9:6816)
	call Func_24045
	add sp, $c
	ret

Func_2681c: ; 2681c
	ret

Func_2681d: ; 2681d
	push af
	push bc
	push bc
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop de
	push de
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	pop de
	ld hl, $a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, $81
	call Func_2478b
	push af
	ld a, $64
	call Func_24600
	pop bc
	cp b
	jp c, Func_2685a
	jp Func_268a2

Func_2685a: ; 2685a (9:685a)
	pop hl
	push hl
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $4
	jp z, Func_26879
	ld hl, Text_2442a
	call Func_24010
	ld hl, Text_2442e
	call Func_24023
	call Func_24045
	jp Func_268a2

Func_26879: ; 26879 (9:6879)
	ld hl, Text_2443f
	call Func_24010
	ld hl, Text_2444b
	call Func_24023
	call Func_24045
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$5
	ld a, [hl]
	xor $1
	call Func_24620
	ld hl, sp+$5
	ld a, [hl]
	xor $1
	call Func_2466d
Func_268a2: ; 268a2 (9:68a2)
	pop bc
	pop bc
	pop bc
	ret

Func_268a6: ; 268a6
	ret

Func_268a7: ; 268a7
	ret

Func_268a8: ; 268a8 (9:68a8)
	push af
	set_farcall_addrs_hli Func_5d184
	pop af
	call FarCall
	ret

Func_268b9: ; 268b9
	push af
	add sp, -$1a
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $1b
	pop de
	push de
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $19
	pop de
	ld hl, $a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, $81
	call Func_2478b
	push af
	ld a, $64
	call Func_24600
	pop bc
	cp b
	jp c, Func_268f8
	jp Func_269f4

Func_268f8: ; 268f8 (9:68f8)
	read_hl_from_sp_plus $17
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	jp z, Func_26915
	jp Func_269f4

Func_26915: ; 26915 (9:6915)
	ld c, $0
	ld hl, sp+$14
	ld [hl], c
Func_2691a: ; 2691a (9:691a)
	ld a, c
	cp $3
	jp nc, Func_26972
	read_hl_from_sp_plus $17
	ld de, $71
	add hl, de
	ld a, [hl]
	and $8
	jp nz, Func_2695c
	read_hl_from_sp_plus $17
	ld de, $71
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld b, c
	ld hl, $1
	call LeftShiftHL
	ld a, e
	and l
	ld l, a
	ld a, d
	and h
	ld h, a
	ld a, l
	or h
	jp nz, Func_2695c
	read_hl_from_sp_plus $17
	ld de, $23
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_2695f
Func_2695c: ; 2695c (9:695c)
	jp Func_2696e

Func_2695f: ; 2695f (9:695f)
	ld hl, sp+$14
	ld a, [hl]
	inc a
	ld hl, sp+$14
	ld [hl], a
	dec a
	ld e, a
	ld d, $0
	ld hl, sp+$11
	add hl, de
	ld [hl], c
Func_2696e: ; 2696e (9:696e)
	inc c
	jp Func_2691a

Func_26972: ; 26972 (9:6972)
	ld hl, sp+$14
	ld a, [hl]
	or a
	jp nz, Func_2697c
	jp Func_269f4

Func_2697c: ; 2697c (9:697c)
	ld hl, sp+$14
	ld a, [hl]
	call Func_24600
	ld hl, sp+$14
	ld [hl], a
	ld hl, sp+$14
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $17
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call Func_248f
	read_hl_from_sp_plus $19
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_2406f
	call Func_24010
	ld hl, Text_24065
	call Func_24010
	ld hl, sp+$0
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_24486
	call Func_24023
	call Func_24045
	ld hl, sp+$14
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	ld b, [hl]
	ld hl, $1
	call LeftShiftHL
	push hl
	read_hl_from_sp_plus $19
	ld de, $71
	add hl, de
	pop de
	ld a, [hl]
	or e
	ld [hl], a
	inc hl
	ld a, [hl]
	or d
	ld [hl], a
	ld hl, sp+$1b
	ld a, [hl]
	xor $1
	call Func_268a8
Func_269f4: ; 269f4 (9:69f4)
	add sp, $1c
	ret

Func_269f7: ; 269f7
	push af
	push bc
	push bc
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop de
	push de
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	pop de
	ld hl, $a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, $81
	call Func_2478b
	push af
	ld a, $64
	call Func_24600
	pop bc
	cp b
	jp c, Func_26a34
	jp Func_26a8a

Func_26a34: ; 26a34 (9:6a34)
	pop hl
	push hl
	ld de, $71
	add hl, de
	ld a, [hl]
	and $8
	jp z, Func_26a43
	jp Func_26a8a

Func_26a43: ; 26a43 (9:6a43)
	pop hl
	push hl
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	jp z, Func_26a5e
	jp Func_26a8a

Func_26a5e: ; 26a5e (9:6a5e)
	call GetHLAtSPPlus4
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_2445d
	call Func_24010
	ld hl, Text_24468
	call Func_24023
	call Func_24045
	pop hl
	push hl
	ld de, $71
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
	ld hl, sp+$5
	ld a, [hl]
	xor $1
	call Func_268a8
Func_26a8a: ; 26a8a (9:6a8a)
	pop bc
	pop bc
	pop bc
	ret

Func_26a8e: ; 26a8e
	push af
	push bc
	push bc
	push bc
	push bc
	push de
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	pop de
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	pop de
	push de
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop de
	ld hl, $a
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	pop hl
	push hl
	ld e, $80
	call Func_2478b
	push af
	ld a, $64
	call Func_24600
	pop bc
	cp b
	jp c, Func_26adf
	jp Func_26ba4

Func_26adf: ; 26adf (9:6adf)
	call GetHLAtSPPlus4
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	jp z, Func_26afb
	jp Func_26ba4

Func_26afb: ; 26afb (9:6afb)
	call GetHLAtSPPlus4
	ld de, $71
	add hl, de
	ld a, [hl]
	and $8
	jp nz, Func_26b15
	call GetHLAtSPPlus4
	ld de, $71
	add hl, de
	ld a, [hl]
	and $f0
	jp z, Func_26b18
Func_26b15: ; 26b15 (9:6b15)
	jp Func_26ba4

Func_26b18: ; 26b18 (9:6b18)
	pop hl
	push hl
	ld l, h
	ld h, $0
	ld a, l
	and $f
	ld l, a
	ld h, $0
	ld a, l
	push af
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	call GetHLAtSPPlus8
	ld de, $71
	add hl, de
	pop de
	ld a, [hl]
	or e
	ld [hl], a
	inc hl
	ld a, [hl]
	or d
	ld [hl], a
	call GetHLAtSPPlus10
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_24065
	call Func_24010
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_2406f
	call Func_24010
	pop af
	cp $1
	jp z, Func_26b85
	cp $c
	jp z, Func_26b80
	cp $b
	jp z, Func_26b7b
	cp $a
	jp nz, Func_26b87
	xor a
	jp Func_26b87

Func_26b7b: ; 26b7b (9:6b7b)
	ld a, $1
	jp Func_26b87

Func_26b80: ; 26b80 (9:6b80)
	ld a, $2
	jp Func_26b87

Func_26b85: ; 26b85 (9:6b85)
	ld a, $3
Func_26b87: ; 26b87 (9:6b87)
	ld l, a
	ld h, $0
	add hl, hl
	ld de, $44d2
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	call Func_24045
	ld hl, sp+$9
	ld a, [hl]
	xor $1
	call Func_268a8
Func_26ba4: ; 26ba4 (9:6ba4)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_26baa: ; 26baa
	ret

Func_26bab: ; 26bab (9:6bab)
	add sp, -$14
	push af
	reg16swap de, hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	ld hl, sp+$4
	reg16swap de, hl
	ld a, $1e
	call Func_24759
	ld hl, sp+$4
	call Func_24010
	ld hl, Text_24275
	call Func_24023
	ld hl, Text_2406d
	call Func_24010
	pop bc
	push bc
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $6d
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call Func_24744
	ld hl, sp+$4
	call Func_24010
	ld hl, Text_24160
	call Func_24010
	call Func_24045
	pop bc
	pop af
	ld hl, $6d
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_24632
	add sp, $14
	ret

Func_26c02: ; 26c02 (9:6c02)
	add sp, -$1c
	push af
	push de
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $20
	pop hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $69
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$18
	push hl
	reg16swap de, hl
	ld e, $81
	call Func_2478b
	ld l, a
	ld h, $0
	ld de, $64
	pop bc
	call Func_2617
	ld hl, sp+$18
	ld c, l
	ld b, h
	read_hl_from_sp_plus $1e
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$18
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$18
	ld a, [hl]
	ld hl, sp+$19
	ld l, [hl]
	ld h, a
	write_hl_to_sp_plus $18
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_26c6a
	ld hl, $1
	write_hl_to_sp_plus $18
Func_26c6a: ; 26c6a (9:6c6a)
	read_hl_from_sp_plus $18
	ld de, $4
	call DivideHLByDESigned
	inc hl
	ld a, l
	call Func_24600
	ld l, a
	ld h, $0
	push hl
	read_hl_from_sp_plus $1a
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $4
	call DivideHLByDESigned
	pop de
	add hl, de
	inc hl
	write_hl_to_sp_plus $18
	ld hl, sp+$2
	reg16swap de, hl
	ld a, $1f
	call Func_24759
	ld hl, sp+$2
	call Func_24010
	ld hl, Text_24275
	call Func_24023
	ld hl, Text_2406d
	call Func_24010
	ld hl, sp+$2
	push hl
	read_hl_from_sp_plus $1a
	pop de
	call Func_24744
	ld hl, sp+$2
	call Func_24010
	ld hl, Text_24160
	call Func_24010
	call Func_24045
	pop af
	read_hl_from_sp_plus $16
	reg16swap de, hl
	call Func_24632
	add sp, $1c
	ret

Func_26cd6: ; 26cd6
	push bc
	push bc
	push de
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	pop hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus6
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	pop bc
	push bc
	ld hl, $69
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, d
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld de, $4122
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24023
	ld hl, Text_2406d
	call Func_24010
	ld hl, Text_24160
	call Func_24010
	call Func_24045
	pop af
	pop bc
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $76
	add hl, bc
	add hl, de
	pop de
	push hl
	call GetHLAtSPPlus4
	ld de, $25
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, $a
	call DivideHLByDESigned
	ld c, l
	ld b, h
	pop hl
	push hl
	inc hl
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	ld d, [hl]
	dec hl
	ld e, [hl]
	reg16swap de, hl
	ld de, $3e8
	call CompareHLtoDE
	jp c, Func_26d7c
	pop hl
	push hl
	inc hl
	ld de, $3e8
	ld [hl], e
	inc hl
	ld [hl], d
Func_26d7c: ; 26d7c (9:6d7c)
	pop bc
	pop bc
	ret

Func_26d7f: ; 26d7f
	ret

Func_26d80: ; 26d80
	ret

Func_26d81: ; 26d81
	push af
	push bc
	reg16swap de, hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_26dd4
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp nz, Func_26dd4
	pop hl
	push hl
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $8
	jp nz, Func_26dd4
	ld a, $64
	call Func_24600
	cp $46
	jp nc, Func_26dd4
	callba_hli Func_222b7
	pop hl
	push hl
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	or $8
	ld [hl], a
Func_26dd4: ; 26dd4 (9:6dd4)
	pop bc
	pop bc
	ret

Data_26dd7: ; 26dd7
	db $0

Func_26dd8: ; 26dd8
	push af
	push bc
	push bc
	push bc
	push de
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus7
	pop de
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	pop hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$0
	ld a, [$6dd7]
	ld [hl], a
	ld hl, $69
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, $81
	call Func_2478b
	push af
	ld a, $64
	call Func_24600
	pop bc
	cp b
	jp c, Func_26e1e
	jp Func_26edb

Func_26e1e: ; 26e1e (9:6e1e)
	ld hl, sp+$7
	ld a, [hl]
	or a
	jp z, Func_26e28
	jp Func_26edb

Func_26e28: ; 26e28 (9:6e28)
	call GetHLAtSPPlus5
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_244e3
	call Func_24010
	call GetHLAtSPPlus3
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_244e6
	call Func_24010
	ld hl, Text_244e8
	call Func_24023
	call GetHLAtSPPlus3
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_244f2
	call Func_24010
	call GetHLAtSPPlus3
	ld de, $2c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$2
	call Func_24023
	xor a
	pop de
Func_26e70: ; 26e70 (9:6e70)
	cp $4
	jp nc, Func_26ea8
	push de
	push af
	ld l, e
	ld h, d
	add a
	add a
	ld b, a
	call RightShiftHL
	ld a, l
	and $f
	ld l, a
	ld h, $0
	ld a, l
	or a
	jp z, Func_26ea2
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Pointers_242f2 - 2
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call Func_24010
	ld hl, Text_24065
	call Func_24010
Func_26ea2: ; 26ea2 (9:6ea2)
	pop af
	inc a
	pop de
	jp Func_26e70

Func_26ea8: ; 26ea8 (9:6ea8)
	ld hl, Text_244fe
	call Func_24023
	ld hl, Text_24507
	call Func_24023
	ld a, $1
	call Func_24054
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, $1
	or [hl]
	ld [hl], a
	callba_hli Func_d767
Func_26edb: ; 26edb (9:6edb)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_26ee0: ; 26ee0
	call Func_263cb
	ld a, h
	call Func_24045
	ret

Func_26ee8: ; 26ee8
	push af
	add sp, -$18
	push de
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $1a
	pop de
	push de
	ld hl, $6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $18
	pop de
	ld hl, sp+$19
	ld a, [hl]
	call Func_2645b
	ld c, l
	ld b, h
	ld a, c
	or a
	jp z, Func_26fa4
	ld hl, sp+$19
	ld a, [hl]
	cp $1
	jp z, Func_26fa4
	read_hl_from_sp_plus $16
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $18
	ld de, $13
	add hl, de
	ld e, [hl]
	ld d, $0
	pop hl
	call MultiplyHLbyDE
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld e, c
	ld d, b
	ld hl, 9990
	call CompareHLtoDE
	jp c, Func_26f50
	inc b
	dec b
	bit 7, b
	jr z, asm_26f53
Func_26f50: ; 26f50 (9:6f50)
	ld bc, 9990
asm_26f53
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	call Func_24744
	read_hl_from_sp_plus $1a
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24520
	call Func_24010
	read_hl_from_sp_plus $18
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24523
	call Func_24010
	ld hl, sp+$2
	call Func_24023
	ld hl, Text_24526
	call Func_24010
	pop bc
	push hl
	push hl
	ld l, c
	ld h, b
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_26f9b
	dec bc
.asm_26f9b
	push bc
	push hl
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
Func_26fa4: ; 26fa4 (9:6fa4)
	call Func_24045
	add sp, $1a
	ret

Func_26faa: ; 26faa
	ret

Func_26fab: ; 26fab
	ret

Func_26fac: ; 26fac
	ret

Func_26fad: ; 26fad
	ret

Func_26fae: ; 26fae
	ret

Func_26faf: ; 26faf
	ret

Pointers_26fb0: ; 26fb0
	dw Func_264eb
	dw Func_264ec
	dw Func_264f1
	dw Func_265d0
	dw Func_26675
	dw Func_2681c
	dw Func_2681d
	dw Func_268a6
	dw Func_268a7
	dw Func_268b9
	dw Func_269f7
	dw Func_26a8e
	dw Func_26baa
	dw Func_26bab
	dw Func_26c02
	dw Func_26cd6
	dw Func_26d7f
	dw Func_26d80
	dw Func_26d81
	dw Func_26dd8
	dw Func_26ee0
	dw Func_26ee8
	dw Func_26faa
	dw Func_26fab
	dw Func_26fac
	dw Func_26fad
	dw Func_26fae
	dw Func_26faf

Func_26fe8: ; 26fe8 (9:6fe8)
	push af
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld c, l
	ld b, h
	push bc
	call Func_24001
	ld hl, .Return
	push hl
	call GetHLAtSPPlus8
	ld de, $c
	add hl, de
	ld a, [hl]
	and $7f
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Pointers_26fb0 - 17 * 2
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus10
	reg16swap de, hl
	ld hl, sp+$b
	ld a, [hl]
	ret

.Return
	pop bc
	pop de
	ld hl, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_27046
	ld hl, $7
	add hl, bc
	ld a, $1
	or [hl]
	ld [hl], a
Func_27046: ; 27046 (9:7046)
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	ld hl, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_27060
	ld hl, $7
	add hl, bc
	ld a, $2
	or [hl]
	ld [hl], a
Func_27060: ; 27060 (9:7060)
	pop bc
	pop bc
	ret

Func_27063: ; 27063 (9:7063)
	push af
	push de
	add sp, -$54
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $54
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	write_hl_to_sp_plus $52
	ld hl, sp+$4f
	ld [hl], $1
	ld c, $0
	push bc
	ld hl, sp+$59
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus4
	ld hl, sp+$59
	ld l, [hl]
	ld h, $0
	ld a, l
	xor $1
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus6
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$5b
	ld a, [hl]
	or a
	jp nz, Func_270f3
	ld hl, $0
	jp Func_270f6

Func_270f3: ; 270f3 (9:70f3)
	ld hl, $1
Func_270f6: ; 270f6 (9:70f6)
	ld de, $2f
	call MultiplyHLbyDE
	pop de
	add hl, de
	call WriteHLToSPPlus8
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$5b
	ld a, [hl]
	or a
	jp nz, Func_2711b
	ld hl, $1
	jp Func_2711e

Func_2711b: ; 2711b (9:711b)
	ld hl, $0
Func_2711e: ; 2711e (9:711e)
	ld de, $2f
	call MultiplyHLbyDE
	pop de
	add hl, de
	call WriteHLToSPPlus10
	ld hl, sp+$13
	ld [hl], $0
	call Func_24001
	pop bc
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $fd
	jp nz, Func_27187
	ld hl, $195
	write_hl_to_sp_plus $c
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, sp+$57
	ld a, [hl]
	call Func_26675
	read_hl_from_sp_plus $54
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_2716a
	read_hl_from_sp_plus $52
	ld de, $7
	add hl, de
	ld a, $1
	or [hl]
	ld [hl], a
Func_2716a: ; 2716a (9:716a)
	read_hl_from_sp_plus $54
	ld de, $47
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_27184
	read_hl_from_sp_plus $52
	ld de, $7
	add hl, de
	ld a, $2
	or [hl]
	ld [hl], a
Func_27184: ; 27184 (9:7184)
	jp Func_272ed

Func_27187: ; 27187 (9:7187)
	pop hl
	push hl
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_2720f
	pop hl
	push hl
	ld de, $5f
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_2720f
	push bc
	call GetHLAtSPPlus8
	ld de, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$14
	call Func_241f
	pop bc
	read_hl_from_sp_plus $27
	ld a, l
	and $80
	jp z, Func_271c1
	read_hl_from_sp_plus $27
	ld a, l
	and $7f
	ld l, a
	ld h, $0
	ld c, l
Func_271c1: ; 271c1 (9:71c1)
	push bc
	ld a, c
	cp $27
	jp nz, Func_271e5
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24539
	call Func_24010
	ld hl, Text_2453c
	call Func_24023
	call Func_24036
	ld hl, sp+$51
	ld [hl], $3
Func_271e5: ; 271e5 (9:71e5)
	pop bc
	ld a, c
	cp $28
	jp nz, Func_2720c
	ld hl, sp+$54
	ld a, [hl]
	or a
	jp nz, Func_2720c
	call GetHLAtSPPlus6
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_2454d
	call Func_24010
	ld hl, Text_24550
	call Func_24023
	call Func_24036
Func_2720c: ; 2720c (9:720c)
	jp Func_27250

Func_2720f: ; 2720f (9:720f)
	pop hl
	push hl
	ld de, $69
	add hl, de
	ld a, [hl]
	and $80
	jp z, Func_27229
	pop hl
	push hl
	ld de, $69
	add hl, de
	ld a, [hl]
	and $7f
	ld e, a
	inc hl
	ld d, $0
	ld c, e
Func_27229: ; 27229 (9:7229)
	ld a, c
	cp $19
	jp nz, Func_27250
	ld hl, sp+$57
	ld a, [hl]
	or a
	jp nz, Func_27250
	read_hl_from_sp_plus $54
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_2447a
	call Func_24010
	call Func_24036
Func_27250: ; 27250 (9:7250)
	ld c, $0
Func_27252: ; 27252 (9:7252)
	ld a, c
	ld hl, sp+$4f
	cp [hl]
	jp nc, Func_272ed
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$59
	ld a, [hl]
	call Func_256a3
	ld hl, sp+$50
	ld [hl], a
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$59
	ld a, [hl]
	call Func_2543f
	call GetHLAtSPPlus4
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $8
	jp nz, Func_272a4
	ld hl, sp+$50
	ld a, [hl]
	or a
	jp z, Func_27298
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$59
	ld a, [hl]
	call Func_2570e
	jp Func_272a4

Func_27298: ; 27298 (9:7298)
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$59
	ld a, [hl]
	call Func_25dd5
Func_272a4: ; 272a4 (9:72a4)
	read_hl_from_sp_plus $56
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_272be
	read_hl_from_sp_plus $54
	ld de, $7
	add hl, de
	ld a, $1
	or [hl]
	ld [hl], a
Func_272be: ; 272be (9:72be)
	read_hl_from_sp_plus $56
	ld de, $47
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_272d8
	read_hl_from_sp_plus $54
	ld de, $7
	add hl, de
	ld a, $2
	or [hl]
	ld [hl], a
Func_272d8: ; 272d8 (9:72d8)
	pop bc
	read_hl_from_sp_plus $52
	ld de, $7
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_272e9
	jp Func_272ed

Func_272e9: ; 272e9 (9:72e9)
	inc c
	jp Func_27252

Func_272ed: ; 272ed (9:72ed)
	add sp, $58
	ret

Func_272f0: ; 272f0 (9:72f0)
	push af
	push de
	add sp, -$10
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	call WriteHLToSPPlus7
	call Func_24001
	ld hl, sp+$10
	ld a, [hl]
	or a
	jp nz, Func_2747e
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$15
	ld a, [hl]
	or a
	jp nz, Func_2732b
	ld hl, $0
	jp Func_2732e

Func_2732b: ; 2732b (9:732b)
	ld hl, $1
Func_2732e: ; 2732e (9:732e)
	ld de, $2f
	call MultiplyHLbyDE
	pop de
	add hl, de
	write_hl_to_sp_plus $f
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$15
	ld a, [hl]
	or a
	jp nz, Func_27354
	ld hl, $1
	jp Func_27357

Func_27354: ; 27354 (9:7354)
	ld hl, $0
Func_27357: ; 27357 (9:7357)
	ld de, $2f
	call MultiplyHLbyDE
	pop de
	add hl, de
	write_hl_to_sp_plus $d
	ld hl, sp+$13
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $b
	ld hl, sp+$13
	ld l, [hl]
	ld h, $0
	ld a, l
	xor $1
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus9
	read_hl_from_sp_plus $d
	ld de, $13
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $f
	ld de, $13
	add hl, de
	cp [hl]
	jp nc, Func_273c6
	ld hl, sp+$4
	ld [hl], $46
	jp Func_273f7

Func_273c6: ; 273c6 (9:73c6)
	ld hl, sp+$0
	ld c, l
	ld b, h
	read_hl_from_sp_plus $d
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	read_hl_from_sp_plus $11
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	pop de
	call Func_2617
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld de, $46
	ld hl, sp+$0
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$1
	ld a, [hl]
	ld hl, sp+$4
	ld [hl], a
Func_273f7: ; 273f7 (9:73f7)
	read_hl_from_sp_plus $b
	ld de, $64
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus9
	ld de, $64
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call CompareHLtoBC
	jp nc, Func_2741e
	ld hl, sp+$4
	ld a, [hl]
	add $1e
	ld hl, sp+$4
	ld [hl], a
	jp Func_27455

Func_2741e: ; 2741e (9:741e)
	ld hl, sp+$0
	ld c, l
	ld b, h
	call GetHLAtSPPlus9
	ld de, $64
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $d
	ld de, $64
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld de, $1e
	ld hl, sp+$0
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$4
	ld a, [hl]
	ld hl, sp+$1
	add [hl]
	ld hl, sp+$4
	ld [hl], a
Func_27455: ; 27455 (9:7455)
	ld hl, sp+$4
	ld a, [hl]
	cp $5b
	jp c, Func_27467
	ld a, $a
	call Func_24600
	add $5a
	ld hl, sp+$4
	ld [hl], a
Func_27467: ; 27467 (9:7467)
	read_hl_from_sp_plus $f
	ld de, $d
	add hl, de
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_24284
	call Func_24023
Func_2747e: ; 2747e (9:747e)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_274ce
	ld hl, sp+$10
	ld a, [hl]
	or a
	jp nz, Func_274b1
	ld hl, sp+$13
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus7
	ld de, $8
	add hl, de
	add hl, bc
	ld a, [hl]
	and $1
	jp nz, Func_274ce
	ld a, $64
	call Func_24600
	ld hl, sp+$4
	cp [hl]
	jp nc, Func_274ce
Func_274b1: ; 274b1 (9:74b1)
	ld hl, Text_24299
	call Func_24023
	ld hl, sp+$13
	ld a, [hl]
	add $2
	ld b, a
	ld a, $1
	call LeftShiftA
	call GetHLAtSPPlus7
	ld de, $7
	add hl, de
	or [hl]
	ld [hl], a
	jp Func_274d4

Func_274ce: ; 274ce (9:74ce)
	ld hl, Text_2428c
	call Func_24023
Func_274d4: ; 274d4 (9:74d4)
	call Func_24045
	add sp, $14
	ret

Func_274da: ; 274da (9:74da)
	add sp, -$22
	push af
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $68
	add hl, de
	pop de
	push hl
	push de
	dec e
	ld hl, sp+$6
	call Func_24bb
	call Func_24001
	pop de
	pop hl
	pop af
	push de
	push af
	or a
	jp nz, Func_27516
	set_farcall_addrs_hli Func_c812
	ld hl, sp+$11
	call FarCall
	jp Func_2752c

Func_27516: ; 27516 (9:7516)
	push hl
	set_farcall_addrs_hli Func_7b0d
	pop hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$11
	call FarCall
Func_2752c: ; 2752c (9:752c)
	ld hl, sp+$11
	call Func_24010
	ld hl, Text_24069
	call Func_24010
	ld hl, sp+$4
	call Func_24023
	ld hl, Text_24071
	call Func_24010
	ld hl, Text_241e6
	call Func_24010
	call Func_24045
	pop af
	pop de
	or a
	jp nz, Func_27566
	push de
	set_farcall_addrs_hli Func_5a149
	pop de
	ld a, e
	ld e, $1
	ld c, $1
	call FarCall
Func_27566: ; 27566 (9:7566)
	add sp, $22
	ret

Func_27569: ; 27569 (9:7569)
	call Func_274da
	callba_hli Func_228d3
	ret

Func_2757b: ; 2757b
	push af
	push de
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$7
	ld a, [hl]
	or a
	jp nz, Func_27598
	ld hl, $0
	jp Func_2759b

Func_27598: ; 27598 (9:7598)
	ld hl, $2f
Func_2759b: ; 2759b (9:759b)
	add hl, de
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	reg16swap de, hl
	push de
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus4
	pop de
	ld hl, $7
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_275e7
	ld hl, $7
	add hl, de
	ld a, [hl]
	jp Func_2774b

Func_275e7: ; 275e7 (9:75e7)
	push de
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $7
	jp nz, Func_2762e
	call GetHLAtSPPlus4
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_2761e
	call Func_24001
	call GetHLAtSPPlus6
	ld de, $d
	add hl, de
	call Func_24023
	ld hl, Text_24069
	call Func_24010
	ld hl, Text_243de
	call Func_24023
	call Func_24036
Func_2761e: ; 2761e (9:761e)
	call GetHLAtSPPlus4
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $2
	jp z, Func_2762e
	jp Func_27745

Func_2762e: ; 2762e (9:762e)
	call GetHLAtSPPlus4
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $3
	jp z, Func_2773d
	cp $1
	jp z, Func_2773a
	cp $2
	jp z, Func_276c2
	cp $fd
	jp z, Func_276b6
	cp $fe
	jp z, Func_276b6
	or a
	jp nz, Func_27745
	ld hl, sp+$9
	ld a, [hl]
	or a
	jp nz, Func_276b6
	call GetHLAtSPPlus4
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	jp nz, Func_276b6
	call GetHLAtSPPlus4
	ld de, $5f
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	push hl
	call GetHLAtSPPlus6
	ld de, $26
	add hl, de
	pop de
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus6
	ld de, $1c
	add hl, de
	ld a, [hl]
	sub c
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc b
	ld [hl], a
	call GetHLAtSPPlus6
	ld de, $1c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc d
	dec d
	bit 7, d
	jr z, Func_276b6
	call GetHLAtSPPlus6
	ld de, $1c
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_276b6: ; 276b6 (9:76b6)
	ld hl, sp+$6
	ld e, [hl]
	ld hl, sp+$9
	ld a, [hl]
	call Func_27063
	jp Func_27745

Func_276c2: ; 276c2 (9:76c2)
	call GetHLAtSPPlus4
	ld de, $5f
	add hl, de
	ld c, [hl]
	ld a, c
	cp $4f
	jp z, Func_276f6
	cp $4e
	jp z, Func_276f6
	cp $4d
	jp z, Func_276f6
	cp $4c
	jp z, Func_276f6
	cp $48
	jp nz, Func_27700
	ld e, c
	ld hl, sp+$9
	ld a, [hl]
	call Func_274da
	ld e, $1
	ld hl, sp+$9
	ld a, [hl]
	call Func_272f0
	jp Func_27737

Func_276f6: ; 276f6 (9:76f6)
	ld e, c
	ld hl, sp+$9
	ld a, [hl]
	call Func_27569
	jp Func_27737

Func_27700: ; 27700 (9:7700)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_27737
	ld hl, sp+$9
	ld a, [hl]
	cp $1
	jp nz, Func_27737
	ld a, c
	cp $2f
	jp c, Func_27737
	ld a, c
	cp $33
	jp nc, Func_27737
	ld e, c
	ld hl, sp+$9
	ld a, [hl]
	call Func_274da
	callba_hli Func_22e03
Func_27737: ; 27737 (9:7737)
	jp Func_27745

Func_2773a: ; 2773a (9:773a)
	jp Func_27745

Func_2773d: ; 2773d (9:773d)
	ld e, $0
	ld hl, sp+$9
	ld a, [hl]
	call Func_272f0
Func_27745: ; 27745 (9:7745)
	pop de
	ld hl, $7
	add hl, de
	ld a, [hl]
Func_2774b: ; 2774b (9:774b)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_27750: ; 27750 (9:7750)
	push bc
	call Func_24c0b
	or a
	jp z, Func_2775b
	jp Func_27780

Func_2775b: ; 2775b (9:775b)
	call Func_25430
	ld hl, sp+$0
	ld [hl], a
	ld e, $0
	ld hl, sp+$0
	ld a, [hl]
	call Func_2757b
	or a
	jp nz, Func_27780
	ld e, $1
	ld hl, sp+$0
	ld a, [hl]
	xor $1
	call Func_2757b
	or a
	jp nz, Func_27780
	push af
	call Func_251d1
	pop af
Func_27780: ; 27780 (9:7780)
	pop bc
	ret

SECTION "Bank 0c", ROMX [$4000], BANK [$c]
Func_30000: ; 30000
	ret

Data_30001: ; 30001
	dr $30001, $30020

Data_30020: ; 30020
	dr $30020, $3002f

Data_3002f: ; 3002f
	dr $3002f, $3004e

Data_3004e: ; 3004e
	dr $3004e, $3005d

Data_3005d: ; 3005d
	dr $3005d, $3007c

Data_3007c: ; 3007c
	dr $3007c, $3008b

Data_3008b: ; 3008b
	dr $3008b, $300aa

Data_300aa: ; 300aa
	dr $300aa, $300b9

Data_300b9: ; 300b9
	dr $300b9, $300d8

Data_300d8: ; 300d8
	dr $300d8, $300e7

Data_300e7: ; 300e7
	dr $300e7, $30106

Data_30106: ; 30106
	dr $30106, $30115

Data_30115: ; 30115
	dr $30115, $30142

Data_30142: ; 30142
	dr $30142, $30151

Data_30151: ; 30151
	dr $30151, $301bd

Data_301bd: ; 301bd
	dr $301bd, $30223

Data_30223: ; 30223
	dr $30223, $30283

SECTION "Bank 0c part 2", ROMX [$4289], BANK [$c]
Func_30289: ; 30289 (c:4289)
	push af
	push de
	push bc
	read_hl_from_sp_plus $c
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld d, h
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call BackUpTileMapRectangle
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $c
	add hl, bc
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld d, h
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call BackUpAttrMapRectangle
	pop bc
	pop bc
	pop bc
	ret

Func_302ce: ; 302ce (c:42ce)
	push af
	push de
	push bc
	read_hl_from_sp_plus $c
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld d, h
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call RestoreTileMapRectangle
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $c
	add hl, bc
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld d, h
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call RestoreAttrMapRectangle
	pop bc
	pop bc
	pop bc
	ret

Func_30313: ; 30313 (c:4313)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_30328: ; 30328
	ld a, $f
	ld [wc2f8], a
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	call Func_30348
	ld hl, -1
	ret

Func_30348:: ; 30348 (c:4348)
	push af
	push bc
	push bc
	push bc
	push bc
	ld a, [wSystemType]
	cp $11
	jp nz, Func_3035a
	ld a, $2
	ld [wc39a], a
Func_3035a: ; 3035a (c:435a)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, sp+$9
	ld a, [hl]
	cp $5
	jp z, Func_3038d
	cp $4
	jp z, Func_30384
	cp $3
	jp nz, Func_30393
Func_30384: ; 30384 (c:4384)
	ld hl, sp+$9
	ld a, [hl]
	call Func_3318e
	jp Func_3058a

Func_3038d: ; 3038d (c:438d)
	call Func_3312f
	jp Func_3058a

Func_30393: ; 30393 (c:4393)
	ld hl, sp+$7
	ld [hl], $0
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	reg16swap de, hl
	push de
	ld hl, $5a
	call FarCall
	pop de
	push de
	push hl
	push de
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_30289
	pop bc
	pop bc
	pop hl
	pop de
	push hl
	push de
	push hl
	ld l, $3
	push hl
	ld c, $f
	ld e, $0
	ld a, $5
	call Func_30289
	pop bc
	pop bc
	set_farcall_addrs_hli Func_da901
	ld de, $f03
	ld hl, $500
	call FarCall
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli Func_da901
	ld de, $1405
	ld hl, $d
	call FarCall
	write_hl_to_sp_plus $d
	set_farcall_addrs_hli Func_93370
	ld hl, sp+$6
	call FarCall
	ld hl, sp+$9
	ld a, [hl]
	ld b, $2
	call DivideAbyB
	ld [wc7bd], a
	ld a, $ff
	ld a, [wc7bd]
	cp $c
	jp nc, Func_30454
	ld hl, wc7bd
	ld l, [hl]
	ld h, $0
	ld de, wc7b1
	add hl, de
	ld a, [hl]
	cp $15
	jp nz, Func_30443
	ld a, $1
	ld [wc38d], a
	jp Func_30454

Func_30443: ; 30443 (c:4443)
	cp $17
	jp nz, Func_30450
	ld a, $2
	ld [wc38d], a
	jp Func_30454

Func_30450: ; 30450 (c:4450)
	xor a
	ld [wc38d], a
Func_30454: ; 30454 (c:4454)
	ld hl, sp+$d
	ld a, [hl]
	call Func_30590
	reg16swap de, hl
	ld hl, sp+$d
	ld [hl], $1
	ld a, e
	or d
	jp nz, Func_304c2
	ld hl, sp+$f
	ld a, [hl]
	call Func_32822
	cp $1
	jp nz, Func_3047a
	ld a, $1
	call Func_3304d
	jp Func_30519

Func_3047a: ; 3047a (c:447a)
	set_farcall_addrs_hli Func_da901
	ld de, $140a
	ld hl, $2
	call FarCall
	push hl
	ld hl, sp+$11
	ld a, [hl]
	or a
	jp nz, Func_3049d
	xor a
	call Func_3321d
	jp Func_304b0

Func_3049d: ; 3049d (c:449d)
	ld hl, sp+$11
	ld a, [hl]
	cp $1
	jp nz, Func_304ac
	xor a
	call Func_332ab
	jp Func_304b0

Func_304ac: ; 304ac (c:44ac)
	xor a
	call Func_33339
Func_304b0: ; 304b0 (c:44b0)
	set_farcall_addrs_hli Func_daa40
	pop hl
	call FarCall
	jp Func_30516

Func_304c2: ; 304c2 (c:44c2)
	ld a, e
	dec a
	or d
	jp nz, Func_30513
	set_farcall_addrs_hli Func_da901
	ld de, $140a
	ld hl, $2
	call FarCall
	push hl
	ld hl, sp+$11
	ld a, [hl]
	or a
	jp nz, Func_304ec
	ld a, $1
	call Func_3321d
	jp Func_30501

Func_304ec: ; 304ec (c:44ec)
	ld hl, sp+$11
	ld a, [hl]
	cp $1
	jp nz, Func_304fc
	ld a, $1
	call Func_332ab
	jp Func_30501

Func_304fc: ; 304fc (c:44fc)
	ld a, $1
	call Func_33339
Func_30501: ; 30501 (c:4501)
	set_farcall_addrs_hli Func_daa40
	pop hl
	call FarCall
	jp Func_30516

Func_30513: ; 30513 (c:4513)
	jp Func_30519

Func_30516: ; 30516 (c:4516)
	jp Func_30454

Func_30519: ; 30519 (c:4519)
	ld a, $6
	call Func_3304d
	ld a, $2
	ld [wc39a], a
	pop bc
	pop de
	push bc
	push de
	push de
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_302ce
	pop bc
	pop bc
	pop de
	pop bc
	pop hl
	push hl
	push de
	push bc
	push hl
	ld l, $3
	push hl
	ld c, $f
	ld e, $0
	ld a, $5
	call Func_302ce
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_daa40
	pop hl
	call FarCall
	set_farcall_addrs_hli Func_daa40
	read_hl_from_sp_plus $b
	call FarCall
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop hl
	call FarCall
Func_3058a: ; 3058a (c:458a)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_30590: ; 30590 (c:4590)
	push bc
	push bc
	push af
	ld c, $3
	ld e, $f
	ld hl, $500
	call Func_30313
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	push hl
	push hl
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call AdjustMoney
	pop bc
	pop bc
	ld hl, sp+$6
	call PutLongFromStackToHL
	ld de, Data_3064a
	ld hl, $601
	call PlaceStringDEatCoordHL
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_319be
	pop bc
	pop bc
	pop af
	or a
	jp nz, Func_305eb
	ld de, Data_30653
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_3065c
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_305f4

Func_305eb: ; 305eb (c:45eb)
	ld de, Data_30667
	ld hl, $10e
	call PlaceStringDEatCoordHL
Func_305f4: ; 305f4 (c:45f4)
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_da901
	ld de, $505
	ld hl, $0
	call FarCall
	push hl
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_30142)
	ld de, Data_30142
	ld hl, Data_30115
	call FarCall
	reg16swap de, hl
	push de
	set_farcall_addrs_hli Func_daa40
	pop de
	pop hl
	push de
	call FarCall
	pop hl
	pop bc
	pop bc
	ret

Data_3064a: ; 3064a
	db "(しょしﾞきん)", $0

Data_30653: ; 30653
	db "(いらっしゃい)", $0

Data_3065c: ; 3065c
	db "(ようけんはなに)?", $0

Data_30667: ; 30667
	db "(ほかにも ようかﾞある)?", $0

Func_30676: ; 30676 (c:4676)
	push bc
	push bc
	push bc
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	ld a, [hl]
	ld hl, sp+$1
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	inc hl
	ld l, [hl]
	push hl
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	call GetHLAtSPPlus10
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	read_hl_from_sp_plus $c
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	read_hl_from_sp_plus $e
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$8
	ld [hl], e
	add $fe
	ld b, $2
	call DivideAbyB
	ld hl, sp+$b
	ld [hl], a
	pop bc
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_306db
	ld hl, sp+$9
	ld [hl], c
Func_306db: ; 306db (c:46db)
	ld hl, sp+$9
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $c
	ld de, $9
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	pop af
	pop hl
	push bc
	ld c, a
	ld e, l
	ld hl, sp+$4
	ld a, [hl]
	ld hl, sp+$3
	ld l, [hl]
	ld h, a
	call Func_30313
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld hl, sp+$4
	ld a, [hl]
	add $2
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
	pop bc
	ld hl, sp+$0
	ld a, [hl]
	cp $37
	jp z, Func_30772
	cp $35
	jp z, Func_3075b
	cp $33
	jp nz, Func_30786
	ld a, [wSaveScratchca6c]
	cp $1
	jp nc, Func_30758
	ld a, e
	ld e, $0
	call Func_30869
	ld hl, -1
	jp Func_30865

Func_30758: ; 30758 (c:4758)
	jp Func_30786

Func_3075b: ; 3075b (c:475b)
	ld a, [wc9a2]
	cp $1
	jp nc, Func_3076f
	ld a, e
	ld e, $1
	call Func_30869
	ld hl, -1
	jp Func_30865

Func_3076f: ; 3076f (c:476f)
	jp Func_30786

Func_30772: ; 30772 (c:4772)
	ld a, [wc9b7]
	cp $1
	jp nc, Func_30786
	ld a, e
	ld e, $2
	call Func_30869
	ld hl, -1
	jp Func_30865

Func_30786: ; 30786 (c:4786)
	push de
	xor a
Func_30788: ; 30788 (c:4788)
	ld hl, sp+$5
	cp [hl]
	jp nc, Func_307bf
	push bc
	push af
	ld hl, sp+$6
	ld l, [hl]
	push hl
	ld l, a
	ld h, $0
	add hl, bc
	ld c, l
	ld hl, sp+$9
	ld e, [hl]
	ld hl, sp+$a
	ld a, [hl]
	call Func_308da
	pop bc
	pop af
	pop bc
	push bc
	push af
	ld hl, sp+$6
	ld e, [hl]
	ld l, a
	ld h, $0
	add hl, bc
	call Func_30dfd
	ld hl, sp+$7
	ld a, [hl]
	add $2
	ld hl, sp+$7
	ld [hl], a
	pop af
	inc a
	pop bc
	jp Func_30788

Func_307bf: ; 307bf (c:47bf)
	pop de
	push bc
	ld a, e
	call GetSRAMBank
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus8
	call FarCall
	ld hl, sp+$2
	ld a, [hl]
	cp $37
	jp z, Func_307fe
	cp $35
	jp z, Func_307fe
	cp $33
	jp z, Func_307fe
	cp $36
	jp z, Func_307f7
	cp $34
	jp z, Func_307f7
	cp $32
	jp nz, Func_30803
Func_307f7: ; 307f7 (c:47f7)
	xor a
	call Func_30ff8
	jp Func_30803

Func_307fe: ; 307fe (c:47fe)
	ld a, $1
	call Func_30ff8
Func_30803: ; 30803 (c:4803)
	pop bc
	ld hl, sp+$0
	ld a, [hl]
	cp $32
	jp nz, Func_30851
	push bc
	ld c, $3
	ld e, $14
	ld hl, $b
	call Func_30313
	set_farcall_addrs_hli Func_61133
	pop bc
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	push hl
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30151
	add hl, de
	pop de
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $a8
	add hl, de
	reg16swap de, hl
	ld hl, $10c
	call FarCall
Func_30851: ; 30851 (c:4851)
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
Func_30865: ; 30865 (c:4865)
	pop bc
	pop bc
	pop bc
	ret

Func_30869: ; 30869 (c:4869)
	push de
	push af
	ld a, $2
	ld [wc39a], a
	pop af
	call GetSRAMBank
	pop de
	ld a, e
	cp $2
	jp z, Func_3089c
	cp $1
	jp z, Func_30890
	or a
	jp nz, Func_308a5
	ld de, Data_308c0
	ld hl, $203
	call PlaceStringDEatCoordHL
	jp Func_308a5

Func_30890: ; 30890 (c:4890)
	ld de, Data_308c9
	ld hl, $203
	call PlaceStringDEatCoordHL
	jp Func_308a5

Func_3089c: ; 3089c (c:489c)
	ld de, Data_308d1
	ld hl, $203
	call PlaceStringDEatCoordHL
Func_308a5: ; 308a5 (c:48a5)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli WaitAorBButtonOverworld_17a44
	ret

Data_308c0: ; 308c0
	db "アイテム(なし)", $0

Data_308c9: ; 308c9
	db "ソフト(なし)", $0

Data_308d1: ; 308d1
	db "ハﾟーツ(なし)", $0

Func_308da: ; 308da (c:48da)
	push bc
	add sp, -$1e
	push af
	push de
	ld hl, sp+$26
	ld a, [hl]
	cp $3a
	jp z, Func_309a9
	cp $37
	jp z, Func_309a9
	cp $36
	jp z, Func_3097b
	cp $39
	jp z, Func_30963
	cp $35
	jp z, Func_30963
	cp $34
	jp z, Func_30935
	cp $38
	jp z, Func_3091d
	cp $33
	jp z, Func_3091d
	cp $32
	jp nz, Func_309be
	ld hl, sp+$26
	ld c, [hl]
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call Func_30d85
	jp Func_309be

Func_3091d: ; 3091d (c:491d)
	set_farcall_addrs_hli Func_55ed2
	ld c, $0
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_309be

Func_30935: ; 30935 (c:4935)
	ld hl, sp+$22
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_301bd
	add hl, de
	add hl, bc
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_5601b
	pop af
	ld e, a
	ld hl, sp+$4
	ld c, $3
	call FarCall
	jp Func_309be

Func_30963: ; 30963 (c:4963)
	set_farcall_addrs_hli Func_5601b
	ld c, $4
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	jp Func_309be

Func_3097b: ; 3097b (c:497b)
	ld hl, sp+$22
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30223
	add hl, de
	add hl, bc
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_55f95
	pop af
	ld e, a
	ld hl, sp+$4
	ld c, $2
	call FarCall
	jp Func_309be

Func_309a9: ; 309a9 (c:49a9)
	set_farcall_addrs_hli Func_55f95
	ld c, $0
	ld hl, sp+$22
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
Func_309be: ; 309be (c:49be)
	set_farcall_addrs_hli Func_16019
	pop de
	pop af
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld d, $0
	ld l, a
	ld h, $0
	call FarCall
	add sp, $20
	ret

Func_309da: ; 309da
	push hl
	add sp, -$10
	ld hl, sp+$10
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push de
	push hl
	ld hl, sp+$6
	ld [hl], $0
	pop hl
	write_hl_to_sp_plus $13
	read_hl_from_sp_plus $13
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $13
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $11
	read_hl_from_sp_plus $13
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $f
	read_hl_from_sp_plus $13
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$a
	ld [hl], a
	read_hl_from_sp_plus $13
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$9
	ld [hl], a
	read_hl_from_sp_plus $13
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$8
	ld [hl], a
	read_hl_from_sp_plus $13
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$7
	ld [hl], a
	read_hl_from_sp_plus $13
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$5
	ld [hl], e
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $15
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_30a85
	read_hl_from_sp_plus $13
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $11
Func_30a85: ; 30a85 (c:4a85)
	ld hl, sp+$6
	ld a, [hSRAMBank]
	ld [hl], a
	read_hl_from_sp_plus $13
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop de
	ld a, e
	dec a
	or d
	jp z, Func_30acb
	ld a, e
	or d
	jp nz, Func_30b1e
	dec bc
	inc b
	dec b
	bit 7, b
	jr z, .asm_30ac8
	ld bc, $0
	read_hl_from_sp_plus $d
	dec hl
	write_hl_to_sp_plus $d
	inc h
	dec h
	bit 7, h
	jr z, .asm_30ac4
	ld hl, $0
	write_hl_to_sp_plus $d
	jp .asm_30ac8

.asm_30ac4
	ld hl, sp+$2
	ld [hl], $1
.asm_30ac8
	jp Func_30b1e

Func_30acb: ; 30acb (c:4acb)
	read_hl_from_sp_plus $f
	reg16swap de, hl
	inc bc
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp c, Func_30b1e
	read_hl_from_sp_plus $f
	dec hl
	ld c, l
	ld b, h
	read_hl_from_sp_plus $d
	inc hl
	write_hl_to_sp_plus $d
	read_hl_from_sp_plus $f
	push hl
	read_hl_from_sp_plus $f
	pop de
	add hl, de
	push hl
	read_hl_from_sp_plus $13
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_30b1a
	read_hl_from_sp_plus $d
	dec hl
	write_hl_to_sp_plus $d
	jp Func_30b1e

Func_30b1a: ; 30b1a (c:4b1a)
	ld hl, sp+$2
	ld [hl], $2
Func_30b1e: ; 30b1e (c:4b1e)
	push bc
	read_hl_from_sp_plus $13
	inc hl
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $f
	push hl
	read_hl_from_sp_plus $15
	ld de, $5
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_30c4d
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, de
	dec hl
	dec hl
	push hl
	ld hl, sp+$a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	ld l, [hl]
	ld h, $0
	add hl, de
	ld h, l
	ld l, $0
	dec h
	dec h
	pop de
	add hl, de
	call Coord2TileMap
	call WriteHLToSPPlus4
	set_farcall_addrs_hli Func_17ef7
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld c, a
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	dec de
	dec de
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	dec h
	dec h
	dec h
	add hl, de
	push hl
	ld hl, sp+$b
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	pop de
	call FarCall
	ld a, $3
	call GetSRAMBank
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp nz, Func_30bd3
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $11
	ld c, l
	ld hl, sp+$b
	ld a, [hl]
	inc a
	ld e, a
	ld hl, sp+$c
	ld a, [hl]
	add $2
	call Func_308da
	pop bc
	read_hl_from_sp_plus $f
	write_hl_to_sp_plus $d
	call GetHLAtSPPlus4
	ld [hl], $8a
	jp Func_30c2c

Func_30bd3: ; 30bd3 (c:4bd3)
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $13
	push hl
	read_hl_from_sp_plus $13
	pop de
	add hl, de
	dec hl
	push hl
	ld hl, sp+$d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $15
	add hl, hl
	add hl, bc
	dec hl
	ld e, l
	ld hl, sp+$e
	ld a, [hl]
	add $2
	pop bc
	call Func_308da
	pop bc
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $11
	pop de
	add hl, de
	dec hl
	write_hl_to_sp_plus $d
	read_hl_from_sp_plus $13
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $11
	pop de
	add hl, de
	call CompareHLtoBC
	jp c, Func_30c2c
	call GetHLAtSPPlus4
	ld [hl], $8f
Func_30c2c: ; 30c2c (c:4c2c)
	ld hl, sp+$6
	ld a, [hl]
	call GetSRAMBank
	ld hl, sp+$5
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $f
	pop de
	call Func_30dfd
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	jp Func_30c5f

Func_30c4d: ; 30c4d (c:4c4d)
	set_farcall_addrs_hli Func_17863
	read_hl_from_sp_plus $13
	call FarCall
Func_30c5f: ; 30c5f (c:4c5f)
	pop bc
	ld hl, sp+$3
	ld a, [hl]
	cp $32
	jp nz, Func_30ca7
	push bc
	ld c, $3
	ld e, $14
	ld hl, $b
	call Func_30313
	set_farcall_addrs_hli Func_61133
	pop bc
	read_hl_from_sp_plus $d
	add hl, bc
	push hl
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30151
	add hl, de
	pop de
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $a8
	add hl, de
	reg16swap de, hl
	ld hl, $10c
	call FarCall
Func_30ca7: ; 30ca7 (c:4ca7)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $12
	reg16swap de, hl
	ret

Func_30cc1: ; 30cc1
	push bc
	push bc
	ld c, l
	ld b, h
	push bc
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, $9
	add hl, bc
	ld a, [hl]
	ld hl, sp+$4
	ld [hl], a
	ld hl, $7
	add hl, bc
	ld c, [hl]
	push bc
	ld hl, sp+$6
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	add hl, bc
	call WriteHLToSPPlus6
	pop bc
	call GetHLAtSPPlus4
	push hl
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_30d16
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	call WriteHLToSPPlus4
Func_30d16: ; 30d16 (c:4d16)
	pop bc
	push bc
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli Func_30676
	pop hl
	call FarCall
	pop bc
	pop bc
	ret

Func_30d44: ; 30d44
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $9
	add hl, bc
	ld a, e
	sub [hl]
	ld e, a
	inc hl
	ld a, d
	sbc [hl]
	ld d, a
	inc d
	dec d
	bit 7, d
	jr z, .asm_30d61
	ld de, $0
.asm_30d61
	push bc
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli Func_30676
	pop hl
	call FarCall
	ret

Func_30d85: ; 30d85 (c:4d85)
	push hl
	push de
	ld a, c
	cp $32
	jp nz, Func_30da7
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30151
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	jp Func_30db2

Func_30da7: ; 30da7 (c:4da7)
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	dec a
Func_30db2: ; 30db2 (c:4db2)
	push af
	set_farcall_addrs_hli Func_15ad6
	pop af
	call GetHLAtSPPlus4
	push hl
	ld l, a
	ld h, $0
	ld de, $400
	add hl, de
	pop de
	ld c, $a
	call FarCall
	call GetHLAtSPPlus4
	call FindFirstNonzero
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	add hl, bc
	call WriteHLToSPPlus4
Func_30ddf: ; 30ddf (c:4ddf)
	ld l, c
	ld h, b
	ld de, $9
	call CompareHLtoDE
	jp nc, Func_30df7
	call GetHLAtSPPlus4
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus4
	inc bc
	jp Func_30ddf

Func_30df7: ; 30df7 (c:4df7)
	call GetHLAtSPPlus4
	pop bc
	pop bc
	ret

Func_30dfd: ; 30dfd (c:4dfd)
	push hl
	add sp, -$36
	push bc
	push de
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop de
	pop bc
	push af
	ld a, e
	cp $3a
	jp z, Func_30fae
	cp $37
	jp z, Func_30fae
	cp $36
	jp z, Func_30f5d
	cp $39
	jp z, Func_30ea5
	cp $35
	jp z, Func_30ea5
	cp $34
	jp z, Func_30ea5
	cp $32
	jp nz, Func_30fe0
	read_hl_from_sp_plus $3a
	push hl
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30151
	add hl, de
	pop de
	add hl, de
	ld a, [hl]
	dec a
	ld c, a
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $57c5
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2b
	ld bc, $d
	call FarCopyVideoData
	read_hl_from_sp_plus $38
	ld a, [wc38d]
	cp $1
	jp nz, Func_30e86
	ld de, $2
	call DivideHLByDESigned
	jp Func_30e8f

Func_30e86: ; 30e86 (c:4e86)
	ld a, [wc38d]
	cp $2
	jp nz, Func_30e8f
	add hl, hl
Func_30e8f: ; 30e8f (c:4e8f)
	ld c, l
	ld b, h
	ld de, $4
	ld hl, -1
	call Func_2230
	ld hl, Data_30fe7
	push hl
	call PlaceString
	pop bc
	jp Func_30fe0

Func_30ea5: ; 30ea5 (c:4ea5)
	push de
	ld a, e
	cp $39
	jp z, Func_30ed2
	cp $35
	jp z, Func_30ed2
	cp $34
	jp nz, Func_30edd
	read_hl_from_sp_plus $3c
	push hl
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_301bd
	add hl, de
	pop de
	add hl, de
	ld a, [hl]
	dec a
	ld c, a
	jp Func_30edd

Func_30ed2: ; 30ed2 (c:4ed2)
	read_hl_from_sp_plus $3c
	ld de, wc98e
	add hl, de
	ld a, [hl]
	dec a
	ld c, a
Func_30edd: ; 30edd (c:4edd)
	push bc
	ld a, c
	and $3f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $4093
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1e
	ld bc, $11
	call FarCopyVideoData
	pop bc
	read_hl_from_sp_plus $2c
	reg16swap de, hl
	ld l, c
	ld h, $0
	ld b, $6
	call RightShiftHL
	inc hl
	call MultiplyHLbyDE
	pop de
	ld a, e
	cp $39
	jp z, Func_30f1c
	cp $35
	jp nz, Func_30f25
Func_30f1c: ; 30f1c (c:4f1c)
	ld de, $2
	call DivideHLByDESigned
	jp Func_30f3f

Func_30f25: ; 30f25 (c:4f25)
	ld a, [wc38d]
	cp $1
	jp nz, Func_30f36
	ld de, $2
	call DivideHLByDESigned
	jp Func_30f3f

Func_30f36: ; 30f36 (c:4f36)
	ld a, [wc38d]
	cp $2
	jp nz, Func_30f3f
	add hl, hl
Func_30f3f: ; 30f3f (c:4f3f)
	push hl
	ld hl, Data_30fea
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, $5
	ld hl, -1
	call Func_2230
	ld hl, Data_30fef
	push hl
	call PlaceString
	pop bc
	jp Func_30fe0

Func_30f5d: ; 30f5d (c:4f5d)
	read_hl_from_sp_plus $3a
	push hl
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30223
	add hl, de
	pop de
	add hl, de
	ld c, [hl]
	ld e, c
	ld hl, sp+$2
	call Func_241f
	read_hl_from_sp_plus $19
	ld a, [wc38d]
	cp $1
	jp nz, Func_30f8f
	ld de, $2
	call DivideHLByDESigned
	jp Func_30f98

Func_30f8f: ; 30f8f (c:4f8f)
	ld a, [wc38d]
	cp $2
	jp nz, Func_30f98
	add hl, hl
Func_30f98: ; 30f98 (c:4f98)
	ld c, l
	ld b, h
	ld de, $5
	ld hl, -1
	call Func_2230
	ld hl, Data_30ff1
	push hl
	call PlaceString
	pop bc
	jp Func_30fe0

Func_30fae: ; 30fae (c:4fae)
	read_hl_from_sp_plus $3a
	ld de, wc9a3
	add hl, de
	ld c, [hl]
	ld e, c
	ld hl, sp+$2
	call Func_241f
	read_hl_from_sp_plus $19
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld de, $5
	ld hl, -1
	call Func_2230
	ld hl, Data_30ff5
	push hl
	call PlaceString
	pop bc
Func_30fe0: ; 30fe0 (c:4fe0)
	pop af
	call GetSRAMBank
	add sp, $38
	ret

Data_30fe7: ; 30fe7
	db "0G", $0

Data_30fea: ; 30fea
	db "    ", $0

Data_30fef: ; 30fef
	db "G", $0

Data_30ff1: ; 30ff1
	db "00G", $0

Data_30ff5: ; 30ff5
	db "0G", $0

Func_30ff8: ; 30ff8 (c:4ff8)
	push af
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld e, $14
	ld a, $d
	call SetStringStartState
	pop af
	or a
	jp nz, Func_3101b
	ld de, Data_31025
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_31024

Func_3101b: ; 3101b (c:501b)
	ld de, Data_3102f
	ld hl, $10e
	call PlaceStringDEatCoordHL
Func_31024: ; 31024 (c:5024)
	ret

Data_31025: ; 31025
	db "(なにを かう)?", $0

Data_3102f: ; 3102f
	db "(なにを うってくれる)?", $0

Func_3103d: ; 3103d
	push hl
	add sp, -$3c
	read_hl_from_sp_plus $3e
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	push hl
	ld hl, $d
	add hl, bc
	ld a, [hl]
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop af
	pop hl
	cp $33
	jp nz, Func_31154
	push hl
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop hl
	push af
	ld e, l
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	dec a
	ld hl, sp+$3c
	ld [hl], a
	ld hl, sp+$3c
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $57c5
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2b
	ld bc, $d
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	read_hl_from_sp_plus $36
	ld a, l
	or h
	jp nz, Func_310d5
	ld a, $7
	call Func_3304d
	ld hl, $8000
	jp Func_31299

Func_310d5: ; 310d5 (c:50d5)
	read_hl_from_sp_plus $36
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_310e3
	dec bc
.asm_310e3
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $5
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$3a
	call PutLongFromStackToHL
	set_farcall_addrs_hli Func_14db8
	read_hl_from_sp_plus $3e
	call FarCall
	ld a, [wc2f6]
	cp $ff
	jp z, Func_31116
	ld a, [wc2f6]
	or a
	jp nz, Func_3111c
Func_31116: ; 31116 (c:5116)
	ld hl, $8000
	jp Func_31299

Func_3111c: ; 3111c (c:511c)
	read_hl_from_sp_plus $36
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_3112a
	dec bc
.asm_3112a
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $5
	push hl
	call MultiplyLongsFromStack
	ld hl, wc2f6
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_31147
	dec bc
.asm_31147
	push bc
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$3a
	call PutLongFromStackToHL
	jp Func_3122e

Func_31154: ; 31154 (c:5154)
	push hl
	push af
	set_farcall_addrs_hli GetBanks
	ld de, BANK(Data_64093)
	ld a, $3
	call FarCall
	ld e, a
	pop af
	pop hl
	push de
	cp $37
	jp z, Func_311e9
	cp $35
	jp nz, Func_31229
	ld e, l
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld a, [hl]
	dec a
	ld hl, sp+$3c
	ld [hl], a
	ld hl, sp+$3c
	ld a, [hl]
	and $3f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_64093
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1a
	ld bc, $11
	call FarCopyVideoData
	read_hl_from_sp_plus $2a
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_311b0
	dec bc
.asm_311b0
	push bc
	push hl
	ld hl, sp+$40
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_311c1
	dec bc
.asm_311c1
	push bc
	push hl
	ld b, $6
	call RightShiftLongFromStack
	ld hl, $0
	push hl
	ld hl, $1
	push hl
	call AddLongsFromStack
	call MultiplyLongsFromStack
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	call StackDivideLongSigned
	ld hl, sp+$3c
	call PutLongFromStackToHL
	jp Func_31229

Func_311e9: ; 311e9 (c:51e9)
	ld e, l
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld e, [hl]
	ld hl, sp+$3c
	ld [hl], e
	ld hl, sp+$3c
	ld e, [hl]
	ld hl, sp+$2
	call Func_241f
	read_hl_from_sp_plus $19
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_3120a
	dec bc
.asm_3120a
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$3c
	call PutLongFromStackToHL
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$3c
	call DivideLongSigned
Func_31229: ; 31229 (c:5229)
	pop de
	ld a, e
	call GetSRAMBank
Func_3122e: ; 3122e (c:522e)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld hl, sp+$36
	call PutLongFromHLOnStack
	ld a, $1
	call Func_314da
	pop bc
	pop bc
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$36
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call CompareStackLongs
	jp nz, Func_31277
	callba_hli WaitAorBButtonOverworld_17a44
	ld hl, $8000
	jp Func_31299

Func_31277: ; 31277 (c:5277)
	ld hl, sp+$36
	call PutLongFromHLOnStack
	read_hl_from_sp_plus $42
	ld c, l
	ld b, h
	ld hl, sp+$3e
	ld e, [hl]
	ld a, $1
	call Func_31539
	pop bc
	pop bc
	or a
	jp nz, Func_31296
	ld hl, $8000
	jp Func_31299

Func_31296: ; 31296 (c:5296)
	ld hl, -1
Func_31299: ; 31299 (c:5299)
	reg16swap de, hl
	add sp, $3e
	reg16swap de, hl
	ret

Func_312a4: ; 312a4
	push af
	push bc
	add sp, -$12
	ld a, e
	cp $32
	jp nz, Func_312c7
	ld hl, sp+$15
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30151
	add hl, de
	add hl, bc
	ld l, [hl]
	ld h, $0
	dec hl
Func_312c7: ; 312c7 (c:52c7)
	push hl
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop hl
	push af
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $57c5
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $d
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	ld c, $4
	ld e, $9
	ld hl, $b0d
	call Func_30313
	read_hl_from_sp_plus $d
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_31312
	dec bc
.asm_31312
	push bc
	push hl
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_31323
	dec bc
.asm_31323
	push bc
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$11
	call PutLongFromStackToHL
	ld a, [wc38d]
	cp $1
	jp nz, Func_31345
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$11
	call DivideLongSigned
	jp Func_3135a

Func_31345: ; 31345 (c:5345)
	ld a, [wc38d]
	cp $2
	jp nz, Func_3135a
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$11
	call MultiplyLongs
Func_3135a: ; 3135a (c:535a)
	ld de, Data_31435
	ld hl, $d0e
	call PlaceStringDEatCoordHL
	ld e, $f
	ld a, $c
	call SetStringStartState
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call CompareStackLongs
	jp nz, Func_3138f
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, Data_3143c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31432

Func_3138f: ; 3138f (c:538f)
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $a
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_313b4
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, Data_31446
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31432

Func_313b4: ; 313b4 (c:53b4)
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_313d9
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, Data_31450
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31432

Func_313d9: ; 313d9 (c:53d9)
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $3e8
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_313fe
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, Data_31459
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31432

Func_313fe: ; 313fe (c:53fe)
	ld hl, sp+$d
.asm_313ff
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $2710
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_31423
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, $5461
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31432

Func_31423: ; 31423 (c:5423)
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, Data_31468
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
Func_31432: ; 31432 (c:5432)
	add sp, $16
	ret

Data_31435: ; 31435
	db "(ねたﾞん)", $0

Data_3143c: ; 3143c
	db "     "
	TX_UNUM
	db "G", $0

Data_31446: ; 31446
	db "    "
	TX_UNUM
	db "0G", $0

Data_31450: ; 31450
	db "   "
	TX_UNUM
	db "0G", $0

Data_31459: ; 31459
	db "  "
	TX_UNUM
	db "0G", $0

Data_31461: ; 31461
	db " "
	TX_UNUM
	db "0G", $0

Data_31468: ; 31468
	TX_UNUM
	db "0G", $0

Func_31475: ; 31475
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_667d
	ld bc, $8e02
	ld de, $1311
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ret

Func_3149e: ; 3149e
	push de
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	pop af
	push hl
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $57c5
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld e, c
	ld d, b
	ld bc, $d
	call FarCopyVideoData
	pop hl
	ld a, l
	call GetSRAMBank
	pop bc
	ret

Func_314da: ; 314da (c:54da)
	push af
	ld e, $e
	ld a, $1
	call SetStringStartState
	ld hl, sp+$4
	call PutLongFromHLOnStack
	ld hl, Data_31515
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld de, Data_3151a
	ld hl, -1
	call PlaceStringDEatCoordHL
	pop af
	or a
	jp nz, Func_3150b
	ld de, Data_31522
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_31514

Func_3150b: ; 3150b (c:550b)
	ld de, Data_31530
	ld hl, $110
	call PlaceStringDEatCoordHL
Func_31514: ; 31514 (c:5514)
	ret

Data_31515: ; 31515
	TX_UNUM
	db "G", $0

Data_3151a: ; 3151a
	db "(になります)", $0

Data_31522: ; 31522
	db "(おもとめになりますか)?", $0

Data_31530: ; 31530
	db "(うりますか)?", $0

Func_31539: ; 31539 (c:5539)
	push de
	push bc
	push bc
	push bc
	push bc
	call GetHLAtSPPlus8
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	ld de, $d
	add hl, de
	ld e, [hl]
	push de
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld c, l
	push bc
	push hl
	push hl
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call AdjustMoney
	pop bc
	pop bc
	ld hl, sp+$8
	call PutLongFromStackToHL
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld hl, sp+$10
	call PutLongFromHLOnStack
	ld a, $1
	call Func_314da
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	pop bc
	pop de
	ld a, l
	or h
	jp nz, Func_3174c
	push de
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	pop de
	push de
	ld a, e
	cp $37
	jp z, Func_3160c
	cp $35
	jp z, Func_315f6
	cp $33
	jp nz, Func_3161f
	set_farcall_addrs_hli Func_5a149
	ld c, $1
	ld a, [wc2f6]
	ld e, a
	ld hl, sp+$a
	ld a, [hl]
	inc a
	call FarCall
	jp Func_3161f

Func_315f6: ; 315f6 (c:55f6)
	push bc
	set_farcall_addrs_hli Func_4ec2b
	pop bc
	ld a, c
	ld e, $1
	call FarCall
	jp Func_3161f

Func_3160c: ; 3160c (c:560c)
	push bc
	set_farcall_addrs_hli Func_4ed70
	pop bc
	ld a, c
	ld e, $1
	call FarCall
Func_3161f: ; 3161f (c:561f)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	pop de
	ld a, e
	cp $37
	jp z, Func_316b2
	cp $35
	jp z, Func_31679
	cp $33
	jp nz, Func_316e8
	push bc
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld a, [wSaveScratchca6c]
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld de, $38
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	call Func_30676
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld de, $33
	ld [hl], e
	inc hl
	ld [hl], d
	pop bc
	jp Func_316e8

Func_31679: ; 31679 (c:5679)
	push bc
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld a, [wc9a2]
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, c
	call GetSRAMBank
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld de, $39
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	call Func_30676
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld de, $35
	ld [hl], e
	inc hl
	ld [hl], d
	pop bc
	jp Func_316e8

Func_316b2: ; 316b2 (c:56b2)
	push bc
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld a, [wc9b7]
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, c
	call GetSRAMBank
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld de, $3a
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	call Func_30676
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld de, $37
	ld [hl], e
	inc hl
	ld [hl], d
	pop bc
Func_316e8: ; 316e8 (c:56e8)
	ld a, c
	call GetSRAMBank
	push hl
	push hl
	ld hl, sp+$10
	call PutLongFromHLOnStack
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	push hl
	push hl
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call AdjustMoney
	pop bc
	pop bc
	ld hl, sp+$4
	call PutLongFromStackToHL
	ld l, $2
	push hl
	ld c, $e
	ld e, $1
	ld a, $6
	call Func_3afc
	pop bc
	ld e, $1
	ld a, $6
	call SetStringStartState
	ld hl, Data_31756
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_319be
	pop bc
	pop bc
	ld l, $2
	push hl
	ld c, $e
	ld e, $1
	ld a, $6
	call Func_3ca1
	pop bc
	ld a, $4
	call Func_3304d
	jp Func_31750

Func_3174c: ; 3174c (c:574c)
	ld hl, $1
	xor a
Func_31750: ; 31750 (c:5750)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_31756: ; 31756
	db "(しょしﾞきん)", $0

Func_3175f: ; 3175f
	add sp, -$3e
	push de
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	pop af
	pop de
	cp $2
	jp z, Func_31869
	cp $1
	jp z, Func_3178a
	or a
	jp nz, Func_31932
	jp Func_31932

Func_3178a: ; 3178a (c:578a)
	ld a, e
	rlca
	rlca
	and $3
	inc a
	push af
	push hl
	ld a, e
	and $3f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $4093
	add hl, de
	reg16swap de, hl
	ld hl, sp+$30
	ld bc, $11
	call FarCopyVideoData
	ld hl, sp+$35
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $6efb
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	ld bc, $5
	call FarCopyVideoData
	pop hl
	ld a, l
	call GetSRAMBank
	ld c, $9
	ld e, $a
	ld hl, $a03
	call Func_30313
	ld de, Data_31935
	ld hl, $b04
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	ld de, Data_3193b
	ld hl, $b06
	call PlaceStringDEatCoordHL
	pop af
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	ld hl, Data_31940
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_31945
	ld hl, $b08
	call PlaceStringDEatCoordHL
	pop af
	push af
	read_hl_from_sp_plus $36
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $1008
	call Func_2230
	ld e, $a
	ld a, $b
	call SetStringStartState
	ld hl, $7d
	push hl
	ld hl, $8c
	push hl
	ld hl, Data_3194c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop af
	read_hl_from_sp_plus $38
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $100a
	call Func_2230
	jp Func_31932

Func_31869: ; 31869 (c:5869)
	push hl
	ld hl, sp+$16
	call Func_241f
	pop hl
	ld a, l
	call GetSRAMBank
	ld c, $9
	ld e, $a
	ld hl, $a02
	call Func_30313
	set_farcall_addrs_hli Func_17e95
	ld c, $3
	ld e, $14
	ld hl, $a
	call Func_30313
	ld de, Data_31951
	ld hl, $b03
	call PlaceStringDEatCoordHL
	ld de, Data_31959
	ld hl, $b05
	call PlaceStringDEatCoordHL
	ld de, Data_31962
	ld hl, $b07
	call PlaceStringDEatCoordHL
	ld de, Data_3196a
	ld hl, $b09
	call PlaceStringDEatCoordHL
	ld hl, sp+$24
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, $1003
	call Func_2230
	ld hl, sp+$25
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, $1005
	call Func_2230
	ld hl, sp+$26
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, $1007
	call Func_2230
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $f09
	call Func_2230
	ld hl, Data_3196f
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$1c
	ld a, [hl]
	cp $ff
	jp z, Func_31929
	cp $ee
	jp z, Func_3191d
	cp $dc
	jp nz, Func_31932
	ld de, Data_31971
	ld hl, $10b
	call PlaceStringDEatCoordHL
	jp Func_31932

Func_3191d: ; 3191d (c:591d)
	ld de, Data_3198b
	ld hl, $10b
	call PlaceStringDEatCoordHL
	jp Func_31932

Func_31929: ; 31929 (c:5929)
	ld de, Data_319a6
	ld hl, $10b
	call PlaceStringDEatCoordHL
Func_31932: ; 31932 (c:5932)
	add sp, $3e
	ret

Data_31935: ; 31935
	db "タイフﾟ:", $0

Data_3193b: ; 3193b
	db "RAM:", $0

Data_31940: ; 31940
	db " "
	TX_SNUM
	db "M", $0

Data_31945: ; 31945
	db "(いりょく)", $0

Data_3194c: ; 3194c
	TX_STACK
	TX_STACK
	db $0

Data_31951: ; 31951
	db "(こうけﾞき)", $0

Data_31959: ; 31959
	db "(ほﾞうきﾞょ)", $0

Data_31962: ; 31962
	db "(すはﾞやさ)", $0

Data_3196a: ; 3196a
	db "RAM:", $0

Data_3196f: ; 3196f
	db "M", $0

Data_31971: ; 31971
	db "(すへﾞての)アーム(そﾞくかﾞ そうひﾞかのう)", $0

Data_3198b: ; 3198b
	db "(すへﾞての)ムーフﾞ(そﾞくかﾞ そうひﾞかのう)", $0

Data_319a6: ; 319a6
	db "フﾞート(そﾞくいかﾞいかﾞ そうひﾞかのう)", $0

Func_319be: ; 319be (c:59be)
	ld a, l
	and h
	inc a
	jp z, Func_319ce
	ld e, l
	ld b, $4
	call RightShiftHL
	ld a, l
	call SetStringStartState
Func_319ce: ; 319ce (c:59ce)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $a
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_319f3
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_31a97
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31a96

Func_319f3: ; 319f3 (c:59f3)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_31a18
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_31aa2
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31a96

Func_31a18: ; 31a18 (c:5a18)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $3e8
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_31a3d
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_31aac
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31a96

Func_31a3d: ; 31a3d (c:5a3d)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $2710
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_31a62
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_31ab5
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31a96

Func_31a62: ; 31a62 (c:5a62)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $1
	push hl
	ld hl, $86a0
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_31a87
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_31abd
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_31a96

Func_31a87: ; 31a87 (c:5a87)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_31ac4
	push hl
	call PlaceString
.asm_31a91
	pop bc
	pop bc
	pop bc
Func_31a96: ; 31a96 (c:5a96)
	ret

Data_31a97: ; 31a97
	db "      "
	TX_UNUM
	db "G", $0

Data_31aa2: ; 31aa2
	db "     "
	TX_UNUM
	db "G", $0

Data_31aac: ; 31aac
	db "    "
	TX_UNUM
	db "G", $0

Data_31ab5: ; 31ab5
	db "   "
	TX_UNUM
	db "G", $0

Data_31abd: ; 31abd
	db "  "
	TX_UNUM
	db "G", $0

Data_31ac4: ; 31ac4
	db " "
	TX_UNUM
	db "G", $0

Data_31aca: ; 31aca
	dw Data_31ad0
	dw Data_31ae2
	dw $0

Data_31ad0: ; 31ad0
	db "(そうこかﾞ いっはﾟいなのてﾞ)", $0

Data_31ae2: ; 31ae2
	db "(さくしﾞょしてくたﾞさい)", $0

Func_31af1:: ; 31af1
	push af
	push bc
	push bc
	push bc
	push de
	push bc
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_31aca
	ld bc, $6
	call MemCopy
	pop bc
	pop de
	push de
	push bc
	ld hl, sp+$b
	ld a, [hl]
	call Func_31bbe
	pop bc
	pop de
	inc e
	dec e
	jp nz, Func_31bb9
	cp $ff
	jp nz, Func_31bb9
	push bc
	ld e, $5
	ld hl, sp+$9
	ld a, [hl]
	call Func_31bbe
	pop bc
	cp $ff
	jp nz, Func_31bb9
	push bc
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld a, $2
	ld [wc39a], a
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	set_farcall_addrs_hli PrintMapText_
	ld c, $c
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $10e
	call FarCall
	ld a, $2
	ld [wc39a], a
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	call FillVisibleAreaWithBlankTile
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	callba_hli Func_52d1f
	pop bc
	ld e, $5
	ld hl, sp+$7
	ld a, [hl]
	call Func_31bbe
	set_farcall_addrs_hli FadeInMap
	xor a
	call FarCall
	ld a, $1
Func_31bb9: ; 31bb9 (c:5bb9)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_31bbe: ; 31bbe (c:5bbe)
	push af
	add sp, -$58
	push de
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$5b
	ld [hl], a
	ld hl, sp+$59
	ld [hl], $ff
	pop bc
	pop de
	ld a, e
	cp $4
	jp z, Func_31fa9
	cp $3
	jp z, Func_31f49
	cp $5
	jp z, Func_31e24
	cp $2
	jp z, Func_31e24
	cp $1
	jp z, Func_31d7a
	or a
	jp nz, Func_31fc0
	push de
	push bc
	ld hl, sp+$5a
	ld [hl], $0
Func_31c03: ; 31c03 (c:5c03)
	ld hl, sp+$5a
	ld a, [hl]
	cp $4
	jp nc, Func_31c35
	ld hl, sp+$5a
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_31c2b
	ld hl, sp+$59
	ld [hl], $1
	jp Func_31c35

Func_31c2b: ; 31c2b (c:5c2b)
	ld hl, sp+$5a
	ld a, [hl]
	inc a
	ld hl, sp+$5a
	ld [hl], a
	jp Func_31c03

Func_31c35: ; 31c35 (c:5c35)
	pop bc
	pop de
	ld hl, sp+$55
	ld a, [hl]
	cp $ff
	jp nz, Func_31c4a
	ld hl, sp+$57
	ld a, [hl]
	call GetSRAMBank
	ld a, $ff
	jp Func_3202b

Func_31c4a: ; 31c4a (c:5c4a)
	push de
	push bc
	ld hl, sp+$5d
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$29
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$5d
	ld a, [hl]
	ld hl, sp+$5a
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld [hl], a
	ld hl, sp+$35
	push hl
	ld hl, sp+$5c
	ld l, [hl]
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call CopyFromDEtoHL
	ld hl, sp+$5a
	ld l, [hl]
	ld h, 0
	get_party_bot
	call WriteHLToSPPlus6
	pop bc
	push bc
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld [hl], c
	ld e, c
	ld d, $0
	ld hl, sp+$2f
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $43
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld de, $e
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus6
	ld de, $c
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$30
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $47
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld de, $12
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus6
	ld de, $10
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$31
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $4e
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld de, $17
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $52
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld de, $1b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	ld e, c
	ld d, $0
	ld hl, sp+$30
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $4e
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $1d
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	ld de, $1f
	add hl, de
	ld a, $f0
	and [hl]
	ld [hl], a
	pop de
	jp Func_31fc0

Func_31d7a: ; 31d7a (c:5d7a)
	push de
	ld hl, sp+$5b
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld [hl], $0
	ld hl, sp+$56
	ld [hl], $0
Func_31d95: ; 31d95 (c:5d95)
	ld hl, sp+$56
	ld a, [hl]
	cp $3
	jp nc, Func_31e1c
	ld hl, sp+$56
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_31e12
	ld hl, sp+$56
	ld l, [hl]
	ld h, $0
	get_party_bot $23
	reg16swap de, hl
	ld hl, sp+$4
	ld bc, $23
	call FarCopyVideoData
	ld hl, sp+$4
	push hl
	ld hl, sp+$58
	ld l, [hl]
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call FarCopyVideoData
	ld hl, sp+$56
	ld l, [hl]
	ld h, $0
	get_party_bot $23
	ld [hl], $0
Func_31e12: ; 31e12 (c:5e12)
	ld hl, sp+$56
	ld a, [hl]
	inc a
	ld hl, sp+$56
	ld [hl], a
	jp Func_31d95

Func_31e1c: ; 31e1c (c:5e1c)
	ld hl, sp+$57
	ld [hl], $1
	pop de
	jp Func_31fc0

Func_31e24: ; 31e24 (c:5e24)
	push de
	push bc
	callba_hli Func_7d01
	ld hl, sp+$5a
	ld [hl], a
	pop bc
	pop de
	ld hl, sp+$56
	ld a, [hl]
	cp $ff
	jp z, Func_31f46
	push de
	ld a, e
	cp $5
	jp nz, Func_31e84
	push bc
	ld hl, sp+$5d
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$29
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6086c
	pop bc
	push bc
	ld e, c
	ld hl, sp+$29
	call FarCall
	pop bc
	ld hl, sp+$3a
	ld [hl], c
	set_farcall_addrs_hli Func_7db0
	ld hl, sp+$33
	reg16swap de, hl
	ld hl, sp+$58
	ld a, [hl]
	call FarCall
	jp Func_31f3e

Func_31e84: ; 31e84 (c:5e84)
	set_farcall_addrs_hli Func_7e56
	ld hl, sp+$5b
	ld e, [hl]
	ld hl, sp+$58
	ld a, [hl]
	call FarCall
	ld a, $3
	call GetSRAMBank
	ld hl, sp+$5b
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld [hl], $0
	ld hl, sp+$56
	ld [hl], $0
Func_31eb7: ; 31eb7 (c:5eb7)
	ld hl, sp+$56
	ld a, [hl]
	cp $3
	jp nc, Func_31f3e
	ld hl, sp+$56
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_31f34
	ld hl, sp+$56
	ld l, [hl]
	ld h, $0
	get_party_bot $23
	reg16swap de, hl
	ld hl, sp+$4
	ld bc, $23
	call FarCopyVideoData
	ld hl, sp+$4
	push hl
	ld hl, sp+$58
	ld l, [hl]
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call FarCopyVideoData
	ld hl, sp+$56
	ld l, [hl]
	ld h, $0
	get_party_bot $23
	ld [hl], $0
Func_31f34: ; 31f34 (c:5f34)
	ld hl, sp+$56
	ld a, [hl]
	inc a
	ld hl, sp+$56
	ld [hl], a
	jp Func_31eb7

Func_31f3e: ; 31f3e (c:5f3e)
	ld hl, sp+$57
	ld [hl], $1
	pop de
	jp Func_31fc0

Func_31f46: ; 31f46 (c:5f46)
	jp Func_31fc0

Func_31f49: ; 31f49 (c:5f49)
	push de
	ld hl, sp+$58
	ld [hl], $0
Func_31f4e: ; 31f4e (c:5f4e)
	ld hl, sp+$58
	ld a, [hl]
	cp $4
	jp nc, Func_31fa5
	ld hl, sp+$58
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_31f9b
	set_farcall_addrs_hli Func_7e70
	ld hl, sp+$58
	ld e, [hl]
	ld hl, sp+$5b
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_7d39
	ld hl, sp+$5b
	ld a, [hl]
	call FarCall
	ld hl, sp+$57
	ld [hl], $1
	jp Func_31fa5

Func_31f9b: ; 31f9b (c:5f9b)
	ld hl, sp+$58
	ld a, [hl]
	inc a
	ld hl, sp+$58
	ld [hl], a
	jp Func_31f4e

Func_31fa5: ; 31fa5 (c:5fa5)
	pop de
	jp Func_31fc0

Func_31fa9: ; 31fa9 (c:5fa9)
	push de
	set_farcall_addrs_hli Func_7d39
	ld hl, sp+$5b
	ld a, [hl]
	call FarCall
	ld hl, sp+$57
	ld [hl], $1
	pop de
Func_31fc0: ; 31fc0 (c:5fc0)
	push de
	ld hl, sp+$59
	ld a, [hl]
	call GetSRAMBank
	pop de
	push de
	ld hl, sp+$57
	ld a, [hl]
	cp $1
	jp nz, Func_31fee
	ld a, e
	cp $3
	jp z, Func_31fdd
	ld a, e
	cp $4
	jp nz, Func_31fee
Func_31fdd: ; 31fdd (c:5fdd)
	set_farcall_addrs_hli Func_6f43b
	ld hl, sp+$5b
	ld a, [hl]
	call FarCall
Func_31fee: ; 31fee (c:5fee)
	pop de
	ld hl, sp+$55
	ld a, [hl]
	cp $1
	jp nz, Func_32028
	inc e
	dec e
	jp z, Func_32002
	ld a, e
	cp $5
	jp nz, Func_32028
Func_32002: ; 32002 (c:6002)
	set_farcall_addrs_hli Func_53a0d
	ld e, $0
	ld hl, sp+$59
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	ld e, $1
	ld hl, sp+$59
	ld a, [hl]
	call FarCall
Func_32028: ; 32028 (c:6028)
	ld hl, sp+$55
	ld a, [hl]
Func_3202b: ; 3202b (c:602b)
	add sp, $5a
	ret

Func_3202e: ; 3202e (c:602e)
	push af
	ld l, $0
Func_32031: ; 32031 (c:6031)
	ld a, l
	cp $8
	jp nc, Func_32055
	push hl
	xor a
Func_32039: ; 32039 (c:6039)
	ld hl, sp+$3
	cp [hl]
	jp nc, Func_32048
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_32039

Func_32048: ; 32048 (c:6048)
	pop hl
	push hl
	ld a, $7
	sub l
	call SetVolume
	pop hl
	inc l
	jp Func_32031

Func_32055: ; 32055 (c:6055)
	pop bc
	ret

Func_32057: ; 32057 (c:6057)
	push af
	xor a
Func_32059: ; 32059 (c:6059)
	cp $8
	jp nc, Func_32079
	push af
	xor a
Func_32060: ; 32060 (c:6060)
	ld hl, sp+$3
	cp [hl]
	jp nc, Func_3206f
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_32060

Func_3206f: ; 3206f (c:606f)
	pop af
	push af
	call SetVolume
	pop af
	inc a
	jp Func_32059

Func_32079: ; 32079 (c:6079)
	pop bc
	ret

Pointers_3207b: ; 3207b
	dw Data_3207f
	dw $0

Data_3207f: ; 3207f
	db "(その)ロホﾞホﾟン(は) (えらへﾞないよ)", $0

Pointers_32097: ; 32097
	dw Data_3209d
	dw Data_320ac
	dw $0

Data_3209d: ; 3209d
	db "リモコン(の しﾞゅしんに)", $0

Data_320ac: ; 320ac
	db "(しっはﾟいしました)", $0

Pointers_320b8: ; 320b8
	dw Data_320be
	dw Data_320cd
	dw $0

Data_320be: ; 320be
	db "リモコン(の しﾞゅしんに)", $0

Data_320cd: ; 320cd
	db "(せいこうしました)", $0

Func_320d8: ; 320d8
	push af
	ld hl, -$94
	add hl, sp
	ld sp, hl
	ld hl, $95
	add hl, sp
	ld a, [hl]
	cp $2
	jp z, Func_3214e
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$1f
	ld a, [hl]
	and $2
	rrca
	and $7f
	cp $1
	jp nz, Func_3214e
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_3207b)
	ld de, Pointers_3207b
	ld hl, $10e
	call FarCall
	ld a, $ff
	jp Func_322a1

Func_3214e: ; 3214e (c:614e)
	ld a, $f
	call Func_3202e
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld de, Data_322a7
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_1c11
	ld hl, sp+$2d
	reg16swap de, hl
	ld hl, $66
	call FarCall
	push af
	ld a, $f
	call Func_32057
	pop af
	cp $ff
	jp nz, Func_321ab
	ld a, $2
	jp Func_322a1

Func_321ab: ; 321ab (c:61ab)
	set_farcall_addrs_hli Func_1c27
	ld hl, sp+$2d
	reg16swap de, hl
	ld hl, sp+$23
	call FarCall
	ld c, h
	ld e, l
	ld a, e
	cp $2
	jp z, Func_321db
	ld a, e
	cp $3
	jp z, Func_321db
	ld a, e
	cp $4
	jp z, Func_321db
	ld a, e
	cp $6
	jp nz, Func_3222c
Func_321db: ; 321db (c:61db)
	ld hl, $95
	add hl, sp
	ld a, [hl]
	cp $2
	jp z, Func_32227
	ld hl, sp+$0
	ld a, [hl]
	cp $9
	jp z, Func_3220d
	ld hl, sp+$0
	ld a, [hl]
	cp $c
	jp z, Func_3220d
	ld hl, sp+$0
	ld a, [hl]
	cp $65
	jp z, Func_3220d
	ld hl, sp+$0
	ld a, [hl]
	cp $68
	jp z, Func_3220d
	ld hl, sp+$0
	ld a, [hl]
	cp $6b
	jp nz, Func_3221d
Func_3220d: ; 3220d (c:620d)
	ld a, e
	ld hl, sp+$23
	reg16swap de, hl
	ld hl, sp+$0
	ld c, [hl]
	call Func_324c1
	jp Func_32227

Func_3221d: ; 3221d (c:621d)
	ld a, e
	ld hl, sp+$23
	reg16swap de, hl
	call Func_322ce
Func_32227: ; 32227 (c:6227)
	ld e, $0
	jp Func_3222e

Func_3222c: ; 3222c (c:622c)
	ld e, $ff
Func_3222e: ; 3222e (c:622e)
	ld hl, $95
	add hl, sp
	ld a, [hl]
	or a
	jp z, Func_32241
	ld hl, $95
	add hl, sp
	ld a, [hl]
	cp $2
	jp nz, Func_322a0
Func_32241: ; 32241 (c:6241)
	push de
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	pop de
	inc e
	dec e
	jp nz, Func_32293
	push de
	ld hl, $97
	add hl, sp
	ld a, [hl]
	or a
	jp nz, Func_3228f
	ld c, BANK(Pointers_320b8)
	ld de, Pointers_320b8
	ld hl, $10e
	call FarCall
Func_3228f: ; 3228f (c:628f)
	pop de
	jp Func_322a0

Func_32293: ; 32293 (c:6293)
	push de
	ld c, BANK(Pointers_32097)
	ld de, Pointers_32097
	ld hl, $10e
	call FarCall
	pop de
Func_322a0: ; 322a0 (c:62a0)
	ld a, e
Func_322a1: ; 322a1 (c:62a1)
	ld hl, $96
	add hl, sp
	ld sp, hl
	ret

Data_322a7: ; 322a7
	db "リモコン(の) ホﾞタン(を おしてね)", $0

Data_322bc: ; 322bc
	dr $322bc, $322ce

Func_322ce: ; 322ce (c:62ce)
	push af
	add sp, -$26
	push de
IF DEF(STAR)
	inc c
	ld a, c
	cp $3
	jp c, .okay
	ld c, $0
.okay
ENDC
	push bc
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$4
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	xor a
	pop bc
	pop de
Func_322ed: ; 322ed (c:62ed)
	ld hl, sp+$27
	cp [hl]
	jp nc, Func_3248b
	push af
	push de
	push bc
	reg16swap de, hl
	ld a, [hl]
	ld hl, sp+$2a
	ld [hl], a
	ld hl, sp+$2a
	ld a, [hl]
	ld b, $64
	call DivideAbyB
	ld c, a
	push bc
	ld a, c
	add a
	add a
	ld d, a
	add a
	add a
	add a
	ld e, a
	add a
	add d
	add e
	ld e, a
	ld hl, sp+$2c
	ld a, [hl]
	sub e
	ld b, $a
	call DivideAbyB
	ld hl, sp+$2b
	ld [hl], a
	pop bc
	ld hl, sp+$29
	ld a, [hl]
	add a
	ld d, a
	add a
	add a
	add d
	ld l, a
	ld a, c
	add a
	add a
	ld d, a
	add a
	add a
	add a
	ld e, a
	add a
	add d
	add e
	add l
	ld e, a
	ld hl, sp+$2a
	ld a, [hl]
	sub e
	ld e, a
	ld hl, sp+$29
	ld a, [hl]
	add c
	add e
	ld hl, sp+$2a
	ld [hl], a
	pop bc
	pop de
	pop af
	push bc
	push af
	push de
	ld l, c
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_322bc
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld a, [hl]
	cp $5
	jp z, Func_3243c
	cp $4
	jp z, Func_32416
	cp $3
	jp z, Func_323f0
	cp $2
	jp z, Func_323c7
	cp $1
	jp z, Func_323a1
	or a
	jp nz, Func_32483
	ld hl, sp+$2a
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $1f
	add hl, bc
	write_hl_to_sp_plus $1f
	read_hl_from_sp_plus $1f
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_3239e
	ld hl, $3e7
	write_hl_to_sp_plus $1f
Func_3239e: ; 3239e (c:639e)
	jp Func_32483

Func_323a1: ; 323a1 (c:63a1)
	ld hl, sp+$2a
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $21
	add hl, bc
	write_hl_to_sp_plus $21
	read_hl_from_sp_plus $21
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_323c7
	ld hl, $3e7
	write_hl_to_sp_plus $21
Func_323c7: ; 323c7 (c:63c7)
	ld hl, sp+$2a
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $23
	add hl, bc
	write_hl_to_sp_plus $23
	read_hl_from_sp_plus $23
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_323ed
	ld hl, $3e7
	write_hl_to_sp_plus $23
Func_323ed: ; 323ed (c:63ed)
	jp Func_32483

Func_323f0: ; 323f0 (c:63f0)
	ld hl, sp+$2a
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $16
	add hl, bc
	write_hl_to_sp_plus $16
	read_hl_from_sp_plus $16
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_32416
	ld hl, $3e7
	write_hl_to_sp_plus $16
Func_32416: ; 32416 (c:6416)
	ld hl, sp+$2a
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $1a
	add hl, bc
	write_hl_to_sp_plus $1a
	read_hl_from_sp_plus $1a
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_3243c
	ld hl, $3e7
	write_hl_to_sp_plus $1a
Func_3243c: ; 3243c (c:643c)
	ld hl, sp+$2a
	ld a, [hl]
	cp $c
	jp c, Func_3245d
	ld hl, sp+$2a
	ld a, [hl]
	ld b, $a
	call DivideAbyB
	push bc
	ld hl, sp+$2c
	ld a, [hl]
	ld b, $a
	call DivideAbyB
	pop bc
	add b
	ld hl, sp+$2a
	ld [hl], a
	jp Func_32460

Func_3245d: ; 3245d (c:645d)
	jp Func_32463

Func_32460: ; 32460 (c:6460)
	jp Func_3243c

Func_32463: ; 32463 (c:6463)
	read_hl_from_sp_plus $28
	ld a, l
	and $f0
	ld l, a
	write_hl_to_sp_plus $28
	ld hl, sp+$2a
	ld c, [hl]
	ld b, $0
	inc bc
	read_hl_from_sp_plus $28
	ld a, l
	or c
	ld l, a
	ld a, h
	or b
	ld h, a
	write_hl_to_sp_plus $28
Func_32483: ; 32483 (c:6483)
	pop de
	inc de
	pop af
	inc a
	pop bc
	jp Func_322ed

Func_3248b: ; 3248b (c:648b)
	ld hl, sp+$1f
	ld a, [hl]
	or $2
	ld hl, sp+$1f
	ld [hl], a
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	add sp, $28
	ret

IF DEF(SUN)
Data_324ad: ; 324ad
	dr $324ad, $324b7

Data_324b7: ; 324b7
	dr $324b7, $324c1
ENDC
IF DEF(STAR)
Data_324ad: ; 324ad
	dr $324b6, $324c0

Data_324b7: ; 324b7
	dr $324c0, $324ca
ENDC

Func_324c1: ; 324c1 (c:64c1)
	push af
	push bc
	push bc
	push bc
	push bc
	push bc
	push hl
	push bc
	push de
	ld hl, $0
	write_hl_to_sp_plus $10
	xor a
	pop de
Func_324d3: ; 324d3 (c:64d3)
	ld hl, sp+$f
	cp [hl]
	jp nc, Func_324f5
	push af
	push de
	reg16swap de, hl
	ld a, [hl]
	ld l, a
	ld h, $0
	ld c, l
	ld b, h
	read_hl_from_sp_plus $12
	add hl, bc
	write_hl_to_sp_plus $12
	pop de
	inc de
	pop af
	inc a
	jp Func_324d3

Func_324f5: ; 324f5 (c:64f5)
	read_hl_from_sp_plus $e
	ld de, $3e8
	call DivideHLByDESigned
	write_hl_to_sp_plus $c
	read_hl_from_sp_plus $c
	ld de, $3e8
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $e
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	ld de, $64
	call DivideHLByDESigned
	call WriteHLToSPPlus10
	call GetHLAtSPPlus10
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	ld de, $a
	call DivideHLByDESigned
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus8
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	pop de
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $e
	read_hl_from_sp_plus $e
	ld de, $a
	call CompareHLtoDE
	jp nc, Func_3258d
	jp Func_32590

Func_3258d: ; 3258d (c:658d)
	jp Func_324f5

Func_32590: ; 32590 (c:6590)
	pop bc
	pop hl
	ld a, c
	cp $68
	jp z, Func_325c6
	cp $65
	jp z, Func_325bb
	cp $6b
	jp z, Func_325b6
	cp $c
	jp z, Func_325b1
	cp $9
	jp nz, Func_325ce
	ld l, $a
	jp Func_325ce

Func_325b1: ; 325b1 (c:65b1)
	ld l, $d
	jp Func_325ce

Func_325b6: ; 325b6 (c:65b6)
	ld l, $97
	jp Func_325ce

Func_325bb: ; 325bb (c:65bb)
	call GetHLAtSPPlus10
	ld de, Data_324ad
	add hl, de
	ld l, [hl]
	jp Func_325ce

Func_325c6: ; 325c6 (c:65c6)
	call GetHLAtSPPlus10
	ld de, Data_324b7
	add hl, de
	ld l, [hl]
Func_325ce: ; 325ce (c:65ce)
	ld a, l
	call Func_325d5
	add sp, $c
	ret

Func_325d5: ; 325d5 (c:65d5)
	add sp, -$52
	push af
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$31
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$31
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$53
	ld e, [hl]
	push de
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$3a
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	read_hl_from_sp_plus $20
	push hl
	read_hl_from_sp_plus $45
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $43
	read_hl_from_sp_plus $24
	push hl
	read_hl_from_sp_plus $49
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $47
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4c
	read_hl_from_sp_plus $2d
	push hl
	read_hl_from_sp_plus $52
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $50
	read_hl_from_sp_plus $2b
	push hl
	read_hl_from_sp_plus $50
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4e
	pop de
	pop af
	push de
	push af
	ld e, a
	dec e
	ld hl, sp+$4
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_4f8ec
	pop af
	push af
	ld e, a
	dec e
	ld hl, sp+$33
	ld a, [hl]
	dec a
	call FarCall
	read_hl_from wc2f2
	ld a, l
	or h
	jp z, Func_326a5
	call Func_2009
	call Func_1fbe
Func_326a5: ; 326a5 (c:66a5)
	set_farcall_addrs_hli Func_53a0d
	pop af
	push af
	ld e, $1
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	pop af
	push af
	ld e, $0
	call FarCall
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$3a
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	ld hl, sp+$52
	ld a, [hl]
	and $1
	jp nz, Func_326fe
	ld c, $0
Func_326e6: ; 326e6 (c:66e6)
	ld a, c
	cp $6
	jp nc, Func_326fe
	ld e, c
	ld d, $0
	ld hl, sp+$11
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$34
	add hl, de
	ld [hl], a
	inc c
	jp Func_326e6

Func_326fe: ; 326fe (c:66fe)
	pop af
	ld hl, sp+$31
	ld [hl], a
	read_hl_from_sp_plus $1e
	push hl
	read_hl_from_sp_plus $43
	pop de
	add hl, de
	write_hl_to_sp_plus $41
	read_hl_from_sp_plus $22
	push hl
	read_hl_from_sp_plus $47
	pop de
	add hl, de
	write_hl_to_sp_plus $45
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	add hl, de
	write_hl_to_sp_plus $4a
	read_hl_from_sp_plus $2b
	push hl
	read_hl_from_sp_plus $50
	pop de
	add hl, de
	write_hl_to_sp_plus $4e
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	add hl, de
	write_hl_to_sp_plus $4c
	ld hl, $0
	write_hl_to_sp_plus $50
	pop de
	ld hl, sp+$51
	ld [hl], e
	read_hl_from_sp_plus $3f
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_32770
	ld hl, $3e7
	write_hl_to_sp_plus $3f
Func_32770: ; 32770 (c:6770)
	read_hl_from_sp_plus $43
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_32788
	ld hl, $3e7
	write_hl_to_sp_plus $43
Func_32788: ; 32788 (c:6788)
	read_hl_from_sp_plus $3d
	push hl
	read_hl_from_sp_plus $41
	pop de
	call CompareHLtoDE
	jp nc, Func_327a0
	read_hl_from_sp_plus $3f
	write_hl_to_sp_plus $3d
Func_327a0: ; 327a0 (c:67a0)
	read_hl_from_sp_plus $41
	push hl
	read_hl_from_sp_plus $45
	pop de
	call CompareHLtoDE
	jp nc, Func_327b8
	read_hl_from_sp_plus $43
	write_hl_to_sp_plus $41
Func_327b8: ; 327b8 (c:67b8)
	read_hl_from_sp_plus $48
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_327d0
	ld hl, $3e7
	write_hl_to_sp_plus $48
Func_327d0: ; 327d0 (c:67d0)
	read_hl_from_sp_plus $4a
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_327e8
	ld hl, $3e7
	write_hl_to_sp_plus $4a
Func_327e8: ; 327e8 (c:67e8)
	read_hl_from_sp_plus $4c
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_32800
	ld hl, $3e7
	write_hl_to_sp_plus $4c
Func_32800: ; 32800 (c:6800)
	ld hl, sp+$4e
	ld a, [hl]
	or $2
	ld hl, sp+$4e
	ld [hl], a
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$2f
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	add sp, $52
	ret

Func_32822: ; 32822 (c:6822)
	push hl
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	pop af
	pop hl
	push de
	cp $2
	jp z, Func_32886
	cp $1
	jp z, Func_3284e
	or a
	jp nz, Func_328bb
	ld l, $0
	jp Func_328bb

Func_3284e: ; 3284e (c:684e)
	ld a, [wc9a2]
	cp $14
	jp nz, Func_32881
	ld c, $0
Func_32858: ; 32858 (c:6858)
	ld a, c
	cp $fa
	jp nc, Func_32871
	ld e, c
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_3286d
	jp Func_32871

Func_3286d: ; 3286d (c:686d)
	inc c
	jp Func_32858

Func_32871: ; 32871 (c:6871)
	ld a, c
	cp $fa
	jp nz, Func_3287c
	ld l, $1
	jp Func_3287e

Func_3287c: ; 3287c (c:687c)
	ld l, $0
Func_3287e: ; 3287e (c:687e)
	jp Func_32883

Func_32881: ; 32881 (c:6881)
	ld l, $0
Func_32883: ; 32883 (c:6883)
	jp Func_328bb

Func_32886: ; 32886 (c:6886)
	ld a, [wc9b7]
	cp $14
	jp nz, Func_328b9
	ld c, $0
Func_32890: ; 32890 (c:6890)
	ld a, c
	cp $dc
	jp nc, Func_328a9
	ld e, c
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_328a5
	jp Func_328a9

Func_328a5: ; 328a5 (c:68a5)
	inc c
	jp Func_32890

Func_328a9: ; 328a9 (c:68a9)
	ld a, c
	cp $dc
	jp nz, Func_328b4
	ld l, $1
	jp Func_328b6

Func_328b4: ; 328b4 (c:68b4)
	ld l, $0
Func_328b6: ; 328b6 (c:68b6)
	jp Func_328bb

Func_328b9: ; 328b9 (c:68b9)
	ld l, $0
Func_328bb: ; 328bb (c:68bb)
	pop de
	push hl
	ld a, e
	call GetSRAMBank
	pop hl
	ld a, l
	ret

Func_328c4: ; 328c4 (c:68c4)
	push af
	add sp, -$1a
	push de
	ld hl, sp+$19
	ld [hl], $ff
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop de
	push af
	inc e
	dec e
	jp nz, Func_3297b
	ld c, $0
Func_328e8: ; 328e8 (c:68e8)
	ld a, c
	ld hl, wSaveScratchca6c
	cp [hl]
	jp nc, Func_32916
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	ld hl, sp+$1d
	cp [hl]
	jp nz, Func_32912
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld a, $63
	sub [hl]
	ld hl, sp+$1a
	ld [hl], a
	ld hl, sp+$19
	ld [hl], $0
	jp Func_32916

Func_32912: ; 32912 (c:6912)
	inc c
	jp Func_328e8

Func_32916: ; 32916 (c:6916)
	ld hl, sp+$19
	ld a, [hl]
	cp $ff
	jp nz, Func_3292e
	ld a, [wSaveScratchca6c]
	cp $14
	jp nc, Func_3292e
	ld hl, sp+$1a
	ld [hl], $63
	ld hl, sp+$19
	ld [hl], $0
Func_3292e: ; 3292e (c:692e)
	ld hl, sp+$19
	ld a, [hl]
	cp $ff
	jp nz, Func_3296c
	ld a, $3
	call GetSRAMBank
	ld c, $0
Func_3293d: ; 3293d (c:693d)
	ld a, c
	cp $50
	jp nc, Func_3296c
	ld hl, sp+$1d
	ld a, [hl]
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	cp [hl]
	jp nz, Func_32968
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld a, $63
	sub [hl]
	ld hl, sp+$1a
	ld [hl], a
	ld hl, sp+$19
	ld [hl], $0
	jp Func_3296c

Func_32968: ; 32968 (c:6968)
	inc c
	jp Func_3293d

Func_3296c: ; 3296c (c:696c)
	ld hl, sp+$19
	ld a, [hl]
	cp $ff
	jp nz, Func_32978
	ld hl, sp+$1a
	ld [hl], $63
Func_32978: ; 32978 (c:6978)
	jp Func_32a2d

Func_3297b: ; 3297b (c:697b)
	ld hl, sp+$1a
	ld [hl], $63
	ld hl, sp+$13
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, sp+$1d
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $57b8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $d
	call FarCopyVideoData
	ld a, [wc38d]
	cp $1
	jp nz, Func_329c5
	read_hl_from_sp_plus $f
	ld de, $2
	call DivideHLByDESigned
	write_hl_to_sp_plus $19
	jp Func_329e1

Func_329c5: ; 329c5 (c:69c5)
	ld a, [wc38d]
	cp $2
	jp nz, Func_329d9
	read_hl_from_sp_plus $f
	add hl, hl
	write_hl_to_sp_plus $19
	jp Func_329e1

Func_329d9: ; 329d9 (c:69d9)
	read_hl_from_sp_plus $f
	write_hl_to_sp_plus $19
Func_329e1: ; 329e1 (c:69e1)
	ld hl, sp+$13
	call PutLongFromHLOnStack
	read_hl_from_sp_plus $1d
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_329f4
	dec bc
.asm_329f4
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $a
	push hl
	call MultiplyLongsFromStack
	call StackDivideLongSigned
	ld hl, sp+$13
	call PutLongFromStackToHL
	ld hl, $0
	push hl
	ld hl, $63
	push hl
	ld hl, sp+$13
	call PutLongFromHLOnStack
	call CompareStackLongs_Signed
	jp nc, Func_32a23
	ld hl, sp+$1a
	ld [hl], $63
	jp Func_32a2d

Func_32a23: ; 32a23 (c:6a23)
	ld hl, sp+$f
	call PutLongFromHLOnStack
	pop de
	pop af
	ld hl, sp+$1a
	ld [hl], e
Func_32a2d: ; 32a2d (c:6a2d)
	pop af
	call GetSRAMBank
	ld hl, sp+$18
	ld a, [hl]
	add sp, $1c
	ret

Func_32a37: ; 32a37
	push hl
	add sp, -$16
	read_hl_from_sp_plus $18
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30151
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld a, [hl]
	dec a
	ld c, a
	push bc
	ld a, c
	ld hl, sp+$2
	reg16swap de, hl
	call Func_3149e
	ld l, $10
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_3bc5
	pop bc
	pop bc
	push bc
	ld a, c
	inc a
	ld e, $0
	call Func_328c4
	ld l, a
	pop bc
	push bc
	push hl
	ld a, c
	inc a
	ld e, $1
	call Func_328c4
	pop hl
	pop bc
	inc l
	dec l
	jp nz, Func_32aa5
	ld a, $1
	call Func_3304d
	ld hl, $8000
	jp Func_32c1c

Func_32aa5: ; 32aa5 (c:6aa5)
	or a
	jp nz, Func_32ab3
	xor a
	call Func_3304d
	ld hl, -1
	jp Func_32c1c

Func_32ab3: ; 32ab3 (c:6ab3)
	push bc
	cp l
	jp nc, Func_32abe
	ld [wc2f6], a
	jp Func_32ac2

Func_32abe: ; 32abe (c:6abe)
	ld a, l
	ld [wc2f6], a
Func_32ac2: ; 32ac2 (c:6ac2)
	set_farcall_addrs_hli Func_14db8
	read_hl_from_sp_plus $1a
	call FarCall
	pop bc
	ld a, [wc2f6]
	cp $ff
	jp z, Func_32ae4
	ld a, [wc2f6]
	or a
	jp nz, Func_32aea
Func_32ae4: ; 32ae4 (c:6ae4)
	ld hl, $8000
	jp Func_32c1c

Func_32aea: ; 32aea (c:6aea)
	push bc
	read_hl_from_sp_plus $f
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_32af9
	dec bc
.asm_32af9
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $a
	push hl
	call MultiplyLongsFromStack
	ld hl, wc2f6
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_32b16
	dec bc
.asm_32b16
	push bc
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$17
	call PutLongFromStackToHL
	ld a, [wc38d]
	cp $1
	jp nz, Func_32b38
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$17
	call DivideLongSigned
	jp Func_32b4d

Func_32b38: ; 32b38 (c:6b38)
	ld a, [wc38d]
	cp $2
	jp nz, Func_32b4d
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$17
	call MultiplyLongs
Func_32b4d: ; 32b4d (c:6b4d)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld hl, sp+$13
	call PutLongFromHLOnStack
	xor a
	call Func_314da
	pop bc
	pop bc
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	pop bc
	ld a, l
	or h
	jp nz, Func_32c0e
	push bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_5a0e0
	pop bc
	ld a, [wc2f6]
	ld e, a
	ld a, c
	inc a
	ld c, $0
	call FarCall
	push hl
	push hl
	ld hl, sp+$15
	call PutLongFromHLOnStack
	ld hl, -1
	push hl
	ld hl, -1
	push hl
	call MultiplyLongsFromStack
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	push hl
	push hl
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call AdjustMoney
	pop bc
	pop bc
	ld hl, sp+$11
	call PutLongFromStackToHL
	ld e, $1
	ld a, $6
	call SetStringStartState
	ld hl, Data_32c27
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$d
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_319be
	pop bc
	pop bc
	ld l, $2
	push hl
	ld c, $e
	ld e, $1
	ld a, $6
	call Func_3ca1
	pop bc
	ld a, $2
	call Func_3304d
	jp Func_32c0f

Func_32c0e: ; 32c0e (c:6c0e)
	xor a
Func_32c0f: ; 32c0f (c:6c0f)
	or a
	jp nz, Func_32c19
	ld hl, $8000
	jp Func_32c1c

Func_32c19: ; 32c19 (c:6c19)
	ld hl, -1
Func_32c1c: ; 32c1c (c:6c1c)
	reg16swap de, hl
	add sp, $18
	reg16swap de, hl
	ret

Data_32c27: ; 32c27
	db "(しょしﾞきん)", $0

Func_32c30: ; 32c30
	push hl
	add sp, -$32
	ld hl, sp+$32
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld hl, sp+$32
	ld [hl], a
	ld hl, $d
	add hl, bc
	ld a, [hl]
	ld hl, sp+$31
	ld [hl], a
	ld hl, sp+$31
	ld a, [hl]
	cp $34
	jp nz, Func_32c7d
	ld hl, sp+$32
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_301bd
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld hl, sp+$33
	ld [hl], a
	jp Func_32c96

Func_32c7d: ; 32c7d (c:6c7d)
	ld hl, sp+$32
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Data_30223
	add hl, de
	add hl, bc
	ld e, [hl]
	ld hl, sp+$33
	ld [hl], e
Func_32c96: ; 32c96 (c:6c96)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$2b
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, sp+$33
	ld a, [hl]
	cp $34
	jp nz, Func_32ce3
	ld hl, sp+$35
	ld a, [hl]
	and $3f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $4093
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1a
	ld bc, $11
	call FarCopyVideoData
	jp Func_32ceb

Func_32ce3: ; 32ce3 (c:6ce3)
	ld hl, sp+$35
	ld e, [hl]
	ld hl, sp+$2
	call Func_241f
Func_32ceb: ; 32ceb (c:6ceb)
	pop af
	call GetSRAMBank
	ld l, $10
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_3bc5
	pop bc
	ld hl, sp+$31
	ld a, [hl]
	cp $34
	jp nz, Func_32d3f
	read_hl_from_sp_plus $28
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_32d11
	dec bc
.asm_32d11
	push bc
	push hl
	ld hl, sp+$37
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_32d22
	dec bc
.asm_32d22
	push bc
	push hl
	ld b, $6
	call RightShiftLongFromStack
	ld hl, $0
	push hl
	ld hl, $1
	push hl
	call AddLongsFromStack
	call MultiplyLongsFromStack
	ld hl, sp+$31
	call PutLongFromStackToHL
	jp Func_32d5f

Func_32d3f: ; 32d3f (c:6d3f)
	read_hl_from_sp_plus $17
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_32d4d
	dec bc
.asm_32d4d
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$31
	call PutLongFromStackToHL
Func_32d5f: ; 32d5f (c:6d5f)
	ld a, [wc38d]
	cp $1
	jp nz, Func_32d77
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$31
	call DivideLongSigned
	jp Func_32d8c

Func_32d77: ; 32d77 (c:6d77)
	ld a, [wc38d]
	cp $2
	jp nz, Func_32d8c
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	ld hl, sp+$31
	call MultiplyLongs
Func_32d8c: ; 32d8c (c:6d8c)
	ld hl, sp+$29
	call PutLongFromHLOnStack
	ld hl, sp+$31
	call PutLongFromHLOnStack
	call CompareStackLongs_Signed
	jp nc, Func_32da6
	xor a
	call Func_3304d
	ld hl, $8000
	jp Func_32f6f

Func_32da6: ; 32da6 (c:6da6)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld hl, sp+$2d
	call PutLongFromHLOnStack
	xor a
	call Func_314da
	pop bc
	pop bc
	ld hl, sp+$31
	ld a, [hl]
	cp $34
	jp nz, Func_32df4
	set_farcall_addrs_hli AllocateMemory
	ld hl, $b4
	call FarCall
	reg16swap de, hl
	push de
	push de
	ld l, $9
	push hl
	ld c, $a
	ld e, $3
	ld a, $a
	call Func_30289
	pop bc
	pop bc
	ld hl, sp+$35
	ld e, [hl]
	ld a, $1
	call Func_3175f
	pop de
	jp Func_32e21

Func_32df4: ; 32df4 (c:6df4)
	set_farcall_addrs_hli AllocateMemory
	ld hl, $1b8
	call FarCall
	reg16swap de, hl
	push de
	push de
	ld l, $b
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_30289
	pop bc
	pop bc
	ld hl, sp+$35
	ld e, [hl]
	ld a, $2
	call Func_3175f
	pop de
Func_32e21: ; 32e21 (c:6e21)
	push de
	ld a, $2
	ld [wc39a], a
	ld l, $10
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	pop de
	push hl
	ld hl, sp+$33
	ld a, [hl]
	cp $34
	jp nz, Func_32e5f
	push de
	push de
	ld l, $9
	push hl
	ld c, $a
	ld e, $3
	ld a, $a
	call Func_302ce
	pop bc
	pop bc
	pop de
	jp Func_32e6f

Func_32e5f: ; 32e5f (c:6e5f)
	push de
	push de
	ld l, $b
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_302ce
	pop bc
	pop bc
	pop de
Func_32e6f: ; 32e6f (c:6e6f)
	push de
	ld a, $2
	ld [wc39a], a
	ld l, $10
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop hl
	ld a, l
	or h
	jp nz, Func_32f61
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$31
	ld a, [hl]
	cp $34
	jp nz, Func_32ed2
	set_farcall_addrs_hli Func_4ed5d
	ld e, $0
	ld hl, sp+$33
	ld a, [hl]
	inc a
	call FarCall
	ld e, $0
	ld a, $1
	call Func_32822
	jp Func_32eec

Func_32ed2: ; 32ed2 (c:6ed2)
	set_farcall_addrs_hli Func_6af0d
	ld e, $0
	ld hl, sp+$33
	ld a, [hl]
	call FarCall
	ld e, $0
	ld a, $2
	call Func_32822
Func_32eec: ; 32eec (c:6eec)
	push af
	push hl
	push hl
	ld hl, sp+$33
	call PutLongFromHLOnStack
	ld hl, -1
	push hl
	ld hl, -1
	push hl
	call MultiplyLongsFromStack
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	push hl
	push hl
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call AdjustMoney
	pop bc
	pop bc
	ld hl, sp+$2f
	call PutLongFromStackToHL
	ld e, $1
	ld a, $6
	call SetStringStartState
	ld hl, Data_32f7a
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$2b
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_319be
	pop bc
	pop bc
	ld l, $2
	push hl
	ld c, $e
	ld e, $1
	ld a, $6
	call Func_3ca1
	pop bc
	pop af
	cp $1
	jp nz, Func_32f58
	ld a, $8
	call Func_3304d
	ld a, $1
	call Func_3304d
	ld a, $1
	jp Func_32f5e

Func_32f58: ; 32f58 (c:6f58)
	ld a, $2
	call Func_3304d
	xor a
Func_32f5e: ; 32f5e (c:6f5e)
	jp Func_32f62

Func_32f61: ; 32f61 (c:6f61)
	xor a
Func_32f62: ; 32f62 (c:6f62)
	or a
	jp nz, Func_32f6c
	ld hl, $8000
	jp Func_32f6f

Func_32f6c: ; 32f6c (c:6f6c)
	ld hl, -1
Func_32f6f: ; 32f6f (c:6f6f)
	reg16swap de, hl
	add sp, $34
	reg16swap de, hl
	ret

Data_32f7a: ; 32f7a
	db "(しょしﾞきん)", $0

Pointers_32f83: ; 32f83
	dw Data_32f87
	dw $0

Data_32f87: ; 32f87
	db "(おかねかﾞたりないよ)", $0

Pointers_32f94: ; 32f94
	dw Data_32f98
	dw $0

Data_32f98: ; 32f98
	db "(これいしﾞょう かえないよ)", $0

Pointers_32fa8: ; 32fa8
	dw Data_32fac
	dw $0

Data_32fac: ; 32fac
	db "(とﾞうもありかﾞとう)", $0

Pointers_32fb9: ; 32fb9
	dw Data_32fbf
	dw Data_32fcc
	dw $0

Data_32fbf: ; 32fbf
	db "(とﾞうもありかﾞとう)", $0

Data_32fcc: ; 32fcc
	db "(ほかにも かうかい)?", $0

Pointers_32fd9: ; 32fd9
	dw Data_32fdd
	dw $0

Data_32fdd: ; 32fdd
	db "(ほかのものは かうかい)?", $0

Pointers_32fec: ; 32fec
	dw Data_32ff2
	dw Data_32fff
	dw $0

Data_32ff2: ; 32ff2
	db "(とﾞうもありかﾞとう)", $0

Data_32fff: ; 32fff
	db "(ほかにも うるかい)?", $0

Pointers_3300c: ; 3300c
	dw Data_33010
	dw $0

Data_33010: ; 33010
	db "(ほかのものは うるかい)?", $0

Pointers_3301f: ; 3301f
	dw Data_33025
	dw Data_33032
	dw $0

Data_33025: ; 33025
	db "(とﾞうもありかﾞとう)", $0

Data_33032: ; 33032
	db "(またきてね)", $0

Pointers_3303a: ; 3303a
	dw Data_3303e
	dw $0

Data_3303e: ; 3303e
	db "(それは うっちゃたﾞめ)!", $0

Func_3304d: ; 3304d (c:704d)
	push hl
	push af
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli PrintMapText_
	pop af
	pop hl
	cp $8
	jp z, Func_33116
	cp $7
	jp z, Func_33107
	cp $6
	jp z, Func_330f8
	cp $5
	jp z, Func_330e9
	cp $4
	jp z, Func_330da
	cp $3
	jp z, Func_330cb
	cp $2
	jp z, Func_330bc
	cp $1
	jp z, Func_330ad
	or a
	jp nz, Func_33122
	ld c, BANK(Pointers_32f83)
	ld de, Pointers_32f83
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_330ad: ; 330ad (c:70ad)
	ld c, BANK(Pointers_32f94)
	ld de, Pointers_32f94
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_330bc: ; 330bc (c:70bc)
	ld c, BANK(Pointers_32fb9)
	ld de, Pointers_32fb9
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_330cb: ; 330cb (c:70cb)
	ld c, BANK(Pointers_32fd9)
	ld de, Pointers_32fd9
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_330da: ; 330da (c:70da)
	ld c, BANK(Pointers_32fec)
	ld de, Pointers_32fec
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_330e9: ; 330e9 (c:70e9)
	ld c, BANK(Pointers_3300c)
	ld de, Pointers_3300c
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_330f8: ; 330f8 (c:70f8)
	ld c, BANK(Pointers_3301f)
	ld de, Pointers_3301f
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_33107: ; 33107 (c:7107)
	ld c, BANK(Pointers_3303a)
	ld de, Pointers_3303a
	ld hl, $10e
	call FarCall
	ld l, a
	jp Func_33122

Func_33116: ; 33116 (c:7116)
	ld c, BANK(Pointers_32fa8)
	ld de, Pointers_32fa8
	ld hl, $10e
	call FarCall
	ld l, a
Func_33122: ; 33122 (c:7122)
	ld a, l
	and $10
	jp z, Func_3312c
	xor a
	jp Func_3312e

Func_3312c: ; 3312c (c:712c)
	ld a, $1
Func_3312e: ; 3312e (c:712e)
	ret

Func_3312f: ; 3312f (c:712f)
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	push hl
	push hl
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_30289
	pop bc
	pop bc
	callba_hli AskRepairRobots
	pop hl
	push hl
	push hl
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_302ce
	pop bc
	pop bc
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Func_3318e: ; 3318e (c:718e)
	push af
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_331a2
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_331b6
Func_331a2: ; 331a2 (c:71a2)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_331b6: ; 331b6 (c:71b6)
	call Func_1fbe
	callba_hli Func_17470
	pop af
	cp $3
	jp nz, Func_331e6
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_58c3a)
	ld de, Data_58c3a
	ld hl, Data_58c01
	call FarCall
	jp Func_331fc

Func_331e6: ; 331e6 (c:71e6)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_58c96)
	ld de, Data_58c96
	ld hl, Data_58c49
	call FarCall
Func_331fc: ; 331fc (c:71fc)
	call FillVisibleAreaWithBlankTile
	call Func_2009
	callba_hli Func_17488
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ret

Func_3321d: ; 3321d (c:721d)
	or a
	jp nz, Func_33294
	set_farcall_addrs_hli AllocateMemory
	ld hl, $208
	call FarCall
	push hl
	push hl
	ld l, $d
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_30289
	pop bc
	pop bc
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_30020)
	ld de, Data_30020
	ld hl, Data_30001
	call FarCall
	pop hl
	push hl
	push hl
	ld l, $d
	push hl
	ld c, $14
	ld e, $2
	xor a
	call Func_302ce
	pop bc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	jp Func_332aa

Func_33294: ; 33294 (c:7294)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_3004e)
	ld de, Data_3004e
	ld hl, Data_3002f
	call FarCall
Func_332aa: ; 332aa (c:72aa)
	ret

Func_332ab: ; 332ab (c:72ab)
	push af
	ld a, BANK(GFX_4aa2)
	ld [wFarCallDestBank], a
	ld bc, $10
	ld de, GFX_4aa2
	ld hl, $88e0
	call FarRequestVideoData
	ld bc, $10
	ld de, GFX_4ab2
	ld hl, $88c0
	call FarRequestVideoData
	ld bc, $10
	ld de, GFX_4a92
	ld hl, $97d0
	call FarRequestVideoData
	call Func_1fbe
	pop af
	or a
	jp nz, Func_332f6
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_3007c)
	ld de, Data_3007c
	ld hl, Data_3005d
	call FarCall
	jp Func_3330c

Func_332f6: ; 332f6 (c:72f6)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_300aa)
	ld de, Data_300aa
	ld hl, Data_3008b
	call FarCall
Func_3330c: ; 3330c (c:730c)
	call Func_2009
	ld a, BANK(GFX_4a02)
	ld [wFarCallDestBank], a
	ld bc, $10
	ld de, GFX_4a02
	ld hl, $88e0
	call FarRequestVideoData
	ld bc, $10
	ld de, GFX_49e2
	ld hl, $88c0
	call FarRequestVideoData
	ld bc, $10
	ld de, GFX_48f2
	ld hl, $97d0
	call FarRequestVideoData
	ret

Func_33339: ; 33339 (c:7339)
	push af
	call Func_1fbe
	pop af
	or a
	jp nz, Func_3335b
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_300d8)
	ld de, Data_300d8
	ld hl, Data_300b9
	call FarCall
	jp Func_33371

Func_3335b: ; 3335b (c:735b)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_30106)
	ld de, Data_30106
	ld hl, Data_300e7
	call FarCall
Func_33371: ; 33371 (c:7371)
	call Func_2009
	ret

Func_33375: ; 33375
	ld c, $4
	ld e, $c
	ld hl, $0
	call Func_30313
	ld c, $5
	ld e, $c
	ld hl, $4
	call Func_30313
	ld c, $4
	ld e, $8
	ld hl, $c09
	call Func_30313
	ld de, Data_333a6
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld de, Data_333b3
	ld hl, $d0a
	call PlaceStringDEatCoordHL
	ret

Data_333a6: ; 333a6
	db "(ひつよう)エネルキﾞー", $0

Data_333b3: ; 333b3
	db "エネルキﾞー", $0

Func_333ba:: ; 333ba
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	pop af
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	ld de, wcb33
	add hl, de
	ld [hl], a
	ld a, c
	call GetSRAMBank
	ret

Func_333e0: ; 333e0
	add sp, -$4e
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	pop af
	push hl
	ld l, a
	ld h, 0
	get_party_bot
	ld de, $1d
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop hl
	push bc
	push hl
	ld l, a
	ld h, 0
	get_party_bot
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$4
	call GetRobotOrTrainerBaseStats
	call GetHLAtSPPlus9
	reg16swap de, hl
	pop hl
	push de
	push hl
	ld hl, sp+$8
	ld a, [hl]
	cp $1
	jp c, Func_3345e
	push af
	set_farcall_addrs_hli Func_15ad6
	pop af
	ld hl, sp+$35
	push hl
	ld l, a
	ld h, $0
	ld de, $5ff
	add hl, de
	pop de
	ld c, $6
	call FarCall
Func_3345e: ; 3345e (c:745e)
	pop hl
	ld a, l
	call GetSRAMBank
	ld c, $5
	ld e, $c
	ld hl, $4
	call Func_30313
	pop de
	pop bc
	push bc
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp c, Func_334af
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_334af
	push de
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$33
	ld c, l
	ld b, h
	ld de, $5
	ld hl, $1
	call FarCall
	ld hl, Data_334ee
	push hl
	call PlaceString
	pop bc
	ld de, Data_334f0
	ld hl, $207
	call PlaceStringDEatCoordHL
	pop de
	jp Func_334d6

Func_334af: ; 334af (c:74af)
	ld a, e
	or d
	jp nz, Func_334c2
	push de
	ld de, Data_334fa
	ld hl, $106
	call PlaceStringDEatCoordHL
	pop de
	jp Func_334d6

Func_334c2: ; 334c2 (c:74c2)
	push de
	ld de, Data_33507
	ld hl, $105
	call PlaceStringDEatCoordHL
	ld de, Data_33517
	ld hl, $107
	call PlaceStringDEatCoordHL
	pop de
Func_334d6: ; 334d6 (c:74d6)
	pop bc
	push de
	ld de, $3
	ld hl, $100b
	call Func_2230
	pop bc
	ld de, $3
	ld hl, $702
	call Func_2230
	add sp, $4e
	ret

Data_334ee: ; 334ee
	db "ヘ", $0

Data_334f0: ; 334f0
	db "(しんか かのう)", $0

Data_334fa: ; 334fa
	db "(しんか てﾞきないよ)", $0

Data_33507: ; 33507
	db "エネルキﾞー (ふﾞそくてﾞ)", $0

Data_33517: ; 33517
	db "(しんか てﾞきないよ)", $0

Func_33524: ; 33524
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	cp $1
	jp z, Func_33555
	or a
	jp nz, Func_3356b
	callba_hli Func_59087
	ld l, a
	ld h, $0
	jp Func_3356b

Func_33555: ; 33555 (c:7555)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_58cc4)
	ld de, Data_58cc4
	ld hl, Data_58ca5
	call FarCall
Func_3356b: ; 3356b (c:756b)
	call Func_3af6
	ld hl, $8000
	ret

Data_33572: ; 33572
IF DEF(SUN)
	dr $33572, $335de
ENDC
IF DEF(STAR)
	dr $3357b, $335e7
ENDC

Func_335de: ; 335de
	push af
	push bc
	push bc
	push bc
	push bc
	xor a
Func_335e4: ; 335e4 (c:75e4)
	cp $5
	jp nc, Func_335f5
	ld e, a
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld [hl], $0
	inc a
	jp Func_335e4

Func_335f5: ; 335f5 (c:75f5)
	ld c, $0
Func_335f7: ; 335f7 (c:75f7)
	ld a, c
	cp $5
	jp nc, Func_337b3
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_337ac
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, Data_33572
	add hl, de
	ld a, [hl]
	inc a
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld [hl], a
	ld e, c
	ld d, $0
	ld hl, wTimeSetHoursTensDigit
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_337a9
	ld e, c
	ld d, $0
	ld hl, wTimeSetHoursTensDigit
	add hl, de
	ld a, [hl]
	cp $23
	jp z, Func_33778
	cp $1d
	jp nz, Func_337a9
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $6
	jp c, Func_33667
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $b
	jp nc, Func_33667
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $86
	add [hl]
	ld [hl], a
	jp Func_33775

Func_33667: ; 33667 (c:7667)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $c
	jp c, Func_3368e
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $11
	jp nc, Func_3368e
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $86
	add [hl]
	ld [hl], a
	jp Func_33775

Func_3368e: ; 3368e (c:768e)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $12
	jp c, Func_336b5
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $17
	jp nc, Func_336b5
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $86
	add [hl]
	ld [hl], a
	jp Func_33775

Func_336b5: ; 336b5 (c:76b5)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $1e
	jp c, Func_336dc
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $23
	jp nc, Func_336dc
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $81
	add [hl]
	ld [hl], a
	jp Func_33775

Func_336dc: ; 336dc (c:76dc)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $3c
	jp c, Func_33703
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $41
	jp nc, Func_33703
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $6d
	add [hl]
	ld [hl], a
	jp Func_33775

Func_33703: ; 33703 (c:7703)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $42
	jp c, Func_3372a
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $47
	jp nc, Func_3372a
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $6d
	add [hl]
	ld [hl], a
	jp Func_33775

Func_3372a: ; 3372a (c:772a)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $48
	jp c, Func_33751
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $4d
	jp nc, Func_33751
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $6d
	add [hl]
	ld [hl], a
	jp Func_33775

Func_33751: ; 33751 (c:7751)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $54
	jp c, Func_33775
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $59
	jp nc, Func_33775
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $68
	add [hl]
	ld [hl], a
Func_33775: ; 33775 (c:7775)
	jp Func_337a9

Func_33778: ; 33778 (c:7778)
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $1e
	jp c, Func_3379f
	ld e, c
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp $23
	jp nc, Func_3379f
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $86
	add [hl]
	ld [hl], a
	jp Func_337a9

Func_3379f: ; 3379f (c:779f)
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, $6d
	add [hl]
	ld [hl], a
Func_337a9: ; 337a9 (c:77a9)
	jp Func_337af

Func_337ac: ; 337ac (c:77ac)
	jp Func_337b3

Func_337af: ; 337af (c:77af)
	inc c
	jp Func_335f7

Func_337b3: ; 337b3 (c:77b3)
	ld hl, sp+$0
	ld [hl], $0
	ld c, $0
Func_337b9: ; 337b9 (c:77b9)
	ld a, c
	cp $5
	jp nc, Func_337e7
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_337e0
	ld e, c
	ld d, $0
	ld hl, sp+$1
	add hl, de
	ld a, [hl]
	cp $90
	jp z, Func_337dd
	ld hl, sp+$0
	ld [hl], $1
	jp Func_337e7

Func_337dd: ; 337dd (c:77dd)
	jp Func_337e3

Func_337e0: ; 337e0 (c:77e0)
	jp Func_337e7

Func_337e3: ; 337e3 (c:77e3)
	inc c
	jp Func_337b9

Func_337e7: ; 337e7 (c:77e7)
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_3380c
	ld hl, sp+$9
	ld a, [hl]
	or a
	jp nz, Func_3380c
	ld hl, sp+$1
	ld [hl], $73
	ld hl, sp+$2
	ld [hl], $15
	ld hl, sp+$3
	ld [hl], $5b
	ld hl, sp+$4
	ld [hl], $57
	ld hl, sp+$5
	ld [hl], $0
	jp Func_3381e

Func_3380c: ; 3380c (c:780c)
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_3381e
	ld hl, sp+$9
	ld a, [hl]
	cp $1
	jp nz, Func_3381e
	jp Func_338ef

Func_3381e: ; 3381e (c:781e)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$b
	ld a, [hl]
	or a
	jp nz, Func_33878
	ld hl, sp+$8
	ld [hl], $0
Func_3383d: ; 3383d (c:783d)
	ld hl, sp+$8
	ld a, [hl]
	cp $4
	jp nc, Func_33875
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld a, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, $c980
	add hl, de
	ld [hl], a
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld a, [hl]
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, wPlayerName
	add hl, de
	ld [hl], a
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	jp Func_3383d

Func_33875: ; 33875 (c:7875)
	jp Func_338d5

Func_33878: ; 33878 (c:7878)
	ld hl, sp+$8
	ld [hl], $0
Func_3387c: ; 3387c (c:787c)
	ld hl, sp+$8
	ld a, [hl]
	cp $5
	jp nc, Func_338b8
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld a, [hl]
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	inc hl
	reg16swap de, hl
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, de
	ld [hl], a
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	jp Func_3387c

Func_338b8: ; 338b8 (c:78b8)
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $1f
	add hl, de
	ld a, $1
	or [hl]
	ld [hl], a
Func_338d5: ; 338d5 (c:78d5)
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, $c980
	add hl, de
	ld [hl], $0
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, wPlayerName
	add hl, de
	ld [hl], $0
	pop af
	call GetSRAMBank
Func_338ef: ; 338ef (c:78ef)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_338f5: ; 338f5 (c:78f5)
	push bc
	push bc
	push bc
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld hl, $5
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus5
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	call GetHLAtSPPlus5
	inc hl
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
	ld hl, $d
	add hl, bc
	ld l, [hl]
	push hl
	push af
	ld a, [wc2f6]
	ld e, a
	pop af
	push de
	push af
	ld b, $a
	call DivideAbyB
	ld a, b
	pop af
	ld b, $a
	call DivideAbyB
	pop de
	pop hl
	push hl
	push de
	ld a, l
	cp $32
	jp nz, Func_33946
	xor a
Func_33946: ; 33946 (c:7946)
	ld l, $a
	push hl
	ld c, $a
	ld e, $8
	ld a, $a
	call Func_3afc
	pop bc
	call GetHLAtSPPlus9
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	call GetHLAtSPPlus9
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$5
	ld l, [hl]
	ld h, a
	call Func_30313
	pop de
	ld c, e
	ld b, $0
	ld hl, sp+$3
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	inc hl
	ld de, $202
	call Func_2230
	pop hl
	ld a, l
	cp $32
	jp nz, Func_33996
	ld a, [wc2f6]
	ld c, a
	ld e, l
	ld hl, sp+$0
	ld a, [hl]
	call Func_312a4
Func_33996: ; 33996 (c:7996)
	ld a, [wc2f7]
	cp $1
	jp z, Func_339d4
	or a
	jp nz, Func_33a03
	ld hl, sp+$1
	ld e, [hl]
	ld d, $0
	inc de
	inc de
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, Data_33a17
	call PlaceStringDEatCoordHL
	ld hl, sp+$1
	ld e, [hl]
	ld d, $0
	inc de
	inc de
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	ld de, Data_33a19
	call PlaceStringDEatCoordHL
	jp Func_33a03

Func_339d4: ; 339d4 (c:79d4)
	ld hl, sp+$1
	ld e, [hl]
	ld d, $0
	inc de
	inc de
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, Data_33a1b
	call PlaceStringDEatCoordHL
	ld hl, sp+$1
	ld e, [hl]
	ld d, $0
	inc de
	inc de
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	ld de, Data_33a1d
	call PlaceStringDEatCoordHL
Func_33a03: ; 33a03 (c:7a03)
	ld l, $a
	push hl
	ld c, $a
	ld e, $8
	ld a, $a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Data_33a17: ; 33a17
	db "_", $0

Data_33a19: ; 33a19
	db "b", $0

Data_33a1b: ; 33a1b
	db "b", $0

Data_33a1d: ; 33a1d
	db "_", $0

Func_33a1f: ; 33a1f
	push bc
	push bc
	push bc
	push hl
	push de
	reg16swap de, hl
	ld hl, $5
	add hl, de
	ld a, [hl]
	ld hl, sp+$8
	ld [hl], a
	ld hl, wc2f6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	reg16swap de, hl
	call WriteHLToSPPlus8
	ld hl, wc2f6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	call WriteHLToSPPlus6
	pop de
	ld a, e
	dec a
	or d
	jp z, Func_33aee
	ld a, e
	or d
	jp nz, Func_33b9b
	ld a, [wc2f7]
	cp $1
	jp z, Func_33ac0
	or a
	jp nz, Func_33aeb
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	call CompareHLtoBC
	jp nc, Func_33a99
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	ld de, $a
	call CompareHLtoDE
	jp c, Func_33a96
	ld hl, $0
	call WriteHLToSPPlus6
Func_33a96: ; 33a96 (c:7a96)
	jp Func_33abd

Func_33a99: ; 33a99 (c:7a99)
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	push hl
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_33abd
	ld hl, $0
	call WriteHLToSPPlus6
Func_33abd: ; 33abd (c:7abd)
	jp Func_33aeb

Func_33ac0: ; 33ac0 (c:7ac0)
	call GetHLAtSPPlus4
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus6
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	pop de
	add hl, de
	reg16swap de, hl
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_33aeb
	ld hl, $0
	call WriteHLToSPPlus4
Func_33aeb: ; 33aeb (c:7aeb)
	jp Func_33b9b

Func_33aee: ; 33aee (c:7aee)
	ld a, [wc2f7]
	cp $1
	jp z, Func_33b48
	or a
	jp nz, Func_33b9b
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	call CompareHLtoBC
	jp nc, Func_33b26
	call GetHLAtSPPlus6
	dec hl
	call WriteHLToSPPlus6
	inc h
	dec h
	bit 7, h
	jr z, .asm_33b23
	ld hl, $9
	call WriteHLToSPPlus6
.asm_33b23
	jp Func_33b45

Func_33b26: ; 33b26 (c:7b26)
	call GetHLAtSPPlus6
	dec hl
	call WriteHLToSPPlus6
	inc h
	dec h
	bit 7, h
	jr z, Func_33b45
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	reg16swap de, hl
	call WriteHLToSPPlus6
Func_33b45: ; 33b45 (c:7b45)
	jp Func_33b9b

Func_33b48: ; 33b48 (c:7b48)
	call GetHLAtSPPlus4
	dec hl
	call WriteHLToSPPlus4
	inc h
	dec h
	bit 7, h
	jr z, Func_33b9b
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_33b8d
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	dec hl
	call WriteHLToSPPlus4
	jp Func_33b9b

Func_33b8d: ; 33b8d (c:7b8d)
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $a
	call DivideHLByDESigned
	call WriteHLToSPPlus4
Func_33b9b: ; 33b9b (c:7b9b)
	call GetHLAtSPPlus4
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus8
	pop de
	add hl, de
	ld a, l
	ld [wc2f6], a
	pop hl
	call Func_338f5
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Func_33bb9: ; 33bb9
	xor a
	ld [wc2f7], a
	call Func_338f5
	ld hl, $4000
	ret

Func_33bc4: ; 33bc4
	ld a, $1
	ld [wc2f7], a
	call Func_338f5
	ld hl, $4000
	ret

Func_33bd0: ; 33bd0 (c:7bd0)
	ld hl, -$8e
	add hl, sp
	ld sp, hl
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $b
	add hl, de
	ld a, [hl]
	push af
	ld e, a
	ld hl, sp+$4a
	call Func_241f
	set_farcall_addrs_hli Func_55f95
	pop af
	ld e, a
	ld hl, sp+$2
	ld c, $2
	call FarCall
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_15ad6
	ld c, $6
	ld hl, sp+$36
	reg16swap de, hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	inc h
	call FarCall
	pop af
	ld e, a
	dec e
	ld hl, sp+$60
	call GetRobotOrTrainerBaseStats
	ld a, BANK(Text_66ea7)
	ld [wFarCallDestBank], a
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Text_66ea7
	add hl, de
	reg16swap de, hl
	ld hl, sp+$20
	ld bc, $7
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$32
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $0
	call FarCall
	ld hl, Data_33d73
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$1e
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	ld de, Data_33d75
	ld hl, $4
	call PlaceStringDEatCoordHL
	ld de, Data_33d80
	ld hl, $506
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_17e95
	ld c, $3
	ld e, $9
	ld hl, $7
	call FarCall
	ld c, $8
	ld e, $a
	ld hl, $a
	call FarCall
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld de, $8
	ld hl, $1
	call FarCall
	ld de, Data_33d85
	ld hl, $10b
	call PlaceStringDEatCoordHL
	ld hl, sp+$56
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_33d8e
	ld hl, $10d
	call PlaceStringDEatCoordHL
	ld hl, sp+$57
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_33d98
	ld hl, $10f
	call PlaceStringDEatCoordHL
	ld hl, sp+$58
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_33da1
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld hl, sp+$55
	ld a, [hl]
	add a
	ld d, a
	add a
	add a
	add d
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_33da6
	push hl
	call PlaceString
	pop bc
	ld hl, $8e
	add hl, sp
	ld sp, hl
	ret

Data_33d73: ; 33d73
	db ":", $0

Data_33d75: ; 33d75
	db "(そうひﾞちゅうの)", $0

Data_33d80: ; 33d80
	db "ハﾟーツ", $0

Data_33d85: ; 33d85
	db "(こうけﾞき )", $0

Data_33d8e: ; 33d8e
	db "(ほﾞうきﾞょ )", $0

Data_33d98: ; 33d98
	db "(すはﾞやさ )", $0

Data_33da1: ; 33da1
	db "RAM:", $0

Data_33da6: ; 33da6
	db "M", $0

Pointers_33da8: ; 33da8
	dw Data_33dac
	dw $0

Data_33dac: ; 33dac
	db "(すてちゃ)タﾞメ!", $0

Func_33db7: ; 33db7 (c:7db7)
	push bc
	push bc
	call WriteHLToSPPlus3
	call GetHLAtSPPlus3
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus3
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	call GetHLAtSPPlus3
	call Func_33f72
	cp $1
	jp nz, Func_33efa
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld de, Data_33f40
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_33f4b
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	ld a, $ff
	ld [wc39b], a
	set_farcall_addrs_hli Func_14db8
	call GetHLAtSPPlus3
	call FarCall
	ld a, [wc2f6]
	cp $ff
	jp z, Func_33ef7
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_30313
	ld de, Data_33f5b
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_33f63
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_33ef7
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld l, [hl]
	push hl
	push af
	set_farcall_addrs_hli Func_5a149
	ld c, $1
	ld a, [wc2f6]
	ld l, a
	push hl
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	pop de
	call FarCall
	ld c, a
	pop af
	push bc
	call GetSRAMBank
	pop bc
	pop hl
	ld a, c
	cp $1
	jp nz, Func_33ef7
	ld a, [wc2f6]
	cp l
	jp nz, Func_33ede
	call GetHLAtSPPlus3
	ld de, $7
	add hl, de
	ld e, c
	ld d, $0
	ld a, [hl]
	sub e
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc d
	ld [hl], a
Func_33ede: ; 33ede (c:7ede)
	call GetHLAtSPPlus3
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus3
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_33ef7: ; 33ef7 (c:7ef7)
	jp Func_33f3d

Func_33efa: ; 33efa (c:7efa)
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_33da8)
	ld de, Pointers_33da8
	ld hl, $10e
	call FarCall
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
Func_33f3d: ; 33f3d (c:7f3d)
	pop bc
	pop bc
	ret

Data_33f40: ; 33f40
	db "(すてる こすうを)", $0

Data_33f4b: ; 33f4b
	db "(にゅうりょくしてくたﾞさい)", $0

Data_33f5b: ; 33f5b
	db "(ほんとうに)", $0

Data_33f63: ; 33f63
	db "(すてても いいてﾞすか?)", $0

Func_33f72: ; 33f72 (c:7f72)
	push hl
	add sp, -$e
	read_hl_from_sp_plus $10
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $10
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	pop af
	push hl
	ld e, a
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $57b8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $d
	call FarCopyVideoData
	pop hl
	ld a, l
	call GetSRAMBank
	read_hl_from_sp_plus $d
	ld a, l
	or h
	jp nz, Func_33fdc
	ld hl, $ff
	jp Func_33fdf

Func_33fdc: ; 33fdc (c:7fdc)
	ld hl, $1
Func_33fdf: ; 33fdf (c:7fdf)
	ld a, l
	add sp, $10
	ret

SECTION "Bank 0d", ROMX, BANK [$d]
	dr $34000, $37ec0

SECTION "Bank 13", ROMX, BANK [$13]
Func_4c000: ; 4c000
	ret

Data_4c001: ; 4c001
	dr $4c001, $4c06f

Data_4c06f: ; 4c06f
	dr $4c06f, $4c07e

Data_4c07e: ; 4c07e
	dr $4c07e, $4c09d

Data_4c09d: ; 4c09d
	dr $4c09d, $4c0ac

Func_4c0ac: ; 4c0ac (13:40ac)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ret

Func_4c0b9: ; 4c0b9 (13:40b9)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ret

Func_4c0c6: ; 4c0c6 (13:40c6)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ret

Func_4c0d3: ; 4c0d3 (13:40d3)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Data_4c0e8: ; 4c0e8
	dr $4c0e8, $4c12c

Func_4c12c: ; 4c12c
	ld a, $2
	ld [wc39a], a
	call Func_4c0b9
	call Func_4c2a3
	or a
	jp nz, Func_4c1f5
	set_farcall_addrs_hli Func_da901
	ld de, $1402
	ld hl, $8
	call FarCall
	push hl
	callba_hli Func_6fe0
	pop hl
	or a
	jp nz, Func_4c1cf
	push hl
	set_farcall_addrs_hli Func_daa40
	pop hl
	call FarCall
	call Func_4c4b3
Func_4c176: ; 4c176 (13:4176)
	call Func_4c323
	ld a, [wc38d]
	cp $ff
	jp z, Func_4c197
	call Func_4c3de
	cp $ff
	jp z, Func_4c194
	push af
	call Func_1f30
	pop af
	call Func_4cf91
	call Func_1f7b
Func_4c194: ; 4c194 (13:4194)
	jp Func_4c19a

Func_4c197: ; 4c197 (13:4197)
	jp Func_4c19d

Func_4c19a: ; 4c19a (13:419a)
	jp Func_4c176

Func_4c19d: ; 4c19d (13:419d)
	xor a
	ld [wc31b], a
	xor a
	ld [wc319], a
	call DisableJoypadInt
	ld a, $81
	ld [rSC], a
	ld e, $0
Func_4c1ae: ; 4c1ae (13:41ae)
	read_hl_from wc391 + 2
	push hl
	read_hl_from wc391
	pop af
	ld a, e
	cp l
	jp nc, Func_4c1c8
	push de
	call NextOverworldFrame
	pop de
	inc e
	jp Func_4c1ae

Func_4c1c8: ; 4c1c8 (13:41c8)
	ld a, $80
	ld [rSC], a
	jp Func_4c1f5

Func_4c1cf: ; 4c1cf (13:41cf)
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	call Func_4c0b9
	set_farcall_addrs_hli PrintMapText_
	ld c, $13
	ld de, $40e8
	ld hl, $10e
	call FarCall
Func_4c1f5: ; 4c1f5 (13:41f5)
	ret

Func_4c1f6: ; 4c1f6 (13:41f6)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_4c20a: ; 4c20a (13:420a)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_4c21e: ; 4c21e (13:421e)
	push bc
	ld hl, sp+$0
	ld [hl], $ff
	ld a, [wc319]
	cp $81
	jp nz, Func_4c23c
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_4c20a
	jp Func_4c24a

Func_4c23c: ; 4c23c (13:423c)
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_4c1f6
Func_4c24a: ; 4c24a (13:424a)
	pop bc
	ret

Func_4c24c: ; 4c24c
	push af
	push bc
	ld a, [wc319]
	cp $81
	jp nz, Func_4c275
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call Func_4c20a
	jp Func_4c291

Func_4c275: ; 4c275 (13:4275)
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call Func_4c20a
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_4c1f6
Func_4c291: ; 4c291 (13:4291)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$0
	cp [hl]
	jp nz, Func_4c29e
	xor a
	jp Func_4c2a0

Func_4c29e: ; 4c29e (13:429e)
	ld a, $ff
Func_4c2a0: ; 4c2a0 (13:42a0)
	pop bc
	pop bc
	ret

Func_4c2a3: ; 4c2a3 (13:42a3)
	ld a, $3
	ld [wc39a], a
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld de, Data_4c307
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_4c318
	ld hl, $110
	call PlaceStringDEatCoordHL
	call Func_4c0b9
	callba_hli Func_1482e
	push hl
	ld a, l
	or h
	jp nz, Func_4c304
	ld a, [wPlayerMapX]
	ld [wSpawnX], a
	ld a, [wPlayerMapY]
	ld [wSpawnY], a
	ld a, [wPlayerMapX]
	ld [wc7e9], a
	ld a, [wPlayerMapY]
	ld [wc7ea], a
	callba_hli SaveGame
Func_4c304: ; 4c304 (13:4304)
	pop hl
	ld a, l
	ret

Data_4c307: ; 4c307
	db "(つうしんてﾞ あそふﾞまえに)", $0

Data_4c318: ; 4c318
	db "(きろくしますか)?", $0

Func_4c323: ; 4c323 (13:4323)
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $11
	jp nz, Func_4c355
	set_farcall_addrs_hli Func_613fc
	ld e, $0
	xor a
	call FarCall
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_4c369

Func_4c355: ; 4c355 (13:4355)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_4c369: ; 4c369 (13:4369)
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld a, [wc319]
	cp $81
	jp nz, Func_4c3ac
	ld de, Data_4c3be
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_4c3c7
	ld hl, $110
	call PlaceStringDEatCoordHL
	call Func_4c0b9
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_4c06f)
	ld de, Data_4c06f
	ld hl, Data_4c001
	call FarCall
	jp Func_4c3bc

Func_4c3ac: ; 4c3ac (13:43ac)
	call Func_4c0b9
Func_4c3af: ; 4c3af (13:43af)
	call Func_4c4f8
	or a
	jp nz, Func_4c3b9
	jp Func_4c3bc

Func_4c3b9: ; 4c3b9 (13:43b9)
	jp Func_4c3af

Func_4c3bc: ; 4c3bc (13:43bc)
	xor a
	ret

Data_4c3be: ; 4c3be
	db "(ほんしﾞつは)", $0

Data_4c3c7: ; 4c3c7
	db "(とﾞの)モートﾞ(てﾞ あそひﾞますか)?", $0

Func_4c3de: ; 4c3de (13:43de)
	ld a, [wc38d]
	cp $5
	jp z, Func_4c48a
	cp $4
	jp z, Func_4c481
	or a
	jp z, Func_4c442
	cp $2
	jp z, Func_4c43e
	cp $1
	jp z, Func_4c43e
	cp $3
	jp nz, Func_4c493
	ld a, $ff
	ld [wc308], a
	ld [wc307], a
	callba_hli Func_17470
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_58d4e)
	ld de, Data_58d4e
	ld hl, Data_58d2f
	call FarCall
	callba_hli Func_17488
	call Func_4c21e
	jp Func_4c4b0

Func_4c43e: ; 4c43e (13:443e)
	call Func_4cbbc
	ret

Func_4c442: ; 4c442 (13:4442)
	callba_hli AllocateMonsterStruct2
	set_farcall_addrs_hli Func_60e81
	ld a, $ff
	call FarCall
	push af
	callba_hli FreeMonsterStruct
	set_farcall_addrs_hli Func_6faba
	pop af
	call FarCall
	jp Func_4c4b0

Func_4c481: ; 4c481 (13:4481)
	call Func_4fb46
	call Func_4c21e
	jp Func_4c4b0

Func_4c48a: ; 4c48a (13:448a)
	call Func_4fedf
	call Func_4c21e
	jp Func_4c4b0

Func_4c493: ; 4c493 (13:4493)
	call Func_4c0ac
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $d
	call FarCall
	call Func_4c0b9
Func_4c4b0: ; 4c4b0 (13:44b0)
	ld a, $ff
	ret

Func_4c4b3: ; 4c4b3 (13:44b3)
	push bc
	ld a, [wc319]
	cp $81
	jp nz, Func_4c4ca
	ld c, $1
	ld de, wc2f9
	ld hl, $1
	call Func_4c1f6
	jp Func_4c4f6

Func_4c4ca: ; 4c4ca (13:44ca)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld hl, sp+$0
	ld a, [wcb57]
	ld [hl], a
	ld a, e
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_4c20a
Func_4c4f6: ; 4c4f6 (13:44f6)
	pop bc
	ret

Func_4c4f8: ; 4c4f8 (13:44f8)
	push bc
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld de, Data_4c5df
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_4c5e7
	ld hl, $110
	call PlaceStringDEatCoordHL
	call Func_4c0b9
	set_farcall_addrs_hli Func_7748
	ld c, $0
	ld hl, sp+$1
	reg16swap de, hl
	ld hl, $1
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
	ld [wc38d], a
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp z, Func_4c54a
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp nz, Func_4c5d9
Func_4c54a: ; 4c54a (13:454a)
	ld hl, sp+$0
	ld [hl], $0
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	xor a
Func_4c563: ; 4c563 (13:4563)
	cp $4
	jp nc, Func_4c58c
	push af
	ld l, a
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_4c587
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
Func_4c587: ; 4c587 (13:4587)
	pop af
	inc a
	jp Func_4c563

Func_4c58c: ; 4c58c (13:458c)
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_7766
	ld c, $0
	ld hl, sp+$0
	push de
	push hl
.asm_4c5a1
	pop de
	pop hl
	ld hl, $1
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
.asm_4c5ac
	cp $4
	jp nz, Func_4c5c1
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nz, Func_4c5c1
	call FillVisibleAreaWithBlankTile
	ld a, $1
	jp Func_4c5dd

Func_4c5c1: ; 4c5c1 (13:45c1)
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp nz, Func_4c5d9
	ld hl, sp+$0
	ld a, [hl]
	cp $1
	jp nz, Func_4c5d9
	call FillVisibleAreaWithBlankTile
	ld a, $1
	jp Func_4c5dd

Func_4c5d9: ; 4c5d9 (13:45d9)
	call FillVisibleAreaWithBlankTile
	xor a
Func_4c5dd: ; 4c5dd (13:45dd)
	pop bc
	ret

Data_4c5df: ; 4c5df
	db "(たたﾞいま)", $0

Data_4c5e7: ; 4c5e7
	db "モートﾞ (せんたくちゅう)", $0

Pointers_4c5f6: ; 4c5f6
	dw Data_4c604
	dw Data_4c611
	dw Data_4c623
	dw Data_4c635
	dw Data_4c64e
	dw Data_4c662
	dw $0

Data_4c604: ; 4c604
	db "タイトルマッチ(てﾞは)", $0

Data_4c611: ; 4c611
	db "ヘﾞルト(をかけて たたかいます)", $0

Data_4c623: ; 4c623
	db "(かてはﾞ あいての もっている)", $0

Data_4c635: ; 4c635
	db "ヘﾞルト(を うはﾞうことかﾞ てﾞきますかﾞ)", $0

Data_4c64e: ; 4c64e
	db "(まけると しﾞふﾞんの もっている)", $0

Data_4c662: ; 4c662
	db "ヘﾞルト(を うはﾞわれて しまいます)", $0

Pointers_4c677: ; 4c677
	dw Data_4c67b
	dw $0

Data_4c67b: ; 4c67b
	db "ヘﾞルト(かﾞ ありません)", $0

Func_4c68a: ; 4c68a
	push bc
	push hl
	call Func_4c0ac
	call Func_4c0b9
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld hl, sp+$1
	ld [hl], a
	ld hl, sp+$1
	ld a, [hl]
	cp $1
	jp nz, Func_4c726
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld a, [wcb57]
	ld l, a
	push hl
	ld a, e
	call GetSRAMBank
	pop hl
	ld a, [wc2f9]
	cp $1
	jp nz, Func_4c6f5
	ld a, l
	cp $1
	jp nz, Func_4c6f5
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_4c5f6)
	ld de, Pointers_4c5f6
	ld hl, $10e
	call FarCall
	jp Func_4c726

Func_4c6f5: ; 4c6f5 (13:46f5)
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	call Func_4c0b9
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_4c677)
	ld de, Pointers_4c677
	ld hl, $10e
	call FarCall
	ld a, $4
	call Func_4ca74
	ld hl, $8000
	jp Func_4c8f7

Func_4c726: ; 4c726 (13:4726)
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp z, Func_4c78f
	cp $4
	jp z, Func_4c783
	or a
	jp z, Func_4c777
	cp $2
	jp z, Func_4c76b
	cp $1
	jp z, Func_4c75f
	cp $3
	jp nz, Func_4c798
	ld de, Data_4c8f9
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_4c798

Func_4c75f: ; 4c75f (13:475f)
	ld de, Data_4c908
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_4c798

Func_4c76b: ; 4c76b (13:476b)
	ld de, Data_4c914
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_4c798

Func_4c777: ; 4c777 (13:4777)
	ld de, Data_4c922
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_4c798

Func_4c783: ; 4c783 (13:4783)
	ld de, Data_4c931
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_4c798

Func_4c78f: ; 4c78f (13:478f)
	ld de, Data_4c940
	ld hl, $10e
	call PlaceStringDEatCoordHL
Func_4c798: ; 4c798 (13:4798)
	ld hl, sp+$1
	ld a, [hl]
	cp $3
	jp nc, Func_4c7ac
	ld de, Data_4c94e
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_4c7b5

Func_4c7ac: ; 4c7ac (13:47ac)
	ld de, Data_4c95b
	ld hl, $110
	call PlaceStringDEatCoordHL
Func_4c7b5: ; 4c7b5 (13:47b5)
	call Func_4c0b9
	callba_hli Func_1482e
	reg16swap de, hl
	ld a, e
	or d
	jp nz, Func_4c859
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp z, Func_4c7df
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp nz, Func_4c859
Func_4c7df: ; 4c7df (13:47df)
	push de
	ld hl, sp+$2
	ld [hl], $0
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	xor a
Func_4c7f9: ; 4c7f9 (13:47f9)
	cp $4
	jp nc, Func_4c822
	push af
	ld l, a
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_4c81d
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
Func_4c81d: ; 4c81d (13:481d)
	pop af
	inc a
	jp Func_4c7f9

Func_4c822: ; 4c822 (13:4822)
	pop af
	call GetSRAMBank
	pop de
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp nz, Func_4c841
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nz, Func_4c841
	xor a
	call Func_4ca74
	ld de, $1
	jp Func_4c859

Func_4c841: ; 4c841 (13:4841)
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp nz, Func_4c859
	ld hl, sp+$0
	ld a, [hl]
	cp $1
	jp nz, Func_4c859
	ld a, $1
	call Func_4ca74
	ld de, $1
Func_4c859: ; 4c859 (13:4859)
	ld a, e
	or d
	jp nz, Func_4c8ef
	ld hl, sp+$1
	ld a, [hl]
	ld [wc38d], a
	set_farcall_addrs_hli Func_7766
	ld c, $0
	ld hl, sp+$1
	reg16swap de, hl
	ld hl, $1
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp z, Func_4c88d
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp nz, Func_4c8e6
Func_4c88d: ; 4c88d (13:488d)
	set_farcall_addrs_hli Func_7748
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp nz, Func_4c8c6
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nz, Func_4c8c6
	ld a, $2
	call Func_4ca74
	ld a, $4
	call Func_4ca74
	ld hl, $8000
	jp Func_4c8f7

Func_4c8c6: ; 4c8c6 (13:48c6)
	ld hl, sp+$1
	ld a, [hl]
	cp $5
	jp nz, Func_4c8e6
	ld hl, sp+$0
	ld a, [hl]
	cp $1
	jp nz, Func_4c8e6
	ld a, $3
	call Func_4ca74
	ld a, $4
	call Func_4ca74
	ld hl, $8000
	jp Func_4c8f7

Func_4c8e6: ; 4c8e6 (13:48e6)
	call FillVisibleAreaWithBlankTile
	ld hl, -1
	jp Func_4c8f7

Func_4c8ef: ; 4c8ef (13:48ef)
	ld a, $4
	call Func_4ca74
	ld hl, $8000
Func_4c8f7: ; 4c8f7 (13:48f7)
	pop bc
	ret

Data_4c8f9: ; 4c8f9
	db "ロホﾞホﾟン(こうかんてﾞ)", $0

Data_4c908: ; 4c908
	db "タイトルマッチ(てﾞ)", $0

Data_4c914: ; 4c914
	db "ノンタイトルマッチ(てﾞ)", $0

Data_4c922: ; 4c922
	db "ハﾟーティーハﾞトル(てﾞ)", $0

Data_4c931: ; 4c931
	db "ロホﾞホﾟン(あけﾞるてﾞ)", $0

Data_4c940: ; 4c940
	db "ロホﾞホﾟン(もらうてﾞ)", $0

Data_4c94e: ; 4c94e
	db "(たいせん しますか)?", $0

Data_4c95b: ; 4c95b
	db "(いいてﾞすか)?", $0

Pointers_4c965: ; 4c965
	dw Data_4c96b
	dw Data_4c984
	dw $0

Data_4c96b: ; 4c96b
	db "ハﾟーティー(に 4たい) ロホﾞホﾟン(かﾞ)", $0

Data_4c984: ; 4c984
	db "(いるから もらえないよ)", $0

Pointers_4c992: ; 4c992
	dw Data_4c998
	dw Data_4c9b3
	dw $0

Data_4c998: ; 4c998
	db "ハﾟーティー(に 1たいしか) ロホﾞホﾟン(かﾞ)", $0

Data_4c9b3: ; 4c9b3
	db "(いないから あけﾞれないよ)", $0

Pointers_4c9c3: ; 4c9c3
	dw Data_4c9c9
	dw Data_4c9df
	dw $0

Data_4c9c9: ; 4c9c9
	db "(あいての) ロホﾞホﾟン(かﾞ 4たい)", $0

Data_4c9df: ; 4c9df
	db "(いるから あけﾞれないよ)", $0

Pointers_4c9ee: ; 4c9ee
	dw Data_4c9f4
	dw Data_4ca0a
	dw $0

Data_4c9f4: ; 4c9f4
	db "(あいての) ロホﾞホﾟン(かﾞ 1たい)", $0

Data_4ca0a: ; 4ca0a
	db "(しかいないから もらえないよ)", $0

Pointers_4ca1b: ; 4ca1b
	dw Data_4ca21
	dw Data_4ca30
	dw $0

Data_4ca21: ; 4ca21
	db "(その) ロホﾞホﾟン(は)", $0

Data_4ca30: ; 4ca30
	db "(あけﾞれないよ)", $0

Pointers_4ca3a: ; 4ca3a
	dw Data_4ca3e
	dw $0

Data_4ca3e: ; 4ca3e
	db "(あけﾞたよ)", $0

Pointers_4ca46: ; 4ca46
	dw Data_4ca4a
	dw $0

Data_4ca4a: ; 4ca4a
	db "(もらったよ)", $0

Pointers_4ca52: ; 4ca52
	dw Data_4ca58
	dw Data_4ca6b
	dw $0

Data_4ca58: ; 4ca58
	db "(たたかえる) ロホﾞホﾟン(かﾞ)", $0

Data_4ca6b: ; 4ca6b
	db "(いなくなるよ)", $0

Func_4ca74: ; 4ca74 (13:4a74)
	push af
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	pop af
	push af
	cp $4
	jp z, Func_4ca9e
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
Func_4ca9e: ; 4ca9e (13:4a9e)
	set_farcall_addrs_hli PrintMapText_
	pop af
	cp $a
	jp z, Func_4cb59
	cp $9
	jp z, Func_4cb4b
	cp $8
	jp z, Func_4cb3d
	cp $5
	jp z, Func_4cb2f
	cp $4
	jp z, Func_4cb0e
	cp $3
	jp z, Func_4cb00
	cp $2
	jp z, Func_4caf2
	cp $1
	jp z, Func_4cae4
	or a
	jp nz, Func_4cb64
	ld c, BANK(Pointers_4c965)
	ld de, Pointers_4c965
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4cae4: ; 4cae4 (13:4ae4)
	ld c, BANK(Pointers_4c992)
	ld de, Pointers_4c992
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4caf2: ; 4caf2 (13:4af2)
	ld c, BANK(Pointers_4c9c3)
	ld de, Pointers_4c9c3
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4cb00: ; 4cb00 (13:4b00)
	ld c, BANK(Pointers_4c9ee)
	ld de, Pointers_4c9ee
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4cb0e: ; 4cb0e (13:4b0e)
	ld de, Data_4cb65
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_4cb6e
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	jp Func_4cb64

Func_4cb2f: ; 4cb2f (13:4b2f)
	ld c, BANK(Pointers_4ca1b)
	ld de, Pointers_4ca1b
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4cb3d: ; 4cb3d (13:4b3d)
	ld c, BANK(Pointers_4ca3a)
	ld de, Pointers_4ca3a
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4cb4b: ; 4cb4b (13:4b4b)
	ld c, BANK(Pointers_4ca46)
	ld de, Pointers_4ca46
	ld hl, $10e
	call FarCall
	jp Func_4cb64

Func_4cb59: ; 4cb59 (13:4b59)
	ld c, BANK(Pointers_4ca52)
	ld de, Pointers_4ca52
	ld hl, $10e
	call FarCall
Func_4cb64: ; 4cb64 (13:4b64)
	ret

Data_4cb65: ; 4cb65
	db "(ほんしﾞつは)", $0

Data_4cb6e: ; 4cb6e
	db "(とﾞの)モートﾞ(てﾞ あそひﾞますか)?", $0

Func_4cb85: ; 4cb85
	ld a, $ff
	ld [wc38d], a
	set_farcall_addrs_hli Func_7766
	ld c, $0
	ld de, wc38d
	ld hl, $1
	call FarCall
	call FillVisibleAreaWithBlankTile
	ld hl, -1
	ret

Pointers_4cba7: ; 4cba7
	dw Data_4cbab
	dw $0

Data_4cbab: ; 4cbab
	db "スクラッフﾟ(に なっているよ)", $0

Func_4cbbc: ; 4cbbc (13:4bbc)
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Pointers_4cba7
	ld bc, $4
	call MemCopy
Func_4cbcf: ; 4cbcf (13:4bcf)
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $3
	call FarCall
	ld a, l
	cp $4
	jp nc, Func_4cc44
	set_farcall_addrs_hli Func_6e1b
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	call FarCall
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_4cc09
	jp Func_4cc47

Func_4cc09: ; 4cc09 (13:4c09)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, $13
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $10e
	call FarCall
Func_4cc44: ; 4cc44 (13:4c44)
	jp Func_4cbcf

Func_4cc47: ; 4cc47 (13:4c47)
	ld a, [wc38d]
	cp $1
	jp nz, Func_4cc4f
Func_4cc4f: ; 4cc4f (13:4c4f)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_4c09d)
	ld de, Data_4c09d
	ld hl, Data_4c07e
	call FarCall
	call WriteHLToSPPlus8
	ld a, [wc319]
	cp $81
	jp nz, Func_4cc8f
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $2
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $2
	call Func_4c20a
	jp Func_4ccab

Func_4cc8f: ; 4cc8f (13:4c8f)
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $2
	call Func_4c20a
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $2
	call Func_4c1f6
Func_4ccab: ; 4ccab (13:4cab)
	call GetHLAtSPPlus8
	ld a, l
	and h
	inc a
	jp z, Func_4ccbd
	call GetHLAtSPPlus6
	ld a, l
	and h
	inc a
	jp nz, Func_4ccc2
Func_4ccbd: ; 4ccbd (13:4cbd)
	ld a, $ff
	jp Func_4ccc6

Func_4ccc2: ; 4ccc2 (13:4cc2)
	call GetHLAtSPPlus8
	ld a, l
Func_4ccc6: ; 4ccc6 (13:4cc6)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Pointers_4cccb: ; 4cccb
	dw Data_4ccd5
	dw Data_4ccdb
	dw Data_4cce3
	dw Data_4cceb
	dw Data_4ccf2

Data_4ccd5: ; 4ccd5
	db "ハﾞトラー", $0

Data_4ccdb: ; 4ccdb
	db "シﾞャンハﾟー", $0

Data_4cce3: ; 4cce3
	db "スヒﾟータﾞー", $0

Data_4cceb: ; 4cceb
	db "シールタﾞー", $0

Data_4ccf2: ; 4ccf2
	db "ハﾟンチャー", $0

Func_4ccf9: ; 4ccf9
	push bc
	push bc
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$1
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	inc hl
	ld l, [hl]
	push hl
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	call Func_4c0ac
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$1
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, a
	call Func_4c0d3
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus4
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
	add $2
	ld hl, sp+$1
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	ld c, $0
Func_4cd52: ; 4cd52 (13:4d52)
	call GetHLAtSPPlus4
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_4cd88
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	ld de, Pointers_4cccb
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call PlaceStringDEatCoordHL
	ld hl, sp+$2
	ld a, [hl]
	add $2
	ld hl, sp+$2
	ld [hl], a
	pop bc
	inc c
	jp Func_4cd52

Func_4cd88: ; 4cd88 (13:4d88)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld de, Data_4cdb1
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_4cdc3
	ld hl, $110
	call PlaceStringDEatCoordHL
	xor a
	call Func_4ce6c
	call Func_4c0b9
	ld hl, $4000
	pop bc
	pop bc
	ret

Data_4cdb1: ; 4cdb1
	db "(たいせんする) ステーシﾞ(を)", $0

Data_4cdc3: ; 4cdc3
	db "(えらんてﾞくたﾞさい)", $0

Pointers_4cdd0: ; 4cdd0
	dw Data_4cde4
	dw Data_4cdf6
	dw Data_4ce01
	dw Data_4ce0b
	dw Data_4ce1a

Pointers_4cdda: ; 4cdda
	dw Data_4ce27
	dw Data_4ce32
	dw Data_4ce41
	dw Data_4ce4f
	dw Data_4ce5c

Data_4cde4: ; 4cde4
	db "(つうしﾞょうの)ハﾞトル(てﾞ)", $0

Data_4cdf6: ; 4cdf6
	db "(ひきょりをきそう)", $0

Data_4ce01: ; 4ce01
	db "タイム(をきそう)", $0

Data_4ce0b: ; 4ce0b
	db "(かﾞんしﾞょうさをきそう)", $0

Data_4ce1a: ; 4ce1a
	db "(はかいりょくをきそう)", $0

Data_4ce27: ; 4ce27
	db "((たいせんします)", $0

Data_4ce32: ; 4ce32
	db "シﾞャンフﾟケﾞーム(てﾞ)", $0

Data_4ce41: ; 4ce41
	db "(めいろ)ケﾞーム(てﾞ)", $0

Data_4ce4f: ; 4ce4f
	db "カートﾞケﾞーム(てﾞ)", $0

Data_4ce5c: ; 4ce5c
	db "ハﾟンチンクﾞケﾞーム(てﾞ)", $0

Func_4ce6c: ; 4ce6c (13:4e6c)
	push af
	ld c, $7
	ld e, $c
	ld hl, $802
	call Func_4c0d3
	pop af
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Pointers_4cdd0
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $903
	call PlaceStringDEatCoordHL
	pop af
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Pointers_4cdda
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $905
	call PlaceStringDEatCoordHL
	pop af
	or a
	jp z, Func_4ceb1
	read_hl_from Pointers_4cdda
	reg16swap de, hl
	ld hl, $907
	call PlaceStringDEatCoordHL
Func_4ceb1: ; 4ceb1 (13:4eb1)
	ret

Func_4ceb2: ; 4ceb2
	push bc
	push bc
	push bc
	push de
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus10
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop de
	ld a, e
	dec a
	or d
	jp z, Func_4cf19
	ld a, e
	or d
	jp nz, Func_4cf4b
	call GetHLAtSPPlus4
	dec hl
	call WriteHLToSPPlus4
	inc h
	dec h
	bit 7, h
	jr z, .asm_4cf16
	ld hl, $0
	call WriteHLToSPPlus4
	dec bc
	inc b
	dec b
	bit 7, b
	jr z, .asm_4cf16
	ld bc, $0
.asm_4cf16
	jp Func_4cf4b

Func_4cf19: ; 4cf19 (13:4f19)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	pop de
	call CompareHLtoDE
	jp c, Func_4cf4b
	pop hl
	push hl
	dec hl
	call WriteHLToSPPlus4
	inc bc
	pop hl
	push hl
	add hl, bc
	push hl
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_4cf4b
	dec bc
Func_4cf4b: ; 4cf4b (13:4f4b)
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus6
	call FarCall
	call GetHLAtSPPlus4
	ld a, l
	call Func_4ce6c
	call Func_4c0c6
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Func_4cf85: ; 4cf85
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ret

Func_4cf8d: ; 4cf8d
	ld hl, -1
	ret

Func_4cf91: ; 4cf91 (13:4f91)
	push af
	push bc
	push bc
	push bc
	push bc
	push bc
	call Func_4c0ac
	call Func_4c0b9
	ld a, [wc319]
	cp $81
	jp nz, Func_4cfdd
	ld hl, sp+$b
	ld a, [hl]
	ld hl, sp+$6
	ld [hl], a
	ld c, $1
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, $1
	call Func_4c1f6
	set_farcall_addrs_hli RandomRange
	ld a, $5
	call FarCall
	ld hl, sp+$8
	ld [hl], a
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $3
	call Func_4c20a
	jp Func_4cff9

Func_4cfdd: ; 4cfdd (13:4fdd)
	ld c, $1
	ld hl, sp+$b
	reg16swap de, hl
	ld hl, $1
	call Func_4c20a
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $3
	call Func_4c1f6
Func_4cff9: ; 4cff9 (13:4ff9)
	call Func_4c0ac
	call FillVisibleAreaWithBlankTile
	ld e, $0
	ld hl, sp+$6
	call Func_4d84e
	ld hl, sp+$0
	ld a, [wc307]
	ld [hl], a
	ld hl, sp+$1
	ld a, [wc308]
	ld [hl], a
	call Func_4c0b9
	callba_hli FreeMonsterStruct
Func_4d023: ; 4d023 (13:5023)
	callba_hli WaitAorBButtonOverworld_17a44
	cp $10
	jp nz, Func_4d039
	jp Func_4d03c

Func_4d039: ; 4d039 (13:5039)
	jp Func_4d023

Func_4d03c: ; 4d03c (13:503c)
	ld hl, sp+$5
	ld [hl], $0
Func_4d040: ; 4d040 (13:5040)
	ld hl, sp+$5
	ld a, [hl]
	cp $3
	jp nc, Func_4d12a
	callba_hli AllocateMonsterStruct2
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_4d069
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4d07d
Func_4d069: ; 4d069 (13:5069)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_4d07d: ; 4d07d (13:507d)
	ld a, $3
	ld [wc39a], a
	call Func_4c0ac
	ld c, $3
	ld e, $a
	ld hl, $505
	call Func_4c0d3
	ld e, $6
	ld a, $6
	call SetStringStartState
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	inc hl
	push hl
	ld hl, Data_4d1d4
	push hl
	call PlaceString
	pop bc
	pop bc
	call Func_4c0b9
	xor a
Func_4d0aa: ; 4d0aa (13:50aa)
	cp $5a
	jp nc, Func_4d0b8
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_4d0aa

Func_4d0b8: ; 4d0b8 (13:50b8)
	ld c, $0
Func_4d0ba: ; 4d0ba (13:50ba)
	ld a, c
	cp $2
	jp nc, Func_4d0e5
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc307
	add hl, de
	cp [hl]
	jp z, Func_4d0e1
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc307
	add hl, de
	ld [hl], a
Func_4d0e1: ; 4d0e1 (13:50e1)
	inc c
	jp Func_4d0ba

Func_4d0e5: ; 4d0e5 (13:50e5)
	ld hl, sp+$5
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld a, [hl]
	call Func_4d1e1
	ld hl, sp+$5
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld [hl], a
	callba_hli FreeMonsterStruct
	ld hl, sp+$5
	ld a, [hl]
	cp $1
	jp nz, Func_4d120
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$3
	cp [hl]
	jp nz, Func_4d120
	ld hl, sp+$4
	ld [hl], $ff
	jp Func_4d12a

Func_4d120: ; 4d120 (13:5120)
	ld hl, sp+$5
	ld a, [hl]
	inc a
	ld hl, sp+$5
	ld [hl], a
	jp Func_4d040

Func_4d12a: ; 4d12a (13:512a)
	call FillVisibleAreaWithBlankTile
	callba_hli AllocateMonsterStruct2
	ld c, $0
Func_4d13d: ; 4d13d (13:513d)
	ld a, c
	cp $2
	jp nc, Func_4d168
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc307
	add hl, de
	cp [hl]
	jp z, Func_4d164
	ld e, c
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc307
	add hl, de
	ld [hl], a
Func_4d164: ; 4d164 (13:5164)
	inc c
	jp Func_4d13d

Func_4d168: ; 4d168 (13:5168)
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$6
	call Func_4d299
	callba_hli FreeMonsterStruct
	callba_hli SaveGame
	callba_hli WaitAorBButtonOverworld_17a44
	call Func_4c21e
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_4d1b3
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4d1c7
Func_4d1b3: ; 4d1b3 (13:51b3)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_4d1c7: ; 4d1c7 (13:51c7)
	call Func_4c0c6
	ld hl, -1
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_4d1d4: ; 4d1d4
	db "(たﾞい)"
	TX_SNUM
	db "(しあい)", $0

Func_4d1e1: ; 4d1e1 (13:51e1)
	push af
	ld a, [wSongCurrentlyPlaying]
	ld e, a
	pop af
	push de
	cp $4
	jp z, Func_4d26c
	cp $3
	jp z, Func_4d259
	cp $2
	jp z, Func_4d246
	cp $1
	jp z, Func_4d233
	or a
	jp nz, Func_4d27c
	set_farcall_addrs_hli Func_60e81
	ld a, [wc319]
	cp $81
	jp nz, Func_4d21d
	ld a, [wc307]
	call FarCall
	ld l, a
	jp Func_4d230

Func_4d21d: ; 4d21d (13:521d)
	ld a, [wc308]
	call FarCall
	ld l, a
	inc l
	dec l
	jp nz, Func_4d22e
	ld l, $1
	jp Func_4d230

Func_4d22e: ; 4d22e (13:522e)
	ld l, $0
Func_4d230: ; 4d230 (13:5230)
	jp Func_4d27c

Func_4d233: ; 4d233 (13:5233)
	set_farcall_addrs_hli Func_6d395
	ld a, $1
	call FarCall
	jp Func_4d27c

Func_4d246: ; 4d246 (13:5246)
	set_farcall_addrs_hli Func_10abf
	ld a, $1
	call FarCall
	jp Func_4d27c

Func_4d259: ; 4d259 (13:5259)
	set_farcall_addrs_hli Func_1228e
	ld a, $1
	call FarCall
	jp Func_4d27c

Func_4d26c: ; 4d26c (13:526c)
	set_farcall_addrs_hli Func_6c5bb
	ld a, $1
	call FarCall
Func_4d27c: ; 4d27c (13:527c)
	pop de
	push hl
	ld a, e
	call OverworldPlaySong
	pop hl
	ld a, l
	ret

Data_4d285: ; 4d285
	dr $4d285, $4d299

Func_4d299: ; 4d299 (13:5299)
	push hl
	ld hl, -$88
	add hl, sp
	ld sp, hl
	push de
	call Func_4c0ac
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_4d2b6
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4d2ca
Func_4d2b6: ; 4d2b6 (13:52b6)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_4d2ca: ; 4d2ca (13:52ca)
	ld a, [wc319]
	cp $81
	jp nz, Func_4d2ec
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$67
	reg16swap de, hl
	ld a, [wc307]
	call FarCall
	jp Func_4d303

Func_4d2ec: ; 4d2ec (13:52ec)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$44
	reg16swap de, hl
	ld a, [wc308]
	call FarCall
Func_4d303: ; 4d303 (13:5303)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	read_hl_from wcb55
	call WriteHLToSPPlus8
	ld hl, sp+$8
	xor a
	ld [hl], a
	ld hl, sp+$9
	ld [hl], a
	ld c, $0
	pop af
	pop de
	push af
Func_4d32b: ; 4d32b (13:532b)
	ld a, c
	cp $3
	jp nc, Func_4d469
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_4d465
	ld a, [wc319]
	cp $81
	jp nz, Func_4d3d4
	push de
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_4d390
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb3f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, 999
	call CompareHLtoDE
	jp nc, Func_4d386
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb3f
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_4d386: ; 4d386 (13:5386)
	ld hl, sp+$9
	ld a, [hl]
	inc a
	ld hl, sp+$9
	ld [hl], a
	jp Func_4d3d0

Func_4d390: ; 4d390 (13:5390)
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb49
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, 999
	call CompareHLtoDE
	jp nc, Func_4d3c9
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb49
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_4d3c9: ; 4d3c9 (13:53c9)
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
Func_4d3d0: ; 4d3d0 (13:53d0)
	pop de
	jp Func_4d465

Func_4d3d4: ; 4d3d4 (13:53d4)
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_4d423
	push de
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb3f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, 999
	call CompareHLtoDE
	jp nc, Func_4d418
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb3f
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_4d418: ; 4d418 (13:5418)
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	pop de
	jp Func_4d465

Func_4d423: ; 4d423 (13:5423)
	push de
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb49
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, 999
	call CompareHLtoDE
	jp nc, Func_4d45d
	read_hl_from_sp_plus $8e
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wcb49
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_4d45d: ; 4d45d (13:545d)
	ld hl, sp+$9
	ld a, [hl]
	inc a
	ld hl, sp+$9
	ld [hl], a
	pop de
Func_4d465: ; 4d465 (13:5465)
	inc c
	jp Func_4d32b

Func_4d469: ; 4d469 (13:5469)
	pop af
	push de
	call GetSRAMBank
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$7
	cp [hl]
	jp nc, Func_4d47c
	ld l, $0
	jp Func_4d47e

Func_4d47c: ; 4d47c (13:547c)
	ld l, $1
Func_4d47e: ; 4d47e (13:547e)
	push hl
	call Func_4c21e
	ld a, [wc319]
	cp $81
	jp nz, Func_4d4ce
	ld c, $1
	ld hl, sp+$46
	reg16swap de, hl
	ld hl, $23
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$69
	reg16swap de, hl
	ld hl, $23
	call Func_4c20a
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $2
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $2
	call Func_4c20a
	ld hl, sp+$46
	ld e, [hl]
	ld hl, sp+$69
	ld a, [hl]
	call Func_4dad5
	jp Func_4d50f

Func_4d4ce: ; 4d4ce (13:54ce)
	ld c, $1
	ld hl, sp+$46
	reg16swap de, hl
	ld hl, $23
	call Func_4c20a
	ld c, $1
	ld hl, sp+$69
	reg16swap de, hl
	ld hl, $23
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $2
	call Func_4c20a
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $2
	call Func_4c1f6
	ld hl, sp+$46
	ld e, [hl]
	ld hl, sp+$69
	ld a, [hl]
	call Func_4dad5
Func_4d50f: ; 4d50f (13:550f)
	ld hl, sp+$6a
	reg16swap de, hl
	ld hl, sp+$a
	ld bc, $6
	call CopyFromDEtoHL
	ld hl, sp+$47
	reg16swap de, hl
	ld hl, sp+$28
	ld bc, $6
	call CopyFromDEtoHL
	ld a, [wc319]
	cp $81
	jp nz, Func_4d55b
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$a
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
	ld hl, sp+$28
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $b
	call FarCall
	jp Func_4d580

Func_4d55b: ; 4d55b (13:555b)
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$a
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $b
	call FarCall
	ld hl, sp+$28
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
Func_4d580: ; 4d580 (13:5580)
	ld c, $a
	ld e, $a
	ld hl, $2
	call Func_4c0d3
	ld c, $a
	ld e, $a
	ld hl, $a02
	call Func_4c0d3
	xor a
Func_4d595: ; 4d595 (13:5595)
	cp $3
	jp nc, Func_4d5d4
	push af
	add a
	add $d
	ld e, a
	ld a, $4
	call SetStringStartState
	pop af
	push af
	ld l, a
	ld h, $0
	inc hl
	push hl
	ld hl, Data_4d7ac
	push hl
	call PlaceString
	pop bc
	pop bc
	pop af
	push af
	read_hl_from_sp_plus $90
	ld e, a
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_4cccb
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, -1
	call PlaceStringDEatCoordHL
	pop af
	inc a
	jp Func_4d595

Func_4d5d4: ; 4d5d4 (13:55d4)
	ld a, [wSystemType]
	cp $1
	jp z, Func_4d5e4
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4d5ed
Func_4d5e4: ; 4d5e4 (13:55e4)
	ld de, $14
	ld hl, Data_4d285
	call Func_2b7d
Func_4d5ed: ; 4d5ed (13:55ed)
	ld a, [wc319]
	cp $81
	jp nz, Func_4d621
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$69
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$46
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	jp Func_4d64a

Func_4d621: ; 4d621 (13:5621)
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$46
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$69
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
Func_4d64a: ; 4d64a (13:564a)
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $103
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $b03
	call FarCall
	call WaitVideoTransfer
	ld c, $0
	pop hl
	pop de
	push hl
Func_4d698: ; 4d698 (13:5698)
	ld a, c
	cp $3
	jp nc, Func_4d713
	push de
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_4d70e
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_4d6ba
	ld a, [wc319]
	cp $81
	jp z, Func_4d6cb
Func_4d6ba: ; 4d6ba (13:56ba)
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_4d6ee
	ld a, [wc319]
	cp $81
	jp z, Func_4d6ee
Func_4d6cb: ; 4d6cb (13:56cb)
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	ld de, $d
	add hl, de
	ld de, Data_4d7ba
	call PlaceStringDEatCoordHL
	pop bc
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	ld de, $120d
	add hl, de
	ld de, Data_4d7bf
	call PlaceStringDEatCoordHL
	pop bc
	jp Func_4d70e

Func_4d6ee: ; 4d6ee (13:56ee)
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	ld de, $120d
	add hl, de
	ld de, Data_4d7c4
	call PlaceStringDEatCoordHL
	pop bc
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	ld de, $d
	add hl, de
	ld de, Data_4d7c9
	call PlaceStringDEatCoordHL
	pop bc
Func_4d70e: ; 4d70e (13:570e)
	inc c
	pop de
	jp Func_4d698

Func_4d713: ; 4d713 (13:5713)
	pop hl
	ld a, [wc38d]
	cp $1
	jp nz, Func_4d769
	ld a, [wc319]
	cp $81
	jp nz, Func_4d745
	push hl
	ld a, l
	cp $1
	jp nz, Func_4d736
	ld de, $0
	ld a, $1
	call Func_4d7d6
	jp Func_4d741

Func_4d736: ; 4d736 (13:5736)
	call GetHLAtSPPlus4
	reg16swap de, hl
	xor a
	call Func_4d7d6
Func_4d741: ; 4d741 (13:5741)
	pop hl
	jp Func_4d764

Func_4d745: ; 4d745 (13:5745)
	inc l
	dec l
	jp nz, Func_4d757
	push hl
	ld de, $0
	ld a, $1
	call Func_4d7d6
	pop hl
	jp Func_4d764

Func_4d757: ; 4d757 (13:5757)
	push hl
	call GetHLAtSPPlus4
	reg16swap de, hl
	xor a
	call Func_4d7d6
	pop hl
Func_4d764: ; 4d764 (13:5764)
	push hl
	call Func_4c4b3
	pop hl
Func_4d769: ; 4d769 (13:5769)
	push hl
	ld c, $5
	ld e, $c
	ld hl, $407
	call Func_4c0d3
	set_farcall_addrs_hli Func_16019
	pop hl
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	ld c, l
	ld b, h
	ld de, $8
	ld hl, $5
	call FarCall
	ld de, Data_4d7ce
	ld hl, $90a
	call PlaceStringDEatCoordHL
	call Func_4c0b9
	ld hl, $8a
	add hl, sp
	ld sp, hl
	ret

Data_4d7ac: ; 4d7ac
	db "(たﾞい)"
	TX_SNUM
	db "(しあい) ", $0

Data_4d7ba: ; 4d7ba
	db "(かち)", $0

Data_4d7bf: ; 4d7bf
	db "(まけ)", $0

Data_4d7c4: ; 4d7c4
	db "(かち)", $0

Data_4d7c9: ; 4d7c9
	db "(まけ)", $0

Data_4d7ce: ; 4d7ce
	db "(のしょうり)", $0

Func_4d7d6: ; 4d7d6 (13:57d6)
	push de
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	pop af
	pop de
	or a
	jp nz, Func_4d825
	read_hl_from wcb53
	inc hl
	write_hl_to wcb53
	read_hl_from wcb55
	add hl, de
	ld a, 30000 % $100
	sub l
	ld a, 30000 / $100
	sbc h
	jp c, Func_4d81a
	read_hl_from wcb55
	add hl, de
	write_hl_to wcb55
	jp Func_4d822

Func_4d81a: ; 4d81a (13:581a)
	ld hl, 30000
	write_hl_to wcb55
Func_4d822: ; 4d822 (13:5822)
	jp Func_4d839

Func_4d825: ; 4d825 (13:5825)
	xor a
	ld [wcb57], a
	ld hl, $0
	write_hl_to wcb55
	ld hl, $0
	write_hl_to wcb53
Func_4d839: ; 4d839 (13:5839)
	ld a, c
	call GetSRAMBank
	ret

Data_4d83e: ; 4d83e
	dr $4d83e, $4d846

Data_4d846: ; 4d846
	dr $4d846, $4d84e

Func_4d84e: ; 4d84e (13:584e)
	push hl
	ld hl, -$84
	add hl, sp
	ld sp, hl
	callba_hli AllocateMonsterStruct2
	ld a, [wc319]
	cp $81
	jp nz, Func_4d891
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$61
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$61
	ld a, [hl]
	dec a
	ld hl, sp+$0
	ld [hl], a
	ld a, [wc2e9]
	ld [wc307], a
	jp Func_4d8b5

Func_4d891: ; 4d891 (13:5891)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$3e
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$3e
	ld a, [hl]
	dec a
	ld hl, sp+$1
	ld [hl], a
	ld a, [wc2e9]
	ld [wc308], a
Func_4d8b5: ; 4d8b5 (13:58b5)
	call Func_4c21e
	ld a, [wc319]
	cp $81
	jp nz, Func_4d905
	ld c, $1
	ld de, wc308
	ld hl, $1
	call Func_4c1f6
	ld c, $1
	ld de, wc307
	ld hl, $1
	call Func_4c20a
	ld c, $1
	ld hl, sp+$3e
	reg16swap de, hl
	ld hl, $23
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$61
	reg16swap de, hl
	ld hl, $23
	call Func_4c20a
	ld hl, sp+$3e
	ld e, [hl]
	ld hl, sp+$61
	ld a, [hl]
	call Func_4dad5
	ld hl, sp+$3e
	ld a, [hl]
	dec a
	ld hl, sp+$1
	ld [hl], a
	jp Func_4d947

Func_4d905: ; 4d905 (13:5905)
	ld c, $1
	ld de, wc308
	ld hl, $1
	call Func_4c20a
	ld c, $1
	ld de, wc307
	ld hl, $1
	call Func_4c1f6
	ld c, $1
	ld hl, sp+$3e
	reg16swap de, hl
	ld hl, $23
	call Func_4c20a
	ld c, $1
	ld hl, sp+$61
	reg16swap de, hl
	ld hl, $23
	call Func_4c1f6
	ld hl, sp+$61
	ld a, [hl]
	dec a
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$3e
	ld e, [hl]
	ld hl, sp+$61
	ld a, [hl]
	call Func_4dad5
Func_4d947: ; 4d947 (13:5947)
	ld hl, sp+$62
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $6
	call CopyFromDEtoHL
	ld hl, sp+$3f
	reg16swap de, hl
	ld hl, sp+$20
	ld bc, $6
	call CopyFromDEtoHL
	ld c, $a
	ld e, $a
	ld hl, $2
	call Func_4c0d3
	ld c, $a
	ld e, $a
	ld hl, $a02
	call Func_4c0d3
	xor a
Func_4d978: ; 4d978 (13:5978)
	cp $3
	jp nc, Func_4d9b7
	push af
	add a
	add $d
	ld e, a
	ld a, $4
	call SetStringStartState
	pop af
	push af
	ld l, a
	ld h, $0
	inc hl
	push hl
	ld hl, Data_4dac7
	push hl
	call PlaceString
	pop bc
	pop bc
	pop af
	push af
	read_hl_from_sp_plus $88
	ld e, a
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_4cccb
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, -1
	call PlaceStringDEatCoordHL
	pop af
	inc a
	jp Func_4d978

Func_4d9b7: ; 4d9b7 (13:59b7)
	ld a, [wSystemType]
	cp $1
	jp z, Func_4d9c7
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4d9d9
Func_4d9c7: ; 4d9c7 (13:59c7)
	ld de, $8
	ld hl, Data_4d83e
	call Func_2b7d
	ld de, $8
	ld hl, Data_4d846
	call Func_2b7d
Func_4d9d9: ; 4d9d9 (13:59d9)
	ld a, [wc319]
	cp $81
	jp nz, Func_4da2e
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
	ld hl, sp+$20
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $b
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$0
	ld e, [hl]
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$1
	ld e, [hl]
	ld a, $1
	call FarCall
	jp Func_4da78

Func_4da2e: ; 4da2e (13:5a2e)
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $b
	call FarCall
	ld hl, sp+$20
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$1
	ld e, [hl]
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$0
	ld e, [hl]
	ld a, $1
	call FarCall
Func_4da78: ; 4da78 (13:5a78)
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $103
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $b03
	call FarCall
	call WaitVideoTransfer
	ld hl, $86
	add hl, sp
	ld sp, hl
	ret

Data_4dac7: ; 4dac7
	db "(たﾞい)"
	TX_SNUM
	db "(しあい) ", $0

Func_4dad5: ; 4dad5 (13:5ad5)
	push af
	ld hl, -$352
	add hl, sp
	ld sp, hl
	ld a, [hSRAMBank]
	ld c, a
	ld a, [wc319]
	cp $81
	jp nz, Func_4db69
	push de
	ld hl, $355
	add hl, sp
	ld a, [hl]
	cp $ab
	jp c, Func_4db31
	ld hl, $355
	add hl, sp
	ld a, [hl]
	cp $af
	jp nc, Func_4db31
	push bc
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld hl, $357
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, ($b29f - $351 * $ab) & $ffff
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	ld bc, $351
	call CopyFromDEtoHL
	pop bc
	ld a, c
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $351
	call Func_4c20a
Func_4db31: ; 4db31 (13:5b31)
	pop de
	ld a, e
	cp $ab
	jp c, Func_4db66
	ld a, e
	cp $af
	jp nc, Func_4db66
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $351
	call Func_4c1f6
	ld bc, $351
	ld hl, sp+$0
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CopyFromDEtoHL
Func_4db66: ; 4db66 (13:5b66)
	jp Func_4dbe9

Func_4db69: ; 4db69 (13:5b69)
	push bc
	push de
	ld hl, $357
	add hl, sp
	ld a, [hl]
	cp $ab
	jp c, Func_4dba7
	ld hl, $357
	add hl, sp
	ld a, [hl]
	cp $af
	jp nc, Func_4dba7
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $351
	call Func_4c1f6
	ld bc, $351
	ld hl, sp+$4
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CopyFromDEtoHL
Func_4dba7: ; 4dba7 (13:5ba7)
	pop de
	pop bc
	ld a, e
	cp $ab
	jp c, Func_4dbe9
	ld a, e
	cp $af
	jp nc, Func_4dbe9
	push bc
	push de
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop de
	ld l, e
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, ($b29f - $351 * $ab) & $ffff
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $351
	call CopyFromDEtoHL
	pop bc
	ld a, c
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $351
	call Func_4c20a
Func_4dbe9: ; 4dbe9 (13:5be9)
	ld hl, $354
	add hl, sp
	ld sp, hl
	ret

Func_4dbef: ; 4dbef
	push bc
	push hl
	call Func_1fbe
	pop bc
	push bc
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld l, [hl]
	push hl
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	ld hl, $d
	add hl, bc
	ld a, [hl]
	push af
	xor a
Func_4dc29: ; 4dc29 (13:5c29)
	cp $5
	jp nc, Func_4dc44
	ld e, a
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], $ff
	ld e, a
	ld d, $0
	ld hl, wTimeSetHoursTensDigit
	add hl, de
	ld [hl], $ff
	inc a
	jp Func_4dc29

Func_4dc44: ; 4dc44 (13:5c44)
	xor a
	ld [wc2f7], a
	xor a
	ld [wc306], a
	xor a
	ld [wc2f9], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop af
	cp $13
	jp nz, Func_4dc77
	ld de, Data_4dcee
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld de, Data_4dcfe
	ld hl, $b11
	call PlaceStringDEatCoordHL
	jp Func_4dc89

Func_4dc77: ; 4dc77 (13:5c77)
	ld de, Data_4dd03
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld de, Data_4dd16
	ld hl, $b11
	call PlaceStringDEatCoordHL
Func_4dc89: ; 4dc89 (13:5c89)
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call Func_4c0d3
	ld a, [wc2f9]
	call Func_4df45
	set_farcall_addrs_hli Func_50604
	pop hl
	call FarCall
	ld e, $f
	ld a, $1
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_4dd1c
	push hl
	call PlaceString
	pop bc
	pop bc
	ld e, $11
	ld a, $1
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_4dd1f
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_4dd22
	ld hl, $211
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	ret

Data_4dcee: ; 4dcee
	db "ホﾞク(のなまえを きめて)ネ", $0

Data_4dcfe: ; 4dcfe
	db "b___", $0

Data_4dd03: ; 4dd03
	db "ロホﾞホﾟン(のなまえを きめて)ネ", $0

Data_4dd16: ; 4dd16
	db "b____", $0

Data_4dd1c: ; 4dd1c
	TX_STACK
	db $0

Data_4dd1f: ; 4dd1f
	TX_STACK
	db $0

Data_4dd22: ; 4dd22
	db "(けってい)", $0

Pointers_4dd29: ; 4dd29
	dw Data_4de01
	dw Data_4de05
	dw Data_4de09
	dw Data_4de0d
	dw Data_4de11
	dw Data_4de15
	dw Data_4de19
	dw Data_4de1d
	dw Data_4de21
	dw Data_4de25
	dw Data_4de29
	dw Data_4de2d
	dw Data_4de31
	dw Data_4de35
	dw Data_4de39
	dw Data_4de3d
	dw Data_4de41
	dw Data_4de45
	dw Data_4de49
	dw Data_4de4d
	dw Data_4de51
	dw Data_4de55
	dw Data_4de59
	dw Data_4de5d
	dw Data_4de61
	dw Data_4de65
	dw Data_4de69
	dw Data_4de6d
	dw Data_4de71
	dw Data_4de75
	dw Data_4de79
	dw Data_4de7d
	dw Data_4de81
	dw Data_4de85
	dw Data_4de89
	dw Data_4de8d
	dw Data_4de91
	dw Data_4de95
	dw Data_4de99
	dw Data_4de9d
	dw Data_4dea1
	dw Data_4dea5
	dw Data_4dea9
	dw Data_4dead
	dw Data_4deb1
	dw Data_4deb5
	dw Data_4deb9
	dw Data_4debd
	dw Data_4dec1
	dw Data_4dec5
	dw Data_4dec9
	dw Data_4decd
	dw Data_4ded1
	dw Data_4ded5
	dw Data_4ded9
	dw Data_4dedb
	dw Data_4dedd
	dw Data_4dedf
	dw Data_4dee1
	dw Data_4dee3
	dw Data_4dee5
	dw Data_4dee7
	dw Data_4dee9
	dw Data_4deeb
	dw Data_4deed
	dw Data_4deef
	dw Data_4def1
	dw Data_4def3
	dw Data_4def5
	dw Data_4def7
	dw Data_4def9
	dw Data_4defb
	dw Data_4defd
	dw Data_4deff
	dw Data_4df01
	dw Data_4df03
	dw Data_4df05
	dw Data_4df07
	dw Data_4df09
	dw Data_4df0b
	dw Data_4df0d
	dw Data_4df0f
	dw Data_4df11
	dw Data_4df13
	dw Data_4df15
	dw Data_4df17
	dw Data_4df19
	dw Data_4df1b
	dw Data_4df1d
	dw Data_4df1f
	dw Data_4df21
	dw Data_4df23
	dw Data_4df25
	dw Data_4df27
	dw Data_4df29
	dw Data_4df2b
	dw Data_4df2d
	dw Data_4df2f
	dw Data_4df31
	dw Data_4df33
	dw Data_4df35
	dw Data_4df37
	dw Data_4df39
	dw Data_4df3b
	dw Data_4df3d
	dw Data_4df3f
	dw Data_4df41
	dw Data_4df43

Data_4de01: ; 4de01
	db "(あ)", $0

Data_4de05: ; 4de05
	db "(い)", $0

Data_4de09: ; 4de09
	db "(う)", $0

Data_4de0d: ; 4de0d
	db "(え)", $0

Data_4de11: ; 4de11
	db "(お)", $0

Data_4de15: ; 4de15
	db "(ゃ)", $0

Data_4de19: ; 4de19
	db "(か)", $0

Data_4de1d: ; 4de1d
	db "(き)", $0

Data_4de21: ; 4de21
	db "(く)", $0

Data_4de25: ; 4de25
	db "(け)", $0

Data_4de29: ; 4de29
	db "(こ)", $0

Data_4de2d: ; 4de2d
	db "(ゅ)", $0

Data_4de31: ; 4de31
	db "(さ)", $0

Data_4de35: ; 4de35
	db "(し)", $0

Data_4de39: ; 4de39
	db "(す)", $0

Data_4de3d: ; 4de3d
	db "(せ)", $0

Data_4de41: ; 4de41
	db "(そ)", $0

Data_4de45: ; 4de45
	db "(ょ)", $0

Data_4de49: ; 4de49
	db "(た)", $0

Data_4de4d: ; 4de4d
	db "(ち)", $0

Data_4de51: ; 4de51
	db "(つ)", $0

Data_4de55: ; 4de55
	db "(て)", $0

Data_4de59: ; 4de59
	db "(と)", $0

Data_4de5d: ; 4de5d
	db "(っ)", $0

Data_4de61: ; 4de61
	db "(な)", $0

Data_4de65: ; 4de65
	db "(に)", $0

Data_4de69: ; 4de69
	db "(ぬ)", $0

Data_4de6d: ; 4de6d
	db "(ね)", $0

Data_4de71: ; 4de71
	db "(の)", $0

Data_4de75: ; 4de75
	db "(ﾞ)", $0

Data_4de79: ; 4de79
	db "(は)", $0

Data_4de7d: ; 4de7d
	db "(ひ)", $0

Data_4de81: ; 4de81
	db "(ふ)", $0

Data_4de85: ; 4de85
	db "(へ)", $0

Data_4de89: ; 4de89
	db "(ほ)", $0

Data_4de8d: ; 4de8d
	db "(ﾟ)", $0

Data_4de91: ; 4de91
	db "(ま)", $0

Data_4de95: ; 4de95
	db "(み)", $0

Data_4de99: ; 4de99
	db "(む)", $0

Data_4de9d: ; 4de9d
	db "(め)", $0

Data_4dea1: ; 4dea1
	db "(も)", $0

Data_4dea5: ; 4dea5
	db "(-)", $0

Data_4dea9: ; 4dea9
	db "(や)", $0

Data_4dead: ; 4dead
	db "(ゆ)", $0

Data_4deb1: ; 4deb1
	db "(よ)", $0

Data_4deb5: ; 4deb5
	db "(わ)", $0

Data_4deb9: ; 4deb9
	db "(を)", $0

Data_4debd: ; 4debd
	db "(ん)", $0

Data_4dec1: ; 4dec1
	db "(ら)", $0

Data_4dec5: ; 4dec5
	db "(り)", $0

Data_4dec9: ; 4dec9
	db "(る)", $0

Data_4decd: ; 4decd
	db "(れ)", $0

Data_4ded1: ; 4ded1
	db "(ろ)", $0

Data_4ded5: ; 4ded5
	db "( )", $0

Data_4ded9: ; 4ded9
	db "ア", $0

Data_4dedb: ; 4dedb
	db "イ", $0

Data_4dedd: ; 4dedd
	db "ウ", $0

Data_4dedf: ; 4dedf
	db "エ", $0

Data_4dee1: ; 4dee1
	db "オ", $0

Data_4dee3: ; 4dee3
	db "ャ", $0

Data_4dee5: ; 4dee5
	db "カ", $0

Data_4dee7: ; 4dee7
	db "キ", $0

Data_4dee9: ; 4dee9
	db "ク", $0

Data_4deeb: ; 4deeb
	db "ケ", $0

Data_4deed: ; 4deed
	db "コ", $0

Data_4deef: ; 4deef
	db "ュ", $0

Data_4def1: ; 4def1
	db "サ", $0

Data_4def3: ; 4def3
	db "シ", $0

Data_4def5: ; 4def5
	db "ス", $0

Data_4def7: ; 4def7
	db "セ", $0

Data_4def9: ; 4def9
	db "ソ", $0

Data_4defb: ; 4defb
	db "ョ", $0

Data_4defd: ; 4defd
	db "タ", $0

Data_4deff: ; 4deff
	db "チ", $0

Data_4df01: ; 4df01
	db "ツ", $0

Data_4df03: ; 4df03
	db "テ", $0

Data_4df05: ; 4df05
	db "ト", $0

Data_4df07: ; 4df07
	db "ッ", $0

Data_4df09: ; 4df09
	db "ナ", $0

Data_4df0b: ; 4df0b
	db "ニ", $0

Data_4df0d: ; 4df0d
	db "ヌ", $0

Data_4df0f: ; 4df0f
	db "ネ", $0

Data_4df11: ; 4df11
	db "ノ", $0

Data_4df13: ; 4df13
	db "ﾞ", $0

Data_4df15: ; 4df15
	db "ハ", $0

Data_4df17: ; 4df17
	db "ヒ", $0

Data_4df19: ; 4df19
	db "フ", $0

Data_4df1b: ; 4df1b
	db "ヘ", $0

Data_4df1d: ; 4df1d
	db "ホ", $0

Data_4df1f: ; 4df1f
	db "ﾟ", $0

Data_4df21: ; 4df21
	db "マ", $0

Data_4df23: ; 4df23
	db "ミ", $0

Data_4df25: ; 4df25
	db "ム", $0

Data_4df27: ; 4df27
	db "メ", $0

Data_4df29: ; 4df29
	db "モ", $0

Data_4df2b: ; 4df2b
	db "-", $0

Data_4df2d: ; 4df2d
	db "ヤ", $0

Data_4df2f: ; 4df2f
	db "ユ", $0

Data_4df31: ; 4df31
	db "ヨ", $0

Data_4df33: ; 4df33
	db "ワ", $0

Data_4df35: ; 4df35
	db "ヲ", $0

Data_4df37: ; 4df37
	db "ン", $0

Data_4df39: ; 4df39
	db "ラ", $0

Data_4df3b: ; 4df3b
	db "リ", $0

Data_4df3d: ; 4df3d
	db "ル", $0

Data_4df3f: ; 4df3f
	db "レ", $0

Data_4df41: ; 4df41
	db "ロ", $0

Data_4df43: ; 4df43
	db " ", $0

Func_4df45: ; 4df45 (13:5f45)
	push af
	push bc
	push bc
	ld hl, sp+$2
	ld [hl], $0
Func_4df4c: ; 4df4c (13:5f4c)
	ld hl, sp+$2
	ld a, [hl]
	cp $9
	jp nc, Func_4dfdc
	ld hl, sp+$2
	ld a, [hl]
	add a
	add $2
	ld hl, sp+$1
	ld [hl], a
	ld hl, sp+$3
	ld [hl], $0
Func_4df61: ; 4df61 (13:5f61)
	ld hl, sp+$3
	ld a, [hl]
	cp $6
	jp nc, Func_4dfd2
	ld hl, sp+$3
	ld a, [hl]
	add a
	add $3
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp z, Func_4df82
	ld hl, sp+$2
	ld a, [hl]
	cp $5
	jp nz, Func_4df98
Func_4df82: ; 4df82 (13:5f82)
	ld hl, sp+$3
	ld a, [hl]
	cp $5
	jp nz, Func_4df98
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
Func_4df98: ; 4df98 (13:5f98)
	ld hl, sp+$3
	ld c, [hl]
	ld b, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	add hl, bc
	push hl
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	ld de, $36
	call MultiplyHLbyDE
	pop de
	add hl, de
	add hl, hl
	ld de, Pointers_4dd29
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$1
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, a
	call PlaceStringDEatCoordHL
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
	jp Func_4df61

Func_4dfd2: ; 4dfd2 (13:5fd2)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_4df4c

Func_4dfdc: ; 4dfdc (13:5fdc)
	ld hl, sp+$5
	ld a, [hl]
	or a
	jp nz, Func_4dfef
	ld de, Data_4dffc
	ld hl, $20f
	call PlaceStringDEatCoordHL
	jp Func_4dff8

Func_4dfef: ; 4dfef (13:5fef)
	ld de, Data_4e001
	ld hl, $20f
	call PlaceStringDEatCoordHL
Func_4dff8: ; 4dff8 (13:5ff8)
	pop bc
	pop bc
	pop bc
	ret

Data_4dffc: ; 4dffc
	db "カタカナ", $0

Data_4e001: ; 4e001
	db "(かな  )", $0

Func_4e008: ; 4e008 (13:6008)
	push bc
	push de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus4
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop de
	ld a, e
	sub $4
	or d
	jp z, Func_4e152
	ld a, e
	sub $3
	or d
	jp z, Func_4e12f
	ld a, e
	sub $2
	or d
	jp z, Func_4e107
	ld a, e
	dec a
	or d
	jp z, Func_4e096
	ld a, e
	or d
	jp nz, Func_4e155
	ld a, c
	sub $30
	or b
	jp z, Func_4e086
	ld a, c
	sub $2a
	or b
	jp z, Func_4e086
	ld a, c
	sub $24
	or b
	jp z, Func_4e086
	ld a, c
	sub $1e
	or b
	jp z, Func_4e086
	ld a, c
	sub $18
	or b
	jp z, Func_4e086
	ld a, c
	sub $12
	or b
	jp z, Func_4e086
	ld a, c
	sub $c
	or b
	jp z, Func_4e086
	ld a, c
	sub $6
	or b
	jp z, Func_4e086
	ld a, c
	sub $36
	or b
	jp nz, Func_4e089
	ld bc, $5
	jp Func_4e093

Func_4e086: ; 4e086 (13:6086)
	jp Func_4e093

Func_4e089: ; 4e089 (13:6089)
	dec bc
	inc b
	dec b
	bit 7, b
	jr z, Func_4e093
	ld bc, $0
Func_4e093: ; 4e093 (13:6093)
	jp Func_4e155

Func_4e096: ; 4e096 (13:6096)
	ld a, c
	sub $37
	or b
	jp z, Func_4e0ef
	ld a, c
	sub $36
	or b
	jp z, Func_4e0e9
	ld a, c
	sub $35
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $2f
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $29
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $23
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $1d
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $17
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $11
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $b
	or b
	jp z, Func_4e0e3
	ld a, c
	sub $5
	or b
	jp nz, Func_4e0f5
Func_4e0e3: ; 4e0e3 (13:60e3)
	ld bc, $36
	jp Func_4e104

Func_4e0e9: ; 4e0e9 (13:60e9)
	ld bc, $37
	jp Func_4e104

Func_4e0ef: ; 4e0ef (13:60ef)
	ld bc, $37
	jp Func_4e104

Func_4e0f5: ; 4e0f5 (13:60f5)
	inc bc
	ld l, c
	ld h, b
	ld de, $36
	call CompareHLtoDE
	jp c, Func_4e104
	ld bc, $35
Func_4e104: ; 4e104 (13:6104)
	jp Func_4e155

Func_4e107: ; 4e107 (13:6107)
	ld a, c
	sub $36
	or b
	jp z, Func_4e12c
	ld a, c
	sub $37
	or b
	jp z, Func_4e12c
	ld hl, $6
	add hl, bc
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	ld de, $36
	call CompareHLtoDE
	jp c, Func_4e12c
	ld hl, -6
	add hl, bc
	ld c, l
	ld b, h
Func_4e12c: ; 4e12c (13:612c)
	jp Func_4e155

Func_4e12f: ; 4e12f (13:612f)
	ld a, c
	sub $36
	or b
	jp z, Func_4e14f
	ld a, c
	sub $37
	or b
	jp z, Func_4e14f
	ld hl, -6
	add hl, bc
	ld c, l
	ld b, h
	inc b
	dec b
	bit 7, b
	jr z, Func_4e14f
	ld hl, $6
	add hl, bc
	ld c, l
	ld b, h
Func_4e14f: ; 4e14f (13:614f)
	jp Func_4e155

Func_4e152: ; 4e152 (13:6152)
	ld bc, $37
Func_4e155: ; 4e155 (13:6155)
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	set_farcall_addrs_hli Func_50604
	pop hl
	push hl
	call FarCall
	call Func_4c0c6
	ld hl, $4000
	pop bc
	ret

Func_4e175: ; 4e175
	push hl
	reg16swap de, hl
	ld hl, $d
	add hl, de
	ld a, [hl]
	pop hl
	cp $20
	jp z, Func_4e19d
	cp $14
	jp z, Func_4e19d
	cp $19
	jp z, Func_4e194
	cp $13
	jp nz, Func_4e1a3
Func_4e194: ; 4e194 (13:6194)
	ld de, $2
	call Func_4e008
	jp Func_4e1a3

Func_4e19d: ; 4e19d (13:619d)
	ld de, $2
	call Func_4e813
Func_4e1a3: ; 4e1a3 (13:61a3)
	ret

Func_4e1a4: ; 4e1a4
	push hl
	reg16swap de, hl
	ld hl, $d
	add hl, de
	ld a, [hl]
	pop hl
	cp $20
	jp z, Func_4e1cc
	cp $14
	jp z, Func_4e1cc
	cp $19
	jp z, Func_4e1c3
	cp $13
	jp nz, Func_4e1d2
Func_4e1c3: ; 4e1c3 (13:61c3)
	ld de, $3
	call Func_4e008
	jp Func_4e1d2

Func_4e1cc: ; 4e1cc (13:61cc)
	ld de, $3
	call Func_4e813
Func_4e1d2: ; 4e1d2 (13:61d2)
	ret

Func_4e1d3: ; 4e1d3
	push hl
	push bc
	push bc
	call GetHLAtSPPlus6
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus3
	ld hl, $d
	add hl, bc
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	cp $13
	jp nz, Func_4e1fc
	ld c, $4
	jp Func_4e1fe

Func_4e1fc: ; 4e1fc (13:61fc)
	ld c, $5
Func_4e1fe: ; 4e1fe (13:61fe)
	push bc
	call Func_4c0ac
	ld a, $1
	pop bc
	call GetHLAtSPPlus3
	ld a, l
	sub $37
	or h
	jp z, Func_4e232
	ld a, l
	sub $36
	or h
	jp nz, Func_4e272
	ld a, [wc2f9]
	or a
	jp nz, Func_4e225
	ld a, $1
	ld [wc2f9], a
	jp Func_4e229

Func_4e225: ; 4e225 (13:6225)
	xor a
	ld [wc2f9], a
Func_4e229: ; 4e229 (13:6229)
	ld a, [wc2f9]
	call Func_4df45
	jp Func_4e39a

Func_4e232: ; 4e232 (13:6232)
	ld a, [wc2f7]
	or a
	jp nz, Func_4e23f
	ld hl, $4000
	jp Func_4e3a0

Func_4e23f: ; 4e23f (13:623f)
	ld hl, sp+$0
	ld a, [hl]
	cp $13
	jp nz, Func_4e259
	set_farcall_addrs_hli Func_335de
	xor a
	call FarCall
	jp Func_4e269

Func_4e259: ; 4e259 (13:6259)
	set_farcall_addrs_hli Func_335de
	ld a, $1
	call FarCall
Func_4e269: ; 4e269 (13:6269)
	call Func_4c0b9
	ld hl, -1
	jp Func_4e3a0

Func_4e272: ; 4e272 (13:6272)
	call GetHLAtSPPlus3
	ld a, l
	sub $23
	or h
	jp z, Func_4e283
	ld a, l
	sub $1d
	or h
	jp nz, Func_4e2e0
Func_4e283: ; 4e283 (13:6283)
	push bc
	ld a, [wc306]
	cp $1
	jp c, Func_4e2cc
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wSystemType
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus5
	ld e, l
	call Func_4e4ee
	cp $1
	jp nz, Func_4e2cc
	ld e, $10
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	call GetHLAtSPPlus5
	add hl, hl
	ld de, Pointers_4dd29
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call PlaceString
	pop bc
	call GetHLAtSPPlus5
	ld a, l
	ld hl, wc306
	ld l, [hl]
	ld h, $0
	ld de, wc300
	add hl, de
	ld [hl], a
Func_4e2cc: ; 4e2cc (13:62cc)
	pop bc
	ld a, [wc2f7]
	cp c
	jp nz, Func_4e2dd
	call GetHLAtSPPlus6
	ld de, $4
	call Func_4e008
Func_4e2dd: ; 4e2dd (13:62dd)
	jp Func_4e39a

Func_4e2e0: ; 4e2e0 (13:62e0)
	ld a, [wc2f7]
	cp c
	jp nz, Func_4e2f3
	call GetHLAtSPPlus6
	ld de, $4
	call Func_4e008
	jp Func_4e39a

Func_4e2f3: ; 4e2f3 (13:62f3)
	push bc
	ld e, $10
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, wc2f9
	ld l, [hl]
	ld h, $0
	ld de, $36
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	call GetHLAtSPPlus5
	add hl, bc
	add hl, hl
	ld de, Pointers_4dd29
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call PlaceString
	pop bc
	ld hl, wc2f9
	ld l, [hl]
	ld h, $0
	ld de, $36
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	call GetHLAtSPPlus5
	add hl, bc
	ld a, l
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], a
	pop bc
	ld l, c
	dec l
	ld a, [wc2f7]
	cp l
	jp nz, Func_4e35f
	ld a, [wc2f7]
	inc a
	ld [wc2f7], a
	ld a, [wc306]
	inc a
	ld [wc306], a
	call GetHLAtSPPlus6
	ld de, $4
	call Func_4e008
	jp Func_4e39a

Func_4e35f: ; 4e35f (13:635f)
	ld l, c
	dec l
	ld a, [wc2f7]
	cp l
	jp nc, Func_4e39a
	ld e, $11
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, Data_4e3a4
	push hl
	call PlaceString
	pop bc
	ld a, [wc2f7]
	inc a
	ld [wc2f7], a
	ld a, [wc306]
	inc a
	ld [wc306], a
	ld e, $11
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, Data_4e3a6
	push hl
	call PlaceString
	pop bc
Func_4e39a: ; 4e39a (13:639a)
	call Func_4c0b9
	ld hl, $4000
Func_4e3a0: ; 4e3a0 (13:63a0)
	pop bc
	pop bc
	pop bc
	ret

Data_4e3a4: ; 4e3a4
	db "_", $0

Data_4e3a6: ; 4e3a6
	db "b", $0

Func_4e3a8: ; 4e3a8
	reg16swap de, hl
	ld hl, $d
	add hl, de
	ld a, [hl]
	cp $13
	jp nz, Func_4e3bb
	ld c, $4
	jp Func_4e3bd

Func_4e3bb: ; 4e3bb (13:63bb)
	ld c, $5
Func_4e3bd: ; 4e3bd (13:63bd)
	ld a, [wc2f7]
	or a
	jp nz, Func_4e3f3
	ld a, c
	cp $4
	jp nz, Func_4e3ed
	ld a, $61
	ld [wTimeSetMonthsTensDigit], a
	ld a, $5f
	ld [wTimeSetMonthsOnesDigit], a
	ld a, $44
	ld [wTimeSetDaysTensDigit], a
	ld a, $3f
	ld [wTimeSetDaysOnesDigit], a
	set_farcall_addrs_hli Func_335de
	xor a
	call FarCall
Func_4e3ed: ; 4e3ed (13:63ed)
	ld hl, -1
	jp Func_4e4e3

Func_4e3f3: ; 4e3f3 (13:63f3)
	push bc
	call Func_4c0ac
	pop bc
	ld e, c
	ld d, $0
	ld hl, wSystemType
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_4e43e
	ld l, c
	dec l
	ld a, [wc2f7]
	cp l
	jp nz, Func_4e43e
	push bc
	ld e, $10
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, Data_4e4e4
	push hl
	call PlaceString
	pop bc
	pop bc
	ld e, c
	ld d, $0
	ld hl, wSystemType
	add hl, de
	ld [hl], $ff
	ld e, c
	ld d, $0
	ld hl, wc300
	add hl, de
	ld [hl], $ff
	ld a, [wc306]
	dec a
	ld [wc306], a
	jp Func_4e4dd

Func_4e43e: ; 4e43e (13:643e)
	ld a, [wc2f7]
	cp c
	jp nz, Func_4e47a
	push bc
	ld a, c
	add $a
	ld e, $10
	call SetStringStartState
	ld hl, Data_4e4e6
	push hl
	call PlaceString
	pop bc
	ld a, [wc2f7]
	dec a
	ld [wc2f7], a
	ld a, [wc306]
	dec a
	ld [wc306], a
	pop bc
	ld e, c
	ld d, $0
	ld hl, wSystemType
	add hl, de
	ld [hl], $ff
	ld e, c
	ld d, $0
	ld hl, wc300
	add hl, de
	ld [hl], $ff
	jp Func_4e4dd

Func_4e47a: ; 4e47a (13:647a)
	ld a, [wc2f7]
	cp c
	jp nc, Func_4e4dd
	ld e, $11
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, Data_4e4e8
	push hl
	call PlaceString
	pop bc
	ld a, [wc2f7]
	dec a
	ld [wc2f7], a
	ld a, [wc306]
	dec a
	ld [wc306], a
	ld e, $10
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, Data_4e4ea
	push hl
	call PlaceString
	pop bc
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], $ff
	ld hl, wc306
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetHoursTensDigit
	add hl, de
	ld [hl], $ff
	ld e, $11
	ld a, [wc2f7]
	add $b
	call SetStringStartState
	ld hl, Data_4e4ec
	push hl
	call PlaceString
	pop bc
Func_4e4dd: ; 4e4dd (13:64dd)
	call Func_4c0b9
	ld hl, $4000
Func_4e4e3: ; 4e4e3 (13:64e3)
	ret

Data_4e4e4: ; 4e4e4
	db " ", $0

Data_4e4e6: ; 4e4e6
	db " ", $0

Data_4e4e8: ; 4e4e8
	db "_", $0

Data_4e4ea: ; 4e4ea
	db " ", $0

Data_4e4ec: ; 4e4ec
	db "b", $0

Func_4e4ee: ; 4e4ee (13:64ee)
	push af
	push de
	ld a, [wc2f9]
	or a
	jp nz, Func_4e4fc
	ld e, $0
	jp Func_4e4fe

Func_4e4fc: ; 4e4fc (13:64fc)
	ld e, $36
Func_4e4fe: ; 4e4fe (13:64fe)
	ld hl, sp+$3
	ld a, [hl]
	sub e
	ld hl, sp+$3
	ld [hl], a
	pop de
	ld a, e
	cp $23
	jp z, Func_4e56a
	cp $1d
	jp nz, Func_4e581
	ld hl, sp+$1
	ld a, [hl]
	cp $6
	jp c, Func_4e526
	ld hl, sp+$1
	ld a, [hl]
	cp $b
	jp nc, Func_4e526
	ld a, $1
	jp Func_4e581

Func_4e526: ; 4e526 (13:6526)
	ld hl, sp+$1
	ld a, [hl]
	cp $c
	jp c, Func_4e53b
	ld hl, sp+$1
	ld a, [hl]
	cp $11
	jp nc, Func_4e53b
	ld a, $1
	jp Func_4e581

Func_4e53b: ; 4e53b (13:653b)
	ld hl, sp+$1
	ld a, [hl]
	cp $12
	jp c, Func_4e550
	ld hl, sp+$1
	ld a, [hl]
	cp $17
	jp nc, Func_4e550
	ld a, $1
	jp Func_4e581

Func_4e550: ; 4e550 (13:6550)
	ld hl, sp+$1
	ld a, [hl]
	cp $1e
	jp c, Func_4e565
	ld hl, sp+$1
	ld a, [hl]
	cp $23
	jp nc, Func_4e565
	ld a, $1
	jp Func_4e581

Func_4e565: ; 4e565 (13:6565)
	ld a, $ff
	jp Func_4e581

Func_4e56a: ; 4e56a (13:656a)
	ld hl, sp+$1
	ld a, [hl]
	cp $1e
	jp c, Func_4e57f
	ld hl, sp+$1
	ld a, [hl]
	cp $23
	jp nc, Func_4e57f
	ld a, $1
	jp Func_4e581

Func_4e57f: ; 4e57f (13:657f)
	ld a, $ff
Func_4e581: ; 4e581 (13:6581)
	pop bc
	ret

Data_4e583: ; 4e583
	dr $4e583, $4e58b

Func_4e58b: ; 4e58b
	push hl
	add sp, -$16
	ld hl, sp+$16
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	xor a
	push af
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$19
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$18
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld l, [hl]
	push hl
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, $c980
	reg16swap de, hl
	ld hl, sp+$a
	ld bc, $5
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call Func_1fbe
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$19
	ld a, [hl]
	ld hl, sp+$18
	ld l, [hl]
	ld h, a
	call Func_4c0d3
	ld c, $3
	ld e, $a
	ld hl, $0
	call Func_4c0d3
	ld c, $5
	ld e, $a
	ld hl, $a06
	call Func_4c0d3
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld de, Data_4e743
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld de, Data_4e749
	ld hl, $b01
	call PlaceStringDEatCoordHL
	ld de, Data_4e754
	ld hl, $b07
	call PlaceStringDEatCoordHL
	ld de, Data_4e75b
	ld hl, $10e
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$4
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $5
	call FarCall
	xor a
	ld [wc2f7], a
	xor a
	ld [wTimeSetMonthsTensDigit], a
	ld a, $1
	ld [wTimeSetMonthsOnesDigit], a
	xor a
	ld [wTimeSetDaysTensDigit], a
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
	ld de, Data_4e771
	ld hl, $d03
	call PlaceStringDEatCoordHL
	ld de, Data_4e777
	ld hl, $1103
	call PlaceStringDEatCoordHL
	call Func_4e780
	set_farcall_addrs_hli AllocateMemory
	ld hl, $400
	call FarCall
	call WriteHLToSPPlus4
	pop af
	or a
	jp nz, Func_4e6ac
	ld hl, $0
	jp Func_4e6af

Func_4e6ac: ; 4e6ac (13:66ac)
	ld hl, $310
Func_4e6af: ; 4e6af (13:66af)
	ld de, $89b0
	add hl, de
	ld c, l
	ld b, h
	pop hl
	push hl
	reg16swap de, hl
	ld a, $c5
	call DecompressRequestRoboponPic
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_615be
	ld a, $c5
	call FarCall
	push af
	set_farcall_addrs_hli Func_613fc
	pop af
	ld e, a
	call FarCall
	ld a, [wSystemType]
	cp $1
	jp z, Func_4e6f4
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4e6fd
Func_4e6f4: ; 4e6f4 (13:66f4)
	ld de, $8
	ld hl, Data_4e583
	call Func_2b7d
Func_4e6fd: ; 4e6fd (13:66fd)
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	pop hl
	push hl
	reg16swap de, hl
	ld hl, $4
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	pop hl
	push hl
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $18
	reg16swap de, hl
	ret

Data_4e743: ; 4e743
	db "(なまえ)", $0

Data_4e749: ; 4e749
	db "(たんしﾞょうひﾞ)", $0

Data_4e754: ; 4e754
	db "(せいさﾞ)", $0

Data_4e75b: ; 4e75b
	db "ホﾞク(の たんしﾞょうひﾞを きめて)ネ", $0

Data_4e771: ; 4e771
	db "(かﾞつ)", $0

Data_4e777: ; 4e777
	db "(にち)", $0

Data_4e77c: ; 4e77c
	db 11, 12
	db 15, 16

Func_4e780: ; 4e780 (13:6780)
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_4e77c
	ld bc, $4
	call MemCopy
	ld l, $0
Func_4e793: ; 4e793 (13:6793)
	ld a, l
	cp $4
	jp nc, Func_4e7fb
	ld a, [wc2f7]
	cp l
	jp nz, Func_4e7bb
	push hl
	ld e, l
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc hl
	inc hl
	inc hl
	inc hl
	ld de, Data_4e80c
	call PlaceStringDEatCoordHL
	pop hl
	jp Func_4e7d3

Func_4e7bb: ; 4e7bb (13:67bb)
	push hl
	ld e, l
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc hl
	inc hl
	inc hl
	inc hl
	ld de, Data_4e80e
	call PlaceStringDEatCoordHL
	pop hl
Func_4e7d3: ; 4e7d3 (13:67d3)
	push hl
	ld e, l
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	ld e, $3
	call SetStringStartState
	pop hl
	push hl
	ld e, l
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_4e810
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
	inc l
	jp Func_4e793

Func_4e7fb: ; 4e7fb (13:67fb)
	callba_hli Func_537dc
	pop bc
	pop bc
	ret

Data_4e80c: ; 4e80c
	db "b", $0

Data_4e80e: ; 4e80e
	db "_", $0

Data_4e810: ; 4e810
	TX_SNUM
	db $0

Func_4e813: ; 4e813 (13:6813)
	push bc
	push bc
	push de
	reg16swap de, hl
	ld hl, $d
	add hl, de
	ld a, [hl]
	ld hl, sp+$4
	ld [hl], a
	ld hl, $0
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	ld l, a
	push hl
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	ld c, $0
	pop hl
	ld a, [wc2f7]
	cp $3
	jp z, Func_4e89e
	cp $2
	jp z, Func_4e884
	cp $1
	jp z, Func_4e863
	or a
	jp nz, Func_4e8a9
	push hl
	ld c, $0
	ld hl, sp+$7
	ld [hl], $1
	pop hl
	jp Func_4e8a9

Func_4e863: ; 4e863 (13:6863)
	push hl
	ld a, [wTimeSetMonthsTensDigit]
	cp $1
	jp nz, Func_4e873
	ld hl, sp+$7
	ld [hl], $2
	jp Func_4e880

Func_4e873: ; 4e873 (13:6873)
	ld a, [wTimeSetMonthsTensDigit]
	or a
	jp nz, Func_4e87c
	ld c, $1
Func_4e87c: ; 4e87c (13:687c)
	ld hl, sp+$7
	ld [hl], $9
Func_4e880: ; 4e880 (13:6880)
	pop hl
	jp Func_4e8a9

Func_4e884: ; 4e884 (13:6884)
	push hl
	ld a, l
	cp $2
	jp nz, Func_4e894
	ld c, $0
	ld hl, sp+$7
	ld [hl], $2
	jp Func_4e89a

Func_4e894: ; 4e894 (13:6894)
	ld c, $0
	ld hl, sp+$7
	ld [hl], $3
Func_4e89a: ; 4e89a (13:689a)
	pop hl
	jp Func_4e8a9

Func_4e89e: ; 4e89e (13:689e)
	push hl
	ld hl, $0
	ld c, $0
	ld hl, sp+$7
	ld [hl], $9
	pop hl
Func_4e8a9: ; 4e8a9 (13:68a9)
	pop de
	push hl
	ld a, e
	sub $3
	or d
	jp z, Func_4e9a6
	ld a, e
	sub $2
	or d
	jp z, Func_4e994
	ld a, e
	dec a
	or d
	jp z, Func_4e92b
	ld a, e
	or d
	jp nz, Func_4e9b5
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	ld hl, sp+$5
	cp [hl]
	jp nz, Func_4e902
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], c
	ld hl, sp+$5
	ld a, [hl]
	cp c
	jp z, Func_4e8ff
	ld a, [wc2f7]
	or a
	jp z, Func_4e8f6
	ld a, [wc2f7]
	cp $1
	jp nz, Func_4e8ff
Func_4e8f6: ; 4e8f6 (13:68f6)
	xor a
	ld [wTimeSetDaysTensDigit], a
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
Func_4e8ff: ; 4e8ff (13:68ff)
	jp Func_4e928

Func_4e902: ; 4e902 (13:6902)
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld a, $1
	add [hl]
	ld [hl], a
	ld a, [wc2f7]
	or a
	jp z, Func_4e91f
	ld a, [wc2f7]
	cp $1
	jp nz, Func_4e928
Func_4e91f: ; 4e91f (13:691f)
	xor a
	ld [wTimeSetDaysTensDigit], a
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
Func_4e928: ; 4e928 (13:6928)
	jp Func_4e9b5

Func_4e92b: ; 4e92b (13:692b)
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp c
	jp nz, Func_4e96a
	ld hl, sp+$5
	ld a, [hl]
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], a
	ld hl, sp+$5
	ld a, [hl]
	cp c
	jp z, Func_4e967
	ld a, [wc2f7]
	or a
	jp z, Func_4e95e
	ld a, [wc2f7]
	cp $1
	jp nz, Func_4e967
Func_4e95e: ; 4e95e (13:695e)
	xor a
	ld [wTimeSetDaysTensDigit], a
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
Func_4e967: ; 4e967 (13:6967)
	jp Func_4e991

Func_4e96a: ; 4e96a (13:696a)
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
	ld a, [wc2f7]
	or a
	jp z, Func_4e988
	ld a, [wc2f7]
	cp $1
	jp nz, Func_4e991
Func_4e988: ; 4e988 (13:6988)
	xor a
	ld [wTimeSetDaysTensDigit], a
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
Func_4e991: ; 4e991 (13:6991)
	jp Func_4e9b5

Func_4e994: ; 4e994 (13:6994)
	ld a, [wc2f7]
	cp $3
	jp nc, Func_4e9a3
	ld a, [wc2f7]
	inc a
	ld [wc2f7], a
Func_4e9a3: ; 4e9a3 (13:69a3)
	jp Func_4e9b5

Func_4e9a6: ; 4e9a6 (13:69a6)
	ld a, [wc2f7]
	cp $1
	jp c, Func_4e9b5
	ld a, [wc2f7]
	dec a
	ld [wc2f7], a
Func_4e9b5: ; 4e9b5 (13:69b5)
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	cp $d
	jp c, Func_4e9cd
	xor a
	ld [wTimeSetMonthsOnesDigit], a
	jp Func_4e9e1

Func_4e9cd: ; 4e9cd (13:69cd)
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	jp nz, Func_4e9e1
	ld a, $1
	ld [wTimeSetMonthsOnesDigit], a
Func_4e9e1: ; 4e9e1 (13:69e1)
	pop hl
	ld a, l
	cp $4
	jp z, Func_4e9fa
	ld a, l
	cp $6
	jp z, Func_4e9fa
	ld a, l
	cp $9
	jp z, Func_4e9fa
	ld a, l
	cp $b
	jp nz, Func_4ea12
Func_4e9fa: ; 4e9fa (13:69fa)
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	cp $1f
	jp c, Func_4ea0f
	xor a
	ld [wTimeSetDaysOnesDigit], a
Func_4ea0f: ; 4ea0f (13:6a0f)
	jp Func_4ead7

Func_4ea12: ; 4ea12 (13:6a12)
	ld a, l
	cp $2
	jp nz, Func_4eabc
	ld hl, sp+$2
	ld a, [hl]
	cp $20
	jp nz, Func_4eab9
	ld hl, wTimeSetCenturies
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	push hl
	ld hl, wTimeSetMillennia
	ld l, [hl]
	ld h, $0
	ld de, $3e8
	call MultiplyHLbyDE
	pop de
	add hl, de
	ld c, l
	ld b, h
	ld hl, wTimeSetDecades
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld a, [wTimeSetYears]
	ld e, a
	ld d, $0
	add hl, de
	pop de
	push hl
	pop hl
	push hl
	ld de, $4
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_4ea73
	pop hl
	push hl
	ld de, $64
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_4ea80
Func_4ea73: ; 4ea73 (13:6a73)
	pop hl
	push hl
	ld de, $190
	call DivideHLByDESigned
	ld a, e
	or d
	jp nz, Func_4ea9e
Func_4ea80: ; 4ea80 (13:6a80)
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	cp $1e
	jp c, Func_4ea9b
	ld a, $9
	ld [wTimeSetDaysOnesDigit], a
	ld a, $2
	ld [wTimeSetDaysTensDigit], a
Func_4ea9b: ; 4ea9b (13:6a9b)
	jp Func_4eab9

Func_4ea9e: ; 4ea9e (13:6a9e)
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	cp $1d
	jp c, Func_4eab9
	ld a, $8
	ld [wTimeSetDaysOnesDigit], a
	ld a, $2
	ld [wTimeSetDaysTensDigit], a
Func_4eab9: ; 4eab9 (13:6ab9)
	jp Func_4ead7

Func_4eabc: ; 4eabc (13:6abc)
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	cp $20
	jp c, Func_4ead7
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
	ld a, $3
	ld [wTimeSetDaysTensDigit], a
Func_4ead7: ; 4ead7 (13:6ad7)
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	jp nz, Func_4eaeb
	ld a, $1
	ld [wTimeSetDaysOnesDigit], a
Func_4eaeb: ; 4eaeb (13:6aeb)
	ld hl, sp+$2
	ld a, [hl]
	cp $20
	jp nz, Func_4eb51
	ld e, $5
	ld a, $7
	call SetStringStartState
	ld hl, wTimeSetMonthsOnesDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, wTimeSetMonthsTensDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_4eb67
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld e, $5
	ld a, $c
	call SetStringStartState
	ld hl, wTimeSetDaysOnesDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, wTimeSetDaysTensDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_4eb6c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	set_farcall_addrs_hli Func_533f8
	ld a, $1
	call FarCall
	ld l, $2
	push hl
	ld c, $8
	ld e, $5
	ld a, $7
	call Func_3bc5
	pop bc
	jp Func_4eb61

Func_4eb51: ; 4eb51 (13:6b51)
	call Func_4e780
	ld l, $b
	push hl
	ld c, $a
	ld e, $0
	ld a, $a
	call Func_3bc5
	pop bc
Func_4eb61: ; 4eb61 (13:6b61)
	ld hl, $4000
	pop bc
	pop bc
	ret

Data_4eb67: ; 4eb67
	TX_SNUM
	TX_SNUM
	db $0

Data_4eb6c: ; 4eb6c
	TX_SNUM
	TX_SNUM
	db $0

Func_4eb71: ; 4eb71
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	inc hl
	ld h, [hl]
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld de, Data_4ec21
	ld hl, $10e
	call PlaceStringDEatCoordHL
	call Func_4c0b9
	callba_hli Func_1482e
	push hl
	callba_hli Func_537dc
	ld c, a
	pop hl
	ld a, l
	or h
	jp nz, Func_4ec1d
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	ld [wSaveScratchBirthMonth], a
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	ld [wSaveScratchBirthDay], a
	pop bc
	ld a, c
	ld [wc987], a
	ld a, e
	call GetSRAMBank
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_4ec03
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4ec17
Func_4ec03: ; 4ec03 (13:6c03)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_4ec17: ; 4ec17 (13:6c17)
	ld hl, $0
	jp Func_4ec20

Func_4ec1d: ; 4ec1d (13:6c1d)
	ld hl, $1
Func_4ec20: ; 4ec20 (13:6c20)
	ret

Data_4ec21: ; 4ec21
	db "(これてﾞいい)?", $0

Func_4ec2b: ; 4ec2b (13:6c2b)
	push af
	push bc
	push de
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	ld hl, sp+$2
	ld [hl], $ff
	pop de
	ld a, e
	cp $3
	jp z, Func_4ed0e
	cp $2
	jp z, Func_4eccc
	cp $1
	jp z, Func_4ec88
	or a
	jp nz, Func_4ed53
	ld a, [wc9a2]
	cp $14
	jp c, Func_4ec6c
	ld a, c
	call GetSRAMBank
	ld a, $ff
	jp Func_4ed5a

Func_4ec6c: ; 4ec6c (13:6c6c)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, wc9a2
	ld l, [hl]
	ld h, $0
	ld de, wc98e
	add hl, de
	ld [hl], a
	ld a, [wc9a2]
	inc a
	ld [wc9a2], a
	ld hl, sp+$0
	ld [hl], $1
	jp Func_4ed53

Func_4ec88: ; 4ec88 (13:6c88)
	push bc
	ld hl, sp+$5
	ld e, [hl]
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld [hl], $0
	ld a, [wc9a2]
	dec a
	ld [wc9a2], a
	ld hl, sp+$5
	ld c, [hl]
Func_4ec9e: ; 4ec9e (13:6c9e)
	ld a, c
	ld hl, wc9a2
	cp [hl]
	jp nc, Func_4ecbb
	ld e, c
	ld d, $0
	inc de
	ld hl, wc98e
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld [hl], a
	inc c
	jp Func_4ec9e

Func_4ecbb: ; 4ecbb (13:6cbb)
	ld e, c
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld [hl], $0
	ld hl, sp+$2
	ld [hl], $1
	pop bc
	jp Func_4ed53

Func_4eccc: ; 4eccc (13:6ccc)
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, $0
Func_4ece2: ; 4ece2 (13:6ce2)
	ld a, c
	cp $fa
	jp nc, Func_4ed0a
	ld e, c
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_4ed06
	ld hl, sp+$5
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld [hl], a
	ld hl, sp+$2
	ld [hl], $1
	jp Func_4ed0a

Func_4ed06: ; 4ed06 (13:6d06)
	inc c
	jp Func_4ece2

Func_4ed0a: ; 4ed0a (13:6d0a)
	pop bc
	jp Func_4ed53

Func_4ed0e: ; 4ed0e (13:6d0e)
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$5
	ld e, [hl]
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld [hl], $0
	ld hl, sp+$5
	ld c, [hl]
Func_4ed30: ; 4ed30 (13:6d30)
	ld a, c
	cp $f9
	jp nc, Func_4ed4a
	ld e, c
	ld d, $0
	ld hl, $cd11
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld [hl], a
	inc c
	jp Func_4ed30

Func_4ed4a: ; 4ed4a (13:6d4a)
	xor a
	ld [$ce09], a
	ld hl, sp+$2
	ld [hl], $1
	pop bc
Func_4ed53: ; 4ed53 (13:6d53)
	ld a, c
	call GetSRAMBank
	ld hl, sp+$0
	ld a, [hl]
Func_4ed5a: ; 4ed5a (13:6d5a)
	pop bc
	pop bc
	ret

Func_4ed5d:: ; 4ed5d (13:6d5d)
	push af
	push de
	set_farcall_addrs_hli Func_6f6de
	pop de
	pop af
	call FarCall
	ret

Func_4ed70: ; 4ed70 (13:6d70)
	push af
	push bc
	push de
	ld hl, sp+$2
	ld [hl], $ff
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	pop de
	ld a, e
	cp $3
	jp z, Func_4ee63
	cp $2
	jp z, Func_4ee21
	cp $1
	jp z, Func_4edcd
	or a
	jp nz, Func_4eea3
	ld a, [wc9b7]
	cp $14
	jp c, Func_4edb1
	ld a, c
	call GetSRAMBank
	ld a, $ff
	jp Func_4eeaa

Func_4edb1: ; 4edb1 (13:6db1)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, wc9b7
	ld l, [hl]
	ld h, $0
	ld de, wc9a3
	add hl, de
	ld [hl], a
	ld a, [wc9b7]
	inc a
	ld [wc9b7], a
	ld hl, sp+$0
	ld [hl], $1
	jp Func_4eea3

Func_4edcd: ; 4edcd (13:6dcd)
	ld a, [wc9b7]
	or a
	jp nz, Func_4eddd
	ld a, c
	call GetSRAMBank
	ld a, $ff
	jp Func_4eeaa

Func_4eddd: ; 4eddd (13:6ddd)
	push bc
	ld hl, sp+$5
	ld e, [hl]
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld [hl], $0
	ld a, [wc9b7]
	dec a
	ld [wc9b7], a
	ld hl, sp+$5
	ld c, [hl]
Func_4edf3: ; 4edf3 (13:6df3)
	ld a, c
	ld hl, wc9b7
	cp [hl]
	jp nc, Func_4ee10
	ld e, c
	ld d, $0
	inc de
	ld hl, wc9a3
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld [hl], a
	inc c
	jp Func_4edf3

Func_4ee10: ; 4ee10 (13:6e10)
	ld e, c
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld [hl], $0
	ld hl, sp+$2
	ld [hl], $1
	pop bc
	jp Func_4eea3

Func_4ee21: ; 4ee21 (13:6e21)
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, $0
Func_4ee37: ; 4ee37 (13:6e37)
	ld a, c
	cp $dc
	jp nc, Func_4ee5f
	ld e, c
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_4ee5b
	ld hl, sp+$5
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld [hl], a
	ld hl, sp+$2
	ld [hl], $1
	jp Func_4ee5f

Func_4ee5b: ; 4ee5b (13:6e5b)
	inc c
	jp Func_4ee37

Func_4ee5f: ; 4ee5f (13:6e5f)
	pop bc
	jp Func_4eea3

Func_4ee63: ; 4ee63 (13:6e63)
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$5
	ld c, [hl]
Func_4ee7a: ; 4ee7a (13:6e7a)
	ld a, c
	cp $dc
	jp nc, Func_4ee94
	ld e, c
	ld d, $0
	ld hl, $cc35
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld [hl], a
	inc c
	jp Func_4ee7a

Func_4ee94: ; 4ee94 (13:6e94)
	xor a
	ld [$cd0f], a
	pop bc
	push bc
	ld a, c
	call GetSRAMBank
	ld hl, sp+$2
	ld [hl], $1
	pop bc
Func_4eea3: ; 4eea3 (13:6ea3)
	ld a, c
	call GetSRAMBank
	ld hl, sp+$0
	ld a, [hl]
Func_4eeaa: ; 4eeaa (13:6eaa)
	pop bc
	pop bc
	ret

INCLUDE "items/item_effects.asm"

Func_4f850: ; 4f850
	add sp, -$1e
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	push hl
	set_farcall_addrs_hli Func_15ad6
	pop hl
	pop af
	push hl
	ld hl, sp+$2
	push hl
	ld l, a
	ld h, $0
	ld de, $400
	add hl, de
	pop de
	ld c, $a
	call FarCall
	pop hl
	ld a, l
	call GetSRAMBank
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$0
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	add sp, $1e
	ret

Pointers_4f8a6: ; 4f8a6
	dw Data_4f8aa
	dw $0

Data_4f8aa: ; 4f8aa
	db "(しんかした)", $0

Data_4f8b2: ; 4f8b2
	dr $4f8b2, $4f8ba

Data_4f8ba: ; 4f8ba
	dr $4f8ba, $4f8d3

Data_4f8d3: ; 4f8d3
	dr $4f8d3, $4f8ec

Func_4f8ec: ; 4f8ec (13:78ec)
	push af
	add sp, -$70
	push de
	ld hl, sp+$1b
	reg16swap de, hl
	ld hl, Data_4f8ba
	ld bc, $19
	call MemCopy
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_4f8d3
	ld bc, $19
	call MemCopy
	callba_hli AllocateMonsterStruct
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_dc0a
	ld hl, sp+$73
	ld e, [hl]
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	pop de
	push de
	ld a, $1
	call FarCall
	ld a, [wSongCurrentlyPlaying]
	push af
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
	ld hl, sp+$1d
	call Func_4fac6
	ld hl, sp+$4
	call Func_4fac6
	ld a, [wSystemType]
	cp $1
	jp z, Func_4f978
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4f981
Func_4f978: ; 4f978 (13:7978)
	ld de, $8
	ld hl, Data_4f8b2
	call Func_2b7d
Func_4f981: ; 4f981 (13:7981)
	pop af
	call OverworldPlaySong
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$36
	ld [hl], $0
Func_4f99d: ; 4f99d (13:799d)
	ld hl, sp+$36
	ld a, [hl]
	cp $4
	jp nc, Func_4f9ce
	ld hl, sp+$36
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	dec a
	ld hl, sp+$75
	cp [hl]
	jp nz, Func_4f9c4
	jp Func_4f9ce

Func_4f9c4: ; 4f9c4 (13:79c4)
	ld hl, sp+$36
	ld a, [hl]
	inc a
	ld hl, sp+$36
	ld [hl], a
	jp Func_4f99d

Func_4f9ce: ; 4f9ce (13:79ce)
	set_farcall_addrs_hli Func_15ad6
	ld c, $6
	ld hl, sp+$55
	reg16swap de, hl
	ld hl, sp+$36
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	inc h
	call FarCall
	set_farcall_addrs_hli Func_15ad6
	pop af
	pop de
	push af
	ld hl, sp+$35
	push hl
	ld l, e
	ld h, $0
	ld de, $600
	add hl, de
	pop de
	ld c, $6
	call FarCall
	pop af
	call GetSRAMBank
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$51
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld hl, Data_4fab2
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$33
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	ld hl, Data_4fab7
	push hl
	call PlaceString
	pop bc
	call Func_4c0b9
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_4f8a6)
	ld de, Pointers_4f8a6
	ld hl, $110
	call FarCall
	call Func_4c0ac
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_4fa8a
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_4fa9e
Func_4fa8a: ; 4fa8a (13:7a8a)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_4fa9e: ; 4fa9e (13:7a9e)
	call Func_4c0b9
	callba_hli FreeMonsterStruct
	add sp, $72
	ret

Data_4fab2: ; 4fab2
	db "(は) ", $0

Data_4fab7: ; 4fab7
	db "(に)", $0

Func_4fabb: ; 4fabb (13:7abb)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_4fabb
	ret

Func_4fac6: ; 4fac6 (13:7ac6)
	push hl
	ld bc, $a0
	ld e, $0
	ld hl, wOAM00YCoord
	call FillMemory
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_4fabb
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	ld a, $28
	ld [rLYC], a
	xor a
	ld [wc2e1], a
	xor a
	ld [wc2e2], a
	ld a, $91
	ld [wc2e3], a
	call EnableHBlank
	call Func_4fabb
	call WaitVideoTransfer
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], $0
	set_farcall_addrs_hli Func_f723
	pop hl
	call FarCall
	ld bc, $a0
	ld e, $0
	ld hl, wOAM00YCoord
	call FillMemory
	call DisableHBlank
	ld a, [wLCDC]
	and $f9
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_4fabb
	call WaitVideoTransfer
	ret

Func_4fb46: ; 4fb46 (13:7b46)
	ld a, [wc319]
	cp $81
	jp nz, Func_4fb54
	call Func_4fb58
	jp Func_4fb57

Func_4fb54: ; 4fb54 (13:7b54)
	call Func_4fd2f
Func_4fb57: ; 4fb57 (13:7b57)
	ret

Func_4fb58: ; 4fb58 (13:7b58)
	add sp, -$2c
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$29
	ld [hl], $0
Func_4fb72: ; 4fb72 (13:7b72)
	ld hl, sp+$29
	ld a, [hl]
	cp $4
	jp nc, Func_4fbd5
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$25
	add hl, de
	ld [hl], $ff
	ld hl, sp+$29
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_4fbcb
	ld hl, sp+$29
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_4fbcb
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$25
	add hl, de
	ld [hl], $1
Func_4fbcb: ; 4fbcb (13:7bcb)
	ld hl, sp+$29
	ld a, [hl]
	inc a
	ld hl, sp+$29
	ld [hl], a
	jp Func_4fb72

Func_4fbd5: ; 4fbd5 (13:7bd5)
	pop af
	call GetSRAMBank
Func_4fbd9: ; 4fbd9 (13:7bd9)
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $9
	call FarCall
	ld a, l
	ld hl, sp+$2a
	ld [hl], a
	ld hl, sp+$2a
	ld a, [hl]
	cp $4
	jp nc, Func_4fc32
	ld hl, sp+$28
	ld [hl], $0
	ld c, $0
Func_4fbfb: ; 4fbfb (13:7bfb)
	ld a, c
	cp $4
	jp nc, Func_4fc1f
	ld a, [wc2e9]
	cp c
	jp z, Func_4fc1b
	ld e, c
	ld d, $0
	ld hl, sp+$23
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_4fc1b
	ld hl, sp+$28
	ld [hl], $1
	jp Func_4fc1f

Func_4fc1b: ; 4fc1b (13:7c1b)
	inc c
	jp Func_4fbfb

Func_4fc1f: ; 4fc1f (13:7c1f)
	ld hl, sp+$28
	ld a, [hl]
	cp $1
	jp nz, Func_4fc2a
	jp Func_4fc38

Func_4fc2a: ; 4fc2a (13:7c2a)
	ld a, $a
	call Func_4ca74
	jp Func_4fc35

Func_4fc32: ; 4fc32 (13:7c32)
	jp Func_4fc38

Func_4fc35: ; 4fc35 (13:7c35)
	jp Func_4fbd9

Func_4fc38: ; 4fc38 (13:7c38)
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$2a
	reg16swap de, hl
	ld hl, $1
	call FarCall
	ld hl, sp+$2a
	ld a, [hl]
	cp $4
	jp nc, Func_4fd2c
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $23
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_4fd01
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp nc, Func_4fd01
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$29
	reg16swap de, hl
	ld hl, $1
	call FarCall
	ld hl, sp+$2a
	ld [hl], a
	ld hl, sp+$29
	ld a, [hl]
	cp $4
	jp nc, Func_4fcf9
	set_farcall_addrs_hli Func_6ef0d
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $1
	ld a, [wc2e9]
	call FarCall
	callba_hli SaveGame
	ld a, $8
	call Func_4ca74
	jp Func_4fd2c

Func_4fcf9: ; 4fcf9 (13:7cf9)
	ld a, $5
	call Func_4ca74
	jp Func_4fd2c

Func_4fd01: ; 4fd01 (13:7d01)
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $1
	ld a, [wc2e9]
	call FarCall
	callba_hli SaveGame
	ld a, $8
	call Func_4ca74
	jp Func_4fd2c

Func_4fd2c: ; 4fd2c (13:7d2c)
	add sp, $2c
	ret

Func_4fd2f: ; 4fd2f (13:7d2f)
	add sp, -$2a
	call Func_4c0ac
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_4c0d3
	ld de, Data_4fec4
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_4fed4
	ld hl, $110
	call PlaceStringDEatCoordHL
	call Func_4c0b9
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$25
	reg16swap de, hl
	ld hl, $1
	call FarCall
	ld hl, sp+$25
	ld a, [hl]
	cp $4
	jp nc, Func_4fec1
	ld e, $0
	push de
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $23
	call FarCall
	pop de
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_4fe0e
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp nc, Func_4fe0e
	push de
	set_farcall_addrs_hli Func_52d58
	ld hl, sp+$28
	call FarCall
	ld hl, sp+$25
	ld [hl], a
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$25
	reg16swap de, hl
	ld hl, $1
	call FarCall
	pop de
	ld hl, sp+$23
	ld a, [hl]
	cp $4
	jp nz, Func_4fddc
	ld e, $1
	jp Func_4fe0e

Func_4fddc: ; 4fddc (13:7ddc)
	push de
	ld c, $0
Func_4fddf: ; 4fddf (13:7ddf)
	ld a, c
	cp $4
	jp nc, Func_4fdf7
	ld e, c
	ld d, $0
	ld hl, sp+$28
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_4fdf3
	jp Func_4fdf7

Func_4fdf3: ; 4fdf3 (13:7df3)
	inc c
	jp Func_4fddf

Func_4fdf7: ; 4fdf7 (13:7df7)
	push bc
	set_farcall_addrs_hli Func_6ef7f
	pop bc
	ld a, c
	add $ab
	call FarCall
	ld hl, sp+$2
	ld [hl], a
	pop de
Func_4fe0e: ; 4fe0e (13:7e0e)
	inc e
	dec e
	jp nz, Func_4fec1
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$26
	ld [hl], $0
Func_4fe2b: ; 4fe2b (13:7e2b)
	ld hl, sp+$26
	ld a, [hl]
	cp $4
	jp nc, Func_4feaa
	ld hl, sp+$26
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_4fea0
	read_hl_from_sp_plus $12
	write_hl_to_sp_plus $10
	read_hl_from_sp_plus $16
	write_hl_to_sp_plus $14
	ld hl, sp+$18
	ld [hl], $0
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$26
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	ld e, $0
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	ld e, $1
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	jp Func_4feaa

Func_4fea0: ; 4fea0 (13:7ea0)
	ld hl, sp+$26
	ld a, [hl]
	inc a
	ld hl, sp+$26
	ld [hl], a
	jp Func_4fe2b

Func_4feaa: ; 4feaa (13:7eaa)
	pop af
	call GetSRAMBank
	callba_hli SaveGame
	ld a, $9
	call Func_4ca74
Func_4fec1: ; 4fec1 (13:7ec1)
	add sp, $2a
	ret

Data_4fec4: ; 4fec4
	db "(くれる) ロホﾞホﾟン(を)", $0

Data_4fed4: ; 4fed4
	db "(えらんてﾞいるよ)", $0

Func_4fedf: ; 4fedf (13:7edf)
	ld a, [wc319]
	cp $81
	jp nz, Func_4feed
	call Func_4fd2f
	jp Func_4fef0

Func_4feed: ; 4feed (13:7eed)
	call Func_4fb58
Func_4fef0: ; 4fef0 (13:7ef0)
	ret

Func_4fef1: ; 4fef1 (13:7ef1)
	push bc
	push bc
	push bc
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	ld a, [wca9c]
	and $2
	push af
	ld a, l
	call GetSRAMBank
	pop af
	or a
	jp nz, Func_4ff54
	callba_hli Func_e3507
	callba_hli Func_e1aa9
	xor a
Func_4ff35: ; 4ff35 (13:7f35)
	cp $4
	jp nc, Func_4ff51
	push af
	set_farcall_addrs_hli Func_93941
	pop af
	push af
	inc a
	call FarCall
	pop af
	inc a
	jp Func_4ff35

Func_4ff51: ; 4ff51 (13:7f51)
	jp Func_4ff8c

Func_4ff54: ; 4ff54 (13:7f54)
	ld bc, $8
	ld e, $0
	ld hl, sp+$0
	call FillMemory
	xor a
Func_4ff5f: ; 4ff5f (13:7f5f)
	cp $b
	jp nc, Func_4ff8c
	push af
	cp $a
	jp nz, Func_4ff6e
	ld hl, sp+$4
	ld [hl], $8
Func_4ff6e: ; 4ff6e (13:7f6e)
	set_farcall_addrs_hli Func_935a8
	pop af
	push af
	ld hl, sp+$2
	reg16swap de, hl
	ld l, a
	ld h, $0
	call FarCall
	pop af
	inc a
	jp Func_4ff5f

Func_4ff8c: ; 4ff8c (13:7f8c)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

SECTION "Bank 14", ROMX, BANK [$14]
Func_50000: ; 50000
	ret

Data_50001: ; 50001
	dr $50001, $50020

Data_50020: ; 50020
	dr $50020, $5002f

Data_5002f: ; 5002f
	db 6, 0
	db 8, 4
	dba Func_531fe
	dbw 5, 0
	dba Func_5346b
	dba Func_53667
	dbw 5, 0
	dba Func_5365b
	dba Func_53661
	dbw 0, 0
	dbw 0, 0

Data_5004e: ; 5004e
	dr $5004e, $5005d

Data_5005d: ; 5005d
	db 6, 4
	db 11, 4
	dba Func_5321e
	dbw 5, 0
	dba Func_4e813
	dba Func_53667
	dbw 5, 0
	dba Func_4e175
	dba Func_4e1a4
	dbw 0, 0
	dbw 0, 0

Data_5007c: ; 5007c
	dr $5007c, $5008b

Data_5008b: ; 5008b
	db 6, 8
	db 7, 4
	dba Func_5323f
	dbw 5, 0
	dba Func_5366b
	dba Func_53667
	dbw 5, 0
	dba Func_537d0
	dba Func_537d6
	dbw 0, 0
	dbw 0, 0

Data_500aa: ; 500aa
	dr $500aa, $500b9

Data_500b9: ; 500b9
	dr $500b9, $500d8

Data_500d8: ; 500d8
	dr $500d8, $500e7

Data_500e7: ; 500e7
	dr $500e7, $50148

Data_50148: ; 50148
	dr $50148, $50157

Data_50157:
	dr $50157, $50176

Data_50176
	dr $50176, $50185

Func_50185: ; 50185 (14:4185)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_5019a: ; 5019a
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld a, [wca9c]
	ld l, a
	push hl
	ld a, e
	call GetSRAMBank
	pop hl
	ld a, l
	and $1
	ld [wc307], a
	ld a, l
	and $2
	rrca
	and $7f
	ld [wc308], a
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_50020)
	ld de, Data_50020
	ld hl, Data_50001
	call FarCall
	ret

Func_501de: ; 501de (14:41de)
	push hl
	push bc
	push bc
	push bc
	push bc
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus7
	call GetHLAtSPPlus10
	ld de, $b
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	call GetHLAtSPPlus7
	ld de, $2
	call DivideHLByDESigned
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	ld a, l
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus7
	ld de, $2
	call DivideHLByDESigned
	reg16swap de, hl
	add hl, hl
	ld de, $c
	add hl, de
	ld a, l
	ld hl, sp+$1
	ld [hl], a
	call GetHLAtSPPlus5
	ld de, $2
	call DivideHLByDESigned
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	inc hl
	inc hl
	inc hl
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	call GetHLAtSPPlus5
	ld de, $2
	call DivideHLByDESigned
	reg16swap de, hl
	add hl, hl
	ld de, $c
	add hl, de
	ld c, l
	call GetHLAtSPPlus5
	ld a, l
	or h
	jp z, Func_50268
	call GetHLAtSPPlus5
	ld a, l
	dec a
	or h
	jp nz, Func_502ce
Func_50268: ; 50268 (14:4268)
	call GetHLAtSPPlus7
	ld a, l
	or h
	jp z, Func_50279
	call GetHLAtSPPlus7
	ld a, l
	dec a
	or h
	jp nz, Func_502a1
Func_50279: ; 50279 (14:4279)
	ld e, c
	ld hl, sp+$0
	ld a, [hl]
	call SetStringStartState
	ld hl, Data_50337
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$1
	ld e, [hl]
	ld hl, sp+$2
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_50339
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_502cb

Func_502a1: ; 502a1 (14:42a1)
	ld e, c
	ld hl, sp+$0
	ld a, [hl]
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_5033c
	push hl
	call PlaceString
	pop bc
	pop bc
	ld hl, sp+$1
	ld e, [hl]
	ld hl, sp+$2
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_5033f
	push hl
	call PlaceString
	pop bc
	pop bc
Func_502cb: ; 502cb (14:42cb)
	jp Func_50331

Func_502ce: ; 502ce (14:42ce)
	call GetHLAtSPPlus7
	ld a, l
	or h
	jp z, Func_502df
	call GetHLAtSPPlus7
	ld a, l
	dec a
	or h
	jp nz, Func_5030c
Func_502df: ; 502df (14:42df)
	ld e, c
	ld hl, sp+$0
	ld a, [hl]
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_50342
	push hl
	call PlaceString
	pop bc
	pop bc
	ld hl, sp+$1
	ld e, [hl]
	ld hl, sp+$2
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_50345
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_50331

Func_5030c: ; 5030c (14:430c)
	ld e, c
	ld hl, sp+$0
	ld a, [hl]
	call SetStringStartState
	ld hl, Data_50348
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$1
	ld e, [hl]
	ld hl, sp+$2
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_5034a
	push hl
	call PlaceString
	pop bc
	pop bc
Func_50331: ; 50331 (14:4331)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_50337: ; 50337
	db " ", $0

Data_50339: ; 50339
	TX_STACK
	db $0

Data_5033c: ; 5033c
	TX_STACK
	db $0

Data_5033f: ; 5033f
	TX_STACK
	db $0

Data_50342: ; 50342
	TX_STACK
	db $0

Data_50345: ; 50345
	TX_STACK
	db $0

Data_50348: ; 50348
	db " ", $0

Data_5034a: ; 5034a
	TX_STACK
	db $0

Func_5034d: ; 5034d (14:434d)
	push bc
	push de
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop de
	ld a, e
	sub $3
	or d
	jp z, Func_50410
	ld a, e
	sub $2
	or d
	jp z, Func_503e6
	ld a, e
	dec a
	or d
	jp z, Func_503ab
	ld a, e
	or d
	jp nz, Func_5043a
	ld a, c
	or b
	jp z, Func_50380
	ld a, c
	dec a
	or b
	jp nz, Func_50391
Func_50380: ; 50380 (14:4380)
	dec bc
	inc b
	dec b
	bit 7, b
	jr z, .asm_5038a
	ld bc, $0
.asm_5038a
	ld a, c
	ld [wc307], a
	jp Func_503a8

Func_50391: ; 50391 (14:4391)
	dec bc
	ld l, c
	ld h, b
	ld de, $2
	call CompareHLtoDE
	jp nc, Func_503a0
	ld bc, $2
Func_503a0: ; 503a0 (14:43a0)
	ld l, c
	ld h, b
	dec hl
	dec hl
	ld a, l
	ld [wc308], a
Func_503a8: ; 503a8 (14:43a8)
	jp Func_5043a

Func_503ab: ; 503ab (14:43ab)
	ld a, c
	or b
	jp z, Func_503b6
	ld a, c
	dec a
	or b
	jp nz, Func_503cc
Func_503b6: ; 503b6 (14:43b6)
	inc bc
	ld e, c
	ld d, b
	ld hl, $1
	call CompareHLtoDE
	jp nc, Func_503c5
	ld bc, $1
Func_503c5: ; 503c5 (14:43c5)
	ld a, c
	ld [wc307], a
	jp Func_503e3

Func_503cc: ; 503cc (14:43cc)
	inc bc
	ld e, c
	ld d, b
	ld hl, $3
	call CompareHLtoDE
	jp nc, Func_503db
	ld bc, $3
Func_503db: ; 503db (14:43db)
	ld l, c
	ld h, b
	dec hl
	dec hl
	ld a, l
	ld [wc308], a
Func_503e3: ; 503e3 (14:43e3)
	jp Func_5043a

Func_503e6: ; 503e6 (14:43e6)
	ld a, c
	or b
	jp z, Func_503f1
	ld a, c
	dec a
	or b
	jp nz, Func_5040d
Func_503f1: ; 503f1 (14:43f1)
	ld a, c
	ld [wc307], a
	ld a, [wc308]
	or a
	jp nz, Func_50402
	ld bc, $2
	jp Func_50405

Func_50402: ; 50402 (14:4402)
	ld bc, $3
Func_50405: ; 50405 (14:4405)
	ld l, c
	ld h, b
	dec hl
	dec hl
	ld a, l
	ld [wc308], a
Func_5040d: ; 5040d (14:440d)
	jp Func_5043a

Func_50410: ; 50410 (14:4410)
	ld a, c
	sub $2
	or b
	jp z, Func_5041e
	ld a, c
	sub $3
	or b
	jp nz, Func_5043a
Func_5041e: ; 5041e (14:441e)
	ld l, c
	ld h, b
	dec hl
	dec hl
	ld a, l
	ld [wc308], a
	ld a, [wc307]
	or a
	jp nz, Func_50433
	ld bc, $0
	jp Func_50436

Func_50433: ; 50433 (14:4433)
	ld bc, $1
Func_50436: ; 50436 (14:4436)
	ld a, c
	ld [wc307], a
Func_5043a: ; 5043a (14:443a)
	push bc
	call GetHLAtSPPlus4
	inc hl
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	ld l, $7
	push hl
	ld c, $e
	ld e, $9
	ld a, $2
	call Func_3afc
	pop bc
	call GetHLAtSPPlus4
	call Func_501de
	ld l, $7
	push hl
	ld c, $e
	ld e, $9
	ld a, $2
	call Func_3ca1
	pop bc
	pop bc
	pop hl
	push hl
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $4000
	pop bc
	ret

Func_50473: ; 50473
	ld de, $2
	jp Func_5034d

Func_50479: ; 50479
	ld de, $3
	jp Func_5034d

Func_5047f: ; 5047f
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $0
	ld a, [wc307]
	or a
	jp nz, Func_504b1
	ld a, [wc308]
	or a
	jp nz, Func_504b1
	ld l, $0
	jp Func_504e1

Func_504b1: ; 504b1 (14:44b1)
	ld a, [wc307]
	or a
	jp nz, Func_504c7
	ld a, [wc308]
	cp $1
	jp nz, Func_504c7
	ld a, l
	or $2
	ld l, a
	jp Func_504e1

Func_504c7: ; 504c7 (14:44c7)
	ld a, [wc307]
	cp $1
	jp nz, Func_504dd
	ld a, [wc308]
	or a
	jp nz, Func_504dd
	ld a, l
	or $1
	ld l, a
	jp Func_504e1

Func_504dd: ; 504dd (14:44dd)
	ld a, l
	or $3
	ld l, a
Func_504e1: ; 504e1 (14:44e1)
	push hl
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	pop hl
	ld a, l
	ld [wca9c], a
	ld a, e
	call GetSRAMBank
	callba_hli Func_4fef1
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld hl, -1
	ret

Pointers_5052d: ; 5052d
	dw Data_50531
	dw $0

Data_50531: ; 50531
	db "セーフﾞ(したよ)", $0

Func_5053b: ; 5053b
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	ld de, Data_505f9
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_505dc
	callba_hli SaveGame
	ld l, $5
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5052d)
	ld de, Pointers_5052d
	ld hl, $10e
	call FarCall
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
Func_505dc: ; 505dc (14:45dc)
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Data_505f9: ; 505f9
	db "セーフﾞ(するよ)?", $0

Func_50604: ; 50604 (14:4604)
	push bc
	push bc
	push bc
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$1
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$0
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	ld hl, $b
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, $5
	add hl, bc
	ld l, [hl]
	inc hl
	ld h, [hl]
	ld hl, $9
	add hl, bc
	ld l, [hl]
	inc hl
	ld h, [hl]
	ld hl, $7
	add hl, bc
	ld l, [hl]
	inc hl
	ld h, [hl]
	ld hl, $d
	add hl, bc
	ld a, [hl]
	cp $1c
	jp z, Func_5083c
	cp $19
	jp z, Func_50760
	cp $13
	jp z, Func_50760
	cp $1d
	jp nz, Func_508bc
	call GetHLAtSPPlus4
	ld a, l
	and h
	inc a
	jp z, Func_506e2
	call GetHLAtSPPlus4
	ld de, $4
	call CompareHLtoDE
	jp nc, Func_5068e
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus4
	add hl, hl
	add hl, bc
	ld e, l
	ld hl, sp+$1
	ld a, [hl]
	inc a
	call SetStringStartState
	jp Func_506da

Func_5068e: ; 5068e (14:468e)
	call GetHLAtSPPlus4
	ld de, $8
	call CompareHLtoDE
	jp nc, Func_506b5
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus4
	add hl, hl
	ld de, -8
	add hl, de
	add hl, bc
	ld e, l
	ld hl, sp+$1
	ld a, [hl]
	add $b
	call SetStringStartState
	jp Func_506da

Func_506b5: ; 506b5 (14:46b5)
	call GetHLAtSPPlus4
	ld a, l
	sub $8
	or h
	jp nz, Func_506c9
	ld e, $d
	ld a, $2
	call SetStringStartState
	jp Func_506da

Func_506c9: ; 506c9 (14:46c9)
	call GetHLAtSPPlus4
	ld a, l
	sub $9
	or h
	jp nz, Func_506da
	ld e, $f
	ld a, $2
	call SetStringStartState
Func_506da: ; 506da (14:46da)
	ld hl, Data_508c0
	push hl
	call PlaceString
	pop bc
Func_506e2: ; 506e2 (14:46e2)
	call GetHLAtSPPlus6
	ld de, $4
	call CompareHLtoDE
	jp nc, Func_50704
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus6
	add hl, hl
	add hl, bc
	ld e, l
	ld hl, sp+$1
	ld a, [hl]
	inc a
	call SetStringStartState
	jp Func_50750

Func_50704: ; 50704 (14:4704)
	call GetHLAtSPPlus6
	ld de, $8
	call CompareHLtoDE
	jp nc, Func_5072b
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus6
	add hl, hl
	ld de, -8
	add hl, de
	add hl, bc
	ld e, l
	ld hl, sp+$1
	ld a, [hl]
	add $b
	call SetStringStartState
	jp Func_50750

Func_5072b: ; 5072b (14:472b)
	call GetHLAtSPPlus6
	ld a, l
	sub $8
	or h
	jp nz, Func_5073f
	ld e, $d
	ld a, $2
	call SetStringStartState
	jp Func_50750

Func_5073f: ; 5073f (14:473f)
	call GetHLAtSPPlus6
	ld a, l
	sub $9
	or h
	jp nz, Func_50750
	ld e, $f
	ld a, $2
	call SetStringStartState
Func_50750: ; 50750 (14:4750)
	ld hl, $8b
	push hl
	ld hl, Data_508c2
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_508bc

Func_50760: ; 50760 (14:4760)
	call GetHLAtSPPlus4
	ld a, l
	sub $36
	or h
	jp z, Func_50774
	call GetHLAtSPPlus4
	ld a, l
	sub $37
	or h
	jp nz, Func_5079d
Func_50774: ; 50774 (14:4774)
	ld hl, sp+$1
	ld [hl], $1
	call GetHLAtSPPlus4
	add hl, hl
	ld de, hFFA3
	add hl, de
	ld e, l
	ld hl, sp+$0
	ld [hl], e
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$1
	ld a, [hl]
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_508c5
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_507db

Func_5079d: ; 5079d (14:479d)
	call GetHLAtSPPlus4
	ld a, l
	and h
	inc a
	jp z, Func_507db
	call GetHLAtSPPlus4
	ld de, $6
	call DivideHLByDESigned
	add hl, hl
	inc hl
	ld a, l
	ld hl, sp+$1
	ld [hl], a
	call GetHLAtSPPlus4
	ld de, $6
	call DivideHLByDESigned
	reg16swap de, hl
	add hl, hl
	inc hl
	inc hl
	inc hl
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$1
	ld a, [hl]
	call SetStringStartState
	ld hl, Data_508c8
	push hl
	call PlaceString
	pop bc
Func_507db: ; 507db (14:47db)
	call GetHLAtSPPlus6
	ld a, l
	sub $37
	or h
	jp z, Func_507ec
	ld a, l
	sub $36
	or h
	jp nz, Func_507ff
Func_507ec: ; 507ec (14:47ec)
	ld hl, sp+$1
	ld [hl], $1
	call GetHLAtSPPlus6
	add hl, hl
	ld de, hFFA3
	add hl, de
	ld e, l
	ld hl, sp+$0
	ld [hl], e
	jp Func_50823

Func_507ff: ; 507ff (14:47ff)
	call GetHLAtSPPlus6
	ld de, $6
	call DivideHLByDESigned
	add hl, hl
	inc hl
	ld a, l
	ld hl, sp+$1
	ld [hl], a
	call GetHLAtSPPlus6
	ld de, $6
	call DivideHLByDESigned
	reg16swap de, hl
	add hl, hl
	inc hl
	inc hl
	inc hl
	ld a, l
	ld hl, sp+$0
	ld [hl], a
Func_50823: ; 50823 (14:4823)
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$1
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_508ca
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_508bc

Func_5083c: ; 5083c (14:483c)
	call GetHLAtSPPlus4
	ld a, l
	and h
	inc a
	jp z, Func_5087e
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus4
	ld a, l
	and $b
	ld l, a
	ld h, $0
	add hl, hl
	add hl, bc
	push hl
	call GetHLAtSPPlus6
	ld de, $4
	call DivideHLByDESigned
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld a, l
	pop de
	call SetStringStartState
	ld hl, Data_508cd
	push hl
	call PlaceString
	pop bc
Func_5087e: ; 5087e (14:487e)
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	inc bc
	call GetHLAtSPPlus6
	ld a, l
	and $b
	ld l, a
	ld h, $0
	add hl, hl
	add hl, bc
	push hl
	call GetHLAtSPPlus8
	ld de, $4
	call DivideHLByDESigned
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld a, l
	pop de
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_508cf
	push hl
	call PlaceString
	pop bc
	pop bc
Func_508bc: ; 508bc (14:48bc)
	pop bc
	pop bc
	pop bc
	ret

Data_508c0: ; 508c0
	db " ", $0

Data_508c2: ; 508c2
	TX_STACK
	db $0

Data_508c5: ; 508c5
	TX_STACK
	db $0

Data_508c8: ; 508c8
	db " ", $0

Data_508ca: ; 508ca
	TX_STACK
	db $0

Data_508cd: ; 508cd
	db " ", $0

Data_508cf: ; 508cf
	TX_STACK
	db $0

Func_508d2: ; 508d2
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_500d8)
	ld de, Data_500d8
	ld hl, Data_500b9
	jp FarCall

Func_508e8: ; 508e8
	push hl
	ld l, $c
	push hl
	ld c, $1
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_54767
	pop hl
	call FarCall
	ld l, $c
	push hl
	ld c, $1
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	ret

Func_50914: ; 50914
	ld c, l
	ld b, h
	push bc
	ld l, $c
	push hl
	ld c, $1
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop bc
	push bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	inc hl
	ld a, l
	ld l, a
	ld h, $0
	ld de, Data_5098a
	call PlaceStringDEatCoordHL
	pop bc
	push bc
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	and [hl]
	inc a
	jp z, Func_50961
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	inc hl
	ld a, l
	ld l, a
	ld h, $0
	ld de, Data_5098c
	call PlaceStringDEatCoordHL
Func_50961: ; 50961 (14:4961)
	ld l, $c
	push hl
	ld c, $1
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, wc396
	add hl, de
	ld [hl], $0
	ld hl, $5
	add hl, bc
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, -1
	ret

Data_5098a: ; 5098a
	db " ", $0

Data_5098c: ; 5098c
	db " ", $0

Pointers_5098e: ; 5098e
	dw Data_50994
	dw Data_509a4
	dw $0
	
Data_50994: ; 50994
	db "(おなしﾞ)ロホﾞホﾟン(は)", $0

Data_509a4: ; 509a4
	db "(ならひﾞかえてﾞきません)", $0

Func_509b3: ; 509b3
	push bc
	push hl
	ld c, l
	ld b, h
	push bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld [wc310], a
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	pop bc
	pop hl
	ld a, [wc2f6]
	cp $1
	jp z, Func_50ad4
	or a
	jp nz, Func_50af6
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	and [hl]
	inc a
	jp nz, Func_50a11
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $4000
	jp Func_50ad1

Func_50a11: ; 50a11 (14:4a11)
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call CompareHLtoDE
	jp z, Func_50a86
	push bc
	set_farcall_addrs_hli Func_57c4a
	pop bc
	push bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	call FarCall
	pop bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, wc396
	add hl, de
	ld [hl], $0
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, wc396
	add hl, de
	ld [hl], $0
	ld hl, $5
	add hl, bc
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $b
	add hl, bc
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $5000
	jp Func_50ad1

Func_50a86: ; 50a86 (14:4a86)
	push bc
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5098e)
	ld de, Pointers_5098e
	ld hl, $10e
	call FarCall
	ld l, $f
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	ld hl, $4000
	pop bc
Func_50ad1: ; 50ad1 (14:4ad1)
	jp Func_50af6

Func_50ad4: ; 50ad4 (14:4ad4)
	push bc
	callba_hli Func_5575d
	set_farcall_addrs_hli Func_56b35
	xor a
	call FarCall
	ld hl, $5000
	pop bc
Func_50af6: ; 50af6 (14:4af6)
	push hl
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, wc396
	add hl, de
	ld [hl], $0
	set_farcall_addrs_hli FreeMemory
	call GetHLAtSPPlus4
	call FarCall
	pop hl
	pop bc
	ret

Func_50b19:: ; 50b19
	add sp, -$30
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	pop af
	push hl
	ld e, a
	dec e
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	pop hl
	ld a, l
	call GetSRAMBank
	set_farcall_addrs_hli Func_6adb3
	ld hl, sp+$2b
	ld e, [hl]
	ld hl, sp+$5
	ld a, [hl]
	call FarCall
	add sp, $30
	ret

Func_50b55: ; 50b55
	push hl
	add sp, -$18
	ld hl, sp+$18
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	write_hl_to_sp_plus $19
	read_hl_from_sp_plus $19
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $19
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	pop de
	push hl
	read_hl_from_sp_plus $19
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$6
	ld a, [hl]
	cp $2
	jp z, Func_50c0e
	cp $1
	jp nz, Func_50c24
	set_farcall_addrs_hli Func_5601b
	ld c, $0
	call GetHLAtSPPlus6
	ld e, l
	ld hl, sp+$7
	call FarCall
	jp Func_50c24

Func_50c0e: ; 50c0e (14:4c0e)
	set_farcall_addrs_hli Func_55f95
	ld c, $0
	call GetHLAtSPPlus6
	ld e, l
	ld hl, sp+$7
	call FarCall
Func_50c24: ; 50c24 (14:4c24)
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$5
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld de, Data_50cf6
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_50ccc
	read_hl_from_sp_plus $1b
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	cp $2
	jp z, Func_50c9d
	cp $1
	jp nz, Func_50cb1
	set_farcall_addrs_hli Func_4ec2b
	call GetHLAtSPPlus4
	ld a, l
	ld e, $1
	call FarCall
	jp Func_50cb1

Func_50c9d: ; 50c9d (14:4c9d)
	set_farcall_addrs_hli Func_4ed70
	call GetHLAtSPPlus4
	ld a, l
	ld e, $1
	call FarCall
Func_50cb1: ; 50cb1 (14:4cb1)
	read_hl_from_sp_plus $1b
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $1b
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_50ccc: ; 50ccc (14:4ccc)
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld hl, $8000
	reg16swap de, hl
	add sp, $1a
	reg16swap de, hl
	ret

Data_50cf6: ; 50cf6
	db "(を すてても よろしいてﾞすか)?", $0

Func_50d09:: ; 50d09
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	ld a, [wc987]
	push af
	ld a, l
	call GetSRAMBank
	pop af
	ret

Func_50d27: ; 50d27 (14:4d27)
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$3
	ld [hl], $0
	ld hl, sp+$2
	ld [hl], $0
Func_50d44: ; 50d44 (14:4d44)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_50d7c
	ld hl, sp+$2
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_50d6f
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
	jp Func_50d72

Func_50d6f: ; 50d6f (14:4d6f)
	jp Func_50d7c

Func_50d72: ; 50d72 (14:4d72)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_50d44

Func_50d7c: ; 50d7c (14:4d7c)
	pop af
	call GetSRAMBank
	ld hl, sp+$1
	ld a, [hl]
	pop bc
	ret

Func_50d85:: ; 50d85
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	ld a, [wcb57]
	push af
	ld a, l
	call GetSRAMBank
	pop af
	ret

Func_50da3: ; 50da3
	push af
	push bc
	ld hl, sp+$0
	ld [hl], $0
	ld a, e
	cp $3
	jp z, Func_50e80
	cp $2
	jp z, Func_50e42
	cp $1
	jp z, Func_50dfe
	or a
	jp nz, Func_50ebc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	push bc
	ld c, $0
Func_50dd4: ; 50dd4 (14:4dd4)
	ld a, c
	cp $14
	jp nc, Func_50dfa
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	ld hl, sp+$5
	cp [hl]
	jp nz, Func_50df6
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	jp Func_50dfa

Func_50df6: ; 50df6 (14:4df6)
	inc c
	jp Func_50dd4

Func_50dfa: ; 50dfa (14:4dfa)
	pop bc
	jp Func_50ebc

Func_50dfe: ; 50dfe (14:4dfe)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	push bc
	ld c, $0
Func_50e15: ; 50e15 (14:4e15)
	ld a, c
	cp $50
	jp nc, Func_50e3e
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	ld a, [hl]
	ld hl, sp+$5
	cp [hl]
	jp nz, Func_50e3a
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	jp Func_50e3e

Func_50e3a: ; 50e3a (14:4e3a)
	inc c
	jp Func_50e15

Func_50e3e: ; 50e3e (14:4e3e)
	pop bc
	jp Func_50ebc

Func_50e42: ; 50e42 (14:4e42)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	push bc
	ld c, $0
Func_50e59: ; 50e59 (14:4e59)
	ld a, c
	cp $14
	jp nc, Func_50e7c
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_50e75
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_50e78

Func_50e75: ; 50e75 (14:4e75)
	jp Func_50e7c

Func_50e78: ; 50e78 (14:4e78)
	inc c
	jp Func_50e59

Func_50e7c: ; 50e7c (14:4e7c)
	pop bc
	jp Func_50ebc

Func_50e80: ; 50e80 (14:4e80)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	push bc
	ld c, $0
Func_50e97: ; 50e97 (14:4e97)
	ld a, c
	cp $50
	jp nc, Func_50ebb
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_50eb4
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_50eb7

Func_50eb4: ; 50eb4 (14:4eb4)
	jp Func_50ebb

Func_50eb7: ; 50eb7 (14:4eb7)
	inc c
	jp Func_50e97

Func_50ebb: ; 50ebb (14:4ebb)
	pop bc
Func_50ebc: ; 50ebc (14:4ebc)
	ld a, c
	call GetSRAMBank
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	pop bc
	ret

Func_50ec6: ; 50ec6
	push bc
	ld hl, sp+$0
	ld [hl], $0
	ld a, e
	cp $3
	jp z, Func_50f14
	cp $2
	jp nz, Func_50f4f
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	push bc
	ld c, $0
Func_50eed: ; 50eed (14:4eed)
	ld a, c
	cp $14
	jp nc, Func_50f10
	ld e, c
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_50f09
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_50f0c

Func_50f09: ; 50f09 (14:4f09)
	jp Func_50f10

Func_50f0c: ; 50f0c (14:4f0c)
	inc c
	jp Func_50eed

Func_50f10: ; 50f10 (14:4f10)
	pop bc
	jp Func_50f4f

Func_50f14: ; 50f14 (14:4f14)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	push bc
	ld c, $0
Func_50f2b: ; 50f2b (14:4f2b)
	ld a, c
	cp $dc
	jp nc, Func_50f4e
	ld e, c
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_50f47
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_50f4a

Func_50f47: ; 50f47 (14:4f47)
	jp Func_50f4e

Func_50f4a: ; 50f4a (14:4f4a)
	inc c
	jp Func_50f2b

Func_50f4e: ; 50f4e (14:4f4e)
	pop bc
Func_50f4f: ; 50f4f (14:4f4f)
	ld a, c
	call GetSRAMBank
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	ret

Func_50f58: ; 50f58 (14:4f58)
	push de
	push bc
	push bc
	push bc
	ld l, a
	ld h, 0
	get_party_bot
	ld l, [hl]
	push hl
	ld hl, sp+$2
	ld [hl], $ff
	ld hl, sp+$8
	ld a, [hl]
	cp $ff
	jp z, Func_50fa8
	set_farcall_addrs_hli AllocateMemory
	ld hl, $23
	call FarCall
	call WriteHLToSPPlus8
	set_farcall_addrs_hli Func_7dfc
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, sp+$8
	ld a, [hl]
	call FarCall
Func_50fa8: ; 50fa8 (14:4fa8)
	pop hl
	ld a, [wc7e1]
	cp $1
	jp z, Func_510ea
	cp $4
	jp z, Func_510ea
	cp $3
	jp z, Func_5100d
	cp $2
	jp nz, Func_51235
	ld a, l
	cp $1f
	jp nz, Func_51006
	ld a, [wMapGroup]
	cp $9
	jp nz, Func_51003
	ld a, [wMapNumber]
	or a
	jp nz, Func_51003
	set_farcall_addrs_hli Func_6ab29
	ld a, $1f
	call FarCall
	cp $2
	jp c, Func_50fee
	ld hl, sp+$0
	ld [hl], $1
Func_50fee: ; 50fee (14:4fee)
	ld hl, sp+$6
	ld a, [hl]
	cp $ff
	jp z, Func_51003
	call GetHLAtSPPlus6
	ld a, [hl]
	cp $1f
	jp nz, Func_51003
	ld hl, sp+$0
	ld [hl], $1
Func_51003: ; 51003 (14:5003)
	jp Func_5100a

Func_51006: ; 51006 (14:5006)
	ld hl, sp+$0
	ld [hl], $1
Func_5100a: ; 5100a (14:500a)
	jp Func_51239

Func_5100d: ; 5100d (14:500d)
	ld a, l
	cp $20
	jp z, Func_5101f
	ld a, l
	cp $21
	jp z, Func_5101f
	ld a, l
	cp $7e
	jp nz, Func_510e3
Func_5101f: ; 5101f (14:501f)
	ld a, [wMapGroup]
	cp $9
	jp nz, Func_5102e
	ld a, [wMapNumber]
	or a
	jp z, Func_5103d
Func_5102e: ; 5102e (14:502e)
	ld a, [wMapGroup]
	cp $1b
	jp nz, Func_510e0
	ld a, [wMapNumber]
	or a
	jp nz, Func_510e0
Func_5103d: ; 5103d (14:503d)
	set_farcall_addrs_hli Func_6ab29
	ld a, $20
	call FarCall
	ld hl, sp+$3
	ld [hl], a
	cp $2
	jp c, Func_5105c
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_5105c: ; 5105c (14:505c)
	set_farcall_addrs_hli Func_6ab29
	ld a, $21
	call FarCall
	ld hl, sp+$2
	ld [hl], a
	cp $2
	jp c, Func_5107b
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_5107b: ; 5107b (14:507b)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	cp $2
	jp c, Func_5108d
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_5108d: ; 5108d (14:508d)
	set_farcall_addrs_hli Func_6ab29
	ld a, $7e
	call FarCall
	ld hl, sp+$1
	ld [hl], a
	cp $2
	jp c, Func_510ac
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_510ac: ; 510ac (14:50ac)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	ld hl, sp+$1
	add [hl]
	cp $2
	jp c, Func_510c1
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_510c1: ; 510c1 (14:50c1)
	ld hl, sp+$6
	ld a, [hl]
	cp $ff
	jp z, Func_510e0
	call GetHLAtSPPlus6
	ld a, [hl]
	cp $7e
	jp z, Func_510dc
	cp $21
	jp z, Func_510dc
	cp $20
	jp nz, Func_510e0
Func_510dc: ; 510dc (14:50dc)
	ld hl, sp+$0
	ld [hl], $1
Func_510e0: ; 510e0 (14:50e0)
	jp Func_510e7

Func_510e3: ; 510e3 (14:50e3)
	ld hl, sp+$0
	ld [hl], $1
Func_510e7: ; 510e7 (14:50e7)
	jp Func_51239

Func_510ea: ; 510ea (14:50ea)
	ld a, l
	cp $f
	jp z, Func_51102
	ld a, l
	cp $41
	jp z, Func_51102
	ld a, l
	cp $50
	jp z, Func_51102
	ld a, l
	cp $64
	jp nz, Func_5122e
Func_51102: ; 51102 (14:5102)
	ld a, [wMapGroup]
	cp $1e
	jp nz, Func_51111
	ld a, [wMapNumber]
	or a
	jp z, Func_51149
Func_51111: ; 51111 (14:5111)
	ld a, [wMapGroup]
	cp $1e
	jp nz, Func_51121
	ld a, [wMapNumber]
	cp $1
	jp z, Func_51149
Func_51121: ; 51121 (14:5121)
	ld a, [wMapGroup]
	cp $1e
	jp nz, Func_51131
	ld a, [wMapNumber]
	cp $2
	jp z, Func_51149
Func_51131: ; 51131 (14:5131)
	ld a, [wMapGroup]
	cp $1e
	jp nz, Func_51141
	ld a, [wMapNumber]
	cp $3
	jp z, Func_51149
Func_51141: ; 51141 (14:5141)
	ld a, [wMapGroup]
	cp $c
	jp nz, Func_51227
Func_51149: ; 51149 (14:5149)
	set_farcall_addrs_hli Func_6ab29
	ld a, $f
	call FarCall
	ld hl, sp+$3
	ld [hl], a
	cp $2
	jp c, Func_51168
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_51168: ; 51168 (14:5168)
	set_farcall_addrs_hli Func_6ab29
	ld a, $41
	call FarCall
	ld hl, sp+$2
	ld [hl], a
	cp $2
	jp c, Func_51187
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_51187: ; 51187 (14:5187)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	cp $2
	jp c, Func_51199
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_51199: ; 51199 (14:5199)
	set_farcall_addrs_hli Func_6ab29
	ld a, $50
	call FarCall
	ld hl, sp+$1
	ld [hl], a
	cp $2
	jp c, Func_511b8
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_511b8: ; 511b8 (14:51b8)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	ld hl, sp+$1
	add [hl]
	cp $2
	jp c, Func_511cd
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_511cd: ; 511cd (14:51cd)
	set_farcall_addrs_hli Func_6ab29
	ld a, $64
	call FarCall
	ld e, a
	cp $2
	jp c, Func_511ea
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_511ea: ; 511ea (14:51ea)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	ld hl, sp+$1
	add [hl]
	add e
	cp $2
	jp c, Func_51200
	ld hl, sp+$0
	ld [hl], $1
	jp Func_51239

Func_51200: ; 51200 (14:5200)
	ld hl, sp+$6
	ld a, [hl]
	cp $ff
	jp z, Func_51224
	call GetHLAtSPPlus6
	ld a, [hl]
	cp $64
	jp z, Func_51220
	cp $50
	jp z, Func_51220
	cp $41
	jp z, Func_51220
	cp $f
	jp nz, Func_51224
Func_51220: ; 51220 (14:5220)
	ld hl, sp+$0
	ld [hl], $1
Func_51224: ; 51224 (14:5224)
	jp Func_5122b

Func_51227: ; 51227 (14:5227)
	ld hl, sp+$0
	ld [hl], $1
Func_5122b: ; 5122b (14:522b)
	jp Func_51232

Func_5122e: ; 5122e (14:522e)
	ld hl, sp+$0
	ld [hl], $1
Func_51232: ; 51232 (14:5232)
	jp Func_51239

Func_51235: ; 51235 (14:5235)
	ld hl, sp+$0
	ld [hl], $1
Func_51239: ; 51239 (14:5239)
	ld hl, sp+$6
	ld a, [hl]
	cp $ff
	jp z, Func_51252
	set_farcall_addrs_hli FreeMemory
	call GetHLAtSPPlus6
	call FarCall
Func_51252: ; 51252 (14:5252)
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Pointers_5125a: ; 5125a
	dw Data_5125e
	dw $0

Data_5125e: ; 5125e
	db "(その)ロホﾞホﾟン(は はけん されているよ)", $0

Pointers_51277: ; 51277
	dw Data_5127b
	dw $0

Data_5127b: ; 5127b
	db "ハﾟーティー(かﾞ いっはﾟいたﾞよ)", $0

Pointers_5128f: ; 5128f
	dw Data_51293
	dw $0

Data_51293: ; 51293
	db "(こうかんしたよ)", $0

Pointers_5129d: ; 5129d
	dw Data_512a1
	dw $0

Data_512a1: ; 512a1
	db "(ひきたﾞしたよ)", $0

Pointers_512ab: ; 512ab
	dw Data_512b1
	dw Data_512c4
	dw $0

Data_512b1: ; 512b1
	db "(たたかえる) ロホﾞホﾟン(かﾞ)", $0

Data_512c4: ; 512c4
	db "(いなくなるよ)", $0

Pointers_512cd: ; 512cd
	dw Data_512d1
	dw $0

Data_512d1: ; 512d1
	db "(そいつは えらへﾞないよ)!", $0

Func_512e1: ; 512e1 (14:52e1)
	push af
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	pop hl
	pop af
	push hl
	cp $5
	jp z, Func_5137a
	cp $4
	jp z, Func_5136c
	cp $3
	jp z, Func_5135e
	cp $2
	jp z, Func_51350
	cp $1
	jp z, Func_51342
	or a
	jp nz, Func_51385
	ld c, BANK(Pointers_5125a)
	ld de, Pointers_5125a
	ld hl, $10e
	call FarCall
	jp Func_51385

Func_51342: ; 51342 (14:5342)
	ld c, BANK(Pointers_51277)
	ld de, Pointers_51277
	ld hl, $10e
	call FarCall
	jp Func_51385

Func_51350: ; 51350 (14:5350)
	ld c, BANK(Pointers_5128f)
	ld de, Pointers_5128f
	ld hl, $10e
	call FarCall
	jp Func_51385

Func_5135e: ; 5135e (14:535e)
	ld c, BANK(Pointers_5129d)
	ld de, Pointers_5129d
	ld hl, $10e
	call FarCall
	jp Func_51385

Func_5136c: ; 5136c (14:536c)
	ld c, BANK(Pointers_512ab)
	ld de, Pointers_512ab
	ld hl, $10e
	call FarCall
	jp Func_51385

Func_5137a: ; 5137a (14:537a)
	ld c, BANK(Pointers_512cd)
	ld de, Pointers_512cd
	ld hl, $10e
	call FarCall
Func_51385: ; 51385 (14:5385)
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Func_513a2: ; 513a2
	push bc
	push bc
	push bc
	push bc
	push hl
	call WriteHLToSPPlus10
	call GetHLAtSPPlus10
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld hl, sp+$3
	ld [hl], a
	pop hl
	call Func_524b6
	cp $ff
	jp nz, Func_513d2
	ld hl, $8000
	jp Func_516c3

Func_513d2: ; 513d2 (14:53d2)
	ld hl, sp+$0
	ld [hl], $0
Func_513d6: ; 513d6 (14:53d6)
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nc, Func_51433
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_51429
	ld c, $0
Func_513fa: ; 513fa (14:53fa)
	ld a, c
	cp $4
	jp nc, Func_51429
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld a, [hl]
	ld hl, sp+$1
	cp [hl]
	jp nz, Func_51425
	xor a
	call Func_512e1
	ld hl, $4000
	jp Func_516c3

Func_51425: ; 51425 (14:5425)
	inc c
	jp Func_513fa

Func_51429: ; 51429 (14:5429)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_513d6

Func_51433: ; 51433 (14:5433)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$2
	ld [hl], $0
Func_5144b: ; 5144b (14:544b)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_514ae
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	add hl, de
	ld [hl], $ff
	ld hl, sp+$2
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_514a4
	ld hl, sp+$2
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_514a4
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	add hl, de
	ld [hl], $1
Func_514a4: ; 514a4 (14:54a4)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_5144b

Func_514ae: ; 514ae (14:54ae)
	pop af
	call GetSRAMBank
	call Func_50d27
	cp $4
	jp nz, Func_5167d
	ld a, $1
	call Func_512e1
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	ld de, Data_516c8
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_516dc
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld c, l
	ld b, h
	pop hl
	push bc
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	pop hl
	pop bc
	ld a, c
	or b
	jp z, Func_5153f
	push hl
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld hl, $4000
	jp Func_516c3

Func_5153f: ; 5153f (14:553f)
	push hl
	set_farcall_addrs_hli AllocateMemory
	ld hl, $168
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call BackUpTileMapRectangle
	set_farcall_addrs_hli DisplayPartyMenu_
	xor a
	call FarCall
	ld c, l
	ld b, h
	push bc
	call Func_1fbe
	pop bc
	pop hl
	push bc
	push hl
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	set_farcall_addrs_hli FreeMemory
	pop bc
	pop hl
	push bc
	call FarCall
	pop bc
	ld a, c
	and b
	inc a
	jp nz, Func_515ae
	ld hl, $4000
	jp Func_516c3

Func_515ae: ; 515ae (14:55ae)
	ld hl, sp+$1
	ld e, [hl]
	ld a, [wc2e9]
	call Func_50f58
	cp $ff
	jp nz, Func_515c7
	ld a, $5
	call Func_512e1
	ld hl, $4000
	jp Func_516c3

Func_515c7: ; 515c7 (14:55c7)
	ld bc, $4000
	ld hl, sp+$0
	ld [hl], $0
Func_515ce: ; 515ce (14:55ce)
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nc, Func_515fd
	ld a, [wc2e9]
	ld hl, sp+$0
	cp [hl]
	jp z, Func_515f3
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_515f3
	ld bc, $8000
	jp Func_515fd

Func_515f3: ; 515f3 (14:55f3)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_515ce

Func_515fd: ; 515fd (14:55fd)
	ld a, b
	sub $40
	or c
	jp nz, Func_5165b
	push bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $23
	call FarCall
	reg16swap de, hl
	push de
	set_farcall_addrs_hli Func_7dfc
	pop de
	push de
	ld hl, sp+$5
	ld a, [hl]
	call FarCall
	pop de
	pop bc
	push de
	ld hl, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_51644
	ld bc, $8000
Func_51644: ; 51644 (14:5644)
	push bc
	set_farcall_addrs_hli FreeMemory
	pop bc
	pop de
	push bc
	reg16swap de, hl
	call FarCall
	pop bc
Func_5165b: ; 5165b (14:565b)
	push bc
	ld a, b
	sub $80
	or c
	jp nz, Func_51674
	ld hl, sp+$3
	ld e, [hl]
	ld a, [wc2e9]
	call Func_516e6
	ld a, $2
	call Func_512e1
	jp Func_51679

Func_51674: ; 51674 (14:5674)
	ld a, $4
	call Func_512e1
Func_51679: ; 51679 (14:5679)
	pop hl
	jp Func_516c3

Func_5167d: ; 5167d (14:567d)
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $3
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	ld a, $3
	call Func_512e1
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
	ld hl, $8000
Func_516c3: ; 516c3 (14:56c3)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_516c8: ; 516c8
	db "ハﾟーティー(の) ロホﾞホﾟン(と)", $0

Data_516dc: ; 516dc
	db "(こうかんする)?", $0

Func_516e6: ; 516e6 (14:56e6)
	add sp, -$46
	push af
	push de
	set_farcall_addrs_hli Func_7dfc
	pop de
	push de
	ld a, e
	ld hl, sp+$27
	reg16swap de, hl
	call FarCall
	set_farcall_addrs_hli GetRobotInParty
	pop de
	pop af
	push af
	push de
	ld hl, sp+$4
	reg16swap de, hl
	call FarCall
	set_farcall_addrs_hli Func_7db0
	pop de
	ld a, e
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	set_farcall_addrs_hli Func_6b74
	pop af
	ld hl, sp+$23
	reg16swap de, hl
	call FarCall
	add sp, $46
	ret

Pointers_51747: ; 51747
	dw Data_5174b
	dw $0

Data_5174b: ; 5174b
	db "(を ひきたﾞしました)", $0

Pointers_51758: ; 51758
	dw Data_5175e
	dw Data_51772
	dw $0

Data_5175e: ; 5175e
	db "(これいしﾞょう) ハﾟーティー(に)", $0

Data_51772: ; 51772
	db "(ついかてﾞきないよ)", $0

Pointers_5177e: ; 5177e
	dw Data_51782
	dw $0

Data_51782: ; 51782
	db "(を すてた)", $0

Func_5178a: ; 5178a
	push hl
	add sp, -$38
	xor a
	read_hl_from_sp_plus $3a
	ld de, $d
	add hl, de
	ld e, [hl]
	push de
	ld hl, sp+$2
	ld [hl], $0
	read_hl_from_sp_plus $3c
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $3c
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	push hl
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	ld c, l
	ld b, h
	push bc
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	set_farcall_addrs_hli Func_7dfc
	pop bc
	pop hl
	push bc
	push hl
	ld a, l
	ld hl, sp+$1b
	reg16swap de, hl
	call FarCall
	ld bc, $6
	ld hl, sp+$1c
	reg16swap de, hl
	ld hl, sp+$7
	call CopyFromDEtoHL
	set_farcall_addrs_hli Func_31bbe
	pop hl
	pop bc
	pop de
	push bc
	push de
	ld a, e
	cp $15
	jp nz, Func_51819
	ld a, l
	ld e, $4
	ld c, $0
	call FarCall
	jp Func_51821

Func_51819: ; 51819 (14:5819)
	ld a, l
	ld e, $3
	ld c, $0
	call FarCall
Func_51821: ; 51821 (14:5821)
	cp $1
	jp nz, Func_5182a
	ld hl, sp+$4
	ld [hl], $1
Func_5182a: ; 5182a (14:582a)
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	pop de
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp nz, Func_518c7
	push de
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$5
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	pop de
	ld a, e
	cp $15
	jp nz, Func_51882
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5177e)
	ld de, Pointers_5177e
	ld hl, $110
	call FarCall
	jp Func_51898

Func_51882: ; 51882 (14:5882)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_51747)
	ld de, Pointers_51747
	ld hl, $110
	call FarCall
Func_51898: ; 51898 (14:5898)
	read_hl_from_sp_plus $3c
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $3c
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $3c
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
	jp Func_518e3

Func_518c7: ; 518c7 (14:58c7)
	ld a, e
	cp $15
	jp nz, Func_518e3
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_51758)
	ld de, Pointers_51758
	ld hl, $10e
	call FarCall
Func_518e3: ; 518e3 (14:58e3)
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	pop bc
	push bc
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	add sp, $3a
	ret

Func_5190c: ; 5190c (14:590c)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_50148)
	ld de, Data_50148
	ld hl, Data_500e7
	call FarCall
	ret

Func_51923: ; 51923
	ld c, l
	ld b, h
	push bc
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	inc hl
	inc hl
	ld c, l
	ld e, $0
	xor a
	call FarCall
	ld hl, -1
	ret

Func_51961: ; 51961
	ld a, $7
	ld [wc790], a
	ret

Data_51967: ; 51967
	db $1
	db $1f
	db $3c
	db $6b
	db $73
	db $86
	db $80
	db $81
	db $82
	db $83
	db $84
	db $85
	db $59
	db $63

Func_51975: ; 51975
	ld a, $6
	ld [wc790], a
	ld a, $b
	ld [wc78c], a
	xor a
.loop
	cp $e
	jp nc, .done
	push af
	set_farcall_addrs_hli EventFlagAction
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51967
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, $1
	call FarCall
	pop af
	inc a
	jp .loop

.done
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $1
	ld a, $12
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $4
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $5
	call FarCall
	ret

Data_519dc: ; 519dc
	db $8
	db $15
	db $20
	db $28
	db $29
	db $2a
	db $2b
	db $2c
	db $36
	db $37
	db $39
	db $47
	db $88
	db $8d

Func_519ea: ; 519ea
	ld a, $5
	ld [wc790], a
	xor a
.loop
	cp $e
	jp nc, .done
	push af
	set_farcall_addrs_hli EventFlagAction
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_519dc
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, $1
	call FarCall
	pop af
	inc a
	jp .loop

.done
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $1
	ld a, $13
	call FarCall
	set_farcall_addrs_hli Func_5a149
	ld c, $0
	ld e, $1
	ld a, $3
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $6
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $7
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $8
	call FarCall
	ret

Data_51a70: ; 51a70
	db $21
	db $3b
	db $3d
	db $3e
	db $3f
	db $40
	db $41
	db $95
	db $9a
	db $9f
	db $a4
	db $a9
	db $aa
	db $ab
	db $ac
	db $ad
	db $ae

Func_51a81: ; 51a81
	ld a, $4
	ld [wc790], a
	ld a, $7
	ld [wc78d], a
	xor a
.loop
	cp $11
	jp nc, .done
	push af
	set_farcall_addrs_hli EventFlagAction
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51a70
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, $1
	call FarCall
	pop af
	inc a
	jp .loop

.done
	set_farcall_addrs_hli Func_5a149
	ld c, $0
	ld e, $1
	ld a, $4
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $9
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $10
	call FarCall
	ret

Data_51ae8: ; 51ae8
	db $44
	db $22
	db $46
	db $c2

Data_51aec: ; 51aec
	db $2a
	db $22
	db $5

Func_51aef: ; 51aef
	ld a, $1
	ld [wc78d], a
	ld a, $3
	ld [wc790], a
	xor a
.loop
	cp $4
	jp nc, .done
	push af
	set_farcall_addrs_hli EventFlagAction
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51ae8
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, $1
	call FarCall
	pop af
	inc a
	jp .loop

.done
	xor a
.loop2
	cp $3
	jp nc, .done2
	push af
	set_farcall_addrs_hli Func_5a149
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51aec
	add hl, de
	ld a, [hl]
	ld e, $1
	ld c, $2
	call FarCall
	pop af
	inc a
	jp .loop2

.done2
	set_farcall_addrs_hli Func_e2780
	ld a, $a
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $b
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $11
	call FarCall
	ret

Data_51b7a: ; 51b7a
	dr $51b7a, $51b81

Func_51b81: ; 51b81
	ld a, $2
	ld [wc790], a
	xor a
Func_51b87: ; 51b87 (14:5b87)
	cp $7
	jp nc, Func_51bae
	push af
	set_farcall_addrs_hli EventFlagAction
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51b7a
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, $1
	call FarCall
	pop af
	inc a
	jp Func_51b87

Func_51bae: ; 51bae (14:5bae)
	set_farcall_addrs_hli Func_e2780
	ld a, $c
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $e
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $f
	call FarCall
	ret

Data_51bdf: ; 51bdf
	dr $51bdf, $51bef

Data_51bef: ; 51bef
	dr $51bef, $51bf3

Func_51bf3: ; 51bf3 (14:5bf3)
	push af
	ld a, $1
	ld [$c980], a
	xor a
	ld [$c981], a
	ld a, BANK(DebugSaveState)
	ld [wFarCallDestBank], a
	ld bc, $214
	ld de, DebugSaveState
	ld hl, $c980
	call FarCopyVideoData
	xor a
Func_51c0f: ; 51c0f (14:5c0f)
	cp $a9
	jp nc, Func_51c2f
	push af
	set_farcall_addrs_hli Func_31bbe
	pop af
	push af
	inc a
	ld e, $5
	ld c, $62
	call FarCall
	pop af
	inc a
	jp Func_51c0f

Func_51c2f: ; 51c2f (14:5c2f)
	xor a
Func_51c30: ; 51c30 (14:5c30)
	cp $80
	jp nc, Func_51c4d
	push af
	set_farcall_addrs_hli Func_4ed70
	pop af
	push af
	ld e, $2
	call FarCall
	pop af
	inc a
	jp Func_51c30

Func_51c4d: ; 51c4d (14:5c4d)
	xor a
Func_51c4e: ; 51c4e (14:5c4e)
	cp $5c
	jp nc, Func_51c6b
	push af
	set_farcall_addrs_hli Func_4ed70
	pop af
	push af
	ld e, $2
	call FarCall
	pop af
	inc a
	jp Func_51c4e

Func_51c6b: ; 51c6b (14:5c6b)
	xor a
Func_51c6c: ; 51c6c (14:5c6c)
	cp $fa
	jp nc, Func_51c90
	push af
	set_farcall_addrs_hli Func_4ec2b
	pop af
	push af
	inc a
	ld b, $2d
	call DivideAbyB
	ld a, b
	ld e, $2
	call FarCall
	pop af
	inc a
	jp Func_51c6c

Func_51c90: ; 51c90 (14:5c90)
	xor a
Func_51c91: ; 51c91 (14:5c91)
	cp $10
	jp nc, Func_51cb8
	push af
	set_farcall_addrs_hli EventFlagAction
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51bdf
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, $1
	call FarCall
	pop af
	inc a
	jp Func_51c91

Func_51cb8: ; 51cb8 (14:5cb8)
	ld a, $1
Func_51cba: ; 51cba (14:5cba)
	cp $4
	jp nc, Func_51cd5
	push af
	set_farcall_addrs_hli Func_e2780
	pop af
	push af
	call FarCall
	pop af
	inc a
	jp Func_51cba

Func_51cd5: ; 51cd5 (14:5cd5)
	set_farcall_addrs_hli Func_e2780
	ld a, $d
	call FarCall
	set_farcall_addrs_hli Func_e2780
	ld a, $12
	call FarCall
	ld a, $4b
Func_51cf7: ; 51cf7 (14:5cf7)
	cp $4e
	jp nc, Func_51d16
	push af
	set_farcall_addrs_hli Func_5a149
	pop af
	push af
	ld e, $32
	ld c, $0
	call FarCall
	pop af
	inc a
	jp Func_51cf7

Func_51d16: ; 51d16 (14:5d16)
	set_farcall_addrs_hli Func_5a149
	ld c, $0
	ld e, $32
	ld a, $31
	call FarCall
	set_farcall_addrs_hli Func_5a149
	ld c, $0
	ld e, $32
	ld a, $35
	call FarCall
	xor a
Func_51d3f: ; 51d3f (14:5d3f)
	cp $4
	jp nc, Func_51d66
	push af
	set_farcall_addrs_hli Func_5a149
	pop af
	push af
	ld e, a
	ld d, $0
	ld hl, Data_51bef
	add hl, de
	ld a, [hl]
	ld e, $1
	ld c, $2
	call FarCall
	pop af
	inc a
	jp Func_51d3f

Func_51d66: ; 51d66 (14:5d66)
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $32
	ld a, $4a
	call FarCall
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $32
	ld a, $3a
	call FarCall
	ld a, $3b
Func_51d90: ; 51d90 (14:5d90)
	cp $4a
	jp nc, Func_51daf
	push af
	set_farcall_addrs_hli Func_5a149
	pop af
	push af
	ld e, $32
	ld c, $2
	call FarCall
	pop af
	inc a
	jp Func_51d90

Func_51daf: ; 51daf (14:5daf)
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $63
	ld a, $4c
	call FarCall
	set_farcall_addrs_hli Func_5a149
	ld c, $2
	ld e, $32
	ld a, $4e
	call FarCall
	push hl
	push hl
	ld hl, 999995 >> 16
	push hl
	ld hl, 999995 & $ffff
	push hl
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	pop af
	cp $7
	jp z, Func_51e43
	cp $6
	jp z, Func_51e31
	cp $5
	jp z, Func_51e22
	cp $4
	jp z, Func_51e16
	cp $3
	jp z, Func_51e0d
	cp $2
	jp nz, Func_51e55
	call Func_51961
	jp Func_51e55

Func_51e0d: ; 51e0d (14:5e0d)
	call Func_51961
	call Func_51975
	jp Func_51e55

Func_51e16: ; 51e16 (14:5e16)
	call Func_51961
	call Func_51975
	call Func_519ea
	jp Func_51e55

Func_51e22: ; 51e22 (14:5e22)
	call Func_51961
	call Func_51975
	call Func_519ea
	call Func_51a81
	jp Func_51e55

Func_51e31: ; 51e31 (14:5e31)
	call Func_51961
	call Func_51975
	call Func_519ea
	call Func_51a81
	call Func_51aef
	jp Func_51e55

Func_51e43: ; 51e43 (14:5e43)
	call Func_51961
	call Func_51975
	call Func_519ea
	call Func_51a81
	call Func_51aef
	call Func_51b81
Func_51e55: ; 51e55 (14:5e55)
	ret

Pointers_51e56: ; 51e56
	dw Data_51e5a
	dw $0

Data_51e5a: ; 51e5a
	db "(これいしﾞょう ほかんてﾞきないよ)", $0

Pointers_51e6e: ; 51e6e
	dw Data_51e72
	dw $0

Data_51e72: ; 51e72
	db "(これいしﾞょう ひきたﾞせないよ)", $0

Pointers_51e85: ; 51e85
	dw Data_51e89
	dw $0

Data_51e89: ; 51e89
	db "(を ほかんしたよ)", $0

Pointers_51e94: ; 51e94
	dw Data_51e98
	dw $0

Data_51e98: ; 51e98
	db "(を ひきたﾞしたよ)", $0

Func_51ea4: ; 51ea4
	push hl
	add sp, -$1c
	ld hl, sp+$1c
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push de
	push hl
	push hl
	ld hl, -1
	write_hl_to_sp_plus $21
	pop hl
	write_hl_to_sp_plus $21
	read_hl_from_sp_plus $21
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $21
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld c, l
	push bc
	read_hl_from_sp_plus $23
	ld de, $d
	add hl, de
	ld a, [hl]
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	write_hl_to_sp_plus $21
	read_hl_from_sp_plus $21
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	pop af
	pop bc
	pop hl
	pop de
	cp $e
	jp z, Func_5200b
	cp $d
	jp nz, Func_520ef
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop bc
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
	call GetSRAMBank
	ld e, $1
	ld hl, sp+$2
	ld a, [hl]
	call Func_50da3
	or a
	jp z, Func_51fa4
	cp $63
	jp nz, Func_51fee
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_51e56)
	ld de, Pointers_51e56
	ld hl, $10e
	call FarCall
	read_hl_from_sp_plus $19
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $19
	call FarCall
	read_hl_from_sp_plus $1b
	jp Func_522ac

Func_51fa4: ; 51fa4 (14:5fa4)
	ld e, $3
	ld a, $ff
	call Func_50da3
	cp $50
	jp nz, Func_51fee
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_51e56)
	ld de, Pointers_51e56
	ld hl, $10e
	call FarCall
	read_hl_from_sp_plus $19
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $19
	call FarCall
	read_hl_from_sp_plus $1b
	jp Func_522ac

Func_51fee: ; 51fee (14:5fee)
	ld e, $1
	ld hl, sp+$2
	ld a, [hl]
	call Func_50da3
	ld l, a
	push hl
	ld de, Data_522b7
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld hl, sp+$2
	ld [hl], $2
	ld e, $1
	pop hl
	jp Func_520ef

Func_5200b: ; 5200b (14:600b)
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop bc
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld l, c
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
	call GetSRAMBank
	ld e, $0
	ld hl, sp+$2
	ld a, [hl]
	call Func_50da3
	or a
	jp z, Func_5208b
	cp $63
	jp nz, Func_520d5
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_51e6e)
	ld de, Pointers_51e6e
	ld hl, $10e
	call FarCall
	read_hl_from_sp_plus $19
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $19
	call FarCall
	read_hl_from_sp_plus $1b
	jp Func_522ac

Func_5208b: ; 5208b (14:608b)
	ld e, $2
	ld a, $ff
	call Func_50da3
	cp $14
	jp nz, Func_520d5
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_51e6e)
	ld de, Pointers_51e6e
	ld hl, $10e
	call FarCall
	read_hl_from_sp_plus $19
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $19
	call FarCall
	read_hl_from_sp_plus $1b
	jp Func_522ac

Func_520d5: ; 520d5 (14:60d5)
	ld e, $0
	ld hl, sp+$2
	ld a, [hl]
	call Func_50da3
	ld l, a
	push hl
	ld de, Data_522c4
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld hl, sp+$2
	ld [hl], $0
	ld e, $3
	pop hl
Func_520ef: ; 520ef (14:60ef)
	push de
	push hl
	ld de, Data_522d1
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_14db8
	read_hl_from_sp_plus $21
	call FarCall
	pop hl
	pop de
	ld a, [wc2f6]
	cp $ff
	jp z, Func_52126
	or a
	jp nz, Func_52130
Func_52126: ; 52126 (14:6126)
	ld hl, $4000
	write_hl_to_sp_plus $1b
	jp Func_52287

Func_52130: ; 52130 (14:6130)
	ld a, [wc2f6]
	add l
	cp $64
	jp c, Func_52179
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	ld hl, sp+$0
	ld a, [hl]
	cp $2
	jp nz, Func_52164
	ld c, BANK(Pointers_51e56)
	ld de, Pointers_51e56
	ld hl, $10e
	call FarCall
	jp Func_5216f

Func_52164: ; 52164 (14:6164)
	ld c, BANK(Pointers_51e6e)
	ld de, Pointers_51e6e
	ld hl, $10e
	call FarCall
Func_5216f: ; 5216f (14:616f)
	ld hl, $4000
	write_hl_to_sp_plus $1b
	jp Func_52287

Func_52179: ; 52179 (14:6179)
	push de
	set_farcall_addrs_hli Func_5a149
	ld hl, sp+$2
	ld c, [hl]
	ld a, [wc2f6]
	ld e, a
	ld hl, sp+$4
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_5a149
	pop de
	ld c, e
	ld a, [wc2f6]
	ld e, a
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	cp $2
	jp nz, Func_521c7
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	jp Func_521da

Func_521c7: ; 521c7 (14:61c7)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
Func_521da: ; 521da (14:61da)
	push af
	set_farcall_addrs_hli Func_15ad6
	ld c, $a
	ld hl, sp+$5
	push hl
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $3ff
	add hl, de
	pop de
	call FarCall
	pop af
	call GetSRAMBank
	ld hl, sp+$1
	ld a, [hl]
	ld hl, wc2f6
	sub [hl]
	jp nz, Func_52217
	read_hl_from_sp_plus $1d
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
Func_52217: ; 52217 (14:6217)
	read_hl_from_sp_plus $1d
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $1d
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$3
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli PrintMapText_
	ld hl, sp+$0
	ld a, [hl]
	cp $2
	jp nz, Func_52275
	ld c, BANK(Pointers_51e85)
	ld de, Pointers_51e85
	ld hl, $110
	call FarCall
	jp Func_52280

Func_52275: ; 52275 (14:6275)
	ld c, BANK(Pointers_51e94)
	ld de, Pointers_51e94
	ld hl, $110
	call FarCall
Func_52280: ; 52280 (14:6280)
	ld hl, $8000
	write_hl_to_sp_plus $1b
Func_52287: ; 52287 (14:6287)
	read_hl_from_sp_plus $19
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $19
	call FarCall
	read_hl_from_sp_plus $1b
Func_522ac: ; 522ac (14:62ac)
	reg16swap de, hl
	add sp, $1e
	reg16swap de, hl
	ret

Data_522b7: ; 522b7
	db "(ほかんする こすうを)", $0

Data_522c4: ; 522c4
	db "(ひきたﾞす こすうを)", $0

Data_522d1: ; 522d1
	db "(にゅうりょくしてくたﾞさい)", $0

Pointers_522e1: ; 522e1
	dw Data_522e7
	dw Data_522fa
	dw $0

Data_522e7: ; 522e7
	db "(もちものかﾞ いっはﾟいなのてﾞ)", $0

Data_522fa: ; 522fa
	db "(ひきたﾞせないよ)", $0

Pointers_52305: ; 52305
	dw Data_5230b
	dw Data_5231a
	dw $0

Data_5230b: ; 5230b
	db "(これいしﾞょう そうこに)", $0

Data_5231a: ; 5231a
	db "(ついかてﾞきないよ)", $0

Func_52326: ; 52326
	push bc
	push af
	ld hl, sp+$2
	ld [hl], $0
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	pop hl
	pop af
	push hl
	cp $b
	jp z, Func_52395
	cp $9
	jp nz, Func_523c5
	ld e, $3
	ld a, $ff
	call Func_50ec6
	cp $dc
	jp nz, Func_52392
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_52305)
	ld de, Pointers_52305
	ld hl, $10e
	call FarCall
	ld hl, sp+$2
	ld [hl], $ff
Func_52392: ; 52392 (14:6392)
	jp Func_523c5

Func_52395: ; 52395 (14:6395)
	ld e, $2
	ld a, $ff
	call Func_50ec6
	cp $14
	jp nz, Func_523c5
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_522e1)
	ld de, Pointers_522e1
	ld hl, $10e
	call FarCall
	ld hl, sp+$2
	ld [hl], $ff
Func_523c5: ; 523c5 (14:63c5)
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	ret

Func_523f2: ; 523f2
	push bc
	push bc
	ld c, l
	ld b, h
	push bc
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, $9
	add hl, bc
	ld a, [hl]
	ld hl, sp+$4
	ld [hl], a
	ld hl, $7
	add hl, bc
	ld c, [hl]
	push bc
	ld hl, sp+$6
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus6
	add hl, bc
	call WriteHLToSPPlus6
	pop bc
	call GetHLAtSPPlus4
	push hl
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_52447
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	call WriteHLToSPPlus4
Func_52447: ; 52447 (14:6447)
	pop bc
	push bc
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli Func_16777
	pop hl
	call FarCall
	pop bc
	pop bc
	ret

Func_52475: ; 52475
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $9
	add hl, bc
	ld a, e
	sub [hl]
	ld e, a
	inc hl
	ld a, d
	sbc [hl]
	ld d, a
	inc d
	dec d
	bit 7, d
	jr z, .asm_52492
	ld de, $0
.asm_52492
	push bc
	ld hl, $5
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli Func_16777
	pop hl
	call FarCall
	ret

Func_524b6: ; 524b6 (14:64b6)
	push hl
	ld hl, -$94
	add hl, sp
	ld sp, hl
	ld hl, $94
	add hl, sp
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $95
	read_hl_from_sp_plus $95
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $95
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld hl, sp+$c
	ld [hl], a
	read_hl_from_sp_plus $95
	ld de, $d
	add hl, de
	ld l, [hl]
	push hl
	set_farcall_addrs_hli AllocateMemory
	set_farcall_addrs_hli AllocateMemory
	ld hl, $168
	call FarCall
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $15
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call BackUpTileMapRectangle
	call FillVisibleAreaWithBlankTile
	call Func_1f30
	ld c, $8
	ld e, $c
	ld hl, $802
	call Func_50185
	ld c, $6
	ld e, $b
	ld hl, $c
	call Func_50185
	ld c, $8
	ld e, $9
	ld hl, $b0a
	call Func_50185
	set_farcall_addrs_hli Func_7dfc
	ld hl, sp+$72
	reg16swap de, hl
	ld hl, sp+$e
	ld a, [hl]
	call FarCall
	ld bc, $6
	ld hl, sp+$73
	reg16swap de, hl
	ld hl, sp+$17
	call CopyFromDEtoHL
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$17
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
	ld hl, sp+$17
	call FindFirstNonzero
	ld a, l
	sub $4
	or h
	jp nz, Func_52591
	ld hl, Data_52abf
	push hl
	call PlaceString
	pop bc
Func_52591: ; 52591 (14:6591)
	read_hl_from_sp_plus $91
	ld a, l
	push af
	ld hl, sp+$74
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$45
	call GetRobotOrTrainerBaseStats
	read_hl_from_sp_plus $4a
	push hl
	ld hl, sp+$4c
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Text_66ea7
	add hl, de
	write_hl_to_sp_plus $15
	ld c, BANK(Text_66ea7)
	read_hl_from_sp_plus $15
	reg16swap de, hl
	ld hl, sp+$1b
	call FarCopyUntilNull
	ld hl, Data_52ac1
	push hl
	call PlaceString
	pop bc
	ld hl, sp+$7d
	ld c, [hl]
	ld b, $0
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, Data_52ac5
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$1b
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	read_hl_from_sp_plus $98
	ld a, l
	and $f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Text_66efb - 5
	add hl, de
	write_hl_to_sp_plus $15
	ld c, BANK(Text_66efb)
	read_hl_from_sp_plus $15
	reg16swap de, hl
	ld hl, sp+$1b
	call FarCopyUntilNull
	ld de, Data_52ac7
	ld hl, $903
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$1b
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	ld a, $19
	ld [wFarCallDestBank], a
	ld hl, $98
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $3ff9
	add hl, de
	reg16swap de, hl
	ld hl, sp+$1b
	call LiteralStringInTree
	ld e, $5
	ld a, $9
	call SetStringStartState
	ld hl, sp+$1b
	push hl
	ld hl, Data_52acd
	push hl
	call PlaceString
	pop bc
	pop bc
	ld hl, $81
	add hl, sp
	ld a, [hl]
	ld e, a
	ld hl, sp+$2f
	call Func_241f
	ld hl, sp+$3f
	ld a, [hl]
	push af
	ld hl, sp+$42
	ld c, [hl]
	push bc
	ld hl, sp+$45
	ld a, [hl]
	ld hl, sp+$12
	ld [hl], a
	ld hl, sp+$7a
	ld a, [hl]
	cp $ab
	jp c, Func_5276c
	ld hl, sp+$7a
	ld a, [hl]
	cp $af
	jp nc, Func_5276c
	set_farcall_addrs_hli AllocateMemory
	ld hl, $400
	call FarCall
	write_hl_to_sp_plus $1f
	set_farcall_addrs_hli Func_7e8a
	read_hl_from_sp_plus $1f
	reg16swap de, hl
	ld hl, sp+$7a
	ld a, [hl]
	add $55
	call FarCall
	read_hl_from_sp_plus $1f
	inc hl
	write_hl_to_sp_plus $1b
	ld bc, $0
	ld hl, sp+$15
	ld [hl], $0
Func_526e4: ; 526e4 (14:66e4)
	ld hl, sp+$15
	ld a, [hl]
	cp $40
	jp nc, Func_5270e
	read_hl_from_sp_plus $1b
	ld a, [hl]
	or a
	jp nz, Func_526fb
	ld hl, $10
	add hl, bc
	ld c, l
	ld b, h
Func_526fb: ; 526fb (14:66fb)
	ld hl, sp+$15
	ld a, [hl]
	inc a
	ld hl, sp+$15
	ld [hl], a
	read_hl_from_sp_plus $1b
	inc hl
	write_hl_to_sp_plus $1b
	jp Func_526e4

Func_5270e: ; 5270e (14:670e)
	push bc
	set_farcall_addrs_hli FixAndLoadPoncotPicWithTilemap
	pop bc
	read_hl_from_sp_plus $1f
	ld de, $41
	add hl, de
	reg16swap de, hl
	ld hl, $89b0
	call FarCall
	call WaitVideoTransfer
	read_hl_from_sp_plus $1f
	ld e, [hl]
	ld hl, sp+$14
	ld [hl], e
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from_sp_plus $1f
	inc hl
	reg16swap de, hl
	ld hl, $2
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $1f
	call FarCall
	jp Func_527db

Func_5276c: ; 5276c (14:676c)
	set_farcall_addrs_hli AllocateMemory
	ld hl, $400
	call FarCall
	write_hl_to_sp_plus $1f
	ld bc, $89b0
	read_hl_from_sp_plus $1f
	reg16swap de, hl
	ld hl, sp+$7a
	ld a, [hl]
	dec a
	call DecompressRequestRoboponPic
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from_sp_plus $1f
	reg16swap de, hl
	ld hl, $2
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $1f
	call FarCall
	set_farcall_addrs_hli Func_615be
	ld hl, sp+$7a
	ld a, [hl]
	dec a
	call FarCall
	ld hl, sp+$14
	ld [hl], a
Func_527db: ; 527db (14:67db)
	set_farcall_addrs_hli Func_613fc
	ld e, $1
	ld hl, sp+$14
	ld a, [hl]
	call FarCall
	callba_hli Func_55723
	call Func_1fbe
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_57cf7
	read_hl_from_sp_plus $8a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $88
	reg16swap de, hl
	ld hl, $10d
	call FarCall
	read_hl_from_sp_plus $8e
	ld c, l
	ld b, h
	read_hl_from_sp_plus $8c
	reg16swap de, hl
	ld hl, $10f
	call FarCall
	ld de, Data_52ad4
	ld hl, $10f
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $88
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $20e
	call Func_2230
	ld hl, Data_52ad6
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $8a
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	read_hl_from_sp_plus $8c
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $210
	call Func_2230
	ld hl, Data_52ad8
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $8e
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	pop bc
	pop af
	push bc
	read_hl_from_sp_plus $91
	ld e, a
	ld d, $0
	add hl, de
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_528a5
	ld de, $3e7
Func_528a5: ; 528a5 (14:68a5)
	push de
	ld de, Data_52ada
	ld hl, $c0b
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $100c
	call Func_2230
	pop bc
	read_hl_from_sp_plus $91
	ld e, c
	ld d, $0
	add hl, de
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_528d2
	ld de, $3e7
Func_528d2: ; 528d2 (14:68d2)
	push de
	ld de, Data_52ae2
	ld hl, $c0d
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $100e
	call Func_2230
	ld hl, sp+$e
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $93
	add hl, bc
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_52900
	ld de, $3e7
Func_52900: ; 52900 (14:6900)
	push de
	ld de, Data_52aeb
	ld hl, $c0f
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $1010
	call Func_2230
	ld hl, sp+$4c
	ld a, [hl]
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, sp+$7d
	ld l, [hl]
	ld h, a
	call Func_270a
	reg16swap de, hl
	ld hl, sp+$7d
	ld a, [hl]
	cp $63
	jp nz, Func_52940
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	ld hl, sp+$a
	call PutLongFromStackToHL
	jp Func_5295a

Func_52940: ; 52940 (14:6940)
	reg16swap de, hl
	ld bc, $0
	push bc
	push hl
	read_hl_from_sp_plus $90
	ld bc, $0
	push bc
	push hl
	call SubtractLongsFromStack
	ld hl, sp+$a
	call PutLongFromStackToHL
Func_5295a: ; 5295a (14:695a)
	ld e, $6
	ld a, $9
	call SetStringStartState
	ld hl, sp+$a
	call PutLongFromHLOnStack
	read_hl_from_sp_plus $90
	ld bc, $0
	push bc
	push hl
	call AddLongsFromStack
	ld hl, Data_52af3
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld e, $8
	ld a, $b
	call SetStringStartState
	ld hl, sp+$6
	call PutLongFromHLOnStack
	ld hl, Data_52afb
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop hl
	pop af
	inc l
	dec l
	jp nz, Func_529a5
	ld de, Data_52b02
	ld hl, $a
	call PlaceStringDEatCoordHL
	jp Func_529d7

Func_529a5: ; 529a5 (14:69a5)
	cp l
	jp nc, Func_529ce
	push af
	push hl
	ld de, Data_52b0b
	ld hl, $a
	call PlaceStringDEatCoordHL
	pop hl
	pop af
	ld h, $0
	ld e, a
	ld d, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	push hl
	ld hl, Data_52b16
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_529d7

Func_529ce: ; 529ce (14:69ce)
	ld de, Data_52b19
	ld hl, $a
	call PlaceStringDEatCoordHL
Func_529d7: ; 529d7 (14:69d7)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$b
	ld [hl], $ff
	callba_hli WaitAorBButtonOverworld_17a44
	pop hl
	cp $10
	jp nz, Func_52a51
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	pop hl
	ld a, l
	cp $21
	jp nz, Func_52a25
	ld de, Data_52b21
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_52a2e

Func_52a25: ; 52a25 (14:6a25)
	ld de, Data_52b2e
	ld hl, $10e
	call PlaceStringDEatCoordHL
Func_52a2e: ; 52a2e (14:6a2e)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_52a51
	ld hl, sp+$9
	ld [hl], $0
Func_52a51: ; 52a51 (14:6a51)
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $11
	jp nz, Func_52a72
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_52a86

Func_52a72: ; 52a72 (14:6a72)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_52a86: ; 52a86 (14:6a86)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	read_hl_from_sp_plus $13
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $13
	call FarCall
	call Func_1f7b
	ld hl, sp+$9
	ld a, [hl]
	ld hl, $96
	add hl, sp
	ld sp, hl
	ret

Data_52abf:
	db " ", $0

Data_52ac1:
	db ":LV", $0

Data_52ac5:
	db " ", $0

Data_52ac7:
	db "タイフﾟ:", $0

Data_52acd:
	db "CPU:"
	TX_CALL
	db $0

Data_52ad4:
	db "E", $0

Data_52ad6:
	db "/", $0

Data_52ad8:
	db "/", $0

Data_52ada:
	db "(こうけﾞき)", $0

Data_52ae2:
	db "(ほﾞうきﾞょ)", $0

Data_52aeb:
	db "(すはﾞやさ)", $0

Data_52af3:
	db "E*P:"
	TX_UNUM
	db $0

Data_52afb:
	db "(あと)"
	TX_SNUM
	db $0

Data_52b02:
	db "(しんかしない)", $0

Data_52b0b:
	db "(しんかする あと)", $0

Data_52b16:
	TX_SNUM
	db $0

Data_52b19:
	db "(ひかってる)", $0

Data_52b21:
	db "(さくしﾞょするかい)?", $0

Data_52b2e:
	db "(ひきたﾞすかい)?", $0

Func_52b39:
	reg16swap de, hl
	ld hl, $d
	add hl, de
	ld a, [hl]
	cp $12
	jp nz, Func_52b4b
	ld hl, $4000
	ret

Func_52b4b: ; 52b4b (14:6b4b)
	ld hl, -1
	ret

Func_52b4f:
	push bc
	push hl
	ld hl, $4000
	call WriteHLToSPPlus4
	pop bc
	ld a, [wc39b]
	cp $ff
	jp nz, Func_52b7d
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld [wc39b], a
	ld hl, $8000
	pop de
	push hl
	jp Func_52ba9

Func_52b7d: ; 52b7d (14:6b7d)
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, [wc39b]
	ld e, a
	ld d, $0
	call CompareHLtoDE
	jp z, Func_52ba9
	ld l, c
	ld h, b
	call Func_52bbb
	ld a, $ff
	ld [wc39b], a
	ld hl, $8000
	pop de
	push hl
Func_52ba9: ; 52ba9 (14:6ba9)
	pop hl
	push hl
	pop bc
	ret

Pointers_52bad:
	dw Data_52bb1
	dw $0

Data_52bb1:
	db "(こうかんしたよ)", $0

Func_52bbb: ; 52bbb (14:6bbb)
	push bc
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld hl, sp+$0
	ld [hl], a
	ld hl, $d
	add hl, bc
	ld a, [hl]
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	pop de
	pop af
	push de
	push hl
	cp $2
	jp z, Func_52cb2
	cp $1
	jp z, Func_52c85
	or a
	jp nz, Func_52cdc
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld c, [hl]
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld a, [hl]
	push af
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld [hl], a
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wSaveScratchBagItemQuantities
	add hl, de
	ld a, [hl]
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld [hl], a
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wSaveScratchBagItems
	add hl, de
	ld [hl], c
	pop af
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wSaveScratchBagItemQuantities
	add hl, de
	ld [hl], a
	jp Func_52cdc

Func_52c85: ; 52c85 (14:6c85)
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld c, [hl]
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wc98e
	add hl, de
	ld a, [hl]
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld [hl], a
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wc98e
	add hl, de
	ld [hl], c
	jp Func_52cdc

Func_52cb2: ; 52cb2 (14:6cb2)
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld c, [hl]
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wc9a3
	add hl, de
	ld a, [hl]
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld [hl], a
	ld hl, wc39b
	ld l, [hl]
	ld h, $0
	ld de, wc9a3
	add hl, de
	ld [hl], c
Func_52cdc: ; 52cdc (14:6cdc)
	pop hl
	ld a, l
	call GetSRAMBank
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_52bad)
	ld de, Pointers_52bad
	ld hl, $10e
	call FarCall
	pop de
	push de
	ld c, e
	ld b, d
	ld de, $1405
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop bc
	ret

Func_52d1f: ; 52d1f (14:6d1f)
	callba_hli Func_17470
	call Func_1fbe
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_50176)
	ld de, Data_50176
	ld hl, Data_50157
	call FarCall
	call Func_2009
	callba_hli Func_17488
	ret

Func_52d58: ; 52d58 (14:6d58)
	push hl
	ld bc, wSaveScratchParty
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld [hl], $0
	ld a, [hl]
	pop hl
	push hl
	inc hl
	inc hl
	ld [hl], a
	pop hl
	push hl
	inc hl
	ld [hl], a
	pop hl
	push hl
	ld [hl], a
	ld e, $0
	xor a
Func_52d73: ; 52d73 (14:6d73)
	cp $4
	jp nc, Func_52daa
	push af
	ld a, [bc]
	cp $ae
	jp z, Func_52d8e
	cp $ad
	jp z, Func_52d8e
	cp $ac
	jp z, Func_52d8e
	cp $ab
	jp nz, Func_52d9f
Func_52d8e: ; 52d8e (14:6d8e)
	push de
	ld l, a
	ld h, $0
	ld de, -$ab
	add hl, de
	push hl
	call GetHLAtSPPlus8
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
Func_52d9f: ; 52d9f (14:6d9f)
	pop af
	inc a
	ld hl, $23
	add hl, bc
	ld c, l
	ld b, h
	jp Func_52d73

Func_52daa: ; 52daa (14:6daa)
	ld a, [hSRAMBank]
	push af
	push de
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld bc, $a007
	xor a
	pop de
Func_52db8: ; 52db8 (14:6db8)
	cp $aa
	jp nc, Func_52def
	push af
	ld a, [bc]
	cp $ae
	jp z, Func_52dd3
	cp $ad
	jp z, Func_52dd3
	cp $ac
	jp z, Func_52dd3
	cp $ab
	jp nz, Func_52de4
Func_52dd3: ; 52dd3 (14:6dd3)
	push de
	ld l, a
	ld h, $0
	ld de, -$ab
	add hl, de
	push hl
	call GetHLAtSPPlus10
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
Func_52de4: ; 52de4 (14:6de4)
	pop af
	inc a
	ld hl, $1c
	add hl, bc
	ld c, l
	ld b, h
	jp Func_52db8

Func_52def: ; 52def (14:6def)
	pop af
	push de
	call GetSRAMBank
	pop de
	ld a, e
	pop bc
	ret

INCLUDE "engine/time_set.asm"

Func_537dc: ; 537dc (14:77dc)
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	ld e, a
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld e, a
	ld d, $0
	add hl, de
	ld c, l
	ld b, h
	push bc
	ld de, Data_539ac
	ld hl, $e08
	call PlaceStringDEatCoordHL
	pop bc
	ld l, c
	ld h, b
	ld de, $141
	call CompareHLtoDE
	jp c, Func_53838
	ld e, c
	ld d, b
	ld hl, $1a4
	call CompareHLtoDE
	jp c, Func_53838
	ld de, Data_539b3
	ld hl, $e09
	call PlaceStringDEatCoordHL
	xor a
	jp Func_539ab

Func_53838: ; 53838 (14:7838)
	ld l, c
	ld h, b
	ld de, $1a5
	call CompareHLtoDE
	jp c, Func_5385c
	ld e, c
	ld d, b
	ld hl, $209
	call CompareHLtoDE
	jp c, Func_5385c
	ld de, Data_539bb
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $1
	jp Func_539ab

Func_5385c: ; 5385c (14:785c)
	ld l, c
	ld h, b
	ld de, $20a
	call CompareHLtoDE
	jp c, Func_53880
	ld e, c
	ld d, b
	ld hl, $26d
	call CompareHLtoDE
	jp c, Func_53880
	ld de, Data_539c2
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $2
	jp Func_539ab

Func_53880: ; 53880 (14:7880)
	ld l, c
	ld h, b
	ld de, $26e
	call CompareHLtoDE
	jp c, Func_538a4
	ld e, c
	ld d, b
	ld hl, $2d2
	call CompareHLtoDE
	jp c, Func_538a4
	ld de, Data_539ca
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $3
	jp Func_539ab

Func_538a4: ; 538a4 (14:78a4)
	ld l, c
	ld h, b
	ld de, $2d3
	call CompareHLtoDE
	jp c, Func_538c8
	ld e, c
	ld d, b
	ld hl, $336
	call CompareHLtoDE
	jp c, Func_538c8
	ld de, Data_539d1
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $4
	jp Func_539ab

Func_538c8: ; 538c8 (14:78c8)
	ld l, c
	ld h, b
	ld de, $337
	call CompareHLtoDE
	jp c, Func_538ec
	ld e, c
	ld d, b
	ld hl, $39b
	call CompareHLtoDE
	jp c, Func_538ec
	ld de, Data_539d8
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $5
	jp Func_539ab

Func_538ec: ; 538ec (14:78ec)
	ld l, c
	ld h, b
	ld de, $39c
	call CompareHLtoDE
	jp c, Func_53910
	ld e, c
	ld d, b
	ld hl, $3ff
	call CompareHLtoDE
	jp c, Func_53910
	ld de, Data_539df
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $6
	jp Func_539ab

Func_53910: ; 53910 (14:7910)
	ld l, c
	ld h, b
	ld de, $400
	call CompareHLtoDE
	jp c, Func_53934
	ld e, c
	ld d, b
	ld hl, $462
	call CompareHLtoDE
	jp c, Func_53934
	ld de, Data_539e7
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $7
	jp Func_539ab

Func_53934: ; 53934 (14:7934)
	ld l, c
	ld h, b
	ld de, $463
	call CompareHLtoDE
	jp c, Func_53958
	ld e, c
	ld d, b
	ld hl, $4c5
	call CompareHLtoDE
	jp c, Func_53958
	ld de, Data_539ee
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $8
	jp Func_539ab

Func_53958: ; 53958 (14:7958)
	ld l, c
	ld h, b
	ld de, $4c6
	call CompareHLtoDE
	jp nc, Func_5396e
	ld e, c
	ld d, b
	ld hl, $78
	call CompareHLtoDE
	jp c, Func_5397c
Func_5396e: ; 5396e (14:796e)
	ld de, Data_539f5
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $9
	jp Func_539ab

Func_5397c: ; 5397c (14:797c)
	ld l, c
	ld h, b
	ld de, $79
	call CompareHLtoDE
	jp c, Func_539a0
	ld e, c
	ld d, b
	ld hl, $da
	call CompareHLtoDE
	jp c, Func_539a0
	ld de, Data_539fd
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $a
	jp Func_539ab

Func_539a0: ; 539a0 (14:79a0)
	ld de, Data_53a06
	ld hl, $e09
	call PlaceStringDEatCoordHL
	ld a, $b
Func_539ab: ; 539ab (14:79ab)
	ret

Data_539ac:
	db "(    )", $0

Data_539b3:
	db "(おひつしﾞ)", $0

Data_539bb:
	db "(おうし )", $0

Data_539c2:
	db "(ふたこﾞ )", $0

Data_539ca:
	db "(かに  )", $0

Data_539d1:
	db "(しし  )", $0

Data_539d8:
	db "(おとめ )", $0

Data_539df:
	db "(てんひﾞん)", $0

Data_539e7:
	db "(さそり )", $0

Data_539ee:
	db "(いて  )", $0

Data_539f5:
	db "(やきﾞ  )", $0

Data_539fd:
	db "(みすﾞかﾞめ)", $0

Data_53a06:
	db "(うお  )", $0

INCLUDE "engine/robodex/flags.asm"

Func_53b6e::
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpAttrMapRectangle
	set_farcall_addrs_hli Func_320d8
	ld a, $2
	call FarCall
	ld l, a
	ld a, $2
	ld [wc39a], a
	pop de
	push hl
	push de
	ld c, e
	ld b, d
	ld de, $1405
	ld hl, $d
	call RestoreTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call RestoreAttrMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop hl
	ld a, l
	ret

Pointers_53c10:
	dw Data_53c14
	dw $0

Data_53c14:
	db "(とﾞうやら せいこうした みたいしﾞゃ)", $0

Pointers_53c2a:
	dw Data_53c30
	dw Data_53c3f
	dw $0

Data_53c30:
	db "リモコン(の しﾞゅしんに)", $0

Data_53c3f:
	db "(しっはﾟいしました)", $0

Pointers_53c4b:
	dw Data_53c51
	dw Data_53c5f
	dw $0

Data_53c51:
	db "(なんしﾞゃ やめるのか)", $0

Data_53c5f:
	db "(いくしﾞかﾞないのう)", $0

Pointers_53c6c:
	dw Data_53c70
	dw $0

Data_53c70:
	db "(その)ロホﾞホﾟン(は) (えらへﾞないよ)", $0

Func_53c88::
	add sp, -$52
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli DisplayPartyMenu_
	xor a
	call FarCall
	ld a, l
	cp $5
	jp c, Func_53cb4
	set_farcall_addrs_hli FadeInMap
	xor a
	call FarCall
	jp Func_53e49

Func_53cb4: ; 53cb4 (14:7cb4)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$1f
	ld a, [hl]
	and $2
	rrca
	and $7f
	cp $1
	jp nz, Func_53d22
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_53c6c)
	ld de, Pointers_53c6c
	ld hl, $10e
	call FarCall
	set_farcall_addrs_hli FadeInMap
	xor a
	call FarCall
	jp Func_53e49

Func_53d22: ; 53d22 (14:7d22)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$23
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$28
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_6adb3
	pop af
	ld hl, sp+$1f
	ld e, [hl]
	call FarCall
	push af
	set_farcall_addrs_hli Func_95c14
	pop af
	call FarCall
	set_farcall_addrs_hli Func_320d8
	ld a, $1
	call FarCall
	push af
	set_farcall_addrs_hli FadeInMap
	xor a
	call FarCall
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_50185
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop af
	cp $2
	jp z, Func_53dd3
	or a
	jp nz, Func_53dec
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_53c10)
	ld de, Pointers_53c10
	ld hl, $10e
	call FarCall
	jp Func_53e02

Func_53dd3: ; 53dd3 (14:7dd3)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_53c4b)
	ld de, Pointers_53c4b
	ld hl, $10e
	call FarCall
	jp Func_53e02

Func_53dec: ; 53dec (14:7dec)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_53c2a)
	ld de, Pointers_53c2a
	ld hl, $10e
	call FarCall
Func_53e02: ; 53e02 (14:7e02)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$23
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$28
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_6adb3
	pop af
	ld hl, sp+$1f
	ld e, [hl]
	call FarCall
	push af
	set_farcall_addrs_hli Func_95c79
	pop af
	call FarCall
Func_53e49: ; 53e49 (14:7e49)
	add sp, $52
	ret

SECTION "Bank 15", ROMX, BANK [$15]
Func_54000:
	ret

Data_54001: ; 54001
	db 0, 0
	db 11, 13
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_58d7a
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_54020: ; 54020
	db 0, 0
	db 12, 17
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_6ab70
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_5403f: ; 5403f
	db 4, 3
	db 11, 11
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_2391e
	dba Func_1746c
	dbw 5, 0
	dbw 5, 0
	dba Func_dd5a
	dbw 0, 0

Data_5405e: ; 5405e
	db 4, 4
	db 11, 9
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_2391e
	dba Func_1746c
	dbw 5, 0
	dbw 5, 0
	dba Func_dd5a
	dbw 0, 0

Data_5407d: ; 5407d
	db 4, 4
	db 11, 9
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_23a68
	dba Func_1746c
	dbw 5, 0
	dbw 5, 0
	dba Func_dd5a
	dbw 0, 0

Data_5409c: ; 5409c
	db 4, 5
	db 11, 7
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_23a68
	dba Func_1746c
	dbw 5, 0
	dbw 5, 0
	dba Func_dd5a
	dbw 0, 0

Data_540bb: ; 540bb
	db 0, 3
	db 15, 10
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba BagSubmenu
	dba Func_17454
	dba Func_523f2
	dba Func_52475
	dbw 5, 0
	dba Func_52b4f

Data_540da: ; 540da
	db 13, 0
	db 7, 15
	dba Func_56694
	dbw 5, 0
	dba Func_151c2
	dba Func_55627
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_540f9: ; 540f9
	db 7, 0
	db 13, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_513a2
	dba Func_1743f
	dba Func_16038
	dba Func_160c2
	dbw 0, 0
	dbw 0, 0

Data_54118: ; 54118
	db 10, 5
	db 7, 7
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_55c41
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_54137: ; 54137
	db 0, 0
	db 11, 7
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_55ce2
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_54156: ; 54156
	db 10, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dbw 5, 0
	dba Func_17454
	dba Func_523f2
	dba Func_52475
	dbw 5, 0
	dba Func_52b4f

Data_54175: ; 54175
	db 9, 0
	db 11, 10
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_6af9d
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_54194: ; 54194
	db 10, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_50b55
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_541b3: ; 541b3
	db 0, 9
	db 7, 5
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_561cf
	dbw 5, 0
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_541d2: ; 541d2
	db 14, 13
	db 6, 5
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_15281
	dba Func_15297
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_541f1: ; 541f1
	db 11, 8
	db 6, 5
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_15281
	dba Func_15297
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_54210: ; 54210
	db 0, 0
	db 11, 7
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_55d5c
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_5422f: ; 5422f
	db 10, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_1551f
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 5, 0
	dba Func_52b4f

Data_5424e: ; 5424e
	db 0, 2
	db 10, 10
	dba Func_16777
	dbw 5, 0
	dba Func_16377
	dba Func_15bde
	dba Func_1743f
	dba Func_16038
	dba Func_160c2
	dbw 0, 0
	dbw 0, 0

Data_5426d: ; 5426d
	db 10, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_50b55
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_5428c: ; 5428c
	db 0, 0
	db 7, 9
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_5616f
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_542ab: ; 542ab
	db 0, 3
	db 15, 10
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_51ea4
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_542ca: ; 542ca
	db 7, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_562ec
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_542e9: ; 542e9
	db 7, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_562ec
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_54308: ; 54308
	db 0, 3
	db 15, 10
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_51ea4
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_54327: ; 54327
	db 7, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_562ec
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_54346: ; 54346
	db 7, 0
	db 10, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_562ec
	dba Func_1743f
	dba Func_523f2
	dba Func_52475
	dbw 0, 0
	dbw 0, 0

Data_54365: ; 54365
	db 8, 10
	db 12, 8
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_1743f
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_54384: ; 54384
	dr $54384, $54393

Data_54393: ; 54393
	dr $54393, $543a2

Data_543a2: ; 543a2
	db 10, 0
	db 10, 14
	dba Func_573a4
	dbw 5, 0
	dbw 5, 0
	dba Func_1743f
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_543c1: ; 543c1
	db 0, 0
	db 13, 18
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_578e9
	dba Func_17454
	dba Func_16038
	dba Func_160c2
	dbw 0, 0
	dbw 0, 0

Data_543e0: ; 543e0
	db 10, 0
	db 10, 14
	dba Func_69902
	dbw 5, 0
	dbw 5, 0
	dba Func_17454
	dba Func_17454
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_543ff: ; 543ff
	db 9, 0
	db 11, 7
	dba Func_696f3
	dbw 5, 0
	dba Func_151c2
	dba Func_555b6
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_5441e: ; 5441e
	db 9, 0
	db 11, 5
	dba Func_696f3
	dbw 5, 0
	dba Func_151c2
	dba Func_555b6
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_5443d: ; 5443d
	db 9, 0
	db 11, 15
	dba Func_68f92
	dbw 5, 0
	dba Func_69284
	dba Func_68eeb
	dba Func_1743f
	dba Func_6934e
	dba Func_69354
	dbw 0, 0
	dbw 0, 0

Data_5445c: ; 5445c
	db 9, 0
	db 11, 13
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_30328
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_5447b: ; 5447b
	db 0, 0
	db 5, 12
	dba Func_fb783
	dbw 5, 0
	dba Func_fb7f9
	dba Func_fb8e9
	dba Func_1743f
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Data_5449a: ; 5449a
	db 0, 2
	db 20, 13
	dba Func_4dbef
	dbw 5, 0
	dba Func_4e008
	dba Func_4e1d3
	dba Func_4e3a8
	dba Func_4e175
	dba Func_4e1a4
	dbw 0, 0
	dbw 0, 0

Data_544b9: ; 544b9
	db 10, 0
	db 10, 6
	dba Func_4e58b
	dbw 5, 0
	dba Func_4e813
	dba Func_4eb71
	dba Func_fb18e
	dba Func_4e175
	dba Func_4e1a4
	dbw 0, 0
	dbw 0, 0

Data_544d8: ; 544d8
	db 15, 9
	db 4, 4
	dba Func_338f5
	dbw 5, 0
	dba Func_33a1f
	dba Func_1743f
	dba Func_152db
	dba Func_33bb9
	dba Func_33bc4
	dbw 0, 0
	dbw 0, 0

Data_544f7: ; 544f7
	dr $544f7, $54548

Data_54548:
	dr $54548, $545a5

Data_545a5:: ; 545a5
	dr $545a5, $545e4

Data_545e4:: ; 545e4
	dr $545e4, $54614

Data_54614:: ; 54614
	dr $54614, $5464c

Data_5464c:: ; 5464c
	dr $5464c, $54660

Data_54660:: ; 54660
	dr $54660, $54686

Data_54686:: ; 54686
	dr $54686, $546af

Data_546af:: ; 546af
	dr $546af, $546c1

Data_546c1:: ; 546c1
	dr $546c1, $546d0

Data_546d0:: ; 546d0
	dr $546d0, $546e0

Data_546e0:: ; 546e0
	dr $546e0, $546fd

Data_546fd:: ; 546fd
	dr $546fd, $54727

Data_54727:: ; 54727
	dr $54727, $54767

Func_54767: ; 54767 (15:4767)
	push hl
	ld a, [wFarCallDestBank]
	push af
	set_farcall_addrs_hli Func_61c90
	pop af
	pop hl
	push af
	call FarCall
	pop af
	ld [wFarCallDestBank], a
	ret

Func_54782:
	push hl
	add sp, -$54
	ld c, $0
Func_54787: ; 54787 (15:4787)
	read_hl_from_sp_plus $56
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_54826
	push bc
	set_farcall_addrs_hli GetRobotInParty
	pop bc
	push bc
	ld a, c
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	ld de, $19
	ld a, $3
	call GetBanks_15
	pop bc
	push bc
	push af
	ld l, c
	ld h, 0
	get_party_bot
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$27
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$2c
	ld e, [hl]
	pop af
	push de
	call GetSRAMBank
	set_farcall_addrs_hli Func_6adb3
	pop de
	ld a, e
	ld hl, sp+$21
	ld e, [hl]
	call FarCall
	ld e, a
	pop bc
	push bc
	ld a, c
	add a
	add a
	ld d, a
	add a
	add d
	ld hl, sp+$55
	ld [hl], a
	ld hl, sp+$54
	ld [hl], e
	ld l, $0
	push hl
	ld a, $c
	push af
	set_farcall_addrs_hli LoadSpriteGFX
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$55
	ld a, [hl]
	ld hl, sp+$54
	ld l, [hl]
	ld h, a
	call FarCall
	pop bc
	inc c
	jp Func_54787

Func_54826: ; 54826 (15:4826)
	add sp, $56
	ret

Func_54829:
	push hl
	push de
	ld a, [wFarCallDestBank]
	push af
	set_farcall_addrs_hli Func_61d3e
	pop af
	pop de
	pop hl
	push af
	call FarCall
	pop af
	ld [wFarCallDestBank], a
	ret

Func_54846:
	push hl
	add sp, -$38
	push de
	read_hl_from_sp_plus $3c
	ld e, h
	ld hl, sp+$2
	ld [hl], e
	read_hl_from_sp_plus $3c
	ld a, l
	push af
	set_farcall_addrs_hli GetRobotInParty
	pop af
	pop de
	push af
	push de
	ld a, e
	ld hl, sp+$19
	reg16swap de, hl
	call FarCall
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld l, a
	pop de
	pop af
	push de
	push hl
	push af
	ld hl, $6
	push hl
	ld a, $3
	ld hl, sp+$9
	ld c, l
	ld b, h
	call Func_57ea2
	pop bc
	set_farcall_addrs_hli Func_679e5
	pop af
	pop hl
	push af
	push hl
	ld hl, sp+$31
	ld l, [hl]
	push hl
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $500
	add hl, de
	ld e, a
	ld d, $0
	inc de
	add hl, de
	pop de
	call FarCall
	pop hl
	ld a, l
	call GetSRAMBank
	pop af
	push af
	ld hl, sp+$5
	ld c, l
	ld b, h
	ld e, a
	ld d, $0
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	call Func_57e8d
	pop af
	push af
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld de, Data_54972
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $27
	ld c, l
	ld b, h
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_54975
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $29
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	pop af
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	ld e, a
	ld d, $0
	inc de
	add hl, de
	ld de, Data_54977
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $29
	ld c, l
	ld b, h
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_5497a
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $2b
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	pop de
	ld l, e
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $302
	add hl, de
	ld de, Data_5497c
	call PlaceStringDEatCoordHL
	ld hl, sp+$1c
	ld c, [hl]
	ld b, $0
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, Data_5497f
	push hl
	call PlaceString
	pop bc
	add sp, $3a
	ret

Data_54972:
	db "Hp", $0

Data_54975:
	db "/", $0

Data_54977:
	db "Ep", $0

Data_5497a:
	db "/", $0

Data_5497c:
	db "LV", $0

Data_5497f:
	db ":", $0

Func_54981:
	push bc
	push bc
	push de
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop de
	ld a, e
	dec a
	or d
	jp z, Func_549bd
	ld a, e
	or d
	jp nz, Func_549cf
	pop hl
	push hl
	dec hl
	pop de
	push hl
	inc h
	dec h
	bit 7, h
	jr z, .asm_549ba
	ld hl, $0
	pop de
	push hl
.asm_549ba
	jp Func_549cf

Func_549bd: ; 549bd (15:49bd)
	pop hl
	push hl
	inc hl
	pop de
	push hl
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp c, Func_549cf
	ld l, c
	ld h, b
	dec hl
	pop de
	push hl
Func_549cf: ; 549cf (15:49cf)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $b
	push hl
	ld c, $1
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call GetHLAtSPPlus4
	call Func_54767
	ld l, $b
	push hl
	ld c, $1
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	pop bc
	ret

Func_54a00:
	call Func_54af8
	cp $ff
	jp nz, Func_54a0c
	ld hl, -1
	ret

Func_54a0c: ; 54a0c (15:4a0c)
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ret

Pointers_54a13:
	dw Data_54a17
	dw $0

Data_54a17:
	db "スクラッフﾟ(に なっているよ)", $0

Pointers_54a28:
	dw Data_54a2c
	dw $0

Data_54a2c:
	db "スクラッフﾟ(しﾞゃないよ)", $0

Pointers_54a3b:
	dw Data_54a3f
	dw $0

Data_54a3f:
	db "(しんか しないよ)", $0

Pointers_54a4a:
	dw Data_54a50
	dw Data_54a63
	dw $0

Data_54a50:
	db "(これいしﾞょう) レヘﾞルアッフﾟ", $0

Data_54a63:
	db "(てﾞきないよ)", $0

Func_54a6c:
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld hl, $5
	push hl
	ld bc, $14
	ld de, $d
	ld hl, $0
	call Func_57e52
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	pop af
	cp $3
	jp z, Func_54adf
	cp $2
	jp z, Func_54ad1
	cp $1
	jp z, Func_54ac3
	or a
	jp nz, Func_54aea
	ld c, BANK(Pointers_54a3b)
	ld de, Pointers_54a3b
	ld hl, $10e
	call FarCall
	jp Func_54aea

Func_54ac3: ; 54ac3 (15:4ac3)
	ld c, BANK(Pointers_54a4a)
	ld de, Pointers_54a4a
	ld hl, $10e
	call FarCall
	jp Func_54aea

Func_54ad1: ; 54ad1 (15:4ad1)
	ld c, BANK(Pointers_54a13)
	ld de, Pointers_54a13
	ld hl, $10e
	call FarCall
	jp Func_54aea

Func_54adf: ; 54adf (15:4adf)
	ld c, BANK(Pointers_54a28)
	ld de, Pointers_54a28
	ld hl, $10e
	call FarCall
Func_54aea: ; 54aea (15:4aea)
	ret

Pointers_54aeb:
	dw Data_54aef
	dw $0

Data_54aef:
	db "(を つかった)", $0

Func_54af8: ; 54af8 (15:4af8)
	add sp, -$3c
	ld hl, sp+$a
	xor a
	ld [hl], a
	ld hl, sp+$9
	ld [hl], a
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $b
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $e
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus9
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $10
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus7
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $12
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $16
	add hl, de
	ld a, [hl]
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $7
	add hl, de
	ld l, [hl]
	pop af
	push hl
	push af
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld c, [hl]
	push bc
	set_farcall_addrs_hli Func_15ad6
	ld c, $a
	ld hl, sp+$23
	push hl
	ld hl, wc311
	ld l, [hl]
	ld h, $0
	ld de, $400
	add hl, de
	pop de
	call FarCall
	pop bc
	pop af
	push bc
	call GetSRAMBank
	pop bc
	pop hl
	ld a, [wc311]
	cp $4a
	jp nz, Func_54c22
	push bc
	call Func_54ee5
	ld hl, sp+$2
	ld [hl], a
	pop bc
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_54c1f
	xor a
	call Func_54a6c
	ld a, $ff
	jp Func_54ee2

Func_54c1f: ; 54c1f (15:4c1f)
	jp Func_54c3a

Func_54c22: ; 54c22 (15:4c22)
	ld a, [wc311]
	cp $49
	jp nz, Func_54c3a
	ld a, l
	cp $63
	jp nz, Func_54c3a
	ld a, $1
	call Func_54a6c
	ld a, $ff
	jp Func_54ee2

Func_54c3a: ; 54c3a (15:4c3a)
	call GetHLAtSPPlus9
	ld a, l
	or h
	jp nz, Func_54c60
	ld a, [wc311]
	inc a
	cp $42
	jp z, Func_54c50
	cp $41
	jp nz, Func_54c53
Func_54c50: ; 54c50 (15:4c50)
	jp Func_54c5d

Func_54c53: ; 54c53 (15:4c53)
	ld a, $2
	call Func_54a6c
	ld a, $ff
	jp Func_54ee2

Func_54c5d: ; 54c5d (15:4c5d)
	jp Func_54c78

Func_54c60: ; 54c60 (15:4c60)
	ld a, [wc311]
	inc a
	cp $42
	jp z, Func_54c6e
	cp $41
	jp nz, Func_54c78
Func_54c6e: ; 54c6e (15:4c6e)
	ld a, $3
	call Func_54a6c
	ld a, $ff
	jp Func_54ee2

Func_54c78: ; 54c78 (15:4c78)
	push bc
	ld a, [wc311]
	inc a
	cp $4b
	jp z, Func_54d34
	cp $4a
	jp z, Func_54d23
	cp $47
	jp z, Func_54cbd
	cp $46
	jp z, Func_54cbd
	cp $41
	jp nz, Func_54d37
	call GetHLAtSPPlus9
	ld de, $2
	call DivideHLByDESigned
	write_hl_to wc312
	ld hl, $0
	write_hl_to wc314
	ld c, $0
	call GetHLAtSPPlus7
	push hl
	read_hl_from_sp_plus $d
	pop de
	call Func_5512e
	jp Func_54da5

Func_54cbd: ; 54cbd (15:4cbd)
	read_hl_from wc312
	push hl
	read_hl_from_sp_plus $b
	ld de, $3e7
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_54ce8
	call GetHLAtSPPlus9
	ld de, $3e7
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	write_hl_to wc312
Func_54ce8: ; 54ce8 (15:4ce8)
	read_hl_from wc314
	push hl
	call GetHLAtSPPlus7
	ld de, $3e7
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_54d12
	call GetHLAtSPPlus5
	ld de, $3e7
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	write_hl_to wc314
Func_54d12: ; 54d12 (15:4d12)
	ld c, $1
	call GetHLAtSPPlus5
	push hl
	read_hl_from_sp_plus $b
	pop de
	call Func_5512e
	jp Func_54da5

Func_54d23: ; 54d23 (15:4d23)
	callba_hli Func_6f962
	jp Func_54da5

Func_54d34: ; 54d34 (15:4d34)
	jp Func_54da5

Func_54d37: ; 54d37 (15:4d37)
	read_hl_from wc312
	push hl
	read_hl_from_sp_plus $d
	push hl
	read_hl_from_sp_plus $d
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_54d69
	read_hl_from_sp_plus $b
	push hl
	read_hl_from_sp_plus $b
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to wc312
Func_54d69: ; 54d69 (15:4d69)
	read_hl_from wc314
	push hl
	call GetHLAtSPPlus9
	push hl
	call GetHLAtSPPlus9
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call CompareHLtoDE
	jp nc, Func_54d97
	call GetHLAtSPPlus7
	push hl
	call GetHLAtSPPlus7
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to wc314
Func_54d97: ; 54d97 (15:4d97)
	ld c, $0
	call GetHLAtSPPlus7
	push hl
	read_hl_from_sp_plus $d
	pop de
	call Func_5512e
Func_54da5: ; 54da5 (15:4da5)
	ld a, [wc311]
	inc a
	cp $42
	jp z, Func_54db3
	cp $41
	jp nz, Func_54e67
Func_54db3: ; 54db3 (15:4db3)
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld a, [wc2fa]
	cp $1
	jp nz, Func_54e04
	set_farcall_addrs_hli Func_5c694
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	call FarCall
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $16
	add hl, de
	ld [hl], a
	jp Func_54e1f

Func_54e04: ; 54e04 (15:4e04)
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $16
	add hl, de
	ld [hl], $0
Func_54e1f: ; 54e1f (15:4e1f)
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_679e5
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $16
	add hl, de
	ld l, [hl]
	push hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $802
	add hl, de
	pop de
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
Func_54e67: ; 54e67 (15:4e67)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld hl, $5
	push hl
	ld bc, $14
	ld de, $d
	ld hl, $0
	call Func_57e52
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$1f
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_54aeb)
	ld de, Pointers_54aeb
	ld hl, $110
	call FarCall
	pop bc
	ld a, [wc311]
	cp $4a
	jp nz, Func_54ee1
	push bc
	set_farcall_addrs_hli Func_4f8ec
	pop bc
	ld hl, sp+$0
	ld a, [hl]
	dec a
	ld e, a
	ld a, c
	dec a
	call FarCall
	call Func_54f0e
Func_54ee1: ; 54ee1 (15:4ee1)
	xor a
Func_54ee2: ; 54ee2 (15:4ee2)
	add sp, $3c
	ret

Func_54ee5: ; 54ee5 (15:4ee5)
	add sp, -$52
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$2f
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$2f
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$2
	ld a, [hl]
	add sp, $52
	ret

Func_54f0e: ; 54f0e (15:4f0e)
	add sp, -$52
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$2f
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$2f
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$2
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$38
	ld e, [hl]
	ld hl, sp+$2
	call FarCall
	ld hl, sp+$53
	ld c, [hl]
	read_hl_from_sp_plus $1e
	push hl
	read_hl_from_sp_plus $43
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $41
	read_hl_from_sp_plus $22
	push hl
	read_hl_from_sp_plus $47
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $45
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4a
	read_hl_from_sp_plus $2b
	push hl
	read_hl_from_sp_plus $50
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4e
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4c
	pop af
	push bc
	push af
	ld e, a
	dec e
	ld hl, sp+$4
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_53a0d
	pop af
	push af
	ld e, $0
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	pop af
	push af
	ld e, $1
	call FarCall
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$3a
	ld e, [hl]
	ld hl, sp+$4
	call FarCall
	ld hl, sp+$52
	ld a, [hl]
	and $1
	jp nz, Func_55012
	ld c, $0
Func_54ffa: ; 54ffa (15:4ffa)
	ld a, c
	cp $6
	jp nc, Func_55012
	ld e, c
	ld d, $0
	ld hl, sp+$11
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$34
	add hl, de
	ld [hl], a
	inc c
	jp Func_54ffa

Func_55012: ; 55012 (15:5012)
	pop af
	ld hl, sp+$31
	ld [hl], a
	read_hl_from_sp_plus $1e
	push hl
	read_hl_from_sp_plus $43
	pop de
	add hl, de
	write_hl_to_sp_plus $41
	read_hl_from_sp_plus $22
	push hl
	read_hl_from_sp_plus $47
	pop de
	add hl, de
	write_hl_to_sp_plus $45
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	add hl, de
	write_hl_to_sp_plus $4a
	read_hl_from_sp_plus $2b
	push hl
	read_hl_from_sp_plus $50
	pop de
	add hl, de
	write_hl_to_sp_plus $4e
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	add hl, de
	write_hl_to_sp_plus $4c
	ld hl, $0
	write_hl_to_sp_plus $50
	pop bc
	ld hl, sp+$51
	ld [hl], c
	read_hl_from_sp_plus $3f
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_55084
	ld hl, $3e7
	write_hl_to_sp_plus $3f
Func_55084: ; 55084 (15:5084)
	read_hl_from_sp_plus $43
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_5509c
	ld hl, $3e7
	write_hl_to_sp_plus $43
Func_5509c: ; 5509c (15:509c)
	read_hl_from_sp_plus $48
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_550b4
	ld hl, $3e7
	write_hl_to_sp_plus $48
Func_550b4: ; 550b4 (15:50b4)
	read_hl_from_sp_plus $4c
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_550cc
	ld hl, $3e7
	write_hl_to_sp_plus $4c
Func_550cc: ; 550cc (15:50cc)
	read_hl_from_sp_plus $4a
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_550e4
	ld hl, $3e7
	write_hl_to_sp_plus $4a
Func_550e4: ; 550e4 (15:50e4)
	read_hl_from_sp_plus $3d
	push hl
	read_hl_from_sp_plus $41
	pop de
	call CompareHLtoDE
	jp nc, Func_550fc
	read_hl_from_sp_plus $3f
	write_hl_to_sp_plus $3d
Func_550fc: ; 550fc (15:50fc)
	read_hl_from_sp_plus $41
	push hl
	read_hl_from_sp_plus $45
	pop de
	call CompareHLtoDE
	jp nc, Func_55114
	read_hl_from_sp_plus $43
	write_hl_to_sp_plus $41
Func_55114: ; 55114 (15:5114)
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$2f
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	add sp, $52
	ret

Func_5512e: ; 5512e (15:512e)
	push hl
	push de
	push bc
Func_55131: ; 55131 (15:5131)
	read_hl_from wc312
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_551a7
	read_hl_from wc312
	ld de, $64
	call CompareHLtoDE
	jp c, Func_5516c
	call GetHLAtSPPlus6
	ld de, $64
	add hl, de
	call WriteHLToSPPlus6
	read_hl_from wc312
	ld de, hBGP
	add hl, de
	write_hl_to wc312
	jp Func_551a7

Func_5516c: ; 5516c (15:516c)
	read_hl_from wc312
	ld de, $a
	call CompareHLtoDE
	jp c, Func_55195
	call GetHLAtSPPlus6
	ld de, $a
	add hl, de
	call WriteHLToSPPlus6
	read_hl_from wc312
	ld de, -10
	add hl, de
	write_hl_to wc312
	jp Func_551a7

Func_55195: ; 55195 (15:5195)
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	read_hl_from wc312
	dec hl
	write_hl_to wc312
Func_551a7: ; 551a7 (15:51a7)
	read_hl_from wc314
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_5521d
	read_hl_from wc314
	ld de, $64
	call CompareHLtoDE
	jp c, Func_551e2
	call GetHLAtSPPlus4
	ld de, $64
	add hl, de
	call WriteHLToSPPlus4
	read_hl_from wc314
	ld de, hBGP
	add hl, de
	write_hl_to wc314
	jp Func_5521d

Func_551e2: ; 551e2 (15:51e2)
	read_hl_from wc314
	ld de, $a
	call CompareHLtoDE
	jp c, Func_5520b
	call GetHLAtSPPlus4
	ld de, $a
	add hl, de
	call WriteHLToSPPlus4
	read_hl_from wc314
	ld de, -10
	add hl, de
	write_hl_to wc314
	jp Func_5521d

Func_5520b: ; 5520b (15:520b)
	call GetHLAtSPPlus4
	inc hl
	call WriteHLToSPPlus4
	read_hl_from wc314
	dec hl
	write_hl_to wc314
Func_5521d: ; 5521d (15:521d)
	push bc
	ld a, c
	add a
	add a
	add $d
	ld hl, sp+$3
	ld [hl], a
	ld hl, sp+$2
	ld a, [wc2e9]
	ld d, a
	add a
	add d
	inc a
	ld [hl], a
	call GetHLAtSPPlus8
	ld c, l
	ld b, h
	ld de, $3
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call Func_2230
	call GetHLAtSPPlus6
	ld c, l
	ld b, h
	ld de, $3
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	inc hl
	call Func_2230
	ld l, $6
	push hl
	ld c, $3
	ld hl, sp+$4
	ld e, [hl]
	ld hl, sp+$5
	ld a, [hl]
	call Func_3bc5
	pop bc
	pop bc
	read_hl_from wc312
	ld a, l
	or h
	jp nz, Func_5527c
	read_hl_from wc314
	ld a, l
	or h
	jp nz, Func_5527c
	jp Func_5527f

Func_5527c: ; 5527c (15:527c)
	jp Func_55131

Func_5527f: ; 5527f (15:527f)
	push bc
	ld de, $19
	ld a, $3
	call GetBanks_15
	pop bc
	inc c
	dec c
	jp nz, Func_552d3
	call GetHLAtSPPlus6
	push hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	push hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $10
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_55315

Func_552d3: ; 552d3 (15:52d3)
	call GetHLAtSPPlus6
	push hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $e
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	push hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $12
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
Func_55315: ; 55315 (15:5315)
	call GetSRAMBank
	pop bc
	pop bc
	pop bc
	ret

Func_5531c:
	call Func_55439
	ret

Pointers_55320:
	dw Data_55326
	dw Data_55334
	dw $0

Data_55326:
	db "(おいおい! ひとりてﾞ)", $0

Data_55334:
	db "(たひﾞするつもりかい)?", $0

Pointers_55342:
	dw Data_55346
	dw $0

Data_55346:
	db "(そうこかﾞ いっはﾟいたﾞよ)", $0

Pointers_55357:
	dw Data_5535d
	dw Data_55370
	dw $0

Data_5535d:
	db "(たたかえる) ろほﾞほﾟん(かﾞ)", $0

Data_55370:
	db "(いなくなるよ)", $0

Pointers_55379:
	dw Data_5537d
	dw $0

Data_5537d:
	db "(ほかんしたよ)", $0

Pointers_55386:
	dw Data_5538a
	dw $0

Data_5538a:
	db "(そいつは えらへﾞないよ)!", $0

Func_5539a: ; 5539a (15:539a)
	push af
	ld hl, $64
	call Func_57e30
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld hl, $5
	push hl
	ld bc, $14
	ld de, $d
	ld hl, $0
	call Func_57e52
	pop bc
	set_farcall_addrs_hli PrintMapText_
	pop hl
	pop af
	push hl
	cp $4
	jp z, Func_5541c
	cp $3
	jp z, Func_5540e
	cp $2
	jp z, Func_55400
	cp $1
	jp z, Func_553f2
	or a
	jp nz, Func_55427
	ld c, BANK(Pointers_55320)
	ld de, Pointers_55320
	ld hl, $10e
	call FarCall
	jp Func_55427

Func_553f2: ; 553f2 (15:53f2)
	ld c, BANK(Pointers_55342)
	ld de, Pointers_55342
	ld hl, $10e
	call FarCall
	jp Func_55427

Func_55400: ; 55400 (15:5400)
	ld c, BANK(Pointers_55357)
	ld de, Pointers_55357
	ld hl, $10e
	call FarCall
	jp Func_55427

Func_5540e: ; 5540e (15:540e)
	ld c, BANK(Pointers_55379)
	ld de, Pointers_55379
	ld hl, $10e
	call FarCall
	jp Func_55427

Func_5541c: ; 5541c (15:541c)
	ld c, BANK(Pointers_55386)
	ld de, Pointers_55386
	ld hl, $10e
	call FarCall
Func_55427: ; 55427 (15:5427)
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	pop hl
	call Func_57e41
	ret

Func_55439: ; 55439 (15:5439)
	push hl
	push bc
	push bc
	push bc
	push bc
	call GetHLAtSPPlus10
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$0
	ld [hl], $ff
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, sp+$3
	ld [hl], $0
Func_55468: ; 55468 (15:5468)
	ld hl, sp+$3
	ld a, [hl]
	cp $4
	jp nc, Func_554cb
	ld hl, sp+$3
	ld e, [hl]
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld [hl], $ff
	ld hl, sp+$3
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_554c1
	ld hl, sp+$3
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_554c1
	ld hl, sp+$3
	ld e, [hl]
	ld d, $0
	ld hl, sp+$5
	add hl, de
	ld [hl], $1
Func_554c1: ; 554c1 (15:54c1)
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
	jp Func_55468

Func_554cb: ; 554cb (15:54cb)
	pop af
	call GetSRAMBank
	callba_hli Func_50d27
	push af
	callba_hli Func_7cd1
	ld l, a
	pop af
	cp $1
	jp nz, Func_554fd
	xor a
	call Func_5539a
	ld hl, $4000
	jp Func_555b0

Func_554fd: ; 554fd (15:54fd)
	ld a, l
	cp $aa
	jp nz, Func_5550e
	ld a, $1
	call Func_5539a
	ld hl, $4000
	jp Func_555b0

Func_5550e: ; 5550e (15:550e)
	ld c, $0
Func_55510: ; 55510 (15:5510)
	ld a, c
	cp $4
	jp nc, Func_55534
	ld hl, sp+$2
	ld a, [hl]
	cp c
	jp z, Func_55530
	ld e, c
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_55530
	ld hl, sp+$0
	ld [hl], $1
	jp Func_55534

Func_55530: ; 55530 (15:5530)
	inc c
	jp Func_55510

Func_55534: ; 55534 (15:5534)
	ld hl, sp+$0
	ld a, [hl]
	cp $ff
	jp nz, Func_55547
	ld a, $2
	call Func_5539a
	ld hl, $4000
	jp Func_555b0

Func_55547: ; 55547 (15:5547)
	set_farcall_addrs_hli Func_50f58
	ld e, $ff
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_5556a
	ld a, $4
	call Func_5539a
	ld hl, $4000
	jp Func_555b0

Func_5556a: ; 5556a (15:556a)
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $2
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	ld de, $b
	add hl, de
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
	ld a, $3
	call Func_5539a
	ld hl, $8000
Func_555b0: ; 555b0 (15:55b0)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_555b6:
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $2
	or h
	jp z, Func_55600
	ld a, l
	dec a
	or h
	jp z, Func_555ef
	ld a, l
	or h
	jp nz, Func_5560e
	set_farcall_addrs_hli Func_14c55
	ld hl, $0
	call FarCall
	jp Func_5560e

Func_555ef: ; 555ef (15:55ef)
	callba_hli Func_4c12c
	jp Func_5560e

Func_55600: ; 55600 (15:5600)
	callba_hli Func_69b86
Func_5560e: ; 5560e (15:560e)
	set_farcall_addrs_hli FadeInMap
	ld a, $1
	call FarCall
	ld a, $2
	ld [wc39a], a
	ld hl, $8000
	ret

Func_55627:
	push bc
	push hl
	ld hl, $8000
	call WriteHLToSPPlus4
	pop bc
	push bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $6
	or h
	jp z, Func_556f7
	ld a, l
	sub $5
	or h
	jp z, Func_556e1
	ld a, l
	sub $4
	or h
	jp z, Func_556cb
	ld a, l
	sub $3
	or h
	jp z, Func_556ba
	ld a, l
	sub $2
	or h
	jp z, Func_556a9
	ld a, l
	dec a
	or h
	jp z, Func_55693
	ld a, l
	or h
	jp nz, Func_5570a
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $1
	call FarCall
	call Func_3af6
	jp Func_5570a

Func_55693: ; 55693 (15:5693)
	callba_hli Func_1486e
	ld hl, $4000
	pop de
	push hl
	jp Func_5570a

Func_556a9: ; 556a9 (15:56a9)
	callba_hli Func_14940
	jp Func_5570a

Func_556ba: ; 556ba (15:56ba)
	callba_hli Func_14960
	jp Func_5570a

Func_556cb: ; 556cb (15:56cb)
	callba_hli Func_5019a
	ld hl, $4000
	pop de
	push hl
	jp Func_5570a

Func_556e1: ; 556e1 (15:56e1)
	callba_hli Func_5053b
	ld hl, $4000
	pop de
	push hl
	jp Func_5570a

Func_556f7: ; 556f7 (15:56f7)
	callba_hli Func_fba6f
	ld hl, $4000
	pop de
	push hl
Func_5570a: ; 5570a (15:570a)
	ld a, [wc317]
	or a
	jp nz, Func_55716
	pop hl
	push hl
	jp Func_55719

Func_55716: ; 55716 (15:5716)
	ld hl, -1
Func_55719: ; 55719 (15:5719)
	pop bc
	ret

Data_5571b:
	dr $5571b, $55723

Func_55723: ; 55723 (15:5723)
	ld a, [wSystemType]
	cp $ff
	jp z, .dmg_or_sgb
	cp $1
	jp z, .dmg_or_sgb
	cp $11
	jp nz, .quit
	set_farcall_addrs_hli Func_c7109
	ld c, $2
	ld de, $808
	ld hl, $2
	call FarCall
	ld a, $2
	ld [wc39a], a
	jp .quit

.dmg_or_sgb
	ld de, $8
	ld hl, Data_5571b
	call Func_2b83
.quit
	ret

Func_5575d: ; 5575d (15:575d)
	push hl
	ld hl, -$3d6
	add hl, sp
	ld sp, hl
	ld hl, $3d6
	add hl, sp
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	set_farcall_addrs_hli GetRobotInParty
	ld hl, $386
	add hl, sp
	reg16swap de, hl
	ld a, [wc310]
	call FarCall
	call FillVisibleAreaWithBlankTile
	ld hl, $8
	push hl
	ld bc, $c
	ld de, $2
	ld hl, $8
	call Func_57e52
	pop bc
	ld hl, $8
	push hl
	ld bc, $b
	ld de, $a
	ld hl, $0
	call Func_57e52
	pop bc
	ld hl, $8
	push hl
	ld bc, $9
	ld de, $a
	ld hl, $b
	call Func_57e52
	pop bc
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, $388
	add hl, sp
	ld a, [hl]
	dec a
	ld e, a
	ld hl, $3ab
	add hl, sp
	call GetRobotOrTrainerBaseStats
	ld hl, wc310
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $b
	add hl, de
	ld e, [hl]
	ld hl, $370
	add hl, sp
	call Func_241f
	ld hl, $6
	push hl
	ld hl, $35e
	add hl, sp
	ld c, l
	ld b, h
	ld a, [wc310]
	ld e, a
	ld a, $3
	call Func_57ea2
	pop bc
	ld hl, $35c
	add hl, sp
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call Func_57e8d
	ld hl, $35c
	add hl, sp
	call FindFirstNonzero
	ld a, l
	sub $4
	or h
	jp nz, Func_5582b
	ld hl, Data_55bfe
	push hl
	call PlaceString
	pop bc
Func_5582b: ; 5582b (15:582b)
	pop af
	call GetSRAMBank
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, $3b0
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $6ea7
	add hl, de
	reg16swap de, hl
	ld hl, $35c
	add hl, sp
	ld bc, $7
	call FarCopyVideoData
	ld hl, Data_55c00
	push hl
	call PlaceString
	pop bc
	ld hl, $38f
	add hl, sp
	ld c, [hl]
	ld b, $0
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, Data_55c04
	push hl
	call PlaceString
	pop bc
	ld hl, $35c
	add hl, sp
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call Func_57e8d
	pop af
	call GetSRAMBank
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	read_hl_from_sp_plus $3aa
	ld a, l
	and $f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $6ef6
	add hl, de
	reg16swap de, hl
	ld hl, $35c
	add hl, sp
	ld bc, $5
	call FarCopyVideoData
	ld de, Data_55c06
	ld hl, $903
	call PlaceStringDEatCoordHL
	ld hl, $35c
	add hl, sp
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call Func_57e8d
	pop af
	call GetSRAMBank
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld e, a
	push de
	ld hl, $3aa
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $3ff9
	add hl, de
	reg16swap de, hl
	ld hl, $35c
	add hl, sp
	call LiteralStringInTree
	ld e, $5
	ld a, $9
	call SetStringStartState
	ld hl, $35c
	add hl, sp
	push hl
	ld hl, Data_55c0c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
	push de
	ld a, e
	call GetSRAMBank
	pop de
	ld hl, $386
	add hl, sp
	ld a, [hl]
	cp $ab
	jp c, Func_559c2
	ld hl, $386
	add hl, sp
	ld a, [hl]
	cp $af
	jp nc, Func_559c2
	push de
	ld hl, $388
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $7b84
	add hl, de
	push hl
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop hl
	push hl
	reg16swap de, hl
	inc de
	ld hl, sp+$e
	ld bc, $350
	call CopyFromDEtoHL
	pop hl
	push hl
	inc hl
	push hl
	ld hl, $0
	call WriteHLToSPPlus8
	ld c, $0
	pop hl
Func_5595f: ; 5595f (15:595f)
	ld a, c
	cp $40
	jp nc, Func_5597b
	push hl
	ld a, [hl]
	or a
	jp nz, Func_55975
	call GetHLAtSPPlus8
	ld de, $10
	add hl, de
	call WriteHLToSPPlus8
Func_55975: ; 55975 (15:5975)
	inc c
	pop hl
	inc hl
	jp Func_5595f

Func_5597b: ; 5597b (15:597b)
	set_farcall_addrs_hli FixAndLoadPoncotPicWithTilemap
	call GetHLAtSPPlus6
	ld c, l
	ld b, h
	ld hl, sp+$4e
	reg16swap de, hl
	ld hl, $89b0
	call FarCall
	call WaitVideoTransfer
	pop hl
	ld a, [hl]
	pop de
	push af
	ld a, e
	call GetSRAMBank
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	ld hl, sp+$c
	reg16swap de, hl
	ld hl, $2
	call FarCall
	call WaitVideoTransfer
	pop af
	jp Func_55a26

Func_559c2: ; 559c2 (15:59c2)
	set_farcall_addrs_hli AllocateMemory
	ld hl, $400
	call FarCall
	push hl
	reg16swap de, hl
	ld hl, $388
	add hl, sp
	ld a, [hl]
	dec a
	ld bc, $89b0
	call DecompressRequestRoboponPic
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_7c8a
	pop hl
	push hl
	reg16swap de, hl
	ld hl, $2
	ld c, $2
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	set_farcall_addrs_hli Func_615be
	ld hl, $386
	add hl, sp
	ld a, [hl]
	dec a
	call FarCall
Func_55a26: ; 55a26 (15:5a26)
	push af
	set_farcall_addrs_hli Func_613fc
	pop af
	ld e, a
	call FarCall
	call Func_55723
	call Func_1fbe
	call WaitVideoTransfer
	read_hl_from_sp_plus $396
	ld c, l
	ld b, h
	read_hl_from_sp_plus $394
	reg16swap de, hl
	ld hl, $10b
	call Func_57cf7
	read_hl_from_sp_plus $39a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $398
	reg16swap de, hl
	ld hl, $10f
	call Func_57cf7
	ld de, Data_55c13
	ld hl, $10f
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $394
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $20c
	call Func_2230
	ld hl, Data_55c15
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $396
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	read_hl_from_sp_plus $398
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $210
	call Func_2230
	ld hl, Data_55c17
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $39a
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, $37e
	add hl, sp
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $39f
	add hl, bc
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_55ae2
	ld de, $3e7
Func_55ae2: ; 55ae2 (15:5ae2)
	push de
	ld de, Data_55c19
	ld hl, $c0b
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $100c
	call Func_2230
	ld hl, $37f
	add hl, sp
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $3a1
	add hl, bc
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_55b13
	ld de, $3e7
Func_55b13: ; 55b13 (15:5b13)
	push de
	ld de, Data_55c21
	ld hl, $c0d
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $100e
	call Func_2230
	ld hl, $380
	add hl, sp
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $3a3
	add hl, bc
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_55b44
	ld de, $3e7
Func_55b44: ; 55b44 (15:5b44)
	push de
	ld de, Data_55c2a
	ld hl, $c0f
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $1010
	call Func_2230
	ld hl, $3ae
	add hl, sp
	ld a, [hl]
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $38d
	add hl, sp
	ld l, [hl]
	ld h, a
	call Func_270a
	reg16swap de, hl
	ld hl, $38d
	add hl, sp
	ld a, [hl]
	cp $63
	jp nz, Func_55b8a
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	ld hl, sp+$6
	call PutLongFromStackToHL
	jp Func_55ba5

Func_55b8a: ; 55b8a (15:5b8a)
	reg16swap de, hl
	ld bc, $0
	push bc
	push hl
	read_hl_from_sp_plus $3a0
	ld bc, $0
	push bc
	push hl
	call SubtractLongsFromStack
	ld hl, sp+$6
	call PutLongFromStackToHL
Func_55ba5: ; 55ba5 (15:5ba5)
	ld e, $6
	ld a, $9
	call SetStringStartState
	ld hl, sp+$6
	call PutLongFromHLOnStack
	read_hl_from_sp_plus $3a0
	ld bc, $0
	push bc
	push hl
	call AddLongsFromStack
	ld hl, Data_55c32
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld e, $8
	ld a, $b
	call SetStringStartState
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_55c3a
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	callba_hli WaitAorBButtonOverworld_17a44
	ld hl, $3d8
	add hl, sp
	ld sp, hl
	ret

Data_55bfe:
	db " ", $0

Data_55c00:
	db ":LV", $0

Data_55c04:
	db " ", $0

Data_55c06:
	db "タイフﾟ:", $0

Data_55c0c:
	db "CPU:"
	TX_CALL
	db $0

Data_55c13:
	db "E", $0

Data_55c15:
	db "/", $0

Data_55c17:
	db "/", $0

Data_55c19:
	db "(こうけﾞき)", $0

Data_55c21:
	db "(ほﾞうきﾞょ)", $0

Data_55c2a:
	db "(すはﾞやさ)", $0

Data_55c32:
	db "E*P:"
	TX_UNUM
	db $0

Data_55c3a:
	db "(あと)"
	TX_SNUM
	db $0

Func_55c41:
	push hl
	ld hl, $168
	call Func_57e30
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, $1412
	ld hl, $0
	call BackUpTileMapRectangle
	pop de
	pop hl
	push de
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $2
	or h
	jp z, Func_55ca8
	ld a, l
	dec a
	or h
	jp z, Func_55c94
	ld a, l
	or h
	jp nz, Func_55cb9
	set_farcall_addrs_hli Func_1488e
	ld hl, $0
	call FarCall
	jp Func_55cb9

Func_55c94: ; 55c94 (15:5c94)
	set_farcall_addrs_hli Func_152e4
	ld hl, $0
	call FarCall
	jp Func_55cb9

Func_55ca8: ; 55ca8 (15:5ca8)
	set_farcall_addrs_hli Func_148ae
	ld hl, $0
	call FarCall
Func_55cb9: ; 55cb9 (15:5cb9)
	pop de
	ld a, [wc317]
	or a
	jp nz, Func_55cd7
	push de
	ld c, e
	ld b, d
	ld de, $1412
	ld hl, $0
	call Func_2323
	pop hl
	call Func_57e41
	ld hl, $8000
	jp Func_55ce1

Func_55cd7: ; 55cd7 (15:5cd7)
	reg16swap de, hl
	call Func_57e41
	ld hl, -1
Func_55ce1: ; 55ce1 (15:5ce1)
	ret

Func_55ce2:
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $2
	or h
	jp z, Func_55d44
	ld a, l
	dec a
	or h
	jp z, Func_55d1b
	ld a, l
	or h
	jp nz, Func_55d55
	set_farcall_addrs_hli Func_148ce
	ld hl, $0
	call FarCall
	jp Func_55d55

Func_55d1b: ; 55d1b (15:5d1b)
	set_farcall_addrs_hli DisplayPartyMenu_
	xor a
	call FarCall
	ld a, l
	and h
	inc a
	jp z, Func_55d41
	set_farcall_addrs_hli Func_148f4
	ld hl, $0
	call FarCall
Func_55d41: ; 55d41 (15:5d41)
	jp Func_55d55

Func_55d44: ; 55d44 (15:5d44)
	set_farcall_addrs_hli Func_1491a
	ld hl, $0
	call FarCall
Func_55d55: ; 55d55 (15:5d55)
	call Func_3af6
	ld hl, $8000
	ret

Func_55d5c:
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $2
	or h
	jp z, Func_55dbe
	ld a, l
	dec a
	or h
	jp z, Func_55d95
	ld a, l
	or h
	jp nz, Func_55dcf
	set_farcall_addrs_hli Func_15304
	ld hl, $0
	call FarCall
	jp Func_55dcf

Func_55d95: ; 55d95 (15:5d95)
	set_farcall_addrs_hli DisplayPartyMenu_
	xor a
	call FarCall
	ld a, l
	and h
	inc a
	jp z, Func_55dbb
	set_farcall_addrs_hli Func_15330
	ld hl, $0
	call FarCall
Func_55dbb: ; 55dbb (15:5dbb)
	jp Func_55dcf

Func_55dbe: ; 55dbe (15:5dbe)
	set_farcall_addrs_hli Func_1535c
	ld hl, $0
	call FarCall
Func_55dcf: ; 55dcf (15:5dcf)
	call Func_3af6
	ld hl, $8000
	ret

Func_55dd6: ; 55dd6 (15:5dd6)
	push hl
	add sp, -$24
	push de
	read_hl_from_sp_plus $28
	push hl
	read_hl_from_sp_plus $2a
	ld [hl], $81
	inc hl
	write_hl_to_sp_plus $2a
	set_farcall_addrs_hli Func_7dfc
	pop hl
	pop de
	push hl
	ld a, e
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	ld hl, sp+$9
	ld a, [hl]
	cp $a
	jp nc, Func_55e49
	set_farcall_addrs_hli Func_17975
	ld c, $1
	read_hl_from_sp_plus $28
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	call FarCall
	read_hl_from_sp_plus $28
	inc hl
	write_hl_to_sp_plus $28
	read_hl_from_sp_plus $28
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $28
	read_hl_from_sp_plus $28
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $28
	jp Func_55e7b

Func_55e49: ; 55e49 (15:5e49)
	set_farcall_addrs_hli Func_17975
	ld c, $2
	read_hl_from_sp_plus $28
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	call FarCall
	read_hl_from_sp_plus $28
	inc hl
	inc hl
	write_hl_to_sp_plus $28
	read_hl_from_sp_plus $28
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $28
Func_55e7b: ; 55e7b (15:5e7b)
	ld bc, $6
	ld hl, sp+$3
	push hl
	read_hl_from_sp_plus $2a
	pop de
	call CopyFromDEtoHL
	pop hl
	call FindFirstNonzero
	ld c, l
	ld b, h
	push bc
	read_hl_from_sp_plus $28
	call FindFirstNonzero
	ld c, l
	ld b, h
	read_hl_from_sp_plus $28
	add hl, bc
	write_hl_to_sp_plus $28
	pop bc
Func_55ea3: ; 55ea3 (15:5ea3)
	ld l, c
	ld h, b
	ld de, $a
	call CompareHLtoDE
	jp nc, Func_55ebd
	read_hl_from_sp_plus $26
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $26
	inc bc
	jp Func_55ea3

Func_55ebd: ; 55ebd (15:5ebd)
	read_hl_from_sp_plus $26
	ld [hl], $0
	read_hl_from_sp_plus $26
	reg16swap de, hl
	add sp, $26
	reg16swap de, hl
	ret

Func_55ed2: ; 55ed2 (15:5ed2)
	push hl
	push de
	push bc
	ld a, $19
	ld [wFarCallDestBank], a
	push bc
	ld a, c
	cp $1
	jp z, Func_55ef5
	or a
	jp nz, Func_55f03
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	jp Func_55f03

Func_55ef5: ; 55ef5 (15:5ef5)
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
Func_55f03: ; 55f03 (15:5f03)
	ld hl, $a
	push hl
	call GetHLAtSPPlus10
	ld c, l
	ld b, h
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld e, a
	ld a, $4
	call Func_57ea2
	pop bc
	call GetHLAtSPPlus8
	call FindFirstNonzero
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	add hl, bc
	call WriteHLToSPPlus8
Func_55f26: ; 55f26 (15:5f26)
	ld l, c
	ld h, b
	ld de, $9
	call CompareHLtoDE
	jp nc, Func_55f3e
	call GetHLAtSPPlus8
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus8
	inc bc
	jp Func_55f26

Func_55f3e: ; 55f3e (15:5f3e)
	call GetHLAtSPPlus8
	ld [hl], $80
	inc hl
	call WriteHLToSPPlus8
	set_farcall_addrs_hli Func_17975
	pop bc
	ld a, c
	cp $1
	jp z, Func_55f76
	or a
	jp nz, Func_55f8e
	ld c, $82
	call GetHLAtSPPlus6
	push hl
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld l, [hl]
	ld h, $0
	pop de
	call FarCall
	jp Func_55f8e

Func_55f76: ; 55f76 (15:5f76)
	ld c, $82
	call GetHLAtSPPlus6
	push hl
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld l, [hl]
	ld h, $0
	pop de
	call FarCall
Func_55f8e: ; 55f8e (15:5f8e)
	call GetHLAtSPPlus6
	pop bc
	pop bc
	pop bc
	ret

Func_55f95: ; 55f95 (15:5f95)
	push hl
	push bc
	ld a, $19
	ld [wFarCallDestBank], a
	ld a, c
	cp $2
	jp z, Func_55fc5
	cp $1
	jp z, Func_55fb8
	or a
	jp nz, Func_55fc8
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld e, [hl]
	ld hl, sp+$0
	ld [hl], e
	jp Func_55fc8

Func_55fb8: ; 55fb8 (15:5fb8)
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld e, [hl]
	ld hl, sp+$0
	ld [hl], e
	jp Func_55fc8

Func_55fc5: ; 55fc5 (15:5fc5)
	ld hl, sp+$0
	ld [hl], e
Func_55fc8: ; 55fc8 (15:5fc8)
	ld hl, $8
	push hl
	call GetHLAtSPPlus6
	ld c, l
	ld b, h
	ld hl, sp+$2
	ld e, [hl]
	ld a, $2
	call Func_57ea2
	pop bc
	call GetHLAtSPPlus4
	call FindFirstNonzero
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	add hl, bc
	call WriteHLToSPPlus4
	ld l, c
	ld h, b
	ld de, $7
	call CompareHLtoDE
	jp nc, Func_56015
Func_55ff4: ; 55ff4 (15:5ff4)
	ld l, c
	ld h, b
	ld de, $7
	call CompareHLtoDE
	jp nc, Func_5600c
	call GetHLAtSPPlus4
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus4
	inc bc
	jp Func_55ff4

Func_5600c: ; 5600c (15:600c)
	call GetHLAtSPPlus4
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus4
Func_56015: ; 56015 (15:6015)
	call GetHLAtSPPlus4
	pop bc
	pop bc
	ret

Func_5601b: ; 5601b (15:601b)
	push hl
	push bc
	push bc
	ld a, $19
	ld [wFarCallDestBank], a
	ld hl, sp+$2
	ld a, [hl]
	cp $5
	jp z, Func_5609d
	cp $3
	jp z, Func_5609d
	cp $2
	jp z, Func_56090
	cp $1
	jp nz, Func_560a3
	ld c, $0
	ld hl, sp+$0
	ld [hl], $0
Func_56040: ; 56040 (15:6040)
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nc, Func_5608d
	push bc
	push de
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	add hl, de
	ld e, [hl]
	ld hl, sp+$5
	ld [hl], e
	pop de
	pop bc
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp z, Func_56083
	ld a, c
	cp e
	jp nz, Func_56082
	jp Func_5608d

Func_56082: ; 56082 (15:6082)
	inc c
Func_56083: ; 56083 (15:6083)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_56040

Func_5608d: ; 5608d (15:608d)
	jp Func_560ad

Func_56090: ; 56090 (15:6090)
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
	jp Func_560ad

Func_5609d: ; 5609d (15:609d)
	ld hl, sp+$1
	ld [hl], e
	jp Func_560ad

Func_560a3: ; 560a3 (15:60a3)
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld e, [hl]
	ld hl, sp+$1
	ld [hl], e
Func_560ad: ; 560ad (15:60ad)
	ld hl, $5
	push hl
	call GetHLAtSPPlus8
	ld c, l
	ld b, h
	ld hl, sp+$3
	ld a, [hl]
	and $3f
	dec a
	ld e, a
	xor a
	call Func_57ea2
	pop bc
	call GetHLAtSPPlus6
	call FindFirstNonzero
	ld c, l
	ld b, h
	push bc
	call GetHLAtSPPlus8
	add hl, bc
	call WriteHLToSPPlus8
	ld hl, sp+$4
	ld a, [hl]
	cp $3
	jp z, Func_560e2
	ld hl, sp+$4
	ld a, [hl]
	cp $4
	jp nz, Func_560ee
Func_560e2: ; 560e2 (15:60e2)
	call GetHLAtSPPlus8
	ld [hl], $df
	inc hl
	call WriteHLToSPPlus8
	jp Func_560f7

Func_560ee: ; 560ee (15:60ee)
	call GetHLAtSPPlus8
	ld [hl], $99
	inc hl
	call WriteHLToSPPlus8
Func_560f7: ; 560f7 (15:60f7)
	set_farcall_addrs_hli Func_17975
	ld c, $81
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld b, $6
	call RightShiftHL
	inc hl
	call FarCall
	call GetHLAtSPPlus8
	inc hl
	call WriteHLToSPPlus8
	ld hl, sp+$2
	ld [hl], $0
	pop bc
Func_56125: ; 56125 (15:6125)
	ld de, $4
	ld a, e
	sub c
	ld e, a
	ld a, d
	sbc b
	ld d, a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_5614c
	call GetHLAtSPPlus6
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus6
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_56125

Func_5614c: ; 5614c (15:614c)
	call GetHLAtSPPlus6
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	pop bc
	pop bc
	pop bc
	ret

Func_5615c: ; 5615c (15:615c)
	ld de, Data_56166
	ld hl, $10c
	call PlaceStringDEatCoordHL
	ret

Data_56166:
	db "(のこり)RAM", $0

Func_5616f:
	ld c, l
	ld b, h
	push bc
	ld l, $9
	push hl
	ld c, $7
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld [wc2e9], a
	ld a, [wc2e9]
	cp $3
	jp z, Func_561aa
	cp $2
	jp z, Func_561aa
	cp $1
	jp z, Func_561aa
	or a
	jp nz, Func_561b9
Func_561aa: ; 561aa (15:61aa)
	call Func_1fbe
	call Func_1f30
	call Func_561bd
	call Func_1f7b
	call Func_2009
Func_561b9: ; 561b9 (15:61b9)
	ld hl, $8000
	ret

Func_561bd: ; 561bd (15:61bd)
	set_farcall_addrs_hli Func_1480e
	ld hl, $0
	call FarCall
	ret

Func_561cf:
	push hl
	ld hl, $168
	call Func_57e30
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, $1412
	ld hl, $0
	call BackUpTileMapRectangle
	pop de
	pop bc
	ld hl, $d
	add hl, bc
	ld a, [hl]
	ld a, [wc2e9]
	push af
	push de
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	dec a
	or h
	jp z, Func_56273
	ld a, l
	or h
	jp nz, Func_562d3
	ld a, [wc2e9]
	cp $3
	jp z, Func_5625f
	cp $2
	jp z, Func_5624b
	cp $1
	jp z, Func_56237
	or a
	jp nz, Func_56270
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $2
	call FarCall
	jp Func_56270

Func_56237: ; 56237 (15:6237)
	set_farcall_addrs_hli Func_14aa4
	ld hl, $0
	call FarCall
	jp Func_56270

Func_5624b: ; 5624b (15:624b)
	set_farcall_addrs_hli Func_14a84
	ld hl, $0
	call FarCall
	jp Func_56270

Func_5625f: ; 5625f (15:625f)
	set_farcall_addrs_hli Func_14ac4
	ld hl, $0
	call FarCall
Func_56270: ; 56270 (15:6270)
	jp Func_562d3

Func_56273: ; 56273 (15:6273)
	ld a, [wc2e9]
	cp $3
	jp z, Func_562c2
	cp $2
	jp z, Func_562ae
	cp $1
	jp z, Func_5629a
	or a
	jp nz, Func_562d3
	callba_hli Func_147e8
	jp Func_562d3

Func_5629a: ; 5629a (15:629a)
	set_farcall_addrs_hli Func_14ae4
	ld hl, $0
	call FarCall
	jp Func_562d3

Func_562ae: ; 562ae (15:62ae)
	set_farcall_addrs_hli Func_14b04
	ld hl, $0
	call FarCall
	jp Func_562d3

Func_562c2: ; 562c2 (15:62c2)
	set_farcall_addrs_hli Func_14b24
	ld hl, $0
	call FarCall
Func_562d3: ; 562d3 (15:62d3)
	pop de
	push de
	ld c, e
	ld b, d
	ld de, $1412
	ld hl, $0
	call Func_2323
	pop hl
	call Func_57e41
	pop af
	ld [wc2e9], a
	ld hl, $8000
	ret

Func_562ec:
	push hl
	add sp, -$18
	ld hl, sp+$18
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld hl, sp+$4
	ld [hl], a
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	ld hl, sp+$3
	ld [hl], e
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	set_farcall_addrs_hli Func_52326
	ld hl, sp+$3
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_56340
	ld hl, -1
	jp Func_5664b

Func_56340: ; 56340 (15:6340)
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld c, a
	ld de, -1
	ld hl, sp+$3
	ld a, [hl]
	cp $b
	jp z, Func_56481
	cp $a
	jp z, Func_56423
	cp $9
	jp z, Func_563c3
	cp $7
	jp nz, Func_564dc
	ld a, [wc9a2]
	or a
	jp nz, Func_56374
	ld a, c
	call GetSRAMBank
	ld hl, -1
	jp Func_5664b

Func_56374: ; 56374 (15:6374)
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wc98e
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld a, c
	call GetSRAMBank
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	ld l, a
	ld h, $0
	reg16swap de, hl
	push de
	ld a, e
	dec a
	or d
	jp nz, Func_563bf
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld c, a
	push bc
	ld c, $0
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	call Func_5601b
	pop bc
	ld a, c
	call GetSRAMBank
Func_563bf: ; 563bf (15:63bf)
	pop de
	jp Func_564dc

Func_563c3: ; 563c3 (15:63c3)
	ld a, [wc9b7]
	or a
	jp nz, Func_563d4
	ld a, c
	call GetSRAMBank
	ld hl, -1
	jp Func_5664b

Func_563d4: ; 563d4 (15:63d4)
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld a, c
	call GetSRAMBank
	set_farcall_addrs_hli Func_4ed70
	ld e, $2
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	ld l, a
	ld h, $0
	reg16swap de, hl
	push de
	ld a, e
	dec a
	or d
	jp nz, Func_5641f
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld c, a
	push bc
	ld c, $0
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$9
	call Func_55f95
	pop bc
	ld a, c
	call GetSRAMBank
Func_5641f: ; 5641f (15:641f)
	pop de
	jp Func_564dc

Func_56423: ; 56423 (15:6423)
	ld a, [wc9a2]
	cp $14
	jp nc, Func_56478
	push bc
	ld c, $2
	ld hl, sp+$6
	ld e, [hl]
	ld hl, sp+$7
	call Func_5601b
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, $cd10
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	pop bc
	ld a, c
	call GetSRAMBank
	set_farcall_addrs_hli Func_4ec2b
	ld e, $3
	ld hl, sp+$4
	ld a, [hl]
	call FarCall
	ld l, a
	ld h, $0
	reg16swap de, hl
	jp Func_5647e

Func_56478: ; 56478 (15:6478)
	push de
	ld a, c
	call GetSRAMBank
	pop de
Func_5647e: ; 5647e (15:647e)
	jp Func_564dc

Func_56481: ; 56481 (15:6481)
	ld a, [wc9b7]
	cp $14
	jp nc, Func_564d6
	push bc
	ld c, $1
	ld hl, sp+$6
	ld e, [hl]
	ld hl, sp+$7
	call Func_55f95
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, $cc34
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	pop bc
	ld a, c
	call GetSRAMBank
	set_farcall_addrs_hli Func_4ed70
	ld e, $3
	ld hl, sp+$4
	ld a, [hl]
	call FarCall
	ld l, a
	ld h, $0
	reg16swap de, hl
	jp Func_564dc

Func_564d6: ; 564d6 (15:64d6)
	push de
	ld a, c
	call GetSRAMBank
	pop de
Func_564dc: ; 564dc (15:64dc)
	push de
	ld hl, $64
	call Func_57e30
	pop de
	push hl
	push de
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	pop de
	push de
	ld a, e
	dec a
	or d
	jp nz, Func_56548
	ld hl, $5
	push hl
	ld bc, $14
	ld de, $d
	ld hl, $0
	call Func_57e52
	pop bc
	ld hl, sp+$9
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call Func_57e8d
	ld hl, sp+$7
	ld a, [hl]
	cp $b
	jp z, Func_56530
	cp $a
	jp nz, Func_5653c
Func_56530: ; 56530 (15:6530)
	ld de, Data_56656
	ld hl, -1
	call PlaceStringDEatCoordHL
	jp Func_56545

Func_5653c: ; 5653c (15:653c)
	ld de, Data_56662
	ld hl, -1
	call PlaceStringDEatCoordHL
Func_56545: ; 56545 (15:6545)
	jp Func_5657b

Func_56548: ; 56548 (15:6548)
	ld hl, $5
	push hl
	ld bc, $14
	ld de, $d
	ld hl, $0
	call Func_57e52
	pop bc
	ld hl, sp+$7
	ld a, [hl]
	cp $b
	jp z, Func_56566
	cp $a
	jp nz, Func_56572
Func_56566: ; 56566 (15:6566)
	ld de, Data_5666d
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_5657b

Func_56572: ; 56572 (15:6572)
	ld de, Data_56680
	ld hl, $10e
	call PlaceStringDEatCoordHL
Func_5657b: ; 5657b (15:657b)
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	pop de
	push de
	ld a, e
	dec a
	or d
	jp nz, Func_56625
	xor a
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
	ld hl, sp+$7
	ld a, [hl]
	cp $b
	jp z, Func_565f9
	cp $a
	jp z, Func_565e3
	cp $9
	jp z, Func_565cd
	cp $7
	jp nz, Func_5660c
	set_farcall_addrs_hli Func_4ec2b
	ld e, $1
	ld hl, sp+$8
	ld a, [hl]
	call FarCall
	jp Func_5660c

Func_565cd: ; 565cd (15:65cd)
	set_farcall_addrs_hli Func_4ed70
	ld e, $1
	ld hl, sp+$8
	ld a, [hl]
	call FarCall
	jp Func_5660c

Func_565e3: ; 565e3 (15:65e3)
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	jp Func_5660c

Func_565f9: ; 565f9 (15:65f9)
	set_farcall_addrs_hli Func_4ed70
	ld e, $0
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
Func_5660c: ; 5660c (15:660c)
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_56625: ; 56625 (15:6625)
	call WaitAorBButtonOverworld_57ec5
	pop de
	pop hl
	push de
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call Func_2323
	pop hl
	call Func_57e41
	pop de
	ld a, e
	and d
	inc a
	jp nz, Func_56648
	ld hl, -1
	jp Func_5664b

Func_56648: ; 56648 (15:6648)
	ld hl, $8000
Func_5664b: ; 5664b (15:664b)
	reg16swap de, hl
	add sp, $1a
	reg16swap de, hl
	ret

Data_56656:
	db "(を ひきたﾞしたよ)", $0

Data_56662:
	db "(を ほかんしたよ)", $0

Data_5666d:
	db "(これいしﾞょう ひきたﾞせないよ)", $0

Data_56680:
	db "(これいしﾞょう ほかんてﾞきないよ)", $0

Func_56694:
	push hl
	set_farcall_addrs_hli Func_fbbb5
	pop hl
	call FarCall
	ld hl, $4000
	ret

Func_566a8:
	ret

Data_566a9:
	dr $566a9, $566fe

Func_566fe: ; 566fe (15:66fe)
	add sp, -$6a
	ld a, [wSystemType]
	cp $11
	jp nz, Func_5671e
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_56732

Func_5671e: ; 5671e (15:671e)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_56732: ; 56732 (15:6732)
	ld hl, $4
	push hl
	ld bc, $c
	ld de, $4
	ld hl, $0
	call Func_57e52
	pop bc
	ld hl, $7
	push hl
	ld bc, $8
	ld de, $a
	ld hl, $0
	call Func_57e52
	pop bc
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, wc310
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $1d
	add hl, de
	ld e, [hl]
	push de
	ld hl, wc310
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$3e
	call GetRobotOrTrainerBaseStats
	read_hl_from_sp_plus $43
	pop de
	pop af
	push de
	push hl
	push af
	ld hl, $6
	push hl
	ld hl, sp+$c
	ld c, l
	ld b, h
	ld a, [wc310]
	ld e, a
	ld a, $3
	call Func_57ea2
	pop bc
	ld hl, sp+$a
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call Func_57e8d
	ld hl, sp+$a
	call FindFirstNonzero
	ld a, l
	sub $4
	or h
	jp nz, Func_567d1
	ld hl, Data_56981
	push hl
	call PlaceString
	pop bc
Func_567d1: ; 567d1 (15:67d1)
	ld hl, Data_56983
	push hl
	call PlaceString
	pop bc
	pop af
	call GetSRAMBank
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, wc310
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $b
	add hl, de
	ld a, [hl]
	push af
	ld e, a
	ld hl, sp+$2a
	call Func_241f
	pop af
	ld e, a
	ld hl, sp+$a
	ld c, $2
	call Func_55f95
	ld hl, sp+$a
	ld c, l
	ld b, h
	ld de, $5
	ld hl, $1
	call Func_57e8d
	pop af
	call GetSRAMBank
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	set_farcall_addrs_hli Func_16104
	ld e, $0
	ld a, [wc310]
	call FarCall
	ld hl, sp+$7
	ld [hl], a
	ld e, $1
	ld a, [wc310]
	call FarCall
	ld hl, sp+$8
	ld [hl], a
	ld e, $2
	ld a, [wc310]
	call FarCall
	ld hl, sp+$9
	ld [hl], a
	ld a, $19
	ld [wFarCallDestBank], a
	ld hl, sp+$7
	ld a, [hl]
	or a
	jp nz, Func_5686e
	ld de, Data_56985
	ld hl, $10b
	call PlaceStringDEatCoordHL
	jp Func_568b9

Func_5686e: ; 5686e (15:686e)
	ld hl, sp+$6
	ld [hl], $0
Func_56872: ; 56872 (15:6872)
	ld hl, sp+$6
	ld a, [hl]
	cp $3
	jp nc, Func_568b9
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, sp+$7
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_568af
	ld c, $5
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, sp+$7
	add hl, de
	ld e, [hl]
	ld hl, sp+$a
	call Func_5601b
	ld hl, sp+$a
	ld c, l
	ld b, h
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, $b
	add hl, de
	reg16swap de, hl
	ld hl, $1
	call Func_57e8d
Func_568af: ; 568af (15:68af)
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
	jp Func_56872

Func_568b9: ; 568b9 (15:68b9)
	pop af
	call GetSRAMBank
	pop hl
	pop de
	inc l
	dec l
	jp nz, Func_568d0
	ld de, Data_5698d
	ld hl, $701
	call PlaceStringDEatCoordHL
	jp Func_56902

Func_568d0: ; 568d0 (15:68d0)
	ld a, e
	cp l
	jp nc, Func_568f9
	push de
	push hl
	ld de, Data_56996
	ld hl, $701
	call PlaceStringDEatCoordHL
	pop hl
	pop de
	ld h, $0
	ld d, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	push hl
	ld hl, Data_569a1
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_56902

Func_568f9: ; 568f9 (15:68f9)
	ld de, Data_569a4
	ld hl, $701
	call PlaceStringDEatCoordHL
Func_56902: ; 56902 (15:6902)
	ld de, Data_569ac
	ld hl, $103
	call PlaceStringDEatCoordHL
	ld hl, sp+$31
	ld a, [hl]
	add a
	ld d, a
	add a
	add a
	add d
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, $706
	call Func_2230
	ld hl, Data_569b1
	push hl
	call PlaceString
	pop bc
	ld de, Data_569b3
	ld hl, $c03
	call PlaceStringDEatCoordHL
	ld hl, sp+$32
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_569bc
	ld hl, $c05
	call PlaceStringDEatCoordHL
	ld hl, sp+$33
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_569c6
	ld hl, $c07
	call PlaceStringDEatCoordHL
	ld hl, sp+$34
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_569cf
	ld hl, $109
	call PlaceStringDEatCoordHL
	ld de, Data_569d3
	ld hl, $909
	call PlaceStringDEatCoordHL
	add sp, $6a
	ret

Data_56981:
	db " ", $0

Data_56983:
	db ":", $0

Data_56985:
	db "ソフト(なし)", $0

Data_5698d:
	db "(しんかしない)", $0

Data_56996:
	db "(しんかする あと)", $0

Data_569a1:
	TX_SNUM
	db $0

Data_569a4:
	db "(ひかってる)", $0

Data_569ac:
	db "ハﾟーツ", $0

Data_569b1:
	db "M", $0

Data_569b3:
	db "(こうけﾞき )", $0

Data_569bc:
	db "(ほﾞうきﾞょ )", $0

Data_569c6:
	db "(すはﾞやさ )", $0

Data_569cf:
	db "ソフト", $0

Data_569d3:
	db "(わさﾞ)", $0

Func_569d9: ; 569d9 (15:69d9)
	push hl
	add sp, -$1c
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	read_hl_from_sp_plus $20
	ld de, wc9a3
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	ld e, $0
	ld c, e
	ld hl, sp+$2
	ld [hl], c
	ld hl, sp+$3
	ld [hl], c
	ld a, [wc9b7]
	or a
	jp z, Func_56a21
	ld hl, sp+$4
	ld e, [hl]
	ld hl, sp+$5
	call Func_241f
	ld hl, sp+$15
	ld a, [hl]
	ld hl, sp+$3
	ld [hl], a
	ld hl, sp+$16
	ld a, [hl]
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$17
	ld c, [hl]
	ld hl, sp+$14
	ld a, [hl]
	add a
	ld d, a
	add a
	add a
	add d
	ld e, a
Func_56a21: ; 56a21 (15:6a21)
	pop af
	push de
	push bc
	call GetSRAMBank
	ld hl, $8
	push hl
	ld bc, $a
	ld de, $a
	ld hl, $a
	call Func_57e52
	pop bc
	ld de, Data_56a9c
	ld hl, $b0b
	call PlaceStringDEatCoordHL
	ld hl, sp+$5
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_56aa5
	ld hl, $b0d
	call PlaceStringDEatCoordHL
	ld hl, sp+$4
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_56aaf
	ld hl, $b0f
	call PlaceStringDEatCoordHL
	pop bc
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld de, Data_56ab8
	ld hl, $b10
	call PlaceStringDEatCoordHL
	pop de
	ld c, e
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_56abd
	push hl
	call PlaceString
	pop bc
	add sp, $1e
	ret

Data_56a9c:
	db "(こうけﾞき )", $0

Data_56aa5:
	db "(ほﾞうきﾞょ )", $0

Data_56aaf:
	db "(すはﾞやさ )", $0

Data_56ab8:
	db "RAM:", $0

Data_56abd:
	db "M", $0

Func_56abf: ; 56abf (15:6abf)
	push hl
	add sp, -$18
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	read_hl_from_sp_plus $1c
	ld de, wc9a3
	add hl, de
	ld l, [hl]
	ld h, $0
	write_hl_to_sp_plus $1c
	read_hl_from_sp_plus $1c
	ld e, l
	ld hl, sp+$2
	call Func_241f
	pop af
	call GetSRAMBank
	ld hl, sp+$10
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, $607
	call Func_2230
	ld hl, sp+$11
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, $609
	call Func_2230
	ld hl, sp+$12
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, $60b
	call Func_2230
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $50d
	call Func_2230
	ld hl, Data_56b33
	push hl
	call PlaceString
	pop bc
	add sp, $1a
	ret

Data_56b33:
	db "M", $0

Func_56b35: ; 56b35 (15:6b35)
	push af
	callba_hli AllocateMonsterStruct
	set_farcall_addrs_hli Func_dbf5
	ld c, $0
	ld a, [wc310]
	ld e, a
	xor a
	call FarCall
	pop af
	or a
	jp nz, Func_56b77
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_54384)
	ld de, Data_54384
	ld hl, Data_54365
	call FarCall
	jp Func_56b8d

Func_56b77: ; 56b77 (15:6b77)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_54393)
	ld de, Data_54393
	ld hl, Data_54365
	call FarCall
Func_56b8d: ; 56b8d (15:6b8d)
	callba_hli FreeMonsterStruct
	ret

Data_56b9c:
	dr $56b9c, $56ba1

Func_56ba1: ; 56ba1 (15:6ba1)
	push hl
	push de
	add sp, -$3e
	push bc
	read_hl_from_sp_plus $44
	push hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $44
	ld a, l
	or h
	jp nz, Func_56bc6
	ld hl, $0
	jp Func_56bc9

Func_56bc6: ; 56bc6 (15:6bc6)
	ld hl, $2f
Func_56bc9: ; 56bc9 (15:6bc9)
	add hl, bc
	reg16swap de, hl
	ld hl, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$2a
	call Func_241f
	read_hl_from_sp_plus $44
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus6
	pop hl
	pop bc
	push hl
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld a, [hl]
	cp $fe
	jp z, Func_56c23
	or a
	jp nz, Func_56c8f
	read_hl_from_sp_plus $44
	ld de, Data_56b9c
	call CopyUntilNull
	write_hl_to_sp_plus $44
	jp Func_56d4b

Func_56c23: ; 56c23 (15:6c23)
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, de
	inc hl
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus4
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$17
	call Func_248f
	ld hl, sp+$31
	ld a, [hl]
	cp $91
	jp nz, Func_56c6d
	ld hl, sp+$17
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	ld hl, sp+$32
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	jp Func_56c8c

Func_56c6d: ; 56c6d (15:6c6d)
	ld hl, sp+$31
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	ld hl, sp+$17
	push hl
	read_hl_from_sp_plus $46
	dec hl
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
Func_56c8c: ; 56c8c (15:6c8c)
	jp Func_56d4b

Func_56c8f: ; 56c8f (15:6c8f)
	push bc
	ld a, BANK(GFX_64c7d)
	ld [wFarCallDestBank], a
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	reg16swap de, hl
	ld hl, sp+$6
	ld bc, $13
	call FarCopyVideoData
	ld hl, sp+$6
	call FindFirstNonzero
	ld a, l
	pop bc
	cp $5
	jp nc, Func_56cf1
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld a, [hl]
	cp $5e
	jp c, Func_56d03
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld a, [hl]
	cp $61
	jp nc, Func_56d03
Func_56cf1: ; 56cf1 (15:6cf1)
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	jp Func_56d4b

Func_56d03: ; 56d03 (15:6d03)
	ld hl, sp+$31
	ld a, [hl]
	cp $91
	jp nz, Func_56d2c
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	ld hl, sp+$32
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	jp Func_56d4b

Func_56d2c: ; 56d2c (15:6d2c)
	ld hl, sp+$31
	push hl
	read_hl_from_sp_plus $46
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $46
	dec hl
	pop de
	call CopyUntilNull
	write_hl_to_sp_plus $44
Func_56d4b: ; 56d4b (15:6d4b)
	pop hl
	call FindFirstNonzero
	ld c, l
	ld b, h
	ld a, [wc2fa]
	or a
	jp nz, Func_56d72
Func_56d58: ; 56d58 (15:6d58)
	ld l, c
	ld h, b
	ld de, $8
	call CompareHLtoDE
	jp nc, Func_56d72
	read_hl_from_sp_plus $42
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $42
	inc bc
	jp Func_56d58

Func_56d72: ; 56d72 (15:6d72)
	read_hl_from_sp_plus $42
	ld [hl], $0
	read_hl_from_sp_plus $42
	reg16swap de, hl
	add sp, $42
	reg16swap de, hl
	ret

Func_56d87: ; 56d87 (15:6d87)
	ld c, e
	ld de, $0
	jp Func_56ba1

INCLUDE "engine/save.asm"

Func_5712f: ; 5712f (15:712f)
	push hl
	add sp, -$12
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld c, a
	read_hl_from_sp_plus $14
	ld de, wc98e
	add hl, de
	ld a, [hl]
	push af
	push bc
	and $3f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_64082
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	ld bc, $11
	call FarCopyVideoData
	pop bc
	ld a, c
	call GetSRAMBank
	ld e, $7
	ld a, $6
	call SetStringStartState
	pop af
	rlca
	rlca
	and $3
	inc a
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	ld hl, Data_571bb
	push hl
	call PlaceString
	pop bc
	pop bc
	pop af
	push af
	call GetHLAtSPPlus10
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld a, l
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, $509
	call Func_2230
	pop af
	read_hl_from_sp_plus $c
	ld e, a
	ld d, $0
	call MultiplyHLbyDE
	ld a, l
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, $50b
	call Func_2230
	add sp, $14
	ret

Data_571bb:
	TX_SNUM
	db "M", $0

Func_571bf:
	push hl
	push de
	add sp, -$18
	push bc
	read_hl_from_sp_plus $1e
	ld de, Init
	call DivideHLByDESigned
	ld a, l
	ld hl, sp+$16
	ld [hl], a
	read_hl_from_sp_plus $1e
	reg16swap de, hl
	ld hl, sp+$16
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld a, e
	sub l
	ld e, a
	ld a, d
	sbc h
	ld d, a
	ld hl, sp+$15
	ld [hl], e
	ld hl, sp+$16
	ld a, [hl]
	and $3f
	ld hl, sp+$16
	ld [hl], a
	ld hl, sp+$15
	ld a, [hl]
	and $3f
	ld hl, sp+$15
	ld [hl], a
	ld hl, sp+$1a
	ld a, [hl]
	and $3f
	ld hl, sp+$1a
	ld [hl], a
	pop bc
	ld a, c
	or b
	jp nz, Func_5720f
	ld hl, $1
	jp Func_5732a

Func_5720f: ; 5720f (15:720f)
	ld a, [hSRAMBank]
	push af
	push bc
	ld a, $19
	ld [wFarCallDestBank], a
	ld a, $3
	call GetSRAMBank
	pop hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $13
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$15
	ld [hl], a
	ld hl, sp+$a
	ld a, [hl]
	ld hl, sp+$16
	ld [hl], a
	ld hl, sp+$b
	ld a, [hl]
	ld hl, sp+$17
	ld [hl], a
	ld hl, sp+$17
	ld a, [hl]
	or a
	jp nz, Func_5729d
	ld hl, sp+$14
	ld a, [hl]
	ld hl, sp+$15
	cp [hl]
	jp nz, Func_57279
	ld hl, sp+$13
	ld a, [hl]
	ld hl, sp+$16
	cp [hl]
	jp z, Func_57270
	ld hl, sp+$18
	ld a, [hl]
	ld hl, sp+$16
	cp [hl]
	jp nz, Func_57276
Func_57270: ; 57270 (15:7270)
	ld hl, $1
	jp Func_5732a

Func_57276: ; 57276 (15:7276)
	jp Func_5729a

Func_57279: ; 57279 (15:7279)
	ld hl, sp+$14
	ld a, [hl]
	ld hl, sp+$16
	cp [hl]
	jp nz, Func_5729a
	ld hl, sp+$13
	ld a, [hl]
	ld hl, sp+$15
	cp [hl]
	jp z, Func_57294
	ld hl, sp+$18
	ld a, [hl]
	ld hl, sp+$15
	cp [hl]
	jp nz, Func_5729a
Func_57294: ; 57294 (15:7294)
	ld hl, $1
	jp Func_5732a

Func_5729a: ; 5729a (15:729a)
	jp Func_57309

Func_5729d: ; 5729d (15:729d)
	ld c, $0
Func_5729f: ; 5729f (15:729f)
	ld a, c
	cp $3
	jp nc, Func_572c1
	ld e, c
	ld d, $0
	ld hl, sp+$15
	add hl, de
	ld a, [hl]
	ld hl, sp+$14
	cp [hl]
	jp nz, Func_572bd
	ld e, c
	ld d, $0
	ld hl, sp+$15
	add hl, de
	ld [hl], $ff
	jp Func_572c1

Func_572bd: ; 572bd (15:72bd)
	inc c
	jp Func_5729f

Func_572c1: ; 572c1 (15:72c1)
	ld c, $0
Func_572c3: ; 572c3 (15:72c3)
	ld a, c
	cp $3
	jp nc, Func_572e5
	ld e, c
	ld d, $0
	ld hl, sp+$15
	add hl, de
	ld a, [hl]
	ld hl, sp+$13
	cp [hl]
	jp nz, Func_572e1
	ld e, c
	ld d, $0
	ld hl, sp+$15
	add hl, de
	ld [hl], $ff
	jp Func_572e5

Func_572e1: ; 572e1 (15:72e1)
	inc c
	jp Func_572c3

Func_572e5: ; 572e5 (15:72e5)
	ld c, $0
Func_572e7: ; 572e7 (15:72e7)
	ld a, c
	cp $3
	jp nc, Func_57309
	ld e, c
	ld d, $0
	ld hl, sp+$15
	add hl, de
	ld a, [hl]
	ld hl, sp+$18
	cp [hl]
	jp nz, Func_57305
	ld e, c
	ld d, $0
	ld hl, sp+$15
	add hl, de
	ld [hl], $ff
	jp Func_57309

Func_57305: ; 57305 (15:7305)
	inc c
	jp Func_572e7

Func_57309: ; 57309 (15:7309)
	ld hl, sp+$15
	ld a, [hl]
	cp $ff
	jp nz, Func_57327
	ld hl, sp+$16
	ld a, [hl]
	cp $ff
	jp nz, Func_57327
	ld hl, sp+$17
	ld a, [hl]
	cp $ff
	jp nz, Func_57327
	ld hl, $1
	jp Func_5732a

Func_57327: ; 57327 (15:7327)
	ld hl, -1
Func_5732a: ; 5732a (15:732a)
	reg16swap de, hl
	add sp, $1c
	reg16swap de, hl
	ret

Func_57335:
	reg16swap de, hl
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, $5
	add hl, de
	ld l, [hl]
	add l
	cp $2
	jp z, Func_57381
	cp $1
	jp z, Func_57367
	or a
	jp nz, Func_57398
	set_farcall_addrs_hli Func_14980
	ld hl, $0
	call FarCall
	jp Func_57398

Func_57367: ; 57367 (15:7367)
	call Func_1fbe
	set_farcall_addrs_hli Func_149d5
	ld hl, $0
	call FarCall
	call Func_2009
	jp Func_57398

Func_57381: ; 57381 (15:7381)
	call Func_1fbe
	set_farcall_addrs_hli Func_14a64
	ld hl, $0
	call FarCall
	call Func_2009
Func_57398: ; 57398 (15:7398)
	ld hl, $8000
	ret

Data_5739c:
	dr $5739c, $573a4

Func_573a4:
	push hl
	add sp, -$1a
	ld hl, sp+$1a
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld l, $0
	push hl
	ld hl, sp+$8
	ld [hl], $0
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld hl, $5
	push hl
	ld bc, $a
	ld de, $0
	ld hl, $a
	call Func_57e52
	pop bc
	ld hl, $6
	push hl
	ld bc, $a
	ld de, $5
	ld hl, $a
	call Func_57e52
	pop bc
	ld hl, $7
	push hl
	ld bc, $14
	ld de, $b
	ld hl, $0
	call Func_57e52
	pop bc
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, $c980
	reg16swap de, hl
	ld hl, sp+$b
	ld bc, $5
	call CopyFromDEtoHL
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, $0
Func_5741d: ; 5741d (15:741d)
	ld de, $4
	call CompareHLtoDE
	jp nc, Func_57447
	push hl
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_57442
	ld hl, sp+$c
	ld a, [hl]
	inc a
	ld hl, sp+$c
	ld [hl], a
Func_57442: ; 57442 (15:7442)
	pop hl
	inc hl
	jp Func_5741d

Func_57447: ; 57447 (15:7447)
	pop af
	call GetSRAMBank
	callba_hli Func_7cd1
	ld e, a
	ld hl, sp+$8
	ld a, [hl]
	add e
	ld hl, sp+$8
	ld [hl], a
	ld a, [wc790]
	pop hl
	push af
	push hl
	ld hl, $400
	call Func_57e30
	call WriteHLToSPPlus10
	pop hl
	inc l
	dec l
	jp nz, Func_5747c
	ld hl, $0
	jp Func_5747f

Func_5747c: ; 5747c (15:747c)
	ld hl, $310
Func_5747f: ; 5747f (15:747f)
	ld de, $89b0
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld a, $c5
	call DecompressRequestRoboponPic
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_615be
	ld a, $c5
	call FarCall
	push af
	set_farcall_addrs_hli Func_613fc
	pop af
	ld e, a
	call FarCall
	ld a, [wSystemType]
	cp $1
	jp z, Func_574c5
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_574ce
Func_574c5: ; 574c5 (15:74c5)
	ld de, $8
	ld hl, Data_5739c
	call Func_2b7d
Func_574ce: ; 574ce (15:74ce)
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, $2
	call FarCall
	call WaitVideoTransfer
	call GetHLAtSPPlus8
	call Func_57e41
	ld hl, sp+$9
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $0
	call Func_57e8d
	ld de, Data_57655
	ld hl, $b01
	call PlaceStringDEatCoordHL
	ld a, [wc78c]
	cp $a
	jp nc, Func_57522
	ld hl, wc78c
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_57659
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_57532

Func_57522: ; 57522 (15:7522)
	ld hl, wc78c
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_57662
	push hl
	call PlaceString
	pop bc
	pop bc
Func_57532: ; 57532 (15:7532)
	set_farcall_addrs_hli Func_e26e0
	ld hl, sp+$9
	call FarCall
	ld e, $3
	ld a, $b
	call SetStringStartState
	ld hl, sp+$9
	push hl
	ld hl, Data_5766a
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_5766d
	ld hl, $b06
	call PlaceStringDEatCoordHL
	pop af
	cp $1
	jp c, Func_5757b
	cp $8
	jp z, Func_5757b
	push af
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_57675
	push hl
	call PlaceString
	pop bc
	pop bc
	pop af
	jp Func_5758e

Func_5757b: ; 5757b (15:757b)
	cp $8
	jp z, Func_57584
	or a
	jp nz, Func_5758e
Func_57584: ; 57584 (15:7584)
	push af
	ld hl, Data_57678
	push hl
	call PlaceString
	pop bc
	pop af
Func_5758e: ; 5758e (15:758e)
	cp $2
	jp c, Func_575b5
	push af
	ld de, Data_5767a
	ld hl, $b08
	call PlaceStringDEatCoordHL
	pop af
	ld l, a
	ld h, $0
	dec hl
	push hl
	ld hl, Data_57682
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_57688
	ld hl, $b09
	call PlaceStringDEatCoordHL
Func_575b5: ; 575b5 (15:75b5)
	ld de, Data_57693
	ld hl, $10c
	call PlaceStringDEatCoordHL
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_5769d
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld de, Data_576a2
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_576b0
	push hl
	call PlaceString
	pop bc
	pop bc
	read_hl_from wc391 + 2
	push hl
	read_hl_from wc391
	push hl
	ld hl, $0
	push hl
	ld hl, $e1e
	push hl
	call StackDivideLongSigned
	pop hl
	pop af
	push hl
	ld e, $10
	ld a, $1
	call SetStringStartState
	ld hl, Data_576b3
	push hl
	call PlaceString
	pop bc
	pop hl
	push hl
	ld de, $3c
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld de, $203
	ld hl, -1
	call Func_2230
	ld hl, Data_576bf
	push hl
	call PlaceString
	pop bc
	pop hl
	ld de, $3c
	call DivideHLByDESigned
	ld c, e
	ld b, d
	ld de, $202
	ld hl, -1
	call Func_2230
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $1c
	reg16swap de, hl
	ret

Data_57655:
	db "ヒﾞル", $0

Data_57659:
	db "  "
	TX_SNUM
	db "(かい)", $0

Data_57662:
	db " "
	TX_SNUM
	db "(かい)", $0

Data_5766a:
	TX_CALL
	db $0

Data_5766d:
	db "クﾞレイテスト", $0

Data_57675:
	TX_SNUM
	db $0

Data_57678:
	db "?", $0

Data_5767a:
	db "クﾞレイテスト", $0

Data_57682:
	TX_SNUM
	db "(に)", $0

Data_57688:
	db "(ちょうせんかのう)", $0

Data_57693:
	db "(しょしﾞきん) ", $0

Data_5769d:
	TX_UNUM
	db "G", $0

Data_576a2:
	db "ロホﾞホﾟン(のかすﾞ) ", $0

Data_576b0:
	TX_SNUM
	db $0

Data_576b3:
	db "フﾟレイ(しﾞかん) ", $0

Data_576bf:
	db ":", $0

Func_576c1: ; 576c1 (15:76c1)
	push hl
	push de
	ld de, $19
	ld a, $3
	call GetBanks_15
	push af
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	ld b, $64
	call DivideAbyB
	push af
	add a
	add a
	ld d, a
	add a
	add a
	add a
	ld e, a
	add a
	add d
	add e
	ld e, a
	ld hl, sp+$4
	ld a, [hl]
	sub e
	ld b, $a
	call DivideAbyB
	ld l, a
	push hl
	ld hl, sp+$6
	ld a, [hl]
	ld b, $a
	call DivideAbyB
	ld c, b
	pop hl
	pop af
	push hl
	inc a
	call GetHLAtSPPlus8
	ld [hl], a
	inc hl
	call WriteHLToSPPlus8
	pop hl
	ld a, l
	inc a
	call GetHLAtSPPlus6
	ld [hl], a
	inc hl
	call WriteHLToSPPlus6
	ld a, c
	inc a
	call GetHLAtSPPlus6
	ld [hl], a
	inc hl
	call WriteHLToSPPlus6
	ld hl, sp+$2
	ld a, [hl]
	dec a
	ld hl, sp+$2
	ld [hl], a
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $a007
	add hl, de
	ld a, [hl]
	cp $ff
	jp nz, Func_5774d
	call GetHLAtSPPlus6
	ld [hl], $e0
	inc hl
	call WriteHLToSPPlus6
	jp Func_57756

Func_5774d: ; 5774d (15:774d)
	call GetHLAtSPPlus6
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus6
Func_57756: ; 57756 (15:7756)
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp c, Func_57774
	ld hl, sp+$2
	ld a, [hl]
	ld b, $8
	call DivideAbyB
	push af
	add a
	add a
	add a
	ld e, a
	ld hl, sp+$4
	ld a, [hl]
	sub e
	ld c, a
	pop af
	jp Func_57777

Func_57774: ; 57774 (15:7774)
	xor a
	ld c, $0
Func_57777: ; 57777 (15:7777)
	push af
	push bc
	ld a, $3
	call GetSRAMBank_ReadOnly
	pop bc
	pop af
	ld e, a
	ld d, $0
	ld hl, wSaveScratchDexSeenFlags
	add hl, de
	ld a, [hl]
	ld b, c
	call RightShiftA
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_53b1e
	ld e, $0
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
	or a
	jp nz, Func_577cf
	xor a
Func_577a8: ; 577a8 (15:77a8)
	cp $5
	jp nc, Func_577ba
	call GetHLAtSPPlus4
	ld [hl], $7d
	inc hl
	call WriteHLToSPPlus4
	inc a
	jp Func_577a8

Func_577ba: ; 577ba (15:77ba)
	call GetHLAtSPPlus4
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus4
	jp Func_5783a

Func_577cf: ; 577cf (15:77cf)
	ld hl, $6
	push hl
	call GetHLAtSPPlus6
	ld c, l
	ld b, h
	ld hl, sp+$2
	ld e, [hl]
	ld a, $6
	call Func_57ea2
	pop bc
	call GetHLAtSPPlus4
	call FindFirstNonzero
	ld a, l
	call GetHLAtSPPlus4
	ld e, a
	ld d, $0
	add hl, de
	call WriteHLToSPPlus4
Func_577f2: ; 577f2 (15:77f2)
	cp $5
	jp nc, Func_57804
	call GetHLAtSPPlus4
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus4
	inc a
	jp Func_577f2

Func_57804: ; 57804 (15:7804)
	set_farcall_addrs_hli Func_53b1e
	ld e, $1
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
	cp $1
	jp nz, Func_57828
	call GetHLAtSPPlus4
	ld [hl], $db
	inc hl
	call WriteHLToSPPlus4
	jp Func_57831

Func_57828: ; 57828 (15:7828)
	call GetHLAtSPPlus4
	ld [hl], $90
	inc hl
	call WriteHLToSPPlus4
Func_57831: ; 57831 (15:7831)
	call GetHLAtSPPlus4
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus4
Func_5783a: ; 5783a (15:783a)
	call GetHLAtSPPlus4
	pop bc
	pop bc
	ret

Func_57840: ; 57840 (15:7840)
	ld de, Data_57871
	ld hl, $d01
	call PlaceStringDEatCoordHL
	ld a, [wc39c]
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, $1102
	call Func_2230
	ld de, Data_5787b
	ld hl, $d04
	call PlaceStringDEatCoordHL
	ld a, [wc39d]
	ld c, a
	ld b, $0
	ld de, $3
	ld hl, $1105
	call Func_2230
	ret

Data_57871:
	db "(みつけたかすﾞ)", $0

Data_5787b:
	db "(つかまえたかすﾞ)", $0

Pointers_57886:
	dw Data_5789e
	dw Data_578a3
	dw Data_578a9
	dw Data_578af
	dw Data_578b5
	dw Data_578ba
	dw Data_578c1
	dw Data_578c7
	dw Data_578cc
	dw Data_578d2
	dw Data_578d7
	dw Data_578dc

Data_5789e: ; 5789e
	dr $5789e, $578a3

Data_578a3: ; 578a3
	dr $578a3, $578a9

Data_578a9: ; 578a9
	dr $578a9, $578af

Data_578af: ; 578af
	dr $578af, $578b5

Data_578b5: ; 578b5
	dr $578b5, $578ba

Data_578ba: ; 578ba
	dr $578ba, $578c1

Data_578c1: ; 578c1
	dr $578c1, $578c7

Data_578c7: ; 578c7
	dr $578c7, $578cc

Data_578cc: ; 578cc
	dr $578cc, $578d2

Data_578d2: ; 578d2
	dr $578d2, $578d7

Data_578d7: ; 578d7
	dr $578d7, $578dc

Data_578dc: ; 578dc
	dr $578dc, $578e1

Data_578e1:
	dr $578e1, $578e9

Func_578e9:
	push hl
	add sp, -$60
	ld hl, sp+$60
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld c, l
	push bc
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld l, a
	pop bc
	push bc
	push hl
	ld a, c
	and $7
	push af
	ld l, c
	ld h, $0
	ld de, $8
	call DivideHLByDESigned
	ld de, wSaveScratchDexSeenFlags
	add hl, de
	ld a, [hl]
	pop bc
	call RightShiftA
	pop hl
	pop bc
	push af
	push hl
	push bc
	ld hl, $6
	push hl
	ld e, c
	ld a, $6
	ld hl, sp+$56
	ld c, l
	ld b, h
	call Func_57ea2
	pop bc
	pop bc
	push bc
	ld e, c
	ld hl, sp+$6
	call GetRobotOrTrainerBaseStats
	read_hl_from_sp_plus $34
	dec hl
	ld e, l
	ld hl, sp+$35
	ld [hl], e
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $6ea7
	add hl, de
	reg16swap de, hl
	ld hl, sp+$36
	ld bc, $7
	call FarCopyVideoData
	xor a
	pop bc
	push bc
	ld a, c
	ld b, $8
	call DivideAbyB
	ld e, a
	pop bc
	push bc
	ld a, e
	add a
	add a
	add a
	ld l, a
	ld a, c
	sub l
	ld c, a
	ld d, $0
	ld hl, wSaveScratchDexCaughtFlags
	add hl, de
	ld a, [hl]
	ld b, c
	call RightShiftA
	ld e, a
	ld a, e
	and $1
	ld e, a
	pop bc
	pop hl
	push bc
	push de
	ld a, l
	call GetSRAMBank
	pop de
	pop bc
	pop af
	and $1
	jp nz, Func_579a5
	ld hl, $4000
	jp Func_57b8e

Func_579a5: ; 579a5 (15:79a5)
	push de
	push bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call FillVisibleAreaWithBlankTile
	ld hl, $400
	call Func_57e30
	pop bc
	push bc
	push hl
	reg16swap de, hl
	ld a, c
	ld bc, $89b0
	call DecompressRequestRoboponPic
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_7c8a
	pop hl
	push hl
	reg16swap de, hl
	ld hl, $0
	ld c, $2
	call FarCall
	call WaitVideoTransfer
	pop hl
	call Func_57e41
	set_farcall_addrs_hli Func_615be
	pop bc
	push bc
	ld a, c
	call FarCall
	push af
	set_farcall_addrs_hli Func_613fc
	pop af
	ld e, a
	call FarCall
	ld a, [wSystemType]
	cp $1
	jp z, Func_57a1f
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_57a28
Func_57a1f: ; 57a1f (15:7a1f)
	ld de, $8
	ld hl, Data_578e1
	call Func_2b7d
Func_57a28: ; 57a28 (15:7a28)
	pop bc
	push bc
	ld b, $0
	inc bc
	ld de, $1
	ld hl, $9
	call Func_57bf1
	ld hl, sp+$52
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $f
	call Func_57e8d
	ld de, Data_57b99
	ld hl, $903
	call PlaceStringDEatCoordHL
	ld hl, sp+$34
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $f
	call Func_57e8d
	ld de, Data_57ba1
	ld hl, $905
	call PlaceStringDEatCoordHL
	ld hl, sp+$f
	ld a, [hl]
	rrca
	rrca
	rrca
	rrca
	and $f
	ld e, a
	ld hl, sp+$f
	ld a, [hl]
	and $f
	push af
	push de
	ld de, Data_57ba9
	ld hl, $907
	call PlaceStringDEatCoordHL
	ld de, Data_57bb2
	ld hl, $909
	call PlaceStringDEatCoordHL
	ld e, $9
	ld a, $f
	call SetStringStartState
	ld hl, sp+$37
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_57886
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_57bba
	push hl
	call PlaceString
	pop bc
	pop bc
	ld e, $5
	ld a, $f
	call SetStringStartState
	pop de
	ld a, e
	cp $3
	jp z, Func_57ae0
	cp $2
	jp z, Func_57ad5
	cp $1
	jp z, Func_57aca
	or a
	jp nz, Func_57ae8
	ld hl, Data_57bbd
	push hl
	call PlaceString
	pop bc
	jp Func_57ae8

Func_57aca: ; 57aca (15:7aca)
	ld hl, Data_57bc3
	push hl
	call PlaceString
	pop bc
	jp Func_57ae8

Func_57ad5: ; 57ad5 (15:7ad5)
	ld hl, Data_57bc9
	push hl
	call PlaceString
	pop bc
	jp Func_57ae8

Func_57ae0: ; 57ae0 (15:7ae0)
	ld hl, Data_57bcf
	push hl
	call PlaceString
	pop bc
Func_57ae8: ; 57ae8 (15:7ae8)
	ld e, $7
	ld a, $f
	call SetStringStartState
	pop af
	cp $3
	jp z, Func_57b24
	cp $2
	jp z, Func_57b19
	cp $1
	jp z, Func_57b0e
	or a
	jp nz, Func_57b2c
	ld hl, Data_57bd7
	push hl
	call PlaceString
	pop bc
	jp Func_57b2c

Func_57b0e: ; 57b0e (15:7b0e)
	ld hl, Data_57bdd
	push hl
	call PlaceString
	pop bc
	jp Func_57b2c

Func_57b19: ; 57b19 (15:7b19)
	ld hl, Data_57be3
	push hl
	call PlaceString
	pop bc
	jp Func_57b2c

Func_57b24: ; 57b24 (15:7b24)
	ld hl, Data_57be9
	push hl
	call PlaceString
	pop bc
Func_57b2c: ; 57b2c (15:7b2c)
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $a
	call FarCall
	pop bc
	pop de
	ld a, e
	cp $1
	jp nz, Func_57b62
	push bc
	set_farcall_addrs_hli Func_61133
	pop bc
	ld e, c
	ld d, $0
	inc de
	ld hl, $10b
	call FarCall
Func_57b62: ; 57b62 (15:7b62)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $0
	call WaitAorBButtonOverworld_57ec5
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
	ld hl, $8000
Func_57b8e: ; 57b8e (15:7b8e)
	reg16swap de, hl
	add sp, $62
	reg16swap de, hl
	ret

Data_57b99:
	db "(ふﾞそﾞく)", $0

Data_57ba1:
	db "(しんちょう)", $0

Data_57ba9:
	db "(たいしﾞゅう)", $0

Data_57bb2:
	db "(そﾞくせい)", $0

Data_57bba:
	TX_CALL
	db $0

Data_57bbd:
	db "(しょう)", $0

Data_57bc3:
	db "(ちゅう)", $0

Data_57bc9:
	db "(たﾞい)", $0

Data_57bcf:
	db "(きょたﾞい)", $0

Data_57bd7:
	db "(かるい)", $0

Data_57bdd:
	db "(ふつう)", $0

Data_57be3:
	db "(おもい)", $0

Data_57be9:
	db "(おもすきﾞ)", $0

Func_57bf1: ; 57bf1 (15:7bf1)
	push bc
	ld a, l
	and h
	inc a
	jp z, Func_57c02
	ld a, e
	and d
	inc a
	jp z, Func_57c02
	ld a, l
	call SetStringStartState
Func_57c02: ; 57c02 (15:7c02)
	pop bc
	ld l, c
	ld h, b
	ld de, 10
	call CompareHLtoDE
	jp nc, Func_57c1b
	push bc
	ld hl, Data_57c3e
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_57c3d

Func_57c1b: ; 57c1b (15:7c1b)
	ld l, c
	ld h, b
	ld de, 100
	call CompareHLtoDE
	jp nc, Func_57c33
	push bc
	ld hl, Data_57c43
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_57c3d

Func_57c33: ; 57c33 (15:7c33)
	push bc
	ld hl, Data_57c47
	push hl
	call PlaceString
	pop bc
	pop bc
Func_57c3d: ; 57c3d (15:7c3d)
	ret

Data_57c3e:
	db "00"
	TX_SNUM
	db $0

Data_57c43:
	db "0"
	TX_SNUM
	db $0

Data_57c47:
	TX_SNUM
	db $0

Func_57c4a: ; 57c4a (15:7c4a)
	add sp, -$24
	push de
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	callba_hli Func_da4dc
	call FillVisibleAreaWithBlankTile
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld de, $19
	ld a, $3
	call GetBanks_15
	ld l, a
	pop af
	push hl
	push af
	ld l, a
	ld h, 0
	get_party_bot
	reg16swap de, hl
	ld hl, sp+$6
	ld bc, $23
	call FarCopyVideoData
	pop af
	pop hl
	pop de
	push hl
	push de
	ld l, e
	ld h, 0
	get_party_bot
	push hl
	ld l, a
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call FarCopyVideoData
	pop de
	ld hl, sp+$2
	push hl
	ld l, e
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call FarCopyVideoData
	pop hl
	ld a, l
	call GetSRAMBank
	add sp, $24
	ret

Func_57cf7: ; 57cf7 (15:7cf7)
	push de
	push bc
	push bc
	push bc
	push hl
	ld hl, sp+$2
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $c
	pop de
	call Func_2617
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$2
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$3
	ld c, [hl]
	ld hl, sp+$4
	ld a, [hl]
	cp $80
	jp c, Func_57d24
	inc c
Func_57d24: ; 57d24 (15:7d24)
	inc c
	dec c
	jp nz, Func_57d3b
	call GetHLAtSPPlus10
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_57d3b
	ld c, $1
Func_57d3b: ; 57d3b (15:7d3b)
	pop hl
	ld e, c
	ld d, $0
	ld bc, $102
	call Func_57d4a
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_57d4a: ; 57d4a (15:7d4a)
	push hl
	push bc
	push bc
	push bc
	push bc
	push bc
	push bc
	push de
	push bc
	read_hl_from_sp_plus $12
	ld de, $100
	call DivideHLByDESigned
	ld a, l
	read_hl_from_sp_plus $12
	ld de, $100
	call DivideHLByDESigned
	ld a, e
	pop bc
	push bc
	ld l, c
	ld h, b
	ld de, $100
	call DivideHLByDESigned
	ld a, l
	pop hl
	ld de, $100
	call DivideHLByDESigned
	ld a, e
	ld hl, sp+$4
	ld [hl], $96
	ld hl, sp+$5
	ld [hl], $90
	ld hl, sp+$c
	ld [hl], $91
	ld hl, sp+$6
	call WriteHLToSPPlus4
	ld c, $0
	pop de
	push af
Func_57d91: ; 57d91 (15:7d91)
	ld hl, -8
	add hl, de
	inc h
	dec h
	bit 7, h
	jr nz, .asm_57db2
	push de
	call GetHLAtSPPlus6
	ld [hl], $92
	inc hl
	call WriteHLToSPPlus6
	pop de
	ld hl, -8
	add hl, de
	reg16swap de, hl
	inc c
	jp Func_57db5

.asm_57db2
	jp Func_57db8

Func_57db5: ; 57db5 (15:7db5)
	jp Func_57d91

Func_57db8: ; 57db8 (15:7db8)
	ld a, e
	or d
	jp z, Func_57dcb
	inc c
	ld hl, $dd
	add hl, de
	ld a, l
	call GetHLAtSPPlus4
	ld [hl], a
	inc hl
	call WriteHLToSPPlus4
Func_57dcb: ; 57dcb (15:7dcb)
	ld a, c
	cp $6
	jp nc, Func_57dde
	call GetHLAtSPPlus4
	ld [hl], $93
	inc hl
	call WriteHLToSPPlus4
	inc c
	jp Func_57dcb

Func_57dde: ; 57dde (15:7dde)
	pop af
	push af
	or a
	jp nz, Func_57dec
	ld a, $98
	ld [wBGMapHi], a
	jp Func_57df1

Func_57dec: ; 57dec (15:7dec)
	ld a, $9c
	ld [wBGMapHi], a
Func_57df1: ; 57df1 (15:7df1)
	pop af
	cp $2
	jp z, Func_57e16
	set_farcall_addrs_hli Func_6193
	ld bc, $901
	ld hl, sp+$2
	push hl
	read_hl_from_sp_plus $10
	pop de
	call FarCall
	call WaitVideoTransfer
	jp Func_57e2d

Func_57e16: ; 57e16 (15:7e16)
	read_hl_from_sp_plus $e
	call Coord2TileMap
	ld c, l
	ld b, h
	ld hl, sp+$2
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $9
	call CopyFromDEtoHL
Func_57e2d: ; 57e2d (15:7e2d)
	add sp, $e
	ret

Func_57e30: ; 57e30 (15:7e30)
	push hl
	set_farcall_addrs_hli AllocateMemory
	pop hl
	call FarCall
	ret

Func_57e41: ; 57e41 (15:7e41)
	push hl
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Func_57e52: ; 57e52 (15:7e52)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	call GetHLAtSPPlus10
	ld c, l
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus10
	ld h, l
	ld l, $0
	pop de
	add hl, de
	pop de
	call FarCall
	pop bc
	pop bc
	pop bc
	ret

GetBanks_15: ; 57e7b (15:7e7b)
	push af
	push de
	set_farcall_addrs_hli GetBanks
	pop de
	pop af
	jp FarCall

Func_57e8d: ; 57e8d (15:7e8d)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_16019
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_57ea2: ; 57ea2 (15:7ea2)
	push de
	push bc
	push af
	set_farcall_addrs_hli Func_15ad6
	pop af
	call GetHLAtSPPlus8
	ld c, l
	pop hl
	push hl
	reg16swap de, hl
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call FarCall
	pop bc
	pop bc
	ret

WaitAorBButtonOverworld_57ec5: ; 57ec5 (15:7ec5)
	jpba_hli WaitAorBButtonOverworld_17a44

SECTION "Bank 16", ROMX, BANK [$16]
GFX_58000: INCBIN "gfx/misc/58000.2bpp"
GFX_58080: INCBIN "gfx/misc/58080.2bpp"
GFX_58100: INCBIN "gfx/misc/58100.2bpp"
GFX_58180: INCBIN "gfx/misc/58180.2bpp"
GFX_58380: INCBIN "gfx/misc/58380.2bpp"
GFX_58400: INCBIN "gfx/misc/58400.2bpp"
GFX_58800: INCBIN "gfx/misc/58800.2bpp"

Func_58c00:
	ret

Data_58c01: ; 58c01
	db  0, 0
	db 11, 5
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_33524
	dba Func_15297
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Pointers_58c20:
	dw Data_58c24
	dw Data_58c30

Data_58c24:
	db "チッフﾟ(のこうしん)", $0

Data_58c30:
	db "(しんかのいらい)", $0

Data_58c3a:
	dr $58c3a, $58c49

Data_58c49: ; 58c49
	db  0, 0
	db 12, 7
	dba Func_15001
	dbw 5, 0
	dba Func_151c2
	dba Func_fb118
	dba Func_15297
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0

Pointers_58c68:
	dw Data_58c6e
	dw Data_58c79
	dw Data_58c87

Data_58c6e:
	db "(けんきゅうとうし)", $0

Data_58c79:
	db "ロホﾞホﾟン(こうにゅう)", $0

Data_58c87:
	db "ロホﾞホﾟン(はﾞいきゃく)", $0

Data_58c96: ; 58c96
	dr $58c96, $58ca5

Data_58ca5: ; 58ca5
	db 12, 0
	db  8, 9
	dba Func_595ab
	dbw 5, 0
	dba Func_59724
	dba Func_59905
	dba Func_152bd
	dbw 5, 0
	dbw 5, 0
	dbw 0, 0
	dbw 0, 0


Data_58cc4: ; 58cc4
	dr $58cc4, $58cd3

Data_58cd3:
	db  7,  0
	db 13, 14
	dba Func_16777
	dbw 5, 0
	dba Func_16d8e
	dba Func_59e79
	dba Func_5adce
	dba Func_16038
	dba Func_160c2
	dbw 0, 0
	dbw 0, 0

Data_58cf2:
	dr $58cf2, $58d01

Data_58d01:
	db  0, 0
	db 20, 8
	dba Func_5a4c8
	dbw 5, 0
	dba Func_59724
	dba Func_5aaf7
	dba Func_5adce
	dba Func_5aa13
	dba Func_5aa19
	dbw 0, 0
	dbw 0, 0

Data_58d20:
	dr $58d20, $58d2f

Data_58d2f: ; 58d2f
	db 1, 3
	db 8, 9
	dba Func_5ade6
	dbw 5, 0
	dba Func_5b1eb
	dba Func_5b3da
	dba Func_5ba1e
	dba Func_5b3ce
	dba Func_5b3d4
	dbw 0, 0
	dbw 0, 0

Data_58d4e: ; 58d4e
	dr $58d4e, $58d5d

NamingScreen__:: ; 58d5d
	push af
	ld a, [wFarCallDestBank]
	ld l, a
	push hl
	set_farcall_addrs_hli NamingScreen_
	pop hl
	pop af
	push hl
	call FarCall
	pop hl
	ld a, l
	ld [wFarCallDestBank], a
	ret

Func_58d7a:
	push hl
	ld a, [wFarCallDestBank]
	push af
	set_farcall_addrs_hli Func_61e5b
	pop af
	pop hl
	push af
	call FarCall
	pop af
	ld [wFarCallDestBank], a
	ret

Pointers_58d95:
	dw Data_58dad
	dw Data_58db5
	dw Data_58dbb
	dw Data_58dc2
	dw Data_58dc7
	dw Data_58dcc
	dw Data_58dd2
	dw Data_58dda
	dw Data_58de0
	dw Data_58de5
	dw Data_58deb
	dw Data_58df4

Data_58dad:
	db "(おひつしﾞ)", $0

Data_58db5:
	db "(おうし)", $0

Data_58dbb:
	db "(ふたこﾞ)", $0

Data_58dc2:
	db "(かに)", $0

Data_58dc7:
	db "(しし)", $0

Data_58dcc:
	db "(おとめ)", $0

Data_58dd2:
	db "(てんひﾞん)", $0

Data_58dda:
	db "(さそり)", $0

Data_58de0:
	db "(いて)", $0

Data_58de5:
	db "(やきﾞ)", $0

Data_58deb:
	db "(みすﾞかﾞめ)", $0

Data_58df4:
	db "(うお)", $0

Func_58df9: ; 58df9 (16:4df9)
	add sp, -$1a
	ld hl, sp+$5
	ld [hl], $4
	ld e, $9
	push de
	set_farcall_addrs_hli AllocateMemory
	ld hl, $90
	call FarCall
	ld c, l
	ld b, h
	push bc
	ld de, $1009
	ld hl, $409
	call BackUpTileMapRectangle
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, $c980
	reg16swap de, hl
	ld hl, sp+$c
	ld bc, $5
	call FarCopyVideoData
	ld a, [wc987]
	ld l, a
	push hl
	ld hl, sp+$8
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, sp+$c
	ld [hl], $0
	xor a
Func_58e5b: ; 58e5b (16:4e5b)
	cp $4
	jp nc, Func_58e84
	push af
	ld l, a
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_58e7f
	ld hl, sp+$e
	ld a, [hl]
	inc a
	ld hl, sp+$e
	ld [hl], a
Func_58e7f: ; 58e7f (16:4e7f)
	pop af
	inc a
	jp Func_58e5b

Func_58e84: ; 58e84 (16:4e84)
	pop hl
	pop af
	pop bc
	pop de
	push bc
	push hl
	push de
	call GetSRAMBank
	callba_hli Func_7cd1
	ld hl, sp+$a
	add [hl]
	ld hl, sp+$a
	ld [hl], a
	set_farcall_addrs_hli Func_17e95
	pop de
	push de
	ld hl, sp+$b
	ld a, [hl]
	ld l, e
	ld h, a
	ld e, $10
	ld c, $9
	call FarCall
	set_farcall_addrs_hli Func_16019
	pop de
	push de
	ld hl, sp+$c
	ld c, l
	ld b, h
	ld d, $0
	inc de
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	inc hl
	call FarCall
	ld hl, Data_58fe6
	push hl
	call PlaceString
	pop bc
	pop de
	pop hl
	push de
	ld h, $0
	add hl, hl
	ld de, Pointers_58d95
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, Data_58fef
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
	push de
	ld d, $0
	inc de
	inc de
	inc de
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	add hl, de
	ld de, Data_58ff2
	call PlaceStringDEatCoordHL
	ld hl, sp+$8
	ld c, [hl]
	ld b, $0
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_59000
	push hl
	call PlaceString
	pop bc
	pop de
	push de
	ld a, e
	add $5
	ld e, a
	ld hl, sp+$9
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, sp+$4
	call PutLongFromHLOnStack
	ld hl, Data_59005
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	read_hl_from wc391 + 2
	push hl
	read_hl_from wc391
	push hl
	ld hl, $0
	push hl
	ld hl, $e1e
	push hl
	call StackDivideLongSigned
	pop hl
	pop af
	pop de
	push hl
	ld a, e
	add $7
	ld e, a
	ld hl, sp+$9
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, Data_59013
	push hl
	call PlaceString
	pop bc
	pop hl
	push hl
	ld de, $3c
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld de, $203
	ld hl, -1
	call Func_2230
	ld hl, Data_5901f
	push hl
	call PlaceString
	pop bc
	pop hl
	ld de, $3c
	call DivideHLByDESigned
	ld c, e
	ld b, d
	ld de, $202
	ld hl, -1
	call Func_2230
	ld l, $9
	push hl
	ld c, $10
	ld e, $9
	ld a, $4
	call Func_3bc5
	pop bc
	pop bc
Func_58fa9: ; 58fa9 (16:4fa9)
	push bc
	call CheckButton
	pop bc
	cp $10
	jp nz, Func_58fb7
	xor a
	jp Func_58fd1

Func_58fb7: ; 58fb7 (16:4fb7)
	cp $20
	jp nz, Func_58fce
	push bc
	ld a, $ff
	push af
	ld de, $1009
	ld hl, $409
	call Func_2323
	pop af
	pop bc
	jp Func_58fd1

Func_58fce: ; 58fce (16:4fce)
	jp Func_58fa9

Func_58fd1: ; 58fd1 (16:4fd1)
	push af
	push bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop af
	add sp, $1a
	ret

Data_58fe6:
	db "(しゃちょう) ", $0

Data_58fef:
	TX_CALL
	db $0

Data_58ff2:
	db "ロホﾞホﾟン(のかすﾞ) ", $0

Data_59000:
	db "(たい)", $0

Data_59005:
	db "(しょしﾞきん) "
	TX_UNUM
	db "G", $0

Data_59013:
	db "フﾟレイ(しﾞかん) ", $0

Data_5901f:
	db ":", $0

Pointers_59021:
	dw Data_59025
	dw $0

Data_59025:
	db "チッフﾟ(をこうしんしました)", $0

Pointers_59035:
	dw Data_59039
	dw $0

Data_59039:
	db "(おかねかﾞ たりないよ)", $0

Pointers_59047:
	dw Data_5904b
	dw $0

Data_5904b:
	db "(これいしﾞょう こうしんてﾞきないよ)", $0

Pointers_59060:
	dw Data_59064
	dw $0

Data_59064:
	db "スクラッフﾟ(に なっているよ)", $0

Data_59075:
	db 2, 4, 8, 16, 32, 64

Data_5907b: ; 5907b
	db 8, 10, 12, 14, 16, 18

Data_59081: ; 59081
	db 5, 10, 20, 30, 40, 50

Func_59087: ; 59087 (16:5087)
	add sp, -$26
	ld hl, sp+$1
	ld [hl], $0
	set_farcall_addrs_hli DisplayPartyMenu_
	ld a, $6
	call FarCall
	ld a, l
	cp $4
	jp c, Func_590a8
	ld a, $ff
	jp Func_59457

Func_590a8: ; 590a8 (16:50a8)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $3
	ld e, $f
	ld hl, Func_0500
	call FarCall
	ld c, $5
	ld e, $a
	ld hl, $3
	call FarCall
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $22
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $7
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	set_farcall_addrs_hli Func_15ad6
	ld c, $6
	ld hl, sp+$b
	reg16swap de, hl
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	inc h
	call FarCall
	pop de
	pop af
	push de
	call GetSRAMBank
	ld de, Data_5945a
	ld hl, $601
	call PlaceStringDEatCoordHL
	ld hl, sp+$5
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_594a4
	pop bc
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$9
	ld c, l
	ld b, h
	ld de, $4
	ld hl, $1
	call FarCall
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	cp $7
	jp c, Func_591cc
	ld hl, sp+$4
	ld a, [hl]
	add $f9
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	ld b, $2
	call DivideAbyB
	ld hl, sp+$4
	ld [hl], a
Func_591cc: ; 591cc (16:51cc)
	ld c, $0
	pop de
	push de
	ld hl, sp+$4
	ld a, [hl]
	cp $6
	jp nc, Func_5925a
	ld a, e
	or d
	jp z, Func_5925a
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, Data_59081
	add hl, de
	cp [hl]
	jp c, Func_591ef
	ld c, $1
Func_591ef: ; 591ef (16:51ef)
	ld a, c
	cp $1
	jp nz, Func_5924f
	push bc
	ld e, $6
	ld a, $2
	call SetStringStartState
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, Data_59075
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_59463
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_59466
	ld hl, -1
	call PlaceStringDEatCoordHL
	ld e, $e
	ld a, $1
	call SetStringStartState
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, Data_5907b
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_5946e
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_59471
	ld hl, -1
	call PlaceStringDEatCoordHL
	ld de, Data_5947f
	ld hl, $110
	call PlaceStringDEatCoordHL
	pop bc
	jp Func_5925a

Func_5924f: ; 5924f (16:524f)
	push bc
	ld de, Data_59490
	ld hl, $206
	call PlaceStringDEatCoordHL
	pop bc
Func_5925a: ; 5925a (16:525a)
	push bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	pop de
	ld hl, sp+$2
	ld a, [hl]
	cp $6
	jp nc, Func_59276
	inc c
	dec c
	jp nz, Func_592c5
Func_59276: ; 59276 (16:5276)
	ld a, e
	or d
	jp z, Func_592c5
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_59047)
	ld de, Pointers_59047
	ld hl, $10e
	call FarCall
	ld hl, sp+$1
	ld [hl], $ff
	jp Func_59451

Func_592c5: ; 592c5 (16:52c5)
	ld a, e
	or d
	jp nz, Func_59314
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_59060)
	ld de, Pointers_59060
	ld hl, $10e
	call FarCall
	ld hl, sp+$1
	ld [hl], $ff
	jp Func_59451

Func_59314: ; 59314 (16:5314)
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_5944d
	ld hl, sp+$3
	call PutLongFromHLOnStack
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, Data_5907b
	add hl, de
	ld l, [hl]
	ld h, $0
	ld bc, $0
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call MultiplyLongsFromStack
	call SubtractLongsFromStack
	ld hl, sp+$7
	call PutLongFromStackToHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld hl, sp+$3
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call CompareStackLongs_Signed
	jp c, Func_59424
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $1f
	add hl, de
	ld a, $1f
	and [hl]
	ld [hl], a
	ld de, SaveScratchMoney
	ld hl, sp+$5
	ld bc, $4
	call MemCopy
	pop af
	call GetSRAMBank
	ld de, Data_5949b
	ld hl, $601
	call PlaceStringDEatCoordHL
	ld hl, sp+$3
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_594a4
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_59021)
	ld de, Pointers_59021
	ld hl, $10e
	call FarCall
	jp Func_5944a

Func_59424: ; 59424 (16:5424)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_59035)
	ld de, Pointers_59035
	ld hl, $10e
	call FarCall
	ld hl, sp+$1
	ld [hl], $ff
Func_5944a: ; 5944a (16:544a)
	jp Func_59451

Func_5944d: ; 5944d (16:544d)
	ld hl, sp+$1
	ld [hl], $ff
Func_59451: ; 59451 (16:5451)
	call Func_3af6
	ld hl, sp+$1
	ld a, [hl]
Func_59457: ; 59457 (16:5457)
	add sp, $26
	ret

Data_5945a:
	db "(しょしﾞきん)", $0

Data_59463:
	TX_SNUM
	db $0

Data_59466:
	db "チッフﾟ(へ)", $0

Data_5946e:
	TX_SNUM
	db $0

Data_59471:
	db "00G (ひつようてﾞす)", $0

Data_5947f:
	db "チッフﾟ(をこうしんしますか?)", $0

Data_59490:
	db "レヘﾞル(ふﾞそく)", $0

Data_5949b:
	db "(しょしﾞきん)", $0

Func_594a4: ; 594a4 (16:54a4)
	ld a, l
	and h
	inc a
	jp z, Func_594af
	ld e, l
	ld a, h
	call SetStringStartState
Func_594af: ; 594af (16:54af)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $a
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_594d4
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_59578
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_59577

Func_594d4: ; 594d4 (16:54d4)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_594f9
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_59583
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_59577

Func_594f9: ; 594f9 (16:54f9)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $3e8
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_5951e
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_5958d
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_59577

Func_5951e: ; 5951e (16:551e)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $2710
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_59543
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_59596
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_59577

Func_59543: ; 59543 (16:5543)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, $1
	push hl
	ld hl, $86a0
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_59568
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_5959e
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_59577

Func_59568: ; 59568 (16:5568)
	ld hl, sp+$2
	call PutLongFromHLOnStack
	ld hl, Data_595a5
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
Func_59577: ; 59577 (16:5577)
	ret

Data_59578:
	db "      "
	TX_UNUM
	db "G", $0

Data_59583:
	db "     "
	TX_UNUM
	db "G", $0

Data_5958d:
	db "    "
	TX_UNUM
	db "G", $0

Data_59596:
	db "   "
	TX_UNUM
	db "G", $0

Data_5959e:
	db "  "
	TX_UNUM
	db "G", $0

Data_595a5:
	db " "
	TX_UNUM
	db "G", $0

Func_595ab:
	push hl
	add sp, -$20
	ld hl, sp+$20
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$1
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	inc hl
	ld l, [hl]
	push hl
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld l, [hl]
	inc hl
	ld h, [hl]
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	push de
	push bc
	read_hl_from_sp_plus $c
	ld de, $9
	add hl, de
	ld e, c
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop af
	pop hl
	push de
	push bc
	ld c, a
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$4
	ld l, [hl]
	ld h, a
	call FarCall
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld hl, sp+$5
	ld a, [hl]
	add $2
	ld hl, sp+$5
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
	xor a
	pop bc
Func_5966c: ; 5966c (16:566c)
	cp c
	jp nc, Func_596d7
	push bc
	push de
	push af
	set_farcall_addrs_hli Func_15ad6
	pop af
	pop de
	push af
	push de
	ld hl, sp+$c
	reg16swap de, hl
	ld l, a
	ld h, $0
	inc h
	inc h
	inc h
	ld c, $6
	call FarCall
	pop de
	push de
	ld a, e
	call GetSRAMBank
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$c
	ld c, l
	ld b, h
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	call FarCall
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$8
	ld a, [hl]
	add $2
	ld hl, sp+$8
	ld [hl], a
	pop de
	pop af
	inc a
	pop bc
	jp Func_5966c

Func_596d7: ; 596d7 (16:56d7)
	ld a, e
	call GetSRAMBank
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus6
	call FarCall
	callba_hli Func_33375
	set_farcall_addrs_hli Func_333e0
	pop de
	ld a, e
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $22
	reg16swap de, hl
	ret

Func_59724: ; 59724 (16:5724)
	push bc
	push bc
	push bc
	push de
	xor a
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $9
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld a, [hl]
	push af
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp nc, Func_5977a
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
Func_5977a: ; 5977a (16:577a)
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $c
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	pop de
	push af
	ld a, e
	sub $3
	or d
	jp z, Func_59849
	ld a, e
	sub $2
	or d
	jp z, Func_59819
	ld a, e
	dec a
	or d
	jp z, Func_597d4
	ld a, e
	or d
	jp nz, Func_59870
	call GetHLAtSPPlus6
	dec hl
	call WriteHLToSPPlus6
	inc h
	dec h
	bit 7, h
	jr z, .asm_597d1
	ld hl, $0
	call WriteHLToSPPlus6
	call GetHLAtSPPlus4
	dec hl
	call WriteHLToSPPlus4
	inc h
	dec h
	bit 7, h
	jr z, .asm_597cf
	ld hl, $0
	call WriteHLToSPPlus4
	jp .asm_597d1

.asm_597cf
	ld a, $1
.asm_597d1
	jp Func_59870

Func_597d4: ; 597d4 (16:57d4)
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp c, Func_59816
	ld l, c
	ld h, b
	dec hl
	call WriteHLToSPPlus6
	call GetHLAtSPPlus4
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	add hl, bc
	push hl
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_59814
	call GetHLAtSPPlus4
	dec hl
	call WriteHLToSPPlus4
	jp Func_59816

Func_59814: ; 59814 (16:5814)
	ld a, $2
Func_59816: ; 59816 (16:5816)
	jp Func_59870

Func_59819: ; 59819 (16:5819)
	call GetHLAtSPPlus6
	ld de, $4
	call CompareHLtoDE
	jp nc, Func_59846
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	inc hl
	call CompareHLtoBC
	jp nc, Func_59846
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	inc hl
	call WriteHLToSPPlus6
Func_59846: ; 59846 (16:5846)
	jp Func_59870

Func_59849: ; 59849 (16:5849)
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $3
	call CompareHLtoDE
	jp nc, Func_59870
	call GetHLAtSPPlus6
	dec hl
	dec hl
	dec hl
	dec hl
	inc h
	dec h
	bit 7, h
	jr nz, Func_59870
	call GetHLAtSPPlus6
	dec hl
	dec hl
	dec hl
	dec hl
	call WriteHLToSPPlus6
Func_59870: ; 59870 (16:5870)
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus10
	ld de, $5
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	cp $18
	jp nz, Func_598b9
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus6
	call FarCall
	set_farcall_addrs_hli Func_333e0
	call GetHLAtSPPlus4
	ld a, l
	call FarCall
	jp Func_598ea

Func_598b9: ; 598b9 (16:58b9)
	cp $1c
	jp nz, Func_598d9
	set_farcall_addrs_hli Func_50604
	call GetHLAtSPPlus6
	call FarCall
	call GetHLAtSPPlus4
	ld a, l
	call Func_5aa2f
	jp Func_598ea

Func_598d9: ; 598d9 (16:58d9)
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus6
	call FarCall
Func_598ea: ; 598ea (16:58ea)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Data_598fd:
	dr $598fd, $59905

Func_59905:
	push hl
	ld hl, -$8c
	add hl, sp
	ld sp, hl
	ld hl, $8c
	add hl, sp
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $34
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	read_hl_from_sp_plus $36
	get_party_bot
	ld de, $1d
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	read_hl_from_sp_plus $38
	get_party_bot
	ld e, [hl]
	ld hl, sp+$35
	ld [hl], e
	read_hl_from_sp_plus $38
	get_party_bot
	ld de, $7
	add hl, de
	ld e, [hl]
	ld hl, sp+$33
	ld [hl], e
	ld hl, sp+$35
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$4
	call GetRobotOrTrainerBaseStats
	call GetHLAtSPPlus9
	reg16swap de, hl
	pop bc
	pop af
	push bc
	push de
	push af
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Text_66ea7
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3a
	ld bc, $7
	call FarCopyVideoData
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$36
	ld [hl], a
	ld hl, sp+$36
	ld a, [hl]
	cp $1
	jp c, Func_59a10
	set_farcall_addrs_hli Func_15ad6
	ld c, $6
	ld hl, sp+$76
	push hl
	read_hl_from_sp_plus $3c
	inc h
	inc h
	inc h
	pop de
	call FarCall
	set_farcall_addrs_hli Func_15ad6
	ld c, $6
	ld hl, sp+$58
	push hl
	ld hl, sp+$38
	ld l, [hl]
	ld h, $0
	ld de, $5ff
	add hl, de
	pop de
	call FarCall
Func_59a10: ; 59a10 (16:5a10)
	pop af
	call GetSRAMBank
	pop de
	pop bc
	ld a, e
	or d
	jp nz, Func_59a21
	ld hl, $4000
	jp Func_59c25

Func_59a21: ; 59a21 (16:5a21)
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_59a2f
	ld hl, $4000
	jp Func_59c25

Func_59a2f: ; 59a2f (16:5a2f)
	call Func_1f30
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$70
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
	ld e, $1
	ld a, $7
	call SetStringStartState
	ld hl, $9a
	push hl
	ld hl, Data_59c33
	push hl
	call PlaceString
	pop bc
	pop bc
	ld de, Data_59c36
	ld hl, -1
	call PlaceStringDEatCoordHL
	ld hl, sp+$2f
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_59c38
	push hl
	call PlaceString
	pop bc
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$34
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $c
	call FarCall
	set_farcall_addrs_hli AllocateMemory
	ld hl, $400
	call FarCall
	push hl
	reg16swap de, hl
	ld hl, sp+$33
	ld a, [hl]
	dec a
	ld bc, $89b0
	call DecompressRequestRoboponPic
	set_farcall_addrs_hli Func_615be
	ld hl, sp+$33
	ld a, [hl]
	dec a
	call FarCall
	push af
	set_farcall_addrs_hli Func_613fc
	pop af
	ld e, a
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_7c8a
	pop hl
	push hl
	reg16swap de, hl
	ld hl, $604
	ld c, $2
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$70
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld hl, Data_59c3b
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$52
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	ld hl, Data_59c40
	push hl
	call PlaceString
	pop bc
	ld de, Data_59c44
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld a, [wSystemType]
	cp $1
	jp z, Func_59b7c
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_59b85
Func_59b7c: ; 59b7c (16:5b7c)
	ld de, $8
	ld hl, Data_598fd
	call Func_2b7d
Func_59b85: ; 59b85 (16:5b85)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp z, Func_59bec
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_59bc3
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_59bd7
Func_59bc3: ; 59bc3 (16:5bc3)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_59bd7: ; 59bd7 (16:5bd7)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call Func_1f7b
	ld hl, $8000
	jp Func_59c25

Func_59bec: ; 59bec (16:5bec)
	read_hl_from_sp_plus $34
	ld a, l
	ld [wc2e9], a
	set_farcall_addrs_hli Func_4f8ec
	ld hl, sp+$30
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$31
	ld a, [hl]
	dec a
	call FarCall
	call Func_2009
	call Func_1fbe
	callba_hli Func_54f0e
	call Func_1f7b
	ld hl, $8000
Func_59c25: ; 59c25 (16:5c25)
	reg16swap de, hl
	ld hl, $8e
	add hl, sp
	ld sp, hl
	reg16swap de, hl
	ret

Data_59c33:
	TX_STACK
	db $0

Data_59c36:
	db "V", $0

Data_59c38:
	TX_SNUM
	db $0

Data_59c3b:
	db "(を) ", $0

Data_59c40:
	db "(に)", $0

Data_59c44:
	db "(しんか させる?)", $0

Pointers_59c4f:
	dw Data_59c53
	dw $0

Data_59c53:
	db "(これいしﾞょう とうし てﾞきないよ)", $0

Pointers_59c68:
	dw Data_59c6c
	dw $0

Data_59c6c:
	db "(おかねかﾞ たりないよ)", $0

Pointers_59c7a:
	dw Data_59c7e
	dw $0

Data_59c7e:
	db "(とうし しました)", $0

Func_59c89:
	push bc
	push bc
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	ld de, wcb33
	add hl, de
	ld e, [hl]
	ld hl, sp+$6
	ld [hl], e
	pop af
	call GetSRAMBank
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $3
	ld e, $f
	ld hl, Func_0500
	call FarCall
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld c, $3
	ld e, $a
	ld hl, $a04
	call FarCall
	ld de, Data_59e42
	ld hl, $601
	call PlaceStringDEatCoordHL
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, -1
	call Func_594a4
	pop bc
	pop bc
	ld de, Data_59e4b
	ld hl, $b05
	call PlaceStringDEatCoordHL
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_59e55
	push hl
	call PlaceString
	pop bc
	pop bc
	ld hl, sp+$4
	ld a, [hl]
	cp $8
	jp nc, Func_59d3e
	ld de, Data_59e59
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_59e69
	ld hl, $110
	call PlaceStringDEatCoordHL
Func_59d3e: ; 59d3e (16:5d3e)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$4
	ld a, [hl]
	cp $8
	jp nc, Func_59dcc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_59dc3
	ld hl, $0
	push hl
	ld hl, $7d0
	push hl
	ld hl, sp+$4
	call SubtractLongs
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	call CompareStackLongs_Signed
	jp c, Func_59dbe
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld de, SaveScratchMoney
	ld hl, sp+$2
	ld bc, $4
	call MemCopy
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_333ba
	ld hl, sp+$4
	ld a, [hl]
	inc a
	call FarCall
	xor a
	jp Func_59dc0

Func_59dbe: ; 59dbe (16:5dbe)
	ld a, $1
Func_59dc0: ; 59dc0 (16:5dc0)
	jp Func_59dc9

Func_59dc3: ; 59dc3 (16:5dc3)
	ld hl, $0
	jp Func_59e3e

Func_59dc9: ; 59dc9 (16:5dc9)
	jp Func_59dce

Func_59dcc: ; 59dcc (16:5dcc)
	ld a, $2
Func_59dce: ; 59dce (16:5dce)
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	pop af
	or a
	jp nz, Func_59e1d
	ld c, BANK(Pointers_59c7a)
	ld de, Pointers_59c7a
	ld hl, $10e
	call FarCall
	ld hl, -1
	jp Func_59e3e

Func_59e1d: ; 59e1d (16:5e1d)
	cp $1
	jp nz, Func_59e30
	ld c, BANK(Pointers_59c68)
	ld de, Pointers_59c68
	ld hl, $10e
	call FarCall
	jp Func_59e3b

Func_59e30: ; 59e30 (16:5e30)
	ld c, BANK(Pointers_59c4f)
	ld de, Pointers_59c4f
	ld hl, $10e
	call FarCall
Func_59e3b: ; 59e3b (16:5e3b)
	ld hl, $0
Func_59e3e: ; 59e3e (16:5e3e)
	pop bc
	pop bc
	pop bc
	ret

Data_59e42:
	db "(しょしﾞきん)", $0

Data_59e4b:
	db "(とうし)レヘﾞル", $0

Data_59e55:
	db " "
	TX_SNUM
	db $0

Data_59e59:
	db "2000G (ひつようてﾞす)", $0

Data_59e69:
	db "(とうしを おこないますか)?", $0

Func_59e79:
	push hl
	add sp, -$5c
	ld hl, sp+$5c
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	write_hl_to_sp_plus $54
	read_hl_from_sp_plus $54
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $54
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld a, l
	ld hl, sp+$5c
	ld [hl], a
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	write_hl_to_sp_plus $5c
	read_hl_from_sp_plus $5c
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	ld hl, sp+$59
	ld [hl], $0
Func_59ee3: ; 59ee3 (16:5ee3)
	ld hl, sp+$59
	ld a, [hl]
	cp $3
	jp nc, Func_59f7b
	ld hl, sp+$59
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_59f71
	ld hl, sp+$58
	ld [hl], $0
Func_59f09: ; 59f09 (16:5f09)
	ld hl, sp+$58
	ld a, [hl]
	cp $4
	jp nc, Func_59f71
	ld hl, sp+$58
	ld c, [hl]
	ld b, $0
	ld hl, sp+$59
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$5c
	cp [hl]
	jp nz, Func_59f67
	set_farcall_addrs_hli Func_6bbf3
	ld e, $0
	ld a, $8
	call FarCall
	read_hl_from_sp_plus $5c
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $5c
	call FarCall
	ld hl, $4000
	jp Func_5a0b8

Func_59f67: ; 59f67 (16:5f67)
	ld hl, sp+$58
	ld a, [hl]
	inc a
	ld hl, sp+$58
	ld [hl], a
	jp Func_59f09

Func_59f71: ; 59f71 (16:5f71)
	ld hl, sp+$59
	ld a, [hl]
	inc a
	ld hl, sp+$59
	ld [hl], a
	jp Func_59ee3

Func_59f7b: ; 59f7b (16:5f7b)
	set_farcall_addrs_hli Func_7dfc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, sp+$5c
	ld a, [hl]
	call FarCall
	ld hl, sp+$7
	ld a, [hl]
	ld hl, sp+$5d
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$23
	call GetRobotOrTrainerBaseStats
	read_hl_from_sp_plus $25
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_59fb0
	dec bc
.asm_59fb0
	push bc
	push hl
	ld hl, sp+$58
	call PutLongFromStackToHL
	ld hl, sp+$54
	call PutLongFromHLOnStack
	ld hl, sp+$61
	ld l, [hl]
	ld h, $0
	ld bc, $0
	push bc
	push hl
	call MultiplyLongsFromStack
	ld hl, $0
	push hl
	ld hl, $2
	push hl
	call StackDivideLongSigned
	ld hl, sp+$58
	call PutLongFromStackToHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld e, $e
	ld a, $1
	call SetStringStartState
	ld hl, sp+$54
	call PutLongFromHLOnStack
	ld hl, Data_5a0c3
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld de, Data_5a0d0
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_5a074
	push hl
	push hl
	ld hl, sp+$58
	call PutLongFromHLOnStack
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $4
	ld hl, sp+$5c
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $54
	ld de, $7
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
	ld a, $4
	call Func_5a963
	jp Func_5a079

Func_5a074: ; 5a074 (16:6074)
	ld a, $3
	call Func_5a963
Func_5a079: ; 5a079 (16:6079)
	read_hl_from_sp_plus $5c
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call Func_2323
	read_hl_from_sp_plus $54
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $54
	ld de, $5
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $5c
	call FarCall
	ld hl, $8000
Func_5a0b8: ; 5a0b8 (16:60b8)
	reg16swap de, hl
	add sp, $5e
	reg16swap de, hl
	ret

Data_5a0c3:
	TX_SNUM
	db "コﾞールトﾞ(てﾞ)", $0

Data_5a0d0:
	db "(かいとるけとﾞ いいかい)?", $0

Func_5a0e0:: ; 5a0e0 (16:60e0)
	push af
	push de
	inc c
	dec c
	jp nz, Func_5a13d
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	call Func_5a149
	cp $ff
	jp nz, Func_5a13a
	ld c, $2
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	call Func_5a149
	cp $ff
	jp nz, Func_5a10a
	ld a, $ff
	jp Func_5a146

Func_5a10a: ; 5a10a (16:610a)
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_fb205
	ld a, $1
	jp Func_5a146

Func_5a13a: ; 5a13a (16:613a)
	jp Func_5a146

Func_5a13d: ; 5a13d (16:613d)
	ld hl, sp+$0
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	call Func_5a149
Func_5a146: ; 5a146 (16:6146)
	pop bc
	pop bc
	ret

Func_5a149: ; 5a149 (16:6149)
	push af
	push de
	push bc
	push bc
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld hl, sp+$3
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	cp $3
	jp z, Func_5a171
	cp $2
	jp nz, Func_5a178
Func_5a171: ; 5a171 (16:6171)
	ld hl, sp+$2
	ld [hl], $50
	jp Func_5a17e

Func_5a178: ; 5a178 (16:6178)
	ld hl, sp+$2
	ld a, [wSaveScratchca6c]
	ld [hl], a
Func_5a17e: ; 5a17e (16:617e)
	ld c, $0
	ld hl, sp+$1
	ld [hl], $ff
	ld hl, sp+$0
	ld [hl], $0
Func_5a188: ; 5a188 (16:6188)
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_5a348
	ld hl, sp+$4
	ld a, [hl]
	cp $3
	jp z, Func_5a272
	cp $2
	jp z, Func_5a272
	cp $1
	jp z, Func_5a1a7
	or a
	jp nz, Func_5a33e
Func_5a1a7: ; 5a1a7 (16:61a7)
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	cp [hl]
	jp nz, Func_5a26f
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_5a1f0
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld a, [hl]
	cp $63
	jp nc, Func_5a1e2
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	add [hl]
	ld [hl], a
	ld hl, sp+$1
	ld [hl], $1
	jp Func_5a1ed

Func_5a1e2: ; 5a1e2 (16:61e2)
	ld hl, sp+$3
	ld a, [hl]
	call GetSRAMBank
	ld a, $ff
	jp Func_5a3db

Func_5a1ed: ; 5a1ed (16:61ed)
	jp Func_5a26a

Func_5a1f0: ; 5a1f0 (16:61f0)
	ld hl, sp+$6
	ld c, [hl]
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld a, [hl]
	sub c
	ld [hl], a
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5a266
	ld hl, sp+$2
	ld a, [hl]
	dec a
	ld hl, sp+$2
	ld [hl], a
	cp $1
	jp c, Func_5a251
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_5a251
	ld hl, sp+$0
	ld c, [hl]
Func_5a225: ; 5a225 (16:6225)
	ld a, c
	cp $13
	jp nc, Func_5a251
	ld e, c
	ld d, $0
	inc de
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld [hl], a
	ld e, c
	ld d, $0
	inc de
	ld hl, wSaveScratchBagItems
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld [hl], a
	inc c
	jp Func_5a225

Func_5a251: ; 5a251 (16:6251)
	ld hl, sp+$2
	ld a, [hl]
	ld [wSaveScratchca6c], a
	xor a
	ld [$ca57], a
	ld hl, sp+$3
	ld a, [hl]
	call GetSRAMBank
	ld a, $1
	jp Func_5a3db

Func_5a266: ; 5a266 (16:6266)
	ld hl, sp+$1
	ld [hl], $1
Func_5a26a: ; 5a26a (16:626a)
	ld c, $1
	jp Func_5a33e

Func_5a26f: ; 5a26f (16:626f)
	jp Func_5a33e

Func_5a272: ; 5a272 (16:6272)
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	cp [hl]
	jp nz, Func_5a33e
	ld hl, sp+$4
	ld a, [hl]
	cp $2
	jp nz, Func_5a2d1
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld a, [hl]
	cp $63
	jp nc, Func_5a2ce
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	add [hl]
	ld [hl], a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld a, [hl]
	cp $64
	jp c, Func_5a2ca
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld [hl], $63
Func_5a2ca: ; 5a2ca (16:62ca)
	ld hl, sp+$1
	ld [hl], $1
Func_5a2ce: ; 5a2ce (16:62ce)
	jp Func_5a33c

Func_5a2d1: ; 5a2d1 (16:62d1)
	ld hl, sp+$6
	ld c, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld a, [hl]
	sub c
	ld [hl], a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld a, [hl]
	or a
	jp nz, Func_5a338
	ld hl, sp+$2
	ld a, [hl]
	dec a
	ld hl, sp+$0
	cp [hl]
	jp z, Func_5a329
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	dec hl
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2 + 2
	add hl, de
	push hl
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	pop de
	call CopyFromDEtoHL
Func_5a329: ; 5a329 (16:6329)
	xor a
	ld [$cc32], a
	ld hl, sp+$3
	ld a, [hl]
	call GetSRAMBank
	ld a, $1
	jp Func_5a3db

Func_5a338: ; 5a338 (16:6338)
	ld hl, sp+$1
	ld [hl], $1
Func_5a33c: ; 5a33c (16:633c)
	ld c, $1
Func_5a33e: ; 5a33e (16:633e)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_5a188

Func_5a348: ; 5a348 (16:6348)
	inc c
	dec c
	jp nz, Func_5a3d2
	ld hl, sp+$4
	ld a, [hl]
	cp $2
	jp z, Func_5a389
	or a
	jp nz, Func_5a3d2
	ld hl, sp+$2
	ld a, [hl]
	cp $14
	jp nc, Func_5a386
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItems
	add hl, de
	ld [hl], a
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, wSaveScratchBagItemQuantities
	add hl, de
	ld [hl], a
	ld a, [wSaveScratchca6c]
	inc a
	ld [wSaveScratchca6c], a
	ld hl, sp+$1
	ld [hl], $1
Func_5a386: ; 5a386 (16:6386)
	jp Func_5a3d2

Func_5a389: ; 5a389 (16:6389)
	ld hl, sp+$0
	ld [hl], $0
Func_5a38d: ; 5a38d (16:638d)
	ld hl, sp+$0
	ld a, [hl]
	cp $50
	jp nc, Func_5a3d2
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5a3c8
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	ld [hl], a
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, wSaveBlock2
	add hl, de
	inc hl
	ld [hl], a
	ld hl, sp+$1
	ld [hl], $1
	jp Func_5a3d2

Func_5a3c8: ; 5a3c8 (16:63c8)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_5a38d

Func_5a3d2: ; 5a3d2 (16:63d2)
	ld hl, sp+$3
	ld a, [hl]
	call GetSRAMBank
	ld hl, sp+$1
	ld a, [hl]
Func_5a3db: ; 5a3db (16:63db)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_5a3e1:
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_58d20)
	ld de, Data_58d20
	ld hl, Data_58d01
	call FarCall
	ret

Data_5a3f8:
	db $34, $40, $62, $7a, $47, $92, $90, $6b
IF DEF(SUN)
	db $17, $33, $2a, $30, $2d, $2e, $2f, $4
	db $48, $3f, $62, $42, $40, $63, $41, $0
	db $8, $b, $65, $68, $9, $c, $e, $0
	db $4b, $4c, $4d, $32, $91, $0, $0, $0
	db $2, $12, $25, $8f, $0, $0, $0, $0
	db $22, $1b, $18, $2a, $61, $5, $7d, $8d
ENDC
IF DEF(STAR)
	db $17, $33, $2a, $30, $5a, $5c, $6c, $45
	db $48, $3f, $62, $42, $40, $63, $41, $0
	db $9, $c, $65, $68, $8, $b, $e, $0
	db $4b, $4c, $4d, $32, $91, $0, $0, $0
	db $57, $12, $25, $8f, $0, $0, $0, $0
	db $24, $1b, $18, $2a, $61, $46, $14, $8d
ENDC
	db $56, $4e, $23, $3, $79, $60, $27, $36
	db $3, $0, $5, $0, $a, $0, $f, $0
	db $14, $0, $1e, $0, $7, $0, $7, $0

Data_5a448:
	db $8, $7, $6, $5, $4, $3, $2, $1
	db $8, $7, $6, $5, $4, $3, $2, $1
	db $7, $6, $5, $4, $3, $2, $1, $0
	db $7, $6, $5, $4, $3, $2, $1, $0
	db $5, $4, $3, $2, $1, $0, $0, $0
	db $4, $3, $2, $1, $0, $0, $0, $0
	db $8, $7, $6, $5, $4, $3, $2, $1
	db $8, $7, $6, $5, $4, $3, $2, $1
	db $1, $2, $3, $4, $5, $6, $7, $8
	db $1, $2, $3, $4, $5, $6, $7, $8
	db $0, $1, $2, $3, $4, $5, $6, $7
	db $0, $1, $2, $3, $4, $5, $6, $7
	db $0, $0, $0, $1, $2, $3, $4, $5
	db $0, $0, $0, $0, $1, $2, $3, $4
	db $1, $2, $3, $4, $5, $6, $7, $8
	db $1, $2, $3, $4, $5, $6, $7, $8

Func_5a4c8: ; 5a4c8 (16:64c8)
	push hl
	add sp, -$24
	ld hl, sp+$24
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push bc
	call WriteHLToSPPlus8
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	ld de, wcb33
	add hl, de
	ld c, [hl]
	pop af
	push bc
	call GetSRAMBank
	ld e, $7
	ld a, [wc79a]
	cp $1
	jp nz, Func_5a528
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a448
	add hl, de
	ld e, [hl]
	ld hl, sp+$29
	ld [hl], e
	ld e, $8
	jp Func_5a57e

Func_5a528: ; 5a528 (16:6528)
	ld a, [wc790]
	or a
	jp z, Func_5a537
	ld a, [wc790]
	cp $8
	jp nz, Func_5a53e
Func_5a537: ; 5a537 (16:6537)
	ld hl, sp+$29
	ld [hl], $0
	jp Func_5a57e

Func_5a53e: ; 5a53e (16:653e)
	ld a, [wc790]
	cp $1
	jp c, Func_5a56b
	ld a, [wc790]
	cp $8
	jp nc, Func_5a56b
	push de
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a448
	add hl, de
	ld a, [wc790]
	ld e, a
	ld d, $0
	add hl, de
	ld a, [hl]
	ld hl, sp+$2b
	ld [hl], a
	pop de
	jp Func_5a57e

Func_5a56b: ; 5a56b (16:656b)
	push de
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a448
	add hl, de
	ld e, [hl]
	ld hl, sp+$2b
	ld [hl], e
	pop de
Func_5a57e: ; 5a57e (16:657e)
	pop bc
	push de
	inc c
	dec c
	jp nz, Func_5a589
	xor a
	jp Func_5a59c

Func_5a589: ; 5a589 (16:6589)
	dec c
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, $6488
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld a, [hl]
Func_5a59c: ; 5a59c (16:659c)
	ld hl, sp+$29
	cp [hl]
	jp nc, Func_5a5a5
	ld hl, sp+$29
	ld [hl], a
Func_5a5a5: ; 5a5a5 (16:65a5)
	ld hl, sp+$29
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus10
	ld de, $9
	add hl, de
	ld de, $8
	ld [hl], e
	inc hl
	ld [hl], d
	pop de
	ld a, [wc2f8]
	cp $7
	jp z, Func_5a5dd
	cp $6
	jp z, Func_5a5dd
	or a
	jp nz, Func_5a5eb
	ld a, [wc78c]
	ld d, a
	add a
	add d
	ld e, a
	jp Func_5a5f7

Func_5a5dd: ; 5a5dd (16:65dd)
	ld b, e
	ld a, $8
	ld hl, wc790
	sub [hl]
	call MultiplyAbyB
	ld e, a
	jp Func_5a5f7

Func_5a5eb: ; 5a5eb (16:65eb)
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, $6438
	add hl, de
	ld e, [hl]
Func_5a5f7: ; 5a5f7 (16:65f7)
	push de
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld c, $4
	ld e, $a
	ld hl, $9
	call FarCall
	ld c, $4
	ld e, $a
	ld hl, $a09
	call FarCall
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $0
	call FarCall
	ld bc, $81
	ld de, $14
	ld hl, $8
	call FarCall
	ld de, Data_5a860
	ld hl, $10a
	call PlaceStringDEatCoordHL
	ld de, Data_5a867
	ld hl, $b0a
	call PlaceStringDEatCoordHL
	ld hl, sp+$4
	call PutLongFromHLOnStack
	ld hl, $b0b
	call Func_594a4
	pop bc
	pop bc
	ld c, $0
	pop de
Func_5a672: ; 5a672 (16:6672)
	ld a, c
	ld hl, sp+$27
	cp [hl]
	jp nc, Func_5a72a
	push de
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop bc
	push af
	push bc
	set_farcall_addrs_hli Func_15ad6
	pop bc
	push bc
	ld hl, sp+$e
	push hl
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a3f8
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $5ff
	add hl, de
	pop de
	ld c, $6
	call FarCall
	pop bc
	pop af
	push bc
	call GetSRAMBank
	pop bc
	push bc
	ld a, c
	ld b, $4
	call DivideAbyB
	add a
	ld d, a
	add a
	add a
	add d
	add $2
	ld l, a
	pop bc
	pop de
	push bc
	push de
	ld a, c
	and $b
	add a
	inc a
	ld e, a
	ld a, l
	call SetStringStartState
	pop de
	ld a, e
	cp $a
	jp nc, Func_5a6fc
	push de
	ld l, e
	ld h, $0
	push hl
	ld hl, Data_5a86d
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
	jp Func_5a70b

Func_5a6fc: ; 5a6fc (16:66fc)
	push de
	ld l, e
	ld h, $0
	push hl
	ld hl, Data_5a872
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
Func_5a70b: ; 5a70b (16:670b)
	push de
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$c
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	pop de
	pop bc
	inc c
	jp Func_5a672

Func_5a72a: ; 5a72a (16:672a)
	pop bc
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_5a81d
	ld c, $0
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$28
	ld [hl], $0
Func_5a759: ; 5a759 (16:6759)
	ld hl, sp+$28
	ld a, [hl]
	cp $4
	jp nc, Func_5a787
	ld hl, sp+$28
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_5a77d
	jp Func_5a787

Func_5a77d: ; 5a77d (16:677d)
	ld hl, sp+$28
	ld a, [hl]
	inc a
	ld hl, sp+$28
	ld [hl], a
	jp Func_5a759

Func_5a787: ; 5a787 (16:6787)
	pop af
	call GetSRAMBank
	pop bc
	ld hl, sp+$24
	ld a, [hl]
	cp $4
	jp nz, Func_5a796
	ld c, $ff
Func_5a796: ; 5a796 (16:6796)
	ld a, c
	cp $ff
	jp nz, Func_5a7b6
	callba_hli Func_7d01
	cp $ff
	jp nz, Func_5a7b4
	ld c, $ff
	jp Func_5a7b6

Func_5a7b4: ; 5a7b4 (16:67b4)
	ld c, $0
Func_5a7b6: ; 5a7b6 (16:67b6)
	push bc
	ld a, c
	cp $ff
	jp z, Func_5a806
	ld de, Data_5a876
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_5a887
	ld hl, $110
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_50604
	call GetHLAtSPPlus8
	call FarCall
	call GetHLAtSPPlus8
	ld de, $b
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	call Func_5aa2f
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	jp Func_5a819

Func_5a806: ; 5a806 (16:6806)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	xor a
	call Func_5a963
	call Func_3af6
Func_5a819: ; 5a819 (16:6819)
	pop bc
	jp Func_5a833

Func_5a81d: ; 5a81d (16:681d)
	push bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld a, $1
	call Func_5a963
	call Func_3af6
	pop bc
Func_5a833: ; 5a833 (16:6833)
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_5a852
	ld a, c
	cp $ff
	jp z, Func_5a852
	ld hl, $4000
	jp Func_5a855

Func_5a852: ; 5a852 (16:6852)
	ld hl, -1
Func_5a855: ; 5a855 (16:6855)
	reg16swap de, hl
	add sp, $26
	reg16swap de, hl
	ret

Data_5a860:
	db "(ねたﾞん)", $0

Data_5a867:
	db "(しきん)", $0

Data_5a86d:
	db "L "
	TX_SNUM
	db $0

Data_5a872:
	db "L"
	TX_SNUM
	db $0

Data_5a876:
	db "(わかﾞ) (けんきゅうしﾞょ)", $0

Data_5a887:
	db "(しﾞまんの) ロホﾞホﾟン(たﾞよ)", $0

Pointers_5a89b:
	dw Data_5a89f
	dw $0

Data_5a89f:
	db "(これいしﾞょう) ロホﾞホﾟン(は かえないよ)", $0

Pointers_5a8b9:
	dw Data_5a8bd
	dw $0

Data_5a8bd:
	db "(こﾞめん またﾞてﾞきてないんたﾞ)", $0

Pointers_5a8d1:
	dw Data_5a8d5
	dw $0

Data_5a8d5:
	db "(おかねかﾞ たりないよ)", $0

Pointers_5a8e3:
	dw Data_5a8e9
	dw Data_5a8f0
	dw $0

Data_5a8e9:
	db "(そうかい)", $0

Data_5a8f0:
	db "(それは さﾞんねんたﾞね)", $0

Pointers_5a8ff:
	dw Data_5a905
	dw Data_5a91c
	dw $0

Data_5a905:
	db "(ありかﾞとう けんきゅうに やくたﾞつよ)", $0

Data_5a91c:
	db "(ほかにも うってくれるかい?)", $0

Pointers_5a92d:
	dw Data_5a931
	dw $0

Data_5a931:
	db "(ありかﾞとう つくったかいかﾞ あったね)", $0

Pointers_5a948:
	dw Data_5a94e
	dw Data_5a955
	dw $0

Data_5a94e:
	db "(そうかい)", $0

Data_5a955:
	db "(ほかにも ようはある?)", $0

Func_5a963: ; 5a963 (16:6963)
	push af
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	pop af
	cp $6
	jp z, Func_5aa07
	cp $5
	jp z, Func_5a9f9
	cp $4
	jp z, Func_5a9eb
	cp $3
	jp z, Func_5a9dd
	cp $2
	jp z, Func_5a9cf
	cp $1
	jp z, Func_5a9c1
	or a
	jp nz, Func_5aa12
	ld c, $16
	ld de, Pointers_5a89b
	ld hl, $10e
	call FarCall
	jp Func_5aa12

Func_5a9c1: ; 5a9c1 (16:69c1)
	ld c, $16
	ld de, Pointers_5a8b9
	ld hl, $10e
	call FarCall
	jp Func_5aa12

Func_5a9cf: ; 5a9cf (16:69cf)
	ld c, $16
	ld de, Pointers_5a8d1
	ld hl, $10e
	call FarCall
	jp Func_5aa12

Func_5a9dd: ; 5a9dd (16:69dd)
	ld c, $16
	ld de, Pointers_5a8e3
	ld hl, $10e
	call FarCall
	jp Func_5aa12

Func_5a9eb: ; 5a9eb (16:69eb)
	ld c, $16
	ld de, Pointers_5a8ff
	ld hl, $10e
	call FarCall
	jp Func_5aa12

Func_5a9f9: ; 5a9f9 (16:69f9)
	ld c, $16
	ld de, Pointers_5a92d
	ld hl, $10e
	call FarCall
	jp Func_5aa12

Func_5aa07: ; 5aa07 (16:6a07)
	ld c, $16
	ld de, Pointers_5a948
	ld hl, $10e
	call FarCall
Func_5aa12: ; 5aa12 (16:6a12)
	ret

Func_5aa13: ; 5aa13 (16:6a13)
	ld de, $2
	jp Func_59724

Func_5aa19: ; 5aa19 (16:6a19)
	ld de, $3
	jp Func_59724

Data_5aa1f:
	dr $5aa1f, $5aa2f

Func_5aa2f: ; 5aa2f (16:6a2f)
	add sp, -$34
	push af
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	ld de, wcb33
	add hl, de
	ld a, [hl]
	ld a, c
	call GetSRAMBank
	pop af
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a3f8
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call GetRobotOrTrainerBaseStats
	ld a, [wc79a]
	cp $1
	jp nz, Func_5aa7c
	ld l, $8
	jp Func_5aa7e

Func_5aa7c: ; 5aa7c (16:6a7c)
	ld l, $7
Func_5aa7e: ; 5aa7e (16:6a7e)
	ld a, [wc2f8]
	cp $7
	jp z, Func_5aa98
	cp $6
	jp z, Func_5aa98
	or a
	jp nz, Func_5aaa5
	ld a, [wc78c]
	ld d, a
	add a
	add d
	jp Func_5aab1

Func_5aa98: ; 5aa98 (16:6a98)
	ld b, l
	ld a, $8
	ld hl, wc790
	sub [hl]
	call MultiplyAbyB
	jp Func_5aab1

Func_5aaa5: ; 5aaa5 (16:6aa5)
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_5aa1f
	add hl, de
	ld a, [hl]
Func_5aab1: ; 5aab1 (16:6ab1)
	ld l, a
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_5aabe
	dec bc
.asm_5aabe
	push bc
	push hl
	call GetHLAtSPPlus6
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_5aacd
	dec bc
.asm_5aacd
	push bc
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$33
	call PutLongFromStackToHL
	ld hl, sp+$2f
	call PutLongFromHLOnStack
	ld hl, $10b
	call Func_594a4
	pop bc
	pop bc
	add sp, $34
	ret

Data_5aae7:
	dr $5aae7, $5aaf7

Func_5aaf7: ; 5aaf7 (16:6af7)
	push hl
	add sp, -$38
	ld hl, sp+$38
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$38
	ld [hl], a
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	ld de, wcb33
	add hl, de
	ld a, [hl]
	ld hl, sp+$31
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	pop af
	call GetSRAMBank
	ld hl, sp+$38
	ld c, [hl]
	ld b, $0
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a3f8
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call GetRobotOrTrainerBaseStats
	ld a, [wc79a]
	cp $1
	jp nz, Func_5ab61
	ld l, $8
	jp Func_5ab63

Func_5ab61: ; 5ab61 (16:6b61)
	ld l, $7
Func_5ab63: ; 5ab63 (16:6b63)
	ld a, [wc2f8]
	cp $7
	jp z, Func_5ab80
	cp $6
	jp z, Func_5ab80
	or a
	jp nz, Func_5ab90
	ld hl, sp+$37
	ld a, [wc78c]
	ld d, a
	add a
	add d
	ld [hl], a
	jp Func_5ab9f

Func_5ab80: ; 5ab80 (16:6b80)
	ld b, l
	ld a, $8
	ld hl, wc790
	sub [hl]
	call MultiplyAbyB
	ld hl, sp+$37
	ld [hl], a
	jp Func_5ab9f

Func_5ab90: ; 5ab90 (16:6b90)
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_5aae7
	add hl, de
	ld e, [hl]
	ld hl, sp+$37
	ld [hl], e
Func_5ab9f: ; 5ab9f (16:6b9f)
	ld hl, sp+$37
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_5abae
	dec bc
.asm_5abae
	push bc
	push hl
	call GetHLAtSPPlus6
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_5abbd
	dec bc
.asm_5abbd
	push bc
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$37
	call PutLongFromStackToHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld de, Data_5ac60
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_5ac4d
	ld hl, sp+$33
	call PutLongFromHLOnStack
	ld hl, sp+$33
	call PutLongFromHLOnStack
.asm_5ac18
	call CompareStackLongs_Signed
	jp nc, Func_5ac45
	ld hl, sp+$37
	ld e, [hl]
	ld hl, sp+$38
	ld a, [hl]
	call Func_5ac68
	push hl
	push hl
	ld hl, sp+$37
	call PutLongFromHLOnStack
	ld hl, rIE
	push hl
	ld hl, rIE
	push hl
	call MultiplyLongsFromStack
	call AdjustMoney
	pop bc
	pop bc
	pop bc
	pop bc
	jp Func_5ac4a

Func_5ac45: ; 5ac45 (16:6c45)
	ld a, $2
	call Func_5a963
Func_5ac4a: ; 5ac4a (16:6c4a)
	jp Func_5ac52

Func_5ac4d: ; 5ac4d (16:6c4d)
	ld a, $3
	call Func_5a963
Func_5ac52: ; 5ac52 (16:6c52)
	ld hl, $8000
	reg16swap de, hl
	add sp, $3a
	reg16swap de, hl
	ret

Data_5ac60:
	db "(かうかい?)", $0

Func_5ac68: ; 5ac68 (16:6c68)
	add sp, -$24
	push de
	push af
	ld a, $5
	call Func_5a963
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld de, Data_5adc1
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld c, l
	ld b, h
	pop af
	ld hl, wc2f8
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, Data_5a3f8
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld l, [hl]
	pop de
	ld a, c
	or b
	jp nz, Func_5ada8
	push hl
	push de
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$6
	ld [hl], $0
Func_5acde: ; 5acde (16:6cde)
	ld hl, sp+$6
	ld a, [hl]
	cp $4
	jp nc, Func_5ad0c
	ld hl, sp+$6
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_5ad02
	jp Func_5ad0c

Func_5ad02: ; 5ad02 (16:6d02)
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
	jp Func_5acde

Func_5ad0c: ; 5ad0c (16:6d0c)
	pop af
	call GetSRAMBank
	ld hl, sp+$4
	ld a, [hl]
	cp $4
	jp nz, Func_5ad4a
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$5
	reg16swap de, hl
	ld a, $3
	call FarCall
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $1
	ld a, $3
	call FarCall
	ld a, $3
	ld [wc2e9], a
	jp Func_5ad50

Func_5ad4a: ; 5ad4a (16:6d4a)
	ld hl, sp+$4
	ld a, [hl]
	ld [wc2e9], a
Func_5ad50: ; 5ad50 (16:6d50)
	set_farcall_addrs_hli Func_31bbe
	pop de
	pop hl
	ld c, e
	ld a, l
	ld e, $0
	call FarCall
	set_farcall_addrs_hli Func_320d8
	xor a
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nz, Func_5ada5
	set_farcall_addrs_hli Func_31bbe
	ld c, $1
	ld e, $2
	ld a, $3
	call FarCall
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$1
	reg16swap de, hl
	ld a, $3
	call FarCall
Func_5ada5: ; 5ada5 (16:6da5)
	jp Func_5adbe

Func_5ada8: ; 5ada8 (16:6da8)
	push hl
	push de
	set_farcall_addrs_hli Func_31af1
	pop de
	pop hl
	ld c, e
	ld a, l
	ld e, $0
	call FarCall
Func_5adbe: ; 5adbe (16:6dbe)
	add sp, $24
	ret

Data_5adc1:
	db "(ひかりを あてるかい)", $0

Func_5adce: ; 5adce (16:6dce)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld a, $6
	call Func_5a963
	call Func_3af6
	ld hl, -1
	ret

Func_5ade6:
	push hl
	ld hl, -$10c
	add hl, sp
	ld sp, hl
	ld hl, $10c
	add hl, sp
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $10d
	read_hl_from_sp_plus $10d
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $10d
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, [bc]
	ld hl, $10a
	add hl, sp
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	ld hl, $109
	add hl, sp
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	inc hl
	ld a, [hl]
	ld hl, $108
	add hl, sp
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	read_hl_from_sp_plus $10f
	ld de, $f
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli AllocateMemory
	ld hl, $8c
	call FarCall
	ld c, l
	ld b, h
	read_hl_from_sp_plus $10f
	ld de, $f
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $90
	add hl, sp
	ld [hl], $0
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, $10b
	add hl, sp
	ld [hl], $0
Func_5ae7e: ; 5ae7e (16:6e7e)
	ld hl, $10b
	add hl, sp
	ld a, [hl]
	cp $4
	jp nc, Func_5aef0
	ld hl, $10b
	add hl, sp
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_5aee2
	set_farcall_addrs_hli Func_15ad6
	ld hl, $92
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, $93
	add hl, sp
	add hl, de
	reg16swap de, hl
	ld hl, $10b
	add hl, sp
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	inc h
	ld c, $6
	call FarCall
	ld hl, $92
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $92
	add hl, sp
	ld [hl], a
Func_5aee2: ; 5aee2 (16:6ee2)
	ld hl, $10b
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $10b
	add hl, sp
	ld [hl], a
	jp Func_5ae7e

Func_5aef0: ; 5aef0 (16:6ef0)
	pop af
	call GetSRAMBank
	ld a, [wc319]
	cp $81
	jp nz, Func_5af6c
	set_farcall_addrs_hli Func_7748
	ld c, $1
	read_hl_from_sp_plus $10f
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $8c
	call FarCall
	xor a
Func_5af1c: ; 5af1c (16:6f1c)
	cp $4
	jp nc, Func_5af50
	push af
	set_farcall_addrs_hli GetRobotInParty
	pop af
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	reg16swap de, hl
	call FarCall
	pop af
	inc a
	jp Func_5af1c

Func_5af50: ; 5af50 (16:6f50)
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $8c
	call FarCall
	jp Func_5afd9

Func_5af6c: ; 5af6c (16:6f6c)
	xor a
Func_5af6d: ; 5af6d (16:6f6d)
	cp $4
	jp nc, Func_5afa1
	push af
	set_farcall_addrs_hli GetRobotInParty
	pop af
	push af
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	reg16swap de, hl
	call FarCall
	pop af
	inc a
	jp Func_5af6d

Func_5afa1: ; 5afa1 (16:6fa1)
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $8c
	call FarCall
	set_farcall_addrs_hli Func_7748
	ld c, $1
	read_hl_from_sp_plus $10f
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $8c
	call FarCall
Func_5afd9: ; 5afd9 (16:6fd9)
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	pop af
	push af
	ld c, a
	ld hl, $10a
	add hl, sp
	ld e, [hl]
	ld hl, $10c
	add hl, sp
	ld a, [hl]
	ld hl, $10b
	add hl, sp
	ld l, [hl]
	ld h, a
	call FarCall
	ld c, $3
	ld e, $5
	ld hl, Init
	call FarCall
	ld c, $5
	ld e, $b
	ld hl, $10c
	call FarCall
	pop af
	ld hl, $108
	add hl, sp
	ld l, [hl]
	push hl
	ld hl, $10b
	add hl, sp
	ld c, [hl]
	ld b, $0
	ld hl, $10c
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $a00
	add hl, de
	add hl, bc
	pop de
	ld c, a
	call FarCall
	ld c, $3
	ld e, $5
	ld hl, $b00
	call FarCall
	ld de, Data_5b1c6
	ld hl, $201
	call PlaceStringDEatCoordHL
	ld de, Data_5b1ce
	ld hl, $c01
	call PlaceStringDEatCoordHL
	ld de, Data_5b1d4
	ld hl, $30d
	call PlaceStringDEatCoordHL
	ld de, Data_5b1e0
	ld hl, $30f
	call PlaceStringDEatCoordHL
	ld hl, $107
	add hl, sp
	ld [hl], $0
Func_5b075: ; 5b075 (16:7075)
	ld hl, $107
	add hl, sp
	ld a, [hl]
	ld hl, $8e
	add hl, sp
	cp [hl]
	jp nc, Func_5b0c9
	set_farcall_addrs_hli Func_16019
	ld hl, $107
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, $8f
	add hl, sp
	add hl, de
	ld c, l
	ld b, h
	ld hl, $107
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	inc hl
	inc hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, $3
	call FarCall
	ld hl, $107
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $107
	add hl, sp
	ld [hl], a
	jp Func_5b075

Func_5b0c9: ; 5b0c9 (16:70c9)
	ld hl, $8e
	add hl, sp
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $10d
	ld de, $7
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $10d
	ld de, $9
	add hl, de
	ld de, $4
	ld [hl], e
	inc hl
	ld [hl], d
	xor a
	ld [wc390], a
	ld hl, $107
	add hl, sp
	ld [hl], $0
Func_5b0f5: ; 5b0f5 (16:70f5)
	ld hl, $107
	add hl, sp
	ld a, [hl]
	cp $4
	jp nc, Func_5b196
	read_hl_from_sp_plus $10d
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, $109
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	pop de
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5b188
	ld a, [wc390]
	inc a
	ld [wc390], a
	inc hl
	pop de
	push hl
	pop hl
	push hl
	push hl
	ld hl, $109
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, $91
	add hl, sp
	add hl, de
	pop de
	ld bc, $6
	call FarCopyVideoData
	set_farcall_addrs_hli Func_16019
	ld hl, $107
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, $8f
	add hl, sp
	add hl, de
	ld c, l
	ld b, h
	ld hl, $107
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	inc hl
	inc hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, $d
	call FarCall
Func_5b188: ; 5b188 (16:7188)
	ld hl, $107
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $107
	add hl, sp
	ld [hl], a
	jp Func_5b0f5

Func_5b196: ; 5b196 (16:7196)
	set_farcall_addrs_hli Func_50604
	read_hl_from_sp_plus $10d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	ld hl, $10e
	add hl, sp
	ld sp, hl
	reg16swap de, hl
	ret

Data_5b1c6:
	db "(しﾞふﾞん)", $0

Data_5b1ce:
	db "(あいて)", $0

Data_5b1d4:
	db "(こうかんしﾞっこう)", $0

Data_5b1e0:
	db "(こうかんちゅうし)", $0

Func_5b1eb: ; 5b1eb (16:71eb)
	push bc
	push bc
	push de
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus8
	ld de, $9
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld e, c
	ld d, b
	call CompareHLtoDE
	jp nc, Func_5b233
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
Func_5b233: ; 5b233 (16:7233)
	pop bc
	call GetHLAtSPPlus6
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop de
	ld a, e
	sub $3
	or d
	jp z, Func_5b32f
	ld a, e
	sub $2
	or d
	jp z, Func_5b31a
	ld a, e
	dec a
	or d
	jp z, Func_5b2b0
	ld a, e
	or d
	jp nz, Func_5b35f
	ld e, c
	ld d, b
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_5b272
	ld l, c
	ld h, b
	ld de, $4
	call CompareHLtoDE
	jp nc, Func_5b272
	dec bc
	jp Func_5b2ad

Func_5b272: ; 5b272 (16:7272)
	ld e, c
	ld d, b
	ld hl, $4
	call CompareHLtoDE
	jp nc, Func_5b28c
	ld l, c
	ld h, b
	ld de, $8
	call CompareHLtoDE
	jp nc, Func_5b28c
	dec bc
	jp Func_5b2ad

Func_5b28c: ; 5b28c (16:728c)
	ld a, c
	sub $8
	or b
	jp nz, Func_5b2a3
	call GetHLAtSPPlus4
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	dec de
	ld c, e
	ld b, d
	jp Func_5b2ad

Func_5b2a3: ; 5b2a3 (16:72a3)
	ld a, c
	sub $9
	or b
	jp nz, Func_5b2ad
	ld bc, $8
Func_5b2ad: ; 5b2ad (16:72ad)
	jp Func_5b35f

Func_5b2b0: ; 5b2b0 (16:72b0)
	call GetHLAtSPPlus4
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	dec de
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_5b2c7
	inc bc
	jp Func_5b317

Func_5b2c7: ; 5b2c7 (16:72c7)
	call GetHLAtSPPlus4
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	dec de
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nz, Func_5b2e0
	ld bc, $8
	jp Func_5b317

Func_5b2e0: ; 5b2e0 (16:72e0)
	ld a, c
	sub $8
	or b
	jp nz, Func_5b2ed
	ld bc, $9
	jp Func_5b317

Func_5b2ed: ; 5b2ed (16:72ed)
	ld l, c
	ld h, b
	ld de, $4
	call CompareHLtoDE
	jp c, Func_5b317
	ld e, c
	ld d, b
	ld hl, $7
	call CompareHLtoDE
	jp c, Func_5b317
	ld l, c
	ld h, b
	dec hl
	dec hl
	dec hl
	dec hl
	ld a, [wc390]
	ld e, a
	ld d, $0
	dec de
	call CompareHLtoDE
	jp nc, Func_5b317
	inc bc
Func_5b317: ; 5b317 (16:7317)
	jp Func_5b35f

Func_5b31a: ; 5b31a (16:731a)
	ld l, c
	ld h, b
	ld a, [wc390]
	ld e, a
	ld d, $0
	call CompareHLtoDE
	jp nc, Func_5b32c
	inc bc
	inc bc
	inc bc
	inc bc
Func_5b32c: ; 5b32c (16:732c)
	jp Func_5b35f

Func_5b32f: ; 5b32f (16:732f)
	ld e, c
	ld d, b
	ld hl, $3
	call CompareHLtoDE
	jp nc, Func_5b35f
	ld l, c
	ld h, b
	ld de, $8
	call CompareHLtoDE
	jp nc, Func_5b35f
	call GetHLAtSPPlus4
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	dec hl
	dec hl
	dec hl
	dec hl
	call CompareHLtoDE
	jp nc, Func_5b35f
	dec bc
	dec bc
	dec bc
	dec bc
Func_5b35f: ; 5b35f (16:735f)
	push bc
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli Func_50604
	call GetHLAtSPPlus6
	call FarCall
	pop bc
	ld a, [wc307]
	cp $ff
	jp z, Func_5b3b9
	ld l, c
	ld h, b
	ld a, [wc307]
	ld e, a
	ld d, $0
	call CompareHLtoDE
	jp z, Func_5b3b9
	ld a, [wc307]
	add a
	add $4
	ld e, a
	ld a, $2
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_5b3cb
	push hl
	call PlaceString
	pop bc
	pop bc
Func_5b3b9: ; 5b3b9 (16:73b9)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, $4000
	pop bc
	pop bc
	ret

Data_5b3cb:
	TX_STACK
	db $0

Func_5b3ce:
	ld de, $2
	jp Func_5b1eb

Func_5b3d4:
	ld de, $3
	jp Func_5b1eb

Func_5b3da:
	push hl
	add sp, -$4e
	read_hl_from_sp_plus $50
	write_hl_to_sp_plus $4e
	read_hl_from_sp_plus $4e
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	ld a, l
	cp $4
	jp nc, Func_5b414
	ld a, l
	call Func_5b8d8
	jp Func_5b83a

Func_5b414: ; 5b414 (16:7414)
	ld a, l
	cp $8
	jp nc, Func_5b427
	read_hl_from_sp_plus $50
	call Func_5ba6d
	ld hl, $4000
	jp Func_5b83d

Func_5b427: ; 5b427 (16:7427)
	ld a, l
	cp $8
	jp nz, Func_5b7ff
	ld a, [wc307]
	cp $ff
	jp z, Func_5b7f7
	ld a, l
	call Func_5b855
	cp $ff
	jp nz, Func_5b46f
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $4e
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call FarCall
	read_hl_from_sp_plus $4e
	ld de, $f
	add hl, de
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, -1
	jp Func_5b83d

Func_5b46f: ; 5b46f (16:746f)
	ld a, [wc319]
	cp $81
	jp nz, Func_5b4c3
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$23
	reg16swap de, hl
	ld hl, $23
	call FarCall
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc307]
	call FarCall
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $23
	call FarCall
	jp Func_5b50c

Func_5b4c3: ; 5b4c3 (16:74c3)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$0
	reg16swap de, hl
	ld a, [wc307]
	call FarCall
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $23
	call FarCall
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$23
	reg16swap de, hl
	ld hl, $23
	call FarCall
Func_5b50c: ; 5b50c (16:750c)
	ld hl, sp+$4b
	ld [hl], $0
	ld hl, sp+$23
	ld a, [hl]
	cp $ab
	jp c, Func_5b553
	ld hl, sp+$23
	ld a, [hl]
	cp $af
	jp nc, Func_5b553
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_5b530
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp c, Func_5b54c
Func_5b530: ; 5b530 (16:7530)
	set_farcall_addrs_hli Func_52d58
	ld hl, sp+$46
	call FarCall
	cp $4
	jp nc, Func_5b549
	ld hl, sp+$4b
	ld [hl], $1
Func_5b549: ; 5b549 (16:7549)
	jp Func_5b550

Func_5b54c: ; 5b54c (16:754c)
	ld hl, sp+$4b
	ld [hl], $1
Func_5b550: ; 5b550 (16:7550)
	jp Func_5b557

Func_5b553: ; 5b553 (16:7553)
	ld hl, sp+$4b
	ld [hl], $1
Func_5b557: ; 5b557 (16:7557)
	ld a, [wc319]
	cp $81
	jp nz, Func_5b594
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$4a
	reg16swap de, hl
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$4b
	reg16swap de, hl
	ld hl, $1
	call FarCall
	jp Func_5b5c6

Func_5b594: ; 5b594 (16:7594)
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$4b
	reg16swap de, hl
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$4a
	reg16swap de, hl
	ld hl, $1
	call FarCall
Func_5b5c6: ; 5b5c6 (16:75c6)
	ld hl, sp+$4b
	ld a, [hl]
	cp $1
	jp nz, Func_5b7b9
	ld hl, sp+$4a
	ld a, [hl]
	cp $1
	jp nz, Func_5b7b9
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $4e
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call FarCall
	ld a, [wc319]
	cp $81
	jp nz, Func_5b6a8
	ld hl, sp+$23
	ld a, [hl]
	cp $ab
	jp c, Func_5b634
	ld hl, sp+$23
	ld a, [hl]
	cp $af
	jp nc, Func_5b634
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_5b634
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp nc, Func_5b634
	set_farcall_addrs_hli Func_6eff0
	ld e, $0
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
	ld hl, sp+$23
	ld [hl], a
	jp Func_5b6a5

Func_5b634: ; 5b634 (16:7634)
	ld hl, sp+$23
	ld a, [hl]
	cp $ab
	jp c, Func_5b684
	ld hl, sp+$23
	ld a, [hl]
	cp $af
	jp nc, Func_5b684
	set_farcall_addrs_hli Func_52d58
	ld hl, sp+$46
	call FarCall
	ld c, $0
Func_5b656: ; 5b656 (16:7656)
	ld a, c
	cp $4
	jp nc, Func_5b66e
	ld e, c
	ld d, $0
	ld hl, sp+$46
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5b66a
	jp Func_5b66e

Func_5b66a: ; 5b66a (16:766a)
	inc c
	jp Func_5b656

Func_5b66e: ; 5b66e (16:766e)
	push bc
	set_farcall_addrs_hli Func_6ef7f
	pop bc
	ld a, c
	add $ab
	call FarCall
	ld hl, sp+$23
	ld [hl], a
Func_5b684: ; 5b684 (16:7684)
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_5b6a5
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp nc, Func_5b6a5
	set_farcall_addrs_hli Func_6ef0d
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
Func_5b6a5: ; 5b6a5 (16:76a5)
	jp Func_5b752

Func_5b6a8: ; 5b6a8 (16:76a8)
	ld hl, sp+$23
	ld a, [hl]
	cp $ab
	jp c, Func_5b6e1
	ld hl, sp+$23
	ld a, [hl]
	cp $af
	jp nc, Func_5b6e1
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_5b6e1
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp nc, Func_5b6e1
	set_farcall_addrs_hli Func_6eff0
	ld e, $1
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
	ld hl, sp+$23
	ld [hl], a
	jp Func_5b752

Func_5b6e1: ; 5b6e1 (16:76e1)
	ld hl, sp+$0
	ld a, [hl]
	cp $ab
	jp c, Func_5b702
	ld hl, sp+$0
	ld a, [hl]
	cp $af
	jp nc, Func_5b702
	set_farcall_addrs_hli Func_6ef0d
	ld hl, sp+$0
	ld a, [hl]
	call FarCall
Func_5b702: ; 5b702 (16:7702)
	ld hl, sp+$23
	ld a, [hl]
	cp $ab
	jp c, Func_5b752
	ld hl, sp+$23
	ld a, [hl]
	cp $af
	jp nc, Func_5b752
	set_farcall_addrs_hli Func_52d58
	ld hl, sp+$46
	call FarCall
	ld c, $0
Func_5b724: ; 5b724 (16:7724)
	ld a, c
	cp $4
	jp nc, Func_5b73c
	ld e, c
	ld d, $0
	ld hl, sp+$46
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5b738
	jp Func_5b73c

Func_5b738: ; 5b738 (16:7738)
	inc c
	jp Func_5b724

Func_5b73c: ; 5b73c (16:773c)
	push bc
	set_farcall_addrs_hli Func_6ef7f
	pop bc
	ld a, c
	add $ab
	call FarCall
	ld hl, sp+$23
	ld [hl], a
Func_5b752: ; 5b752 (16:7752)
	read_hl_from_sp_plus $33
	write_hl_to_sp_plus $31
	read_hl_from_sp_plus $37
	write_hl_to_sp_plus $35
	ld hl, sp+$39
	ld [hl], $0
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$23
	reg16swap de, hl
	ld a, [wc307]
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	ld e, $0
	ld hl, sp+$23
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	ld e, $1
	ld hl, sp+$23
	ld a, [hl]
	call FarCall
	callba_hli SaveGame
	ld a, $2
	call Func_5b95d
	jp Func_5b7e3

Func_5b7b9: ; 5b7b9 (16:77b9)
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld de, Data_5b848
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
Func_5b7e3: ; 5b7e3 (16:77e3)
	read_hl_from_sp_plus $4e
	ld de, $f
	add hl, de
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, -1
	jp Func_5b83d

Func_5b7f7: ; 5b7f7 (16:77f7)
	ld a, $1
	call Func_5b95d
	jp Func_5b83a

Func_5b7ff: ; 5b7ff (16:77ff)
	ld a, l
	cp $9
	jp nz, Func_5b83a
	ld a, l
	call Func_5b855
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $4e
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call FarCall
	read_hl_from_sp_plus $4e
	ld de, $f
	add hl, de
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, -1
	jp Func_5b83d

Func_5b83a: ; 5b83a (16:783a)
	ld hl, $4000
Func_5b83d: ; 5b83d (16:783d)
	reg16swap de, hl
	add sp, $50
	reg16swap de, hl
	ret

Data_5b848:
	db "(こうかんてﾞきないよ)", $0

Func_5b855: ; 5b855 (16:7855)
	push af
	push bc
	ld a, [wc319]
	cp $81
	jp nz, Func_5b894
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call FarCall
	jp Func_5b8c6

Func_5b894: ; 5b894 (16:7894)
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call FarCall
Func_5b8c6: ; 5b8c6 (16:78c6)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$0
	cp [hl]
	jp nz, Func_5b8d3
	xor a
	jp Func_5b8d5

Func_5b8d3: ; 5b8d3 (16:78d3)
	ld a, $ff
Func_5b8d5: ; 5b8d5 (16:78d5)
	pop bc
	pop bc
	ret

Func_5b8d8: ; 5b8d8 (16:78d8)
	push af
	ld a, [wc307]
	ld hl, sp+$1
	cp [hl]
	jp z, Func_5b913
	ld a, [wc307]
	cp $ff
	jp z, Func_5b90a
	ld a, [wc307]
	add a
	add $4
	ld e, a
	ld a, $2
	call SetStringStartState
	ld hl, Data_5b91a
	push hl
	call PlaceString
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
Func_5b90a: ; 5b90a (16:790a)
	ld hl, sp+$1
	ld a, [hl]
	ld [wc307], a
	jp Func_5b918

Func_5b913: ; 5b913 (16:7913)
	ld a, $ff
	ld [wc307], a
Func_5b918: ; 5b918 (16:7918)
	pop bc
	ret

Data_5b91a:
	db " ", $0

Pointers_5b91c:
	dw Data_5b920
	dw $0

Data_5b920:
	db "(その)ロホﾞホﾟン (は えらへﾞないよ)", $0

Pointers_5b937:
	dw Data_5b93b
	dw $0

Data_5b93b:
	db "ロホﾞホﾟン(を えらんてﾞないよ)", $0

Pointers_5b94e:
	dw Data_5b952
	dw $0

Data_5b952:
	db "(こうかんしたよ!)", $0

Func_5b95d: ; 5b95d (16:795d)
	push af
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	pop hl
	pop af
	push hl
	cp $2
	jp z, Func_5b9df
	cp $1
	jp z, Func_5b9c6
	or a
	jp nz, Func_5b9f5
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5b91c)
	ld de, Pointers_5b91c
	ld hl, $10e
	call FarCall
	jp Func_5b9f5

Func_5b9c6: ; 5b9c6 (16:79c6)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5b937)
	ld de, Pointers_5b937
	ld hl, $10e
	call FarCall
	jp Func_5b9f5

Func_5b9df: ; 5b9df (16:79df)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5b94e)
	ld de, Pointers_5b94e
	ld hl, $10e
	call FarCall
Func_5b9f5: ; 5b9f5 (16:79f5)
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Func_5ba1e:
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop de
	push de
	ld a, $ff
	call Func_5b855
	set_farcall_addrs_hli FreeMemory
	pop de
	push de
	ld hl, $f
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call FarCall
	pop de
	ld hl, $f
	add hl, de
	ld de, -1
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, -1
	ret

Data_5ba65:
	dr $5ba65, $5ba6d

Func_5ba6d: ; 5ba6d (16:7a6d)
	push hl
	add sp, -$70
	ld hl, sp+$70
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push bc
	push hl
	set_farcall_addrs_hli AllocateMemory
	ld hl, $168
	call FarCall
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, $1412
	ld hl, $0
	call BackUpTileMapRectangle
	call FillVisibleAreaWithBlankTile
	call Func_1fbe
	call Func_1f30
	pop de
	pop hl
	push de
	write_hl_to_sp_plus $75
	read_hl_from_sp_plus $75
	ld de, $f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $77
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, -$8c
	add hl, de
	pop de
	add hl, de
	write_hl_to_sp_plus $73
	read_hl_from_sp_plus $73
	ld de, $b
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	call Func_241f
	read_hl_from_sp_plus $73
	inc hl
	reg16swap de, hl
	ld hl, sp+$53
	ld bc, $6
	call FarCopyVideoData
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	read_hl_from_sp_plus $75
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$1e
	call GetRobotOrTrainerBaseStats
	pop af
	call GetSRAMBank
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop de
	pop bc
	push de
	read_hl_from_sp_plus $71
	ld a, [hl]
	cp $ab
	jp c, Func_5bb54
	read_hl_from_sp_plus $71
	ld a, [hl]
	cp $af
	jp nc, Func_5bb54
	push bc
	ld e, $3
	ld a, $2
	call SetStringStartState
	ld hl, Data_5bfb3
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_5bbb7

Func_5bb54: ; 5bb54 (16:7b54)
	set_farcall_addrs_hli AllocateMemory
	ld hl, $400
	call FarCall
	ld c, l
	ld b, h
	push bc
	read_hl_from_sp_plus $73
	ld a, [hl]
	dec a
	ld e, c
	ld d, b
	ld bc, $89b0
	call DecompressRequestRoboponPic
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_7c8a
	pop bc
	push bc
	ld e, c
	ld d, b
	ld hl, $2
	ld c, $2
	call FarCall
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	set_farcall_addrs_hli Func_615be
	read_hl_from_sp_plus $71
	ld a, [hl]
	dec a
	call FarCall
	ld c, a
Func_5bbb7: ; 5bbb7 (16:7bb7)
	push bc
	set_farcall_addrs_hli Func_613fc
	pop bc
	ld a, c
	ld e, $1
	call FarCall
	ld a, [wSystemType]
	cp $1
	jp z, Func_5bbda
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_5bbe3
Func_5bbda: ; 5bbda (16:7bda)
	ld de, $8
	ld hl, Data_5ba65
	call Func_2b7d
Func_5bbe3: ; 5bbe3 (16:7be3)
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$51
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_17e95
	ld c, $8
	ld e, $c
	ld hl, $802
	call FarCall
	ld c, $8
	ld e, $b
	ld hl, $a
	call FarCall
	ld c, $8
	ld e, $9
	ld hl, $b0a
	call FarCall
	ld hl, Data_5bfb7
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $71
	ld de, $7
	add hl, de
	ld c, [hl]
	ld b, $0
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, Data_5bfbb
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli GetBanks
	ld de, BANK(Text_66ea7)
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$21
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Text_66ea7
	add hl, de
	reg16swap de, hl
	ld hl, sp+$53
	ld bc, $7
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$51
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	set_farcall_addrs_hli Func_57cf7
	read_hl_from_sp_plus $71
	ld de, $e
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $71
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $10b
	call FarCall
	read_hl_from_sp_plus $71
	ld de, $12
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $71
	ld de, $10
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $10f
	call FarCall
	ld de, Data_5bfbd
	ld hl, $10f
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $71
	ld de, $c
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $3
	ld hl, $20c
	call Func_2230
	ld hl, Data_5bfbf
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $71
	ld de, $e
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $103
	ld hl, -1
	call Func_2230
	read_hl_from_sp_plus $71
	ld de, $10
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $3
	ld hl, $210
	call Func_2230
	ld hl, Data_5bfc1
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $71
	ld de, $12
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld de, $103
	ld hl, -1
	call Func_2230
	read_hl_from_sp_plus $71
	ld de, $17
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$12
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_5bd62
	ld de, $3e7
Func_5bd62: ; 5bd62 (16:7d62)
	push de
	ld de, Data_5bfc3
	ld hl, $c0b
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $100c
	call Func_2230
	read_hl_from_sp_plus $71
	ld de, $19
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$13
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_5bd97
	ld de, $3e7
Func_5bd97: ; 5bd97 (16:7d97)
	push de
	ld de, Data_5bfcb
	ld hl, $c0d
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $100e
	call Func_2230
	read_hl_from_sp_plus $71
	ld de, $1b
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$14
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_5bdcc
	ld de, $3e7
Func_5bdcc: ; 5bdcc (16:7dcc)
	push de
	ld de, Data_5bfd4
	ld hl, $c0f
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $3
	ld hl, $1010
	call Func_2230
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld c, a
	read_hl_from_sp_plus $71
	ld de, $20
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, e
	and $f
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $6ef6
	add hl, de
	push hl
	ld a, c
	call GetSRAMBank
	pop de
	ld hl, sp+$51
	ld bc, $5
	call FarCopyVideoData
	ld de, Data_5bfdc
	ld hl, $903
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$51
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	read_hl_from_sp_plus $73
	ld de, $22
	add hl, de
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, $3ff9
	add hl, de
	reg16swap de, hl
	ld hl, sp+$53
	call LiteralStringInTree
	ld e, $5
	ld a, $9
	call SetStringStartState
	ld hl, sp+$53
	push hl
	ld hl, Data_5bfe2
	push hl
	call PlaceString
	pop bc
	pop bc
	pop af
	call GetSRAMBank
	ld hl, sp+$1f
	ld a, [hl]
	ld hl, sp+$4d
	push hl
	read_hl_from_sp_plus $73
	ld de, $7
	add hl, de
	ld l, [hl]
	ld h, a
	pop de
	call Func_270a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $71
	ld de, $7
	add hl, de
	ld a, [hl]
	cp $63
	jp nz, Func_5bebc
	ld hl, $0
	push hl
	ld hl, $0
	push hl
	ld hl, sp+$4d
	call PutLongFromStackToHL
	jp Func_5bedb

Func_5bebc: ; 5bebc (16:7ebc)
	ld l, c
	ld h, b
	ld bc, $0
	push bc
	push hl
	read_hl_from_sp_plus $75
	ld de, $14
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld bc, $0
	push bc
	push de
	call SubtractLongsFromStack
	ld hl, sp+$4d
	call PutLongFromStackToHL
Func_5bedb: ; 5bedb (16:7edb)
	ld e, $6
	ld a, $9
	call SetStringStartState
	ld hl, sp+$4d
	call PutLongFromHLOnStack
	read_hl_from_sp_plus $75
	ld de, $14
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld bc, $0
	push bc
	push de
	call AddLongsFromStack
	ld hl, Data_5bfe9
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld e, $6
	ld a, $9
	call SetStringStartState
	ld hl, sp+$4d
	call PutLongFromHLOnStack
	ld hl, Data_5bff1
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld e, $8
	ld a, $b
	call SetStringStartState
	ld hl, sp+$49
	call PutLongFromHLOnStack
	ld hl, Data_5bff9
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli WaitAorBButtonOverworld_17a44
	ld a, $3
	ld [wc39a], a
	call FillVisibleAreaWithBlankTile
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld a, [wSystemType]
	cp $1
	jp z, Func_5bf6e
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_5bf82
Func_5bf6e: ; 5bf6e (16:7f6e)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_5bf82: ; 5bf82 (16:7f82)
	pop de
	push de
	ld c, e
	ld b, d
	ld de, $1412
	ld hl, $0
	call RestoreTileMapRectangle
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call Func_1f7b
	call Func_2009
	add sp, $72
	ret

Data_5bfb3:
	db "???", $0

Data_5bfb7:
	db ":LV", $0

Data_5bfbb:
	db " ", $0

Data_5bfbd:
	db "E", $0

Data_5bfbf:
	db "/", $0

Data_5bfc1:
	db "/", $0

Data_5bfc3:
	db "(こうけﾞき)", $0

Data_5bfcb:
	db "(ほﾞうきﾞょ)", $0

Data_5bfd4:
	db "(すはﾞやさ)", $0

Data_5bfdc:
	db "タイフﾟ:", $0

Data_5bfe2:
	db "CPU:"
	TX_CALL
	db $0

Data_5bfe9:
	db "E*P:"
	TX_UNUM
	db $0

Data_5bff1:
	db "E*P:"
	TX_UNUM
	db $0

Data_5bff9:
	db "(あと)"
	TX_SNUM
	db $0

SECTION "Bank 17", ROMX, BANK [$17]
Func_5c000:
	ret

Data_5c001:
	dr $5c001, $5c009

Data_5c009:
	dr $5c009, $5c011

Data_5c011:
	dr $5c011, $5c027

Func_5c027:
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_5c03b:
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_5c04f: ; 5c04f (17:404f)
	push af
	set_farcall_addrs_hli RandomRange
	pop af
	call FarCall
	ret

Func_5c060:
	callba_hli Func_5ec5e
	ret

Func_5c06f:
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_e28f
	pop bc
	pop de
	pop hl
	jp FarCall

Func_5c083:
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	ret

INCLUDE "engine/pics/load_pic.asm"

Func_5c328: ; 5c328 (17:4328)
	push af
	push de
	set_farcall_addrs_hli Func_62a3
	pop de
	push de
	ld hl, sp+$3
	ld a, [hl]
	ld l, e
	ld h, a
	ld de, $1311
	ld bc, $0
	call FarCall
	pop de
	ld a, [wSystemType]
	cp $11
	jp nz, Func_5c37b
	push de
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	pop de
	ld hl, sp+$1
	ld a, [hl]
	ld l, e
	ld h, a
	ld de, $1323
	ld bc, $12
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_5c37b: ; 5c37b (17:437b)
	call WaitVideoTransfer
	pop bc
	ret

Data_5c380:
	dr $5c380, $5c386

Func_5c386: ; 5c386 (17:4386)
	add sp, -$3a
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	push af
	ld hl, sp+$34
	ld [hl], $0
Func_5c3a3: ; 5c3a3 (17:43a3)
	ld hl, sp+$34
	ld a, [hl]
	cp $2
	jp nc, Func_5c43a
	push bc
	ld hl, sp+$36
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	ld hl, sp+$36
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$39
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld e, c
	ld d, b
	ld hl, $5e
	add hl, de
	ld a, [hl]
	cp $6
	jp c, Func_5c3f5
	ld hl, sp+$36
	ld e, [hl]
	ld d, $0
	ld hl, sp+$34
	add hl, de
	ld [hl], $5
	jp Func_5c40a

Func_5c3f5: ; 5c3f5 (17:43f5)
	ld hl, $5e
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, Data_5c380
	add hl, de
	ld a, [hl]
	ld hl, sp+$36
	ld e, [hl]
	ld d, $0
	ld hl, sp+$34
	add hl, de
	ld [hl], a
Func_5c40a: ; 5c40a (17:440a)
	pop bc
	push bc
	ld hl, $17
	add hl, bc
	ld l, [hl]
	push hl
	ld hl, sp+$38
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	pop de
	call Func_241f
	ld hl, sp+$36
	ld a, [hl]
	inc a
	ld hl, sp+$36
	ld [hl], a
	pop bc
	ld hl, $2f
	add hl, bc
	ld c, l
	ld b, h
	jp Func_5c3a3

Func_5c43a: ; 5c43a (17:443a)
	pop af
	cp $1
	jp nz, Func_5c447
	ld hl, sp+$34
	ld [hl], $1
	jp Func_5c44b

Func_5c447: ; 5c447 (17:4447)
	ld hl, sp+$34
	ld [hl], $0
Func_5c44b: ; 5c44b (17:444b)
	ld hl, sp+$34
	ld a, [hl]
	xor $1
	ld hl, sp+$33
	ld [hl], a
	ld hl, sp+$34
	ld e, [hl]
	ld d, $0
	ld hl, sp+$30
	add hl, de
	ld a, [hl]
	ld hl, sp+$33
	ld e, [hl]
	ld d, $0
	ld hl, sp+$30
	add hl, de
	cp [hl]
	jp c, Func_5c495
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$35
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	ld l, a
	ld h, $0
	ld a, l
	sub $2
	or h
	jp nz, Func_5c49b
Func_5c495: ; 5c495 (17:4495)
	ld hl, sp+$34
	ld a, [hl]
	jp Func_5c691

Func_5c49b: ; 5c49b (17:449b)
	ld hl, sp+$33
	ld e, [hl]
	ld d, $0
	ld hl, sp+$30
	add hl, de
	ld a, [hl]
	ld hl, sp+$34
	ld e, [hl]
	ld d, $0
	ld hl, sp+$30
	add hl, de
	cp [hl]
	jp c, Func_5c4dd
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$35
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	ld l, a
	ld h, $0
	ld a, l
	sub $2
	or h
	jp nz, Func_5c4e3
Func_5c4dd: ; 5c4dd (17:44dd)
	ld hl, sp+$33
	ld a, [hl]
	jp Func_5c691

Func_5c4e3: ; 5c4e3 (17:44e3)
	ld hl, sp+$34
	ld e, [hl]
	ld d, $0
	ld hl, sp+$30
	add hl, de
	ld a, [hl]
	cp $3
	jp z, Func_5c4f7
	ld hl, sp+$34
	ld a, [hl]
	jp Func_5c691

Func_5c4f7: ; 5c4f7 (17:44f7)
	read_hl_from_sp_plus $37
	ld de, $5f
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5c511
	read_hl_from_sp_plus $39
	ld de, $5f
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5c608
Func_5c511: ; 5c511 (17:4511)
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a8
	inc hl
	or [hl]
	jp nz, Func_5c536
	ld hl, sp+$34
	ld a, [hl]
	jp Func_5c691

Func_5c536: ; 5c536 (17:4536)
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a8
	inc hl
	or [hl]
	jp nz, Func_5c57d
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a8
	inc hl
	or [hl]
	jp z, Func_5c57a
	ld hl, sp+$33
	ld a, [hl]
	jp Func_5c691

Func_5c57a: ; 5c57a (17:457a)
	jp Func_5c608

Func_5c57d: ; 5c57d (17:457d)
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a9
	inc hl
	or [hl]
	jp nz, Func_5c5c4
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a9
	inc hl
	or [hl]
	jp z, Func_5c5c1
	ld hl, sp+$33
	ld a, [hl]
	jp Func_5c691

Func_5c5c1: ; 5c5c1 (17:45c1)
	jp Func_5c608

Func_5c5c4: ; 5c5c4 (17:45c4)
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a9
	inc hl
	or [hl]
	jp nz, Func_5c608
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld de, $13
	add hl, de
	ld a, [hl]
	sub $a9
	inc hl
	or [hl]
	jp z, Func_5c608
	ld hl, sp+$34
	ld a, [hl]
	jp Func_5c691

Func_5c608: ; 5c608 (17:4608)
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$35
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $64
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$35
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $64
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call CompareHLtoBC
	jp nc, Func_5c643
	ld hl, sp+$34
	ld a, [hl]
	jp Func_5c691

Func_5c643: ; 5c643 (17:4643)
	ld hl, sp+$33
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$35
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $64
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$34
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$35
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $64
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call CompareHLtoBC
	jp nc, Func_5c67e
	ld hl, sp+$33
	ld a, [hl]
	jp Func_5c691

Func_5c67e: ; 5c67e (17:467e)
	ld a, $64
	call Func_5c04f
	cp $33
	jp c, Func_5c68e
	ld hl, sp+$34
	ld a, [hl]
	jp Func_5c691

Func_5c68e: ; 5c68e (17:468e)
	ld hl, sp+$33
	ld a, [hl]
Func_5c691: ; 5c691 (17:4691)
	add sp, $3a
	ret

Func_5c694: ; 5c694 (17:4694)
	push hl
	add sp, -$18
	read_hl_from_sp_plus $1a
	ld de, $c
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_5c6aa
	ld a, $e
	jp Func_5c6e0

Func_5c6aa: ; 5c6aa (17:46aa)
	read_hl_from_sp_plus $1a
	ld de, $22
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, Data_5c011
	add hl, de
	ld l, [hl]
	inc l
	dec l
	jp z, Func_5c6c3
	ld a, l
	jp Func_5c6e0

Func_5c6c3: ; 5c6c3 (17:46c3)
	read_hl_from_sp_plus $1a
	ld de, $b
	add hl, de
	ld e, [hl]
	ld hl, sp+$0
	call Func_241f
	read_hl_from_sp_plus $15
	ld a, l
	and $80
	jp z, Func_5c6dd
	ld l, $0
Func_5c6dd: ; 5c6dd (17:46dd)
	ld a, l
	and $f
Func_5c6e0: ; 5c6e0 (17:46e0)
	add sp, $1a
	ret

Func_5c6e3: ; 5c6e3 (17:46e3)
	push hl
	add sp, -$18
	read_hl_from_sp_plus $1a
	ld de, $18
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_5c6f9
	ld a, $e
	jp Func_5c72f

Func_5c6f9: ; 5c6f9 (17:46f9)
	read_hl_from_sp_plus $1a
	ld de, $2e
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, Data_5c011
	add hl, de
	ld l, [hl]
	inc l
	dec l
	jp z, Func_5c712
	ld a, l
	jp Func_5c72f

Func_5c712: ; 5c712 (17:4712)
	read_hl_from_sp_plus $1a
	ld de, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$0
	call Func_241f
	read_hl_from_sp_plus $15
	ld a, l
	and $80
	jp z, Func_5c72c
	ld l, $0
Func_5c72c: ; 5c72c (17:472c)
	ld a, l
	and $f
Func_5c72f: ; 5c72f (17:472f)
	add sp, $1a
	ret

Func_5c732: ; 5c732 (17:4732)
	ld c, l
	ld l, h
	ld a, e
	and $80
	jp z, Func_5c73d
	jp Func_5c73e

Func_5c73d: ; 5c73d (17:473d)
	ld l, c
Func_5c73e: ; 5c73e (17:473e)
	ld a, e
	and $7f
	cp $3
	jp z, Func_5c78a
	cp $2
	jp z, Func_5c776
	cp $1
	jp z, Func_5c768
	or a
	jp nz, Func_5c795
	ld a, l
	rrca
	rrca
	rrca
	rrca
	and $f
	and $7
	ld e, a
	ld d, $0
	ld hl, Data_5c001
	add hl, de
	ld a, [hl]
	jp Func_5c795

Func_5c768: ; 5c768 (17:4768)
	ld a, l
	and $7
	ld e, a
	ld d, $0
	ld hl, Data_5c001
	add hl, de
	ld a, [hl]
	jp Func_5c795

Func_5c776: ; 5c776 (17:4776)
	ld a, l
	rrca
	rrca
	rrca
	rrca
	and $f
	and $7
	ld e, a
	ld d, $0
	ld hl, Data_5c009
	add hl, de
	ld a, [hl]
	jp Func_5c795

Func_5c78a: ; 5c78a (17:478a)
	ld a, l
	and $7
	ld e, a
	ld d, $0
	ld hl, Data_5c009
	add hl, de
	ld a, [hl]
Func_5c795: ; 5c795 (17:4795)
	ret

Func_5c796: ; 5c796 (17:4796)
	add sp, -$4e
	push af
	ld hl, sp+$4e
	ld [hl], $0
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	or a
	jp nz, Func_5c7b3
	ld hl, $0
	jp Func_5c7b6

Func_5c7b3: ; 5c7b3 (17:47b3)
	ld hl, $2f
Func_5c7b6: ; 5c7b6 (17:47b6)
	add hl, de
	write_hl_to_sp_plus $42
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	xor $1
	jp nz, Func_5c7d2
	ld hl, $0
	jp Func_5c7d5

Func_5c7d2: ; 5c7d2 (17:47d2)
	ld hl, $2f
Func_5c7d5: ; 5c7d5 (17:47d5)
	add hl, de
	write_hl_to_sp_plus $40
	pop af
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $44
	ld l, a
	ld h, $0
	ld a, l
	xor $1
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $42
	read_hl_from_sp_plus $44
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5c82f
	jp Func_5cdad

Func_5c82f: ; 5c82f (17:482f)
	read_hl_from_sp_plus $40
	ld de, $17
	add hl, de
	ld e, [hl]
	ld hl, sp+$24
	call Func_241f
	read_hl_from_sp_plus $39
	write_hl_to_sp_plus $4c
	push hl
	read_hl_from_sp_plus $46
	ld de, $67
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $44
	ld de, $5f
	add hl, de
	ld a, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $46
	pop de
	add hl, de
	ld c, l
	ld b, h
	push af
	ld a, [bc]
	cp $fe
	jp z, Func_5c877
	or a
	jp nz, Func_5c8e2
	jp Func_5c991

Func_5c877: ; 5c877 (17:4877)
	push bc
	ld l, c
	ld h, b
	inc hl
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $48
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$17
	call Func_248f
	ld hl, sp+$1c
	ld a, [hl]
	ld hl, sp+$50
	ld [hl], a
	read_hl_from_sp_plus $25
	write_hl_to_sp_plus $50
	pop bc
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $4
	jp z, Func_5c8df
	read_hl_from_sp_plus $46
	ld de, $71
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	ld b, [hl]
	ld hl, $1
	call LeftShiftHL
	ld a, e
	and l
	ld l, a
	ld a, d
	and h
	ld h, a
	ld a, l
	or h
	jp z, Func_5c8dc
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
	jp Func_5c8df

Func_5c8dc: ; 5c8dc (17:48dc)
	jp Func_5c913

Func_5c8df: ; 5c8df (17:48df)
	jp Func_5c991

Func_5c8e2: ; 5c8e2 (17:48e2)
	ld a, BANK(GFX_64c7d)
	ld [wFarCallDestBank], a
	ld a, [bc]
	ld l, a
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $13
	call FarCopyVideoData
	ld hl, sp+$14
	ld a, [hl]
	ld hl, sp+$4e
	ld [hl], a
	read_hl_from_sp_plus $10
	write_hl_to_sp_plus $4e
Func_5c913: ; 5c913 (17:4913)
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $4
	jp z, Func_5c991
	read_hl_from_sp_plus $46
	ld de, $71
	add hl, de
	ld a, [hl]
	and $f0
	ld e, a
	inc hl
	ld d, $0
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	or h
	jp z, Func_5c976
	read_hl_from_sp_plus $46
	ld de, $71
	add hl, de
	ld a, [hl]
	and $f0
	ld e, a
	inc hl
	ld d, $0
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	dec hl
	reg16swap de, hl
	ld hl, sp+$4e
	ld l, [hl]
	ld h, $0
	call CompareHLtoDE
	jp nz, Func_5c976
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
	jp Func_5c991

Func_5c976: ; 5c976 (17:4976)
	read_hl_from_sp_plus $46
	ld de, $71
	add hl, de
	ld a, [hl]
	and $8
	jp z, Func_5c991
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
Func_5c991: ; 5c991 (17:4991)
	read_hl_from_sp_plus $46
	ld de, $64
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $44
	ld de, $64
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call CompareHLtoBC
	jp nc, Func_5c9b4
	ld bc, $46
	jp Func_5c9ea

Func_5c9b4: ; 5c9b4 (17:49b4)
	ld hl, sp+$46
	ld c, l
	ld b, h
	read_hl_from_sp_plus $44
	ld de, $64
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from_sp_plus $48
	ld de, $64
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_2617
	ld hl, sp+$46
	ld c, l
	ld b, h
	ld de, $46
	ld hl, sp+$46
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$47
	ld l, [hl]
	ld h, $0
	ld c, l
	ld b, h
Func_5c9ea: ; 5c9ea (17:49ea)
	pop af
	read_hl_from_sp_plus $44
	ld de, $4e
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from_sp_plus $44
	ld de, $75
	add hl, de
	ld a, [hl]
	cp $5
	jp nz, Func_5ca1b
	ld l, c
	ld h, b
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
Func_5ca1b: ; 5ca1b (17:4a1b)
	push bc
	read_hl_from_sp_plus $44
	ld de, $71
	add hl, de
	ld a, [hl]
	and $1
	jp z, Func_5cb18
	read_hl_from_sp_plus $44
	ld de, $71
	add hl, de
	inc hl
	ld a, [hl]
	and $2
	jp z, Func_5caaa
	ld hl, sp+$4e
	ld a, [hl]
	cp $1
	jp z, Func_5ca57
	cp $5
	jp nz, Func_5caa7
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld de, $2
	call MultiplyPointerByDE
	jp Func_5caa7

Func_5ca57: ; 5ca57 (17:4a57)
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld de, $2
	call DividePointerByDESigned
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_5caa7
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_5caa7: ; 5caa7 (17:4aa7)
	jp Func_5cb18

Func_5caaa: ; 5caaa (17:4aaa)
	ld hl, sp+$4e
	ld a, [hl]
	cp $5
	jp z, Func_5cac8
	cp $1
	jp nz, Func_5cb18
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld de, $2
	call MultiplyPointerByDE
	jp Func_5cb18

Func_5cac8: ; 5cac8 (17:4ac8)
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld de, $2
	call DividePointerByDESigned
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_5cb18
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_5cb18: ; 5cb18 (17:4b18)
	read_hl_from_sp_plus $44
	ld de, $62
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $46
	ld de, $60
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, e
	sub c
	ld l, a
	ld a, d
	sbc b
	ld h, a
	write_hl_to_sp_plus $4c
	read_hl_from_sp_plus $42
	ld de, $13
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $4c
	call CompareHLtoBC
	jp nc, Func_5cb5c
	read_hl_from_sp_plus $42
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	write_hl_to_sp_plus $4c
Func_5cb5c: ; 5cb5c (17:4b5c)
	read_hl_from_sp_plus $42
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, $3
	call DivideHLByDESigned
	ld c, l
	ld b, h
	read_hl_from_sp_plus $4c
	call CompareHLtoBC
	jp c, Func_5cb9d
	read_hl_from_sp_plus $46
	ld de, $5f
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5cb9d
	read_hl_from_sp_plus $42
	ld de, $13
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, $3
	call DivideHLByDESigned
	write_hl_to_sp_plus $4c
Func_5cb9d: ; 5cb9d (17:4b9d)
	read_hl_from_sp_plus $4c
	add hl, hl
	ld de, $3
	call DivideHLByDESigned
	push hl
	read_hl_from_sp_plus $4e
	ld de, $3
	call DivideHLByDESigned
	inc hl
	ld a, l
	call Func_5c04f
	ld l, a
	ld h, $0
	pop de
	add hl, de
	inc hl
	write_hl_to_sp_plus $4c
	ld hl, sp+$46
	ld c, l
	ld b, h
	ld hl, sp+$4e
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $42
	ld de, $2c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_5c06f
	read_hl_from_sp_plus $46
	ld de, $c7
	add hl, de
	ld [hl], a
	ld hl, sp+$46
	ld c, l
	ld b, h
	read_hl_from_sp_plus $4c
	reg16swap de, hl
	ld hl, sp+$46
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$46
	ld a, [hl]
	ld hl, sp+$47
	ld l, [hl]
	ld h, a
	write_hl_to_sp_plus $4c
	ld a, l
	or h
	jp nz, Func_5cc0e
	ld hl, $1
	write_hl_to_sp_plus $4c
Func_5cc0e: ; 5cc0e (17:4c0e)
	pop bc
	read_hl_from_sp_plus $42
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $40
	jp z, Func_5cc20
	ld bc, $0
Func_5cc20: ; 5cc20 (17:4c20)
	read_hl_from_sp_plus $4c
	ld a, l
	and $80
	jp z, Func_5cd02
	read_hl_from_sp_plus $4c
	ld a, l
	and $7f
	ld l, a
	ld h, $0
	ld a, l
	sub $1e
	or h
	jp z, Func_5ccef
	ld a, l
	sub $19
	or h
	jp z, Func_5ccd9
	ld a, l
	sub $17
	or h
	jp z, Func_5ccc6
	ld a, l
	sub $18
	or h
	jp nz, Func_5ccff
	push bc
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $3
	ld l, a
	ld h, $0
	ld a, l
	cp $3
	jp z, Func_5cca9
	cp $1
	jp z, Func_5cca9
	cp $2
	jp z, Func_5cca0
	or a
	jp nz, Func_5ccc2
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $cf
	ld e, a
	inc hl
	ld d, [hl]
	ld a, e
	or $10
	ld c, a
	ld b, d
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_5ccc2

Func_5cca0: ; 5cca0 (17:4ca0)
	read_hl_from_sp_plus $4c
	add hl, hl
	write_hl_to_sp_plus $4c
Func_5cca9: ; 5cca9 (17:4ca9)
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $cf
	ld c, a
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $46
	ld de, $6f
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_5ccc2: ; 5ccc2 (17:4cc2)
	pop bc
	jp Func_5ccff

Func_5ccc6: ; 5ccc6 (17:4cc6)
	push bc
	read_hl_from_sp_plus $4c
	ld de, $a
	call DivideHLByDESigned
	write_hl_to_sp_plus $4c
	pop bc
	jp Func_5ccff

Func_5ccd9: ; 5ccd9 (17:4cd9)
	read_hl_from_sp_plus $4a
	add hl, hl
	write_hl_to_sp_plus $4a
	ld l, c
	ld h, b
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	jp Func_5ccff

Func_5ccef: ; 5ccef (17:4cef)
	push bc
	read_hl_from_sp_plus $4c
	ld de, $2
	call DivideHLByDESigned
	write_hl_to_sp_plus $4c
	pop bc
Func_5ccff: ; 5ccff (17:4cff)
	jp Func_5cd16

Func_5cd02: ; 5cd02 (17:4d02)
	read_hl_from_sp_plus $4c
	ld a, l
	and $f
	ld l, a
	ld h, $0
	ld a, l
	sub $d
	or h
	jp nz, Func_5cd16
	ld bc, $64
Func_5cd16: ; 5cd16 (17:4d16)
	push bc
	read_hl_from_sp_plus $44
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $4
	jp nz, Func_5cd33
	read_hl_from_sp_plus $4c
	ld de, $2
	call DivideHLByDESigned
	write_hl_to_sp_plus $4c
Func_5cd33: ; 5cd33 (17:4d33)
	pop bc
	read_hl_from_sp_plus $42
	ld de, $5e
	add hl, de
	ld a, [hl]
	cp $5
	jp nz, Func_5cd4c
	ld l, c
	ld h, b
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
Func_5cd4c: ; 5cd4c (17:4d4c)
	ld hl, sp+$4c
	ld a, [hl]
	read_hl_from_sp_plus $44
	ld de, $66
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $4c
	push hl
	read_hl_from_sp_plus $46
	ld de, $69
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld e, c
	ld d, b
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_5cd7a
	ld bc, $1
	jp Func_5cd7a

Func_5cd7a: ; 5cd7a (17:4d7a)
	read_hl_from_sp_plus $44
	ld de, $6b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $4a
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_5cd9c
	ld bc, $1
	jp Func_5cda2

Func_5cd9c: ; 5cd9c (17:4d9c)
	read_hl_from_sp_plus $4a
	ld c, l
	ld b, h
Func_5cda2: ; 5cda2 (17:4da2)
	read_hl_from_sp_plus $44
	ld de, $6d
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_5cdad: ; 5cdad (17:4dad)
	add sp, $4e
	ret

Func_5cdb0: ; 5cdb0 (17:4db0)
	push bc
	push bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	ld hl, $60
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	ld hl, $62
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, $64
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld a, [hl]
	cp $ff
	jp nz, Func_5cdf0
	jp Func_5cf19

Func_5cdf0: ; 5cdf0 (17:4df0)
	push bc
	cp $8
	jp z, Func_5ce98
	cp $7
	jp z, Func_5ce8e
	cp $6
	jp z, Func_5ce79
	cp $5
	jp z, Func_5ce6a
	cp $4
	jp z, Func_5ce60
	cp $3
	jp z, Func_5ce4b
	cp $2
	jp z, Func_5ce3c
	cp $1
	jp z, Func_5ce32
	or a
	jp nz, Func_5cea4
	call GetHLAtSPPlus8
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	add hl, bc
	call WriteHLToSPPlus8
	jp Func_5cea4

Func_5ce32: ; 5ce32 (17:4e32)
	call GetHLAtSPPlus8
	add hl, hl
	call WriteHLToSPPlus8
	jp Func_5cea4

Func_5ce3c: ; 5ce3c (17:4e3c)
	call GetHLAtSPPlus8
	ld de, $2
	call DivideHLByDESigned
	call WriteHLToSPPlus8
	jp Func_5cea4

Func_5ce4b: ; 5ce4b (17:4e4b)
	call GetHLAtSPPlus6
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	add hl, bc
	call WriteHLToSPPlus6
	jp Func_5cea4

Func_5ce60: ; 5ce60 (17:4e60)
	call GetHLAtSPPlus6
	add hl, hl
	call WriteHLToSPPlus6
	jp Func_5cea4

Func_5ce6a: ; 5ce6a (17:4e6a)
	call GetHLAtSPPlus6
	ld de, $2
	call DivideHLByDESigned
	call WriteHLToSPPlus6
	jp Func_5cea4

Func_5ce79: ; 5ce79 (17:4e79)
	call GetHLAtSPPlus4
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	add hl, bc
	call WriteHLToSPPlus4
	jp Func_5cea4

Func_5ce8e: ; 5ce8e (17:4e8e)
	call GetHLAtSPPlus4
	add hl, hl
	call WriteHLToSPPlus4
	jp Func_5cea4

Func_5ce98: ; 5ce98 (17:4e98)
	call GetHLAtSPPlus4
	ld de, $2
	call DivideHLByDESigned
	call WriteHLToSPPlus4
Func_5cea4: ; 5cea4 (17:4ea4)
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_5ceba
	ld hl, $1
	call WriteHLToSPPlus8
Func_5ceba: ; 5ceba (17:4eba)
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_5ced0
	ld hl, $1
	call WriteHLToSPPlus6
Func_5ced0: ; 5ced0 (17:4ed0)
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_5cee6
	ld hl, $1
	call WriteHLToSPPlus4
Func_5cee6: ; 5cee6 (17:4ee6)
	pop bc
	ld hl, $5e
	add hl, bc
	ld a, [hl]
	or a
	jp nz, Func_5cefe
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $60
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
Func_5cefe: ; 5cefe (17:4efe)
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $62
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	pop hl
	push hl
	reg16swap de, hl
	ld hl, $64
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
Func_5cf19: ; 5cf19 (17:4f19)
	pop bc
	pop bc
	pop bc
	ret

Func_5cf1d: ; 5cf1d (17:4f1d)
	push bc
	read_hl_from wCurRobotPointer
	ld de, $1c6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
	ld c, $0
Func_5cf2f: ; 5cf2f (17:4f2f)
	ld a, c
	cp $a
	jp nc, Func_5cf73
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus4
	ld de, $17
	add hl, de
	pop de
	add hl, de
	push hl
	call GetHLAtSPPlus4
	inc hl
	inc hl
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop hl
	push hl
	inc hl
	inc hl
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld [hl], $0
	inc c
	jp Func_5cf2f

Func_5cf73: ; 5cf73 (17:4f73)
	pop hl
	push hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	pop hl
	push hl
	ld de, $16
	add hl, de
	ld [hl], $0
	pop bc
	ret

Func_5cf85: ; 5cf85 (17:4f85)
	push hl
	push de
	add sp, -$20
	read_hl_from wCurRobotPointer
	ld de, $1c6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $20
	read_hl_from_sp_plus $20
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_5cfb7
	read_hl_from_sp_plus $20
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $20
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_5d00a

Func_5cfb7: ; 5cfb7 (17:4fb7)
	ld hl, sp+$20
	ld c, [hl]
	read_hl_from_sp_plus $24
	reg16swap de, hl
	ld hl, sp+$0
	call FarCopyUntilNull
	read_hl_from_sp_plus $20
	ld de, $16
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, hl
	push hl
	read_hl_from_sp_plus $22
	inc hl
	inc hl
	pop de
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call FindFirstNonzero
	push hl
	ld hl, sp+$2
	call FindFirstNonzero
	pop de
	add hl, de
	reg16swap de, hl
	ld hl, $12
	call CompareHLtoDE
	jp nc, Func_5d00a
	ld hl, sp+$20
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $26
	pop de
	call Func_5d02d
	jp Func_5d02a

Func_5d00a: ; 5d00a (17:500a)
	ld hl, sp+$20
	ld c, [hl]
	read_hl_from_sp_plus $24
	push hl
	read_hl_from_sp_plus $22
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call FarCopyUntilNull
	ld c, l
	ld b, h
	read_hl_from_sp_plus $20
	ld [hl], c
	inc hl
	ld [hl], b
Func_5d02a: ; 5d02a (17:502a)
	add sp, $24
	ret

Func_5d02d: ; 5d02d (17:502d)
	push hl
	push de
	read_hl_from wCurRobotPointer
	ld de, $1c6
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, c
	ld h, b
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_5d052
	ld l, c
	ld h, b
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_5d07e

Func_5d052: ; 5d052 (17:5052)
	push bc
	ld hl, $16
	add hl, bc
	ld a, $1
	add [hl]
	ld [hl], a
	cp $9
	jp c, Func_5d068
	ld e, $0
	ld hl, Data_5d084
	call Func_2a3e
Func_5d068: ; 5d068 (17:5068)
	pop bc
	ld hl, $16
	add hl, bc
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, c
	ld d, b
	inc de
	inc de
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	ld [hl], e
	inc hl
	ld [hl], d
Func_5d07e: ; 5d07e (17:507e)
	pop de
	pop hl
	call Func_5cf85
	ret

Data_5d084:
	db "ハﾞトル メッセーシﾞ オーハﾞー", $0

Func_5d096: ; 5d096 (17:5096)
	push bc
	push af
	read_hl_from wCurRobotPointer
	ld de, $1c6
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	call GetHLAtSPPlus4
	ld de, $16
	add hl, de
	ld a, $1
	add [hl]
	ld [hl], a
	ld l, a
	ld h, $0
	add hl, hl
	push hl
	call GetHLAtSPPlus6
	inc hl
	inc hl
	pop de
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli PrintMapText
	pop af
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	add hl, hl
	add hl, hl
	ld de, $109
	add hl, de
	ld c, l
	ld b, h
	pop hl
	push hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, $10e
	call FarCall
	call Func_5cf1d
	pop bc
	ret

Func_5d107: ; 5d107 (17:5107)
	ld a, $2
	call Func_5d096
	ret

Func_5d10d: ; 5d10d (17:510d)
	ld a, $3
	call Func_5d096
	ret

Func_5d113: ; 5d113 (17:5113)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	reg16swap de, hl
	push de
	ld hl, $8
	add hl, de
	ld a, [hl]
	and $4
	jp nz, Func_5d151
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $105
	call FarCall
Func_5d151: ; 5d151 (17:5151)
	pop de
	ld hl, $9
	add hl, de
	ld a, [hl]
	and $4
	jp nz, Func_5d183
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $b05
	call FarCall
Func_5d183: ; 5d183 (17:5183)
	ret

Func_5d184: ; 5d184 (17:5184)
	add sp, -$40
	push af
	xor a
	pop af
	push af
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	or a
	jp nz, Func_5d1a0
	ld hl, $0
	jp Func_5d1a3

Func_5d1a0: ; 5d1a0 (17:51a0)
	ld hl, $2f
Func_5d1a3: ; 5d1a3 (17:51a3)
	add hl, de
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	xor $1
	jp nz, Func_5d1bd
	ld hl, $0
	jp Func_5d1c0

Func_5d1bd: ; 5d1bd (17:51bd)
	ld hl, $2f
Func_5d1c0: ; 5d1c0 (17:51c0)
	add hl, de
	pop af
	push bc
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $40
	ld l, a
	ld h, $0
	ld a, l
	xor $1
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	read_hl_from_sp_plus $40
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $4
	ld [hl], a
	inc hl
	pop bc
	read_hl_from_sp_plus $3e
	ld de, $5e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5d221
	jp Func_5d348

Func_5d221: ; 5d221 (17:5221)
	ld hl, $17
	add hl, bc
	ld e, [hl]
	ld hl, sp+$24
	call Func_241f
	read_hl_from_sp_plus $39
	read_hl_from_sp_plus $3e
	ld de, $5f
	add hl, de
	ld a, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $40
	pop de
	add hl, de
	write_hl_to_sp_plus $40
	read_hl_from_sp_plus $40
	ld a, [hl]
	cp $fe
	jp z, Func_5d259
	or a
	jp nz, Func_5d2b1
	jp Func_5d348

Func_5d259: ; 5d259 (17:5259)
	read_hl_from_sp_plus $40
	inc hl
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $3e
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$13
	call Func_248f
	ld hl, sp+$18
	ld c, [hl]
	read_hl_from_sp_plus $21
	read_hl_from_sp_plus $40
	inc hl
	ld b, [hl]
	ld hl, $1
	call LeftShiftHL
	push hl
	read_hl_from_sp_plus $40
	ld de, $71
	add hl, de
	pop de
	ld a, e
	and [hl]
	ld e, a
	inc hl
	ld a, d
	and [hl]
	ld d, a
	ld a, e
	or d
	jp z, Func_5d2ab
	read_hl_from_sp_plus $3e
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
	jp Func_5d2ae

Func_5d2ab: ; 5d2ab (17:52ab)
	jp Func_5d2de

Func_5d2ae: ; 5d2ae (17:52ae)
	jp Func_5d348

Func_5d2b1: ; 5d2b1 (17:52b1)
	ld a, BANK(GFX_64c7d)
	ld [wFarCallDestBank], a
	read_hl_from_sp_plus $40
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld bc, $13
	call FarCopyVideoData
	ld hl, sp+$12
	ld c, [hl]
	read_hl_from_sp_plus $e
Func_5d2de: ; 5d2de (17:52de)
	read_hl_from_sp_plus $3e
	ld de, $71
	add hl, de
	ld a, [hl]
	and $f0
	ld e, a
	inc hl
	ld d, $0
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	or h
	jp z, Func_5d32d
	read_hl_from_sp_plus $3e
	ld de, $71
	add hl, de
	ld a, [hl]
	and $f0
	ld e, a
	inc hl
	ld d, $0
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	dec hl
	ld e, c
	ld d, $0
	call CompareHLtoDE
	jp nz, Func_5d32d
	read_hl_from_sp_plus $3e
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
	jp Func_5d348

Func_5d32d: ; 5d32d (17:532d)
	read_hl_from_sp_plus $3e
	ld de, $71
	add hl, de
	ld a, [hl]
	and $8
	jp z, Func_5d348
	read_hl_from_sp_plus $3e
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $8
	ld [hl], a
	inc hl
Func_5d348: ; 5d348 (17:5348)
	add sp, $40
	ret

Func_5d34b:
	push hl
	push de
	set_farcall_addrs_hli MenuWithSecondaryHeader
	pop de
	pop hl
	ld c, $8
	jp FarCall

Func_5d35f: ; 5d35f (17:535f)
	push af
	add sp, -$54
	xor a
.loop
	ld hl, sp+$55
	cp [hl]
	jp nc, .break
	push af
	set_farcall_addrs_hli GetRobotInParty
	pop af
	push af
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	ld hl, sp+$2
	ld a, [hl]
	ld e, a
	dec e
	ld hl, sp+$25
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$2a
	ld e, [hl]
	push de
	set_farcall_addrs_hli Func_6adb3
	pop de
	ld a, e
	ld hl, sp+$21
	ld e, [hl]
	call FarCall
	ld e, a
	pop af
	push af
	add a
	add a
	ld d, a
	add a
	add d
	ld hl, sp+$55
	ld [hl], a
	ld hl, sp+$54
	ld [hl], e
	ld l, $0
	push hl
	ld a, $c
	push af
	set_farcall_addrs_hli LoadSpriteGFX
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$55
	ld a, [hl]
	ld hl, sp+$54
	ld l, [hl]
	ld h, a
	call FarCall
	pop af
	inc a
	jp .loop

.break
	add sp, $56
	ret

Func_5d3d6: ; 5d3d6 (17:53d6)
	ld a, [wc2cd]
	or a
	jp nz, Func_5d3e8
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_5d3f0

Func_5d3e8: ; 5d3e8 (17:53e8)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_5d3f0: ; 5d3f0 (17:53f0)
	ret

Func_5d3f1: ; 5d3f1 (17:53f1)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_5d3f1
	ret

Func_5d3fc:
	push hl
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld a, [hl]
	or a
	jp nz, Func_5d43b
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $d
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5d432
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $a
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5d438
Func_5d432: ; 5d432 (17:5432)
	ld hl, $4000
	jp Func_5d4a2

Func_5d438: ; 5d438 (17:5438)
	jp Func_5d49f

Func_5d43b: ; 5d43b (17:543b)
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $a
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5d453
	ld hl, $4000
	jp Func_5d4a2

Func_5d453: ; 5d453 (17:5453)
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_5d49f
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	ld d, a
	add a
	add d
	inc a
	ld e, a
	xor a
	call SetStringStartState
	ld hl, Data_5d4a4
	push hl
	call PlaceString
	pop bc
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld [hl], $ff
	pop hl
	push hl
	call Func_5de14
	ld hl, $4000
	jp Func_5d4a2

Func_5d49f: ; 5d49f (17:549f)
	ld hl, -1
Func_5d4a2: ; 5d4a2 (17:54a2)
	pop bc
	ret

Data_5d4a4:
	db " ", $0

Func_5d4a6:
	push hl
	add sp, -$68
	push bc
	ld hl, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld a, [hl]
	push af
	read_hl_from_sp_plus $6e
	ld e, h
	ld hl, sp+$6b
	ld [hl], e
	read_hl_from_sp_plus $6e
	ld e, l
	ld hl, sp+$6a
	ld [hl], e
	set_farcall_addrs_hli GetRobotInParty
	pop af
	pop bc
	push af
	ld a, c
	ld hl, sp+$45
	reg16swap de, hl
	call FarCall
	ld hl, sp+$46
	reg16swap de, hl
	ld hl, sp+$2
	call LiteralStringInTree
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$69
	ld a, [hl]
	ld hl, sp+$68
	ld l, [hl]
	ld h, a
	call PlaceStringDEatCoordHL
	ld a, $19
	ld [wFarCallDestBank], a
	ld hl, sp+$5b
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, $6f37
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	call LiteralStringInTree
	ld hl, sp+$2
	push hl
	ld hl, sp+$6a
	ld c, [hl]
	ld b, $0
	inc bc
	ld hl, sp+$6b
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $500
	add hl, de
	add hl, bc
	pop de
	call PlaceStringDEatCoordHL
	ld hl, sp+$68
	ld c, [hl]
	ld b, $0
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	add hl, bc
	ld de, Data_5d65a
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $53
	ld c, l
	ld b, h
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_5d65d
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $55
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, sp+$68
	ld c, [hl]
	ld b, $0
	inc bc
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	add hl, bc
	ld de, Data_5d65f
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $57
	ld c, l
	ld b, h
	ld de, $3
	ld hl, -1
	call Func_2230
	ld hl, Data_5d662
	push hl
	call PlaceString
	pop bc
	read_hl_from_sp_plus $59
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
	ld de, Data_5d664
	ld hl, sp+$69
	ld a, [hl]
	ld hl, sp+$68
	ld l, [hl]
	ld h, a
	inc hl
	call PlaceStringDEatCoordHL
	ld hl, sp+$4c
	ld c, [hl]
	ld b, $0
	ld de, $103
	ld hl, -1
	call Func_2230
	ld hl, Data_5d667
	push hl
	call PlaceString
	pop bc
	pop af
	cp $3
	jp nz, Func_5d657
	ld hl, sp+$43
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$14
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$16
	ld a, [hl]
	or a
	jp z, Func_5d63d
	read_hl_from_sp_plus $19
	push hl
	read_hl_from_sp_plus $64
	pop de
	call CompareHLtoDE
	jp c, Func_5d611
	ld hl, sp+$66
	ld c, [hl]
	ld b, $0
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	add hl, bc
	inc hl
	inc hl
	ld de, Data_5d669
	call PlaceStringDEatCoordHL
	jp Func_5d63a

Func_5d611: ; 5d611 (17:5611)
	ld hl, sp+$66
	ld c, [hl]
	ld b, $0
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	add hl, bc
	inc hl
	inc hl
	ld de, Data_5d672
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $62
	ld c, l
	ld b, h
	ld de, $103
	ld hl, -1
	call Func_2230
Func_5d63a: ; 5d63a (17:563a)
	jp Func_5d657

Func_5d63d: ; 5d63d (17:563d)
	ld hl, sp+$66
	ld c, [hl]
	ld b, $0
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $800
	add hl, de
	add hl, bc
	inc hl
	inc hl
	ld de, Data_5d676
	call PlaceStringDEatCoordHL
Func_5d657: ; 5d657 (17:5657)
	add sp, $6a
	ret

Data_5d65a:
	db "Hp", $0

Data_5d65d:
	db "/", $0

Data_5d65f:
	db "Ep", $0

Data_5d662:
	db "/", $0

Data_5d664:
	db "LV", $0

Data_5d667:
	db ":", $0

Data_5d669:
	db "(ひかっている)", $0

Data_5d672:
	db "エネ:", $0

Data_5d676:
	db "(しんか しない)", $0

Data_5d680:
	dr $5d680, $5d684

Func_5d684: ; 5d684 (17:5684)
	push hl
	push de
	push bc
	push bc
	callba_hli Func_da4dc
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$0
	ld [hl], a
	ld c, $0
Func_5d6b6: ; 5d6b6 (17:56b6)
	ld a, c
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $7
	add hl, de
	cp [hl]
	jp nc, Func_5d730
	push bc
	ld a, c
	add a
	add a
	ld d, a
	add a
	add d
	ld hl, sp+$3
	ld [hl], a
	ld hl, sp+$5
	ld [hl], $10
	ld b, c
	ld hl, sp+$2
	ld a, [hl]
	add a
	add a
	add a
	call MultiplyAbyB
	add $18
	ld hl, sp+$4
	ld [hl], a
	call GetHLAtSPPlus8
	ld a, [hl]
	cp $1
	jp c, Func_5d6fe
	inc a
	cp $5
	jp nz, Func_5d6f7
	ld a, $1
Func_5d6f7: ; 5d6f7 (17:56f7)
	call GetHLAtSPPlus8
	ld [hl], a
	jp Func_5d700

Func_5d6fe: ; 5d6fe (17:56fe)
	ld a, $1
Func_5d700: ; 5d700 (17:5700)
	push af
	set_farcall_addrs_hli UpdateCurSprite
	pop af
	ld e, a
	ld d, $0
	ld hl, Data_5d680 - 1
	add hl, de
	ld c, [hl]
	ld b, $0
	ld hl, sp+$4
	ld e, [hl]
	ld hl, sp+$5
	ld h, [hl]
	ld d, h
	ld hl, sp+$3
	ld a, [hl]
	call FarCall
	pop bc
	inc c
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	jp Func_5d6b6

Func_5d730: ; 5d730 (17:5730)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_5d735:
	db $0, $0, $0, $0

Func_5d739: ; 5d739 (17:5739)
	push bc
	push bc
	push bc
	push bc
	push hl
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_5d735
	ld bc, $4
	call MemCopy
	pop hl
	call WriteHLToSPPlus7
	call GetHLAtSPPlus7
	inc hl
	ld l, [hl]
	inc hl
	ld h, [hl]
	call GetHLAtSPPlus7
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld a, [hl]
	push af
	call GetHLAtSPPlus9
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	ld c, [hl]
	pop af
	push bc
	push af
	ld c, $0
Func_5d779: ; 5d779 (17:5779)
	ld a, c
	read_hl_from_sp_plus $b
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $7
	add hl, de
	cp [hl]
	jp nc, Func_5d7ac
	read_hl_from_sp_plus $b
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	inc hl
	inc hl
	inc hl
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], a
	inc c
	jp Func_5d779

Func_5d7ac: ; 5d7ac (17:57ac)
	pop af
	cp $3
	jp z, Func_5d805
	cp $8
	jp z, Func_5d7d4
	cp $7
	jp z, Func_5d7d4
	cp $6
	jp z, Func_5d7d4
	cp $5
	jp z, Func_5d7d4
	cp $2
	jp z, Func_5d7d4
	cp $1
	jp z, Func_5d7d4
	or a
	jp nz, Func_5d833
Func_5d7d4: ; 5d7d4 (17:57d4)
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $c
	call FarCall
	jp Func_5d833

Func_5d805: ; 5d805 (17:5805)
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $10
	call FarCall
Func_5d833: ; 5d833 (17:5833)
	ld hl, sp+$6
	ld [hl], $0
	pop bc
Func_5d838: ; 5d838 (17:5838)
	ld hl, sp+$4
	ld a, [hl]
	call GetHLAtSPPlus7
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $7
	add hl, de
	cp [hl]
	jp nc, Func_5d876
	push bc
	ld hl, sp+$6
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $b
	push hl
	ld e, c
	ld d, $0
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld de, $301
	add hl, de
	pop de
	pop bc
	call Func_5d4a6
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
	pop bc
	jp Func_5d838

Func_5d876: ; 5d876 (17:5876)
	ld hl, sp+$0
	push hl
	call GetHLAtSPPlus9
	pop de
	call Func_5d684
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_5d885: ; 5d885 (17:5885)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_5d89a: ; 5d89a (17:589a)
	push hl
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus4
	ld de, $b
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus4
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld l, [hl]
	push hl
	call GetHLAtSPPlus6
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	ld e, [hl]
	inc e
	pop hl
	push de
	inc l
	ld a, c
	and b
	inc a
	jp z, Func_5d8df
	push hl
	ld l, c
	ld h, b
	add hl, hl
	ld d, $0
	add hl, de
	ld a, l
	pop hl
	push hl
	ld h, l
	ld l, a
	ld de, Data_5d909
	call PlaceStringDEatCoordHL
	pop hl
Func_5d8df: ; 5d8df (17:58df)
	pop de
	pop bc
	push bc
	push hl
	ld l, c
	ld h, b
	add hl, hl
	ld d, $0
	add hl, de
	ld a, l
	pop hl
	ld e, a
	ld a, l
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_5d90b
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop hl
	push hl
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	ret

Data_5d909:
	db " ", $0


Data_5d90b:
	TX_STACK
	db $0

Pointers_5d90e:
	dw Data_5d912
	dw Data_5d919

Data_5d912:
	db "(こうかん)", $0

Data_5d919:
	db "ステータス", $0

Func_5d91f:
	push hl
	push bc
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	push bc
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	ld a, [hl]
	ld hl, sp+$2
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	inc hl
	ld l, [hl]
	push hl
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	call GetHLAtSPPlus10
	call Func_5d739
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call Func_5d885
	xor a
Func_5d95c: ; 5d95c (17:595c)
	cp $2
	jp nc, Func_5d991
	push af
	ld l, a
	ld h, $0
	add hl, hl
	ld de, Pointers_5d90e
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	inc de
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop af
	inc a
	jp Func_5d95c

Func_5d991: ; 5d991 (17:5991)
	pop bc
	ld hl, $d
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $a
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_5d9ae
	call GetHLAtSPPlus4
	call Func_5e021
	ld hl, -1
	jp Func_5d9c7

Func_5d9ae: ; 5d9ae (17:59ae)
	ld l, c
	ld h, b
	call Func_5d89a
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
Func_5d9c7: ; 5d9c7 (17:59c7)
	pop bc
	pop bc
	ret

Func_5d9ca: ; 5d9ca (17:59ca)
	push hl
	add sp, -$26
	read_hl_from_sp_plus $28
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$24
	ld [hl], e
	read_hl_from_sp_plus $28
	ld de, $b
	add hl, de
	ld c, [hl]
	read_hl_from_sp_plus $28
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$23
	ld [hl], a
	read_hl_from_sp_plus $28
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld l, [hl]
	ld a, c
	cp $ff
	jp z, Func_5da36
	push hl
	push bc
	ld a, c
	ld hl, sp+$27
	ld b, [hl]
	call MultiplyAbyB
	inc a
	ld l, a
	ld h, $0
	ld de, Data_5db13
	call PlaceStringDEatCoordHL
	pop bc
	pop hl
	ld a, l
	cp $6
	jp z, Func_5da2b
	cp $2
	jp z, Func_5da2b
	cp $1
	jp nz, Func_5da36
Func_5da2b: ; 5da2b (17:5a2b)
	push hl
	ld e, c
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], $0
	pop hl
Func_5da36: ; 5da36 (17:5a36)
	push hl
	read_hl_from_sp_plus $2a
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_5da75
	read_hl_from_sp_plus $2a
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	ld hl, sp+$25
	ld b, [hl]
	call MultiplyAbyB
	inc a
	ld e, a
	xor a
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_5db15
	push hl
	call PlaceString
	pop bc
	pop bc
Func_5da75: ; 5da75 (17:5a75)
	ld hl, sp+$26
	ld a, [hl]
	ld hl, sp+$25
	ld b, [hl]
	call MultiplyAbyB
	inc a
	ld e, a
	xor a
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_5db18
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
	ld a, l
	cp $2
	jp z, Func_5daf5
	cp $6
	jp z, Func_5daf5
	cp $8
	jp z, Func_5daa7
	cp $1
	jp nz, Func_5db00
Func_5daa7: ; 5daa7 (17:5aa7)
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$26
	ld a, [hl]
	call FarCall
	pop bc
	read_hl_from_sp_plus $e
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_5daf2
	ld hl, $c6
	add hl, bc
	ld a, [hl]
	ld hl, sp+$24
	cp [hl]
	jp z, Func_5daf2
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], $1
Func_5daf2: ; 5daf2 (17:5af2)
	jp Func_5db00

Func_5daf5: ; 5daf5 (17:5af5)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], $1
Func_5db00: ; 5db00 (17:5b00)
	ld hl, sp+$24
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $28
	ld de, $b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	add sp, $28
	ret

Data_5db13:
	db " ", $0

Data_5db15:
	TX_STACK
	db $0

Data_5db18:
	TX_STACK
	db $0

Func_5db1b: ; 5db1b (17:5b1b)
	push af
	add sp, -$24
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$27
	ld a, [hl]
	call FarCall
	ld de, Data_5db9e
	ld hl, $10d
	call PlaceStringDEatCoordHL
	pop bc
	read_hl_from_sp_plus $e
	ld a, l
	or h
	jp nz, Func_5db69
	ld de, Data_5dba8
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_5dbb2
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_5db9b

Func_5db69: ; 5db69 (17:5b69)
	ld hl, $c6
	add hl, bc
	ld a, [hl]
	ld hl, sp+$25
	cp [hl]
	jp nz, Func_5db89
	ld de, Data_5dbba
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_5dbc1
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_5db9b

Func_5db89: ; 5db89 (17:5b89)
	ld de, Data_5dbcb
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_5dbd2
	ld hl, $110
	call PlaceStringDEatCoordHL
Func_5db9b: ; 5db9b (17:5b9b)
	add sp, $26
	ret

Data_5db9e:
	db "         ", $0

Data_5dba8:
	db "スクラッフﾟ(に)", $0

Data_5dbb2:
	db "(なっている)", $0

Data_5dbba:
	db "(そいつは)", $0

Data_5dbc1:
	db "(たたかっている)", $0

Data_5dbcb:
	db "(そいつは)", $0

Data_5dbd2:
	db "(こうかんてﾞきる)", $0

Func_5dbdd:
	push bc
	push bc
	push bc
	push de
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld c, [hl]
	call GetHLAtSPPlus8
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus8
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	call GetHLAtSPPlus8
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	pop de
	push bc
	push hl
	ld a, e
	dec a
	or d
	jp z, Func_5dc46
	ld a, e
	or d
	jp nz, Func_5dc6c
	call GetHLAtSPPlus8
	dec hl
	call WriteHLToSPPlus8
	inc h
	dec h
	bit 7, h
	jr z, .asm_5dc43
	ld hl, $0
	call WriteHLToSPPlus8
.asm_5dc43
	jp Func_5dc6c

Func_5dc46: ; 5dc46 (17:5c46)
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	inc hl
	call WriteHLToSPPlus8
	call CompareHLtoBC
	jp c, Func_5dc6c
	call GetHLAtSPPlus10
	ld de, $7
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	dec hl
	call WriteHLToSPPlus8
Func_5dc6c: ; 5dc6c (17:5c6c)
	call GetHLAtSPPlus8
	push hl
	read_hl_from_sp_plus $c
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop hl
	pop bc
	ld a, c
	cp $7
	jp z, Func_5dd33
	cp $6
	jp z, Func_5dd33
	cp $5
	jp z, Func_5dd33
	cp $3
	jp z, Func_5dd33
	cp $2
	jp z, Func_5dd33
	cp $1
	jp z, Func_5dcbe
	cp $8
	jp z, Func_5dcbe
	or a
	jp nz, Func_5dd48
	push hl
	call GetHLAtSPPlus8
	call Func_5d89a
	pop hl
	push hl
	ld c, $1
	ld hl, sp+$2
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	inc a
	call Func_3ca1
	pop bc
	jp Func_5dd48

Func_5dcbe: ; 5dcbe (17:5cbe)
	call GetHLAtSPPlus6
	call Func_5d9ca
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $a10
	ld hl, $e
	call FarCall
	call GetHLAtSPPlus4
	ld a, l
	call Func_5db1b
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	call Func_5d3d6
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $11
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	set_farcall_addrs_hli Func_62a3
	ld bc, $d
	ld de, $a10
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	call Func_5d3f1
	jp Func_5dd48

Func_5dd33: ; 5dd33 (17:5d33)
	push hl
	call GetHLAtSPPlus8
	call Func_5d9ca
	pop hl
	push hl
	ld c, $1
	ld hl, sp+$2
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	call Func_3ca1
	pop bc
Func_5dd48: ; 5dd48 (17:5d48)
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Data_5dd4f:
	dr $5dd4f, $5dd6e

Data_5dd6e:
	dr $5dd6e, $5dd7d

Func_5dd7d: ; 5dd7d (17:5d7d)
	push hl
	push bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hSRAMBank]
	push af
	push hl
	ld a, $3
	call GetSRAMBank
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld hl, sp+$5
	ld [hl], a
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld hl, sp+$6
	ld [hl], a
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld hl, sp+$4
	ld [hl], a
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	call GetHLAtSPPlus10
	ld c, l
	ld b, h
	ld hl, sp+$4
	ld l, [hl]
	ld h, a
	ld e, l
	ld d, h
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$5
	ld l, [hl]
	ld h, a
	call RestoreTileMapRectangle
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop af
	call GetSRAMBank
	pop bc
	pop bc
	pop bc
	ret

Pointers_5dde1:
	dw Data_5dde7
Pointers_5dde3:
	dw Data_5ddfe
	dw $0

Data_5dde7:
	db "Aホﾞタン(てﾞ)ステータス(かﾞみれるよ)", $0

Data_5ddfe:
	db "セレクトホﾞタン(てﾞこうかんてﾞきるよ)", $0

Func_5de14: ; 5de14 (17:5e14)
	push hl
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	ld l, [hl]
	inc hl
	ld h, [hl]
	ld hl, $d
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld a, [hl]
	push af
	ld hl, $d
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $c
	add hl, de
	ld e, [hl]
	push de
	ld hl, $d
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $8
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, e
	or d
	jp z, Func_5de78
	push bc
	push de
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	pop hl
	call Func_5dd7d
	pop bc
	ld hl, $d
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $8
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
Func_5de78: ; 5de78 (17:5e78)
	pop de
	pop af
	pop hl
	push de
	push af
	push bc
	call Func_5d739
	pop bc
	push bc
	ld l, c
	ld h, b
	call Func_5d9ca
	pop bc
	pop af
	pop de
	cp $8
	jp z, Func_5df3c
	cp $7
	jp z, Func_5df1b
	cp $5
	jp z, Func_5df1b
	cp $6
	jp z, Func_5deca
	cp $2
	jp z, Func_5deb5
	cp $1
	jp nz, Func_5df96
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	call Func_5db1b
	jp Func_5df96

Func_5deb5: ; 5deb5 (17:5eb5)
	ld de, Data_5dfab
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_5dfba
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_5df96

Func_5deca: ; 5deca (17:5eca)
	ld a, e
	cp $7
	jp z, Func_5df0f
	cp $3
	jp z, Func_5df0f
	cp $8
	jp z, Func_5df03
	cp $6
	jp z, Func_5def7
	cp $5
	jp z, Func_5def7
	cp $4
	jp z, Func_5def7
	cp $2
	jp z, Func_5def7
	cp $1
	jp z, Func_5def7
	or a
	jp nz, Func_5df18
Func_5def7: ; 5def7 (17:5ef7)
	ld de, Data_5dfc2
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_5df18

Func_5df03: ; 5df03 (17:5f03)
	ld de, Data_5dfd4
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_5df18

Func_5df0f: ; 5df0f (17:5f0f)
	ld de, Data_5dfe8
	ld hl, $10e
	call PlaceStringDEatCoordHL
Func_5df18: ; 5df18 (17:5f18)
	jp Func_5df96

Func_5df1b: ; 5df1b (17:5f1b)
	read_hl_from Pointers_5dde1
	reg16swap de, hl
	ld hl, $10e
	call PlaceStringDEatCoordHL
	read_hl_from Pointers_5dde3
	reg16swap de, hl
	ld hl, $110
	call PlaceStringDEatCoordHL
	jp Func_5df96

Func_5df3c: ; 5df3c (17:5f3c)
	ld hl, $d
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	or a
	jp nz, Func_5df96
	push bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_5d885
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_5dde1)
	ld de, Pointers_5dde1
	ld hl, $10e
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $d
	call FarCall
	pop bc
	push bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	call Func_5db1b
	pop bc
	ld hl, $d
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld [hl], $1
Func_5df96: ; 5df96 (17:5f96)
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	ret

Data_5dfab:
	db "(とﾞの)ロホﾞホﾟン(に)", $0

Data_5dfba:
	db "(しますか)?", $0

Data_5dfc2:
	db "(とﾞの)ロホﾞホﾟン(にする)?", $0

Data_5dfd4:
	db "(とﾞの)ロホﾞホﾟン(をあけﾞる)?", $0

Data_5dfe8:
	db "(とﾞの)ロホﾞホﾟン(につかう)?", $0

Func_5dffb:
	ld a, [wc395]
	inc a
	ld [wc395], a
	cp $14
	jp nc, Func_5e00b
	ld hl, $4000
	ret

Func_5e00b: ; 5e00b (17:600b)
	xor a
	ld [wc395], a
	ld de, wc396
	call Func_5d684
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	ld hl, $4000
	ret

Func_5e021: ; 5e021 (17:6021)
	push hl
	add sp, -$58
	read_hl_from_sp_plus $5a
	write_hl_to_sp_plus $58
	read_hl_from_sp_plus $58
	inc hl
	ld l, [hl]
	inc hl
	ld h, [hl]
	read_hl_from_sp_plus $58
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$55
	ld [hl], a
	read_hl_from_sp_plus $58
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$54
	ld [hl], a
	read_hl_from_sp_plus $58
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld c, [hl]
	read_hl_from_sp_plus $58
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $c
	add hl, de
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $5a
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld a, l
	ld [wc2e9], a
	pop hl
	ld a, c
	cp $7
	jp z, Func_5e226
	cp $6
	jp z, Func_5e1b9
	cp $8
	jp z, Func_5e174
	cp $5
	jp z, Func_5e174
	cp $3
	jp z, Func_5e135
	cp $1
	jp z, Func_5e0f4
	or a
	jp nz, Func_5e264
	ld hl, sp+$54
	ld a, [hl]
	pop hl
	push hl
	add hl, hl
	inc hl
	add l
	ld e, a
	ld hl, sp+$54
	ld [hl], e
	ld hl, sp+$55
	ld a, [hl]
	inc a
	ld hl, sp+$55
	ld [hl], a
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_5e271
	push hl
	call PlaceString
	pop bc
	pop bc
	read_hl_from_sp_plus $58
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $a
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_5e0f1
	ld a, $2
	ld [wc39a], a
	ld l, $1
	push hl
	ld c, $1
	ld hl, sp+$56
	ld e, [hl]
	ld hl, sp+$57
	ld a, [hl]
	call Func_3ca1
	pop bc
Func_5e0f1: ; 5e0f1 (17:60f1)
	jp Func_5e264

Func_5e0f4: ; 5e0f4 (17:60f4)
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli GetRobotInParty
	call GetHLAtSPPlus4
	ld a, l
	ld hl, sp+$33
	reg16swap de, hl
	call FarCall
	pop bc
	read_hl_from_sp_plus $3f
	ld a, l
	or h
	jp z, Func_5e12d
	ld hl, $c6
	add hl, bc
	ld a, [hl]
	pop hl
	push hl
	cp l
	jp nz, Func_5e132
Func_5e12d: ; 5e12d (17:612d)
	ld hl, $4000
	pop de
	push hl
Func_5e132: ; 5e132 (17:6132)
	jp Func_5e264

Func_5e135: ; 5e135 (17:6135)
	set_farcall_addrs_hli GetRobotInParty
	pop hl
	push hl
	ld a, l
	ld hl, sp+$31
	reg16swap de, hl
	call FarCall
	ld hl, sp+$31
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_5e16c
	call GetHLAtSPPlus7
	push hl
	read_hl_from_sp_plus $52
	pop de
	call CompareHLtoDE
	jp c, Func_5e171
Func_5e16c: ; 5e16c (17:616c)
	ld hl, $4000
	pop de
	push hl
Func_5e171: ; 5e171 (17:6171)
	jp Func_5e264

Func_5e174: ; 5e174 (17:6174)
	ld a, [wc2e9]
	ld [wc310], a
	callba_hli Func_5575d
	ld a, [wc2fa]
	ld c, a
	push bc
	xor a
	ld [wc2fa], a
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_54384)
	ld de, Data_54384
	ld hl, Data_54365
	call FarCall
	pop bc
	ld a, c
	ld [wc2fa], a
	read_hl_from_sp_plus $5a
	call Func_5de14
	ld hl, $4000
	jp Func_5e266

Func_5e1b9: ; 5e1b9 (17:61b9)
	ld a, l
	cp $3
	jp z, Func_5e20f
	cp $1
	jp nz, Func_5e223
	set_farcall_addrs_hli Func_5531c
	read_hl_from_sp_plus $58
	call FarCall
	pop de
	push hl
	read_hl_from_sp_plus $58
	ld de, $7
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $58
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $7
	add hl, de
	ld [hl], c
	read_hl_from_sp_plus $58
	ld de, $7
	add hl, de
	ld a, [hl]
	call Func_5d35f
	call Func_5c083
	read_hl_from_sp_plus $5a
	call Func_5de14
	ld hl, $4000
	jp Func_5e266

Func_5e20f: ; 5e20f (17:620f)
	set_farcall_addrs_hli Func_54a00
	read_hl_from_sp_plus $58
	call FarCall
	pop de
	push hl
Func_5e223: ; 5e223 (17:6223)
	jp Func_5e264

Func_5e226: ; 5e226 (17:6226)
	ld a, [wc2e9]
	ld [wc310], a
	callba_hli Func_5575d
	ld a, [wc2fa]
	ld c, a
	push bc
	xor a
	ld [wc2fa], a
	set_farcall_addrs_hli Func_56b35
	xor a
	call FarCall
	pop bc
	ld a, c
	ld [wc2fa], a
	read_hl_from_sp_plus $5a
	call Func_5de14
	ld hl, $4000
	jp Func_5e266

Func_5e264: ; 5e264 (17:6264)
	pop hl
	push hl
Func_5e266: ; 5e266 (17:6266)
	reg16swap de, hl
	add sp, $5a
	reg16swap de, hl
	ret

Data_5e271:
	TX_STACK
	db $0

Pointers_5e274:
	dw Data_5e278
	dw $0

Data_5e278:
	db "(こうかんしたよ)", $0

Pointers_5e282:
	dw Data_5e288
	dw Data_5e298
	dw $0

Data_5e288:
	db "(おなしﾞ)ロホﾞホﾟン(は)", $0

Data_5e298:
	db "(こうかんてﾞきないよ)", $0

Func_5e2a5:
	push hl
	add sp, -$2a
	read_hl_from_sp_plus $2c
	write_hl_to_sp_plus $29
	read_hl_from_sp_plus $29
	inc hl
	ld l, [hl]
	inc hl
	ld h, [hl]
	read_hl_from_sp_plus $29
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$26
	ld [hl], a
	read_hl_from_sp_plus $29
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$25
	ld [hl], a
	read_hl_from_sp_plus $29
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$24
	ld [hl], a
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld c, [hl]
	ld a, c
	cp $8
	jp nz, Func_5e30e
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld [wc2e9], a
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	jp Func_5e4bd

Func_5e30e: ; 5e30e (17:630e)
	read_hl_from_sp_plus $29
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $1
	call CompareHLtoDE
	jp nc, Func_5e32e
	ld a, c
	cp $5
	jp z, Func_5e334
	ld a, c
	cp $7
	jp z, Func_5e334
Func_5e32e: ; 5e32e (17:632e)
	ld hl, $4000
	jp Func_5e4bd

Func_5e334: ; 5e334 (17:6334)
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	cp $ff
	jp nz, Func_5e398
	read_hl_from_sp_plus $2c
	call Func_5d9ca
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld [hl], c
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], $1
	ld hl, sp+$24
	ld l, [hl]
	push hl
	ld c, $1
	ld hl, sp+$27
	ld e, [hl]
	ld hl, sp+$28
	ld a, [hl]
	call Func_3ca1
	pop bc
	ld hl, $4000
	jp Func_5e4bd

Func_5e398: ; 5e398 (17:6398)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_5d885
	set_farcall_addrs_hli PrintMapText_
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	inc hl
	cp [hl]
	jp z, Func_5e491
	ld c, BANK(Pointers_5e274)
	ld de, Pointers_5e274
	ld hl, $10e
	call FarCall
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld e, [hl]
	ld hl, sp+$0
	ld [hl], e
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	ld hl, sp+$3
	push hl
	ld l, a
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call MemCopy
	pop af
	ld l, a
	ld h, 0
	get_party_bot
	push hl
	ld hl, sp+$2
	ld l, [hl]
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call MemCopy
	ld hl, sp+$0
	ld l, [hl]
	ld h, 0
	get_party_bot
	reg16swap de, hl
	ld hl, sp+$1
	ld bc, $23
	call MemCopy
	read_hl_from_sp_plus $29
	ld de, $d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $b
	add hl, de
	ld [hl], $ff
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	read_hl_from_sp_plus $29
	ld de, $7
	add hl, de
	ld a, [hl]
	call Func_5d35f
	jp Func_5e4b3

Func_5e491: ; 5e491 (17:6491)
	ld c, BANK(Pointers_5e282)
	ld de, Pointers_5e282
	ld hl, $10e
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
Func_5e4b3: ; 5e4b3 (17:64b3)
	read_hl_from_sp_plus $2c
	call Func_5de14
	ld hl, $4000
Func_5e4bd: ; 5e4bd (17:64bd)
	reg16swap de, hl
	add sp, $2c
	reg16swap de, hl
	ret

INCLUDE "engine/menu/party_menu.asm"

Func_5ec5e: ; 5ec5e (17:6c5e)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $1
	jp nz, Func_5ec70
	jp Func_5ec98

Func_5ec70: ; 5ec70 (17:6c70)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_5ec8d
	ld c, $1
	ld de, wRNGState
	ld hl, $2
	call Func_5c03b
	jp Func_5ec98

Func_5ec8d: ; 5ec8d (17:6c8d)
	ld c, $1
	ld de, wRNGState
	ld hl, $2
	call Func_5c027
Func_5ec98: ; 5ec98 (17:6c98)
	ret

Func_5ec99:
	push af
	ld a, e
	and $f
	ld c, a
	ld a, e
	rrca
	rrca
	rrca
	rrca
	and $f
	ld e, a
	ld a, c
	cp $c
	jp z, Func_5ecb2
	ld a, e
	cp $c
	jp nz, Func_5eccd
Func_5ecb2: ; 5ecb2 (17:6cb2)
	ld hl, sp+$1
	ld a, [hl]
	cp $6
	jp z, Func_5ecc8
	cp $5
	jp z, Func_5ecc8
	cp $1
	jp z, Func_5ecc8
	or a
	jp nz, Func_5eccd
Func_5ecc8: ; 5ecc8 (17:6cc8)
	ld a, $1
	jp Func_5ed49

Func_5eccd: ; 5eccd (17:6ccd)
	ld a, c
	cp $d
	jp z, Func_5ecd9
	ld a, e
	cp $d
	jp nz, Func_5ecf5
Func_5ecd9: ; 5ecd9 (17:6cd9)
	ld hl, sp+$1
	ld a, [hl]
	cp $7
	jp z, Func_5ecf0
	cp $4
	jp z, Func_5ecf0
	cp $3
	jp z, Func_5ecf0
	cp $2
	jp nz, Func_5ecf5
Func_5ecf0: ; 5ecf0 (17:6cf0)
	ld a, $1
	jp Func_5ed49

Func_5ecf5: ; 5ecf5 (17:6cf5)
	ld a, c
	cp $e
	jp z, Func_5ed01
	ld a, e
	cp $e
	jp nz, Func_5ed18
Func_5ed01: ; 5ed01 (17:6d01)
	ld hl, sp+$1
	ld a, [hl]
	cp $a
	jp z, Func_5ed13
	cp $9
	jp z, Func_5ed13
	cp $8
	jp nz, Func_5ed18
Func_5ed13: ; 5ed13 (17:6d13)
	ld a, $1
	jp Func_5ed49

Func_5ed18: ; 5ed18 (17:6d18)
	ld a, c
	cp $f
	jp z, Func_5ed24
	ld a, e
	cp $f
	jp nz, Func_5ed34
Func_5ed24: ; 5ed24 (17:6d24)
	ld hl, sp+$1
	ld a, [hl]
	cp $b
	jp nz, Func_5ed2f
	jp Func_5ed34

Func_5ed2f: ; 5ed2f (17:6d2f)
	ld a, $1
	jp Func_5ed49

Func_5ed34: ; 5ed34 (17:6d34)
	ld hl, sp+$1
	ld a, [hl]
	cp c
	jp z, Func_5ed42
	ld hl, sp+$1
	ld a, [hl]
	cp e
	jp nz, Func_5ed47
Func_5ed42: ; 5ed42 (17:6d42)
	ld a, $1
	jp Func_5ed49

Func_5ed47: ; 5ed47 (17:6d47)
	ld a, $ff
Func_5ed49: ; 5ed49 (17:6d49)
	pop bc
	ret

SECTION "Bank 18", ROMX, BANK [$18]
Func_60000: ; 60000 (18:4000)
	ret

Func_60001: ; 60001 (18:4001)
	; c = 0: start cursor at (a, e)
	inc c
	dec c
	jp nz, .dont_do_callback
	ld [wBlinkerX], a
	ld a, e
	ld [wBlinkerY], a
	ld a, BANK(BlinkTextCursor)
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, BlinkTextCursor
	write_hl_to wVBlankCallbackAddress
	call WaitVideoTransfer
	ld a, $3
	ld [wc24d], a
	ld a, $bc
	ld [wTextBlinkerFrameCounter], a
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
	jp .done

.dont_do_callback
	; clobber a
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8f00 ; clobbers e
	add hl, de
	ld c, l
	ld b, h
	ld a, [wBlinkerY]
	ld e, a
	ld a, [wBlinkerX]
	ld d, a
	ld a, [wBlinkerY]
	ld l, a
	ld a, [wBlinkerX]
	ld h, a
	call FarCall
	ld a, $4
	ld [wc24d], a
	call WaitVideoTransfer
.done
	ret

StartCursorBlinking: ; 60075 (18:4075)
	push af
	ld a, $8a
	ld [wBlinkerOffTile], a
	ld hl, sp+$1 ; get previous value of a without popping flags (clobbers hl)
	ld a, [hl]
	and $80
	jp nz, .bit_7
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	jp .okay

.bit_7
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
.okay
	ld hl, sp+$1
	ld a, [hl]
	and $1
	jp nz, .okay2
	ld c, $0
	ld e, $10
	ld a, $12
	call Func_60001
.okay2
	xor a
	ld [wTimerCounter], a
.loop
	call CheckButton
	ld e, a
	inc e
	dec e
	jp nz, .check_bits_4_5
	ld hl, sp+$1
	ld a, [hl]
	and $1
	jp z, .next
	ld a, [wTimerCounter]
	cp $1e
	jp c, .next
	jp .done

.next
	jp .loop

.check_bits_4_5
	ld a, e
	and $30
	jp z, .next2
	jp .done

.next2
	jp .loop

.done
	push de
	ld hl, sp+$3
	ld a, [hl]
	and $1
	jp nz, .skip
	ld c, $1
	ld e, $10
	ld a, $12
	call Func_60001
.skip
	pop de
	ld a, e
	pop bc
	ret

Func_600f4: ; 600f4 (18:40f4)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_60109: ; 60109 (18:4109)
	push af
	push de
	set_farcall_addrs_hli Func_e015
	pop de
	pop af
	call FarCall
	ret

Func_6011c: ; 6011c (18:411c)
	push hl
	push de
	push bc
	set_farcall_addrs_hli PrintMapText ; same bank
	pop bc
	ld a, c
	and $e0
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld a, c
	and $1f
	ld e, a
	ld d, $0
	add hl, de
	ld c, l
	ld b, h
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call FarCall
	pop bc
	pop bc
	ret

Func_6014a: ; 6014a (18:414a)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_6015e: ; 6015e (18:415e)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_60172: ; 60172
	callba_hli Func_6fe0
	ret

Func_60181: ; 60181 (18:4181)
	push bc
	ld hl, sp+$0
	ld [hl], $ff
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_601a6
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_6015e
	jp Func_601b4

Func_601a6: ; 601a6 (18:41a6)
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_6014a
Func_601b4: ; 601b4 (18:41b4)
	pop bc
	ret

Func_601b6: ; 601b6
	callba_hli AllocateMonsterStruct
	ret

Func_601c5: ; 601c5
	callba_hli FreeMonsterStruct
	ret

Func_601d4: ; 601d4 (18:41d4)
	callba_hli DoBattle
	ret

Data_601e3: ; 601e3
	dr $601e3, $601eb

Data_601eb: ; 601eb
	dr $601eb, $601f1

Data_601f1: ; 601f1
	dr $601f1, $6020a

Func_6020a: ; 6020a (18:420a)
	ld hl, -$86
	add hl, sp
	ld sp, hl
	ld hl, sp+$7e
	reg16swap de, hl
	ld hl, Data_601e3
	ld bc, $8
	call MemCopy
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_601eb
	ld bc, $6
	call MemCopy
	ld hl, sp+$b
	pop de
	push hl
	ld hl, Data_601f1
	call WriteHLToSPPlus4
	ld hl, $0
	call WriteHLToSPPlus6
	ld e, $c5
	ld a, $c5
	call Func_60109
	call FillVisibleAreaWithBlankTile
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_600f4
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6037e
	ld hl, sp+$7e
	write_hl_to_sp_plus $7d
	ld c, $0
Func_60268: ; 60268 (18:4268)
	ld a, c
	cp $4
	jp nc, Func_6037b
	ld a, [hSRAMBank]
	push af
	push bc
	ld a, $3
	call GetSRAMBank_ReadOnly
	pop bc
	push bc
	ld hl, sp+$5c
	push hl
	ld l, c
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call MemCopy
	pop bc
	pop af
	push bc
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$5a
	reg16swap de, hl
	ld hl, $1
	call Func_6015e
	pop bc
	ld hl, sp+$58
	ld a, [hl]
	or a
	jp z, Func_60302
	push bc
	push af
	ld c, $1
	ld hl, sp+$5c
	reg16swap de, hl
	ld hl, $23
	call Func_6015e
	pop af
	ld e, a
	dec e
	ld hl, sp+$2b
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6adb3
	ld hl, sp+$79
	ld e, [hl]
	ld hl, sp+$30
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $7f
	ld [hl], a
	ld hl, sp+$5b
	reg16swap de, hl
	ld hl, sp+$d
	call LiteralStringInTree
	pop bc
	push bc
	ld hl, sp+$d
	push hl
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $302
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop bc
Func_60302: ; 60302 (18:4302)
	push bc
	ld c, $1
	ld hl, sp+$5a
	reg16swap de, hl
	ld hl, $1
	call Func_6014a
	pop bc
	ld hl, sp+$58
	ld a, [hl]
	or a
	jp z, Func_6036e
	push bc
	push af
	ld c, $1
	ld hl, sp+$5c
	reg16swap de, hl
	ld hl, $23
	call Func_6014a
	pop af
	ld e, a
	dec e
	ld hl, sp+$2b
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6adb3
	ld hl, sp+$79
	ld e, [hl]
	ld hl, sp+$30
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $7f
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	ld hl, sp+$5b
	reg16swap de, hl
	ld hl, sp+$d
	call LiteralStringInTree
	pop bc
	push bc
	ld hl, sp+$d
	push hl
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $c02
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop bc
Func_6036e: ; 6036e (18:436e)
	inc c
	read_hl_from_sp_plus $7d
	inc hl
	write_hl_to_sp_plus $7d
	jp Func_60268

Func_6037b: ; 6037b (18:437b)
	jp Func_60499

Func_6037e: ; 6037e (18:437e)
	ld hl, sp+$7e
	write_hl_to_sp_plus $7d
	ld c, $0
Func_60386: ; 60386 (18:4386)
	ld a, c
	cp $4
	jp nc, Func_60499
	push bc
	ld c, $1
	ld hl, sp+$5a
	reg16swap de, hl
	ld hl, $1
	call Func_6014a
	pop bc
	ld hl, sp+$58
	ld a, [hl]
	or a
	jp z, Func_603f8
	push bc
	push af
	ld c, $1
	ld hl, sp+$5c
	reg16swap de, hl
	ld hl, $23
	call Func_6014a
	pop af
	ld e, a
	dec e
	ld hl, sp+$2b
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6adb3
	ld hl, sp+$79
	ld e, [hl]
	ld hl, sp+$30
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $7f
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	ld hl, sp+$5b
	reg16swap de, hl
	ld hl, sp+$d
	call LiteralStringInTree
	pop bc
	push bc
	ld hl, sp+$d
	push hl
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $c02
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop bc
Func_603f8: ; 603f8 (18:43f8)
	ld a, [hSRAMBank]
	push af
	push bc
	ld a, $3
	call GetSRAMBank_ReadOnly
	pop bc
	push bc
	ld hl, sp+$5c
	push hl
	ld l, c
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call MemCopy
	pop bc
	pop af
	push bc
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$5a
	reg16swap de, hl
	ld hl, $1
	call Func_6015e
	pop bc
	ld hl, sp+$58
	ld a, [hl]
	or a
	jp z, Func_6048c
	push bc
	push af
	ld c, $1
	ld hl, sp+$5c
	reg16swap de, hl
	ld hl, $23
	call Func_6015e
	pop af
	ld e, a
	dec e
	ld hl, sp+$2b
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6adb3
	ld hl, sp+$79
	ld e, [hl]
	ld hl, sp+$30
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $7f
	ld [hl], a
	ld hl, sp+$5b
	reg16swap de, hl
	ld hl, sp+$d
	call LiteralStringInTree
	pop bc
	push bc
	ld hl, sp+$d
	push hl
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $302
	add hl, de
	pop de
	call PlaceStringDEatCoordHL
	pop bc
Func_6048c: ; 6048c (18:448c)
	inc c
	read_hl_from_sp_plus $7d
	inc hl
	write_hl_to_sp_plus $7d
	jp Func_60386

Func_60499: ; 60499 (18:4499)
	call ClearSprites
	ld hl, sp+$7e
	reg16swap de, hl
	xor a
	ld hl, sp+$7d
	ld [hl], a
Func_604a6: ; 604a6 (18:44a6)
	cp $8
	jp nc, Func_604e7
	push af
	ld a, [de]
	cp $ff
	jp z, Func_604e1
	push de
	set_farcall_addrs_hli LoadSpriteGFX
	pop de
	push de
	ld a, [de]
	ld e, a
	ld d, $0
	ld hl, $81
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $81
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	add hl, hl
	add hl, hl
	add hl, de
	ld e, $0
	ld c, $4
	call FarCall
	pop de
Func_604e1: ; 604e1 (18:44e1)
	pop af
	inc a
	inc de
	jp Func_604a6

Func_604e7: ; 604e7 (18:44e7)
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	ld hl, sp+$7e
	ld c, l
	ld b, h
	ld e, $0
	ld hl, sp+$7d
	ld [hl], e
Func_604ff: ; 604ff (18:44ff)
	ld a, e
	cp $8
	jp nc, Func_60556
	push bc
	ld a, [bc]
	cp $ff
	jp z, Func_60550
	push de
	ld a, e
	ld b, $4
	call DivideAbyB
	add a
	add a
	add a
	add a
	add a
	add a
	add a
	add $10
	ld l, a
	pop de
	push de
	push hl
	ld a, e
	and $3
	add a
	add a
	add a
	ld d, a
	add a
	add d
	add $18
	push af
	set_farcall_addrs_hli UpdateCurSprite
	pop af
	pop hl
	ld d, l
	ld e, a
	ld hl, $81
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $81
	add hl, sp
	ld [hl], a
	dec a
	add a
	add a
	ld bc, $200
	call FarCall
	pop de
Func_60550: ; 60550 (18:4550)
	inc e
	pop bc
	inc bc
	jp Func_604ff

Func_60556: ; 60556 (18:4556)
	callba_hli Func_d9f55
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_605be
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld de, $c980
	ld hl, sp+$8
	call CopyUntilNull
	pop af
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $5
	call Func_6015e
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $5
	call Func_6014a
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, sp+$b
	call LiteralStringInTree
	dec hl
	jp Func_605fc

Func_605be: ; 605be (18:45be)
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $5
	call Func_6014a
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, sp+$b
	call LiteralStringInTree
	dec hl
	push hl
	ld a, [hSRAMBank]
	push af
	ld a, $3
	call GetSRAMBank_ReadOnly
	ld de, $c980
	ld hl, sp+$a
	call CopyUntilNull
	pop af
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$8
	reg16swap de, hl
	ld hl, $5
	call Func_6015e
	pop hl
Func_605fc: ; 605fc (18:45fc)
	ld de, Data_60619
	call CopyUntilNull
	ld c, $98
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $10e
	call Func_6011c
	call Func_60181
	ld hl, $86
	add hl, sp
	ld sp, hl
	ret

Data_60619: ; 60619
	db " (かﾞ)", $0

INCLUDE "engine/map_text_18.asm"

Func_6086c: ; 6086c (18:486c)
	push hl
	push de
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus6
	ld de, $6
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	pop de
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $1a
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $18
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $1c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	pop de
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $1e
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $1c
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $23
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus6
	ld de, $8
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	pop de
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $23
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $27
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus6
	ld de, $a
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	pop de
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $27
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus4
	ld de, $25
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	call GetHLAtSPPlus6
	ld de, $9
	add hl, de
	ld e, [hl]
	ld d, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	pop de
	add hl, de
	ld c, l
	ld b, h
	call GetHLAtSPPlus4
	ld de, $25
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	pop bc
	ret

Func_6095c: ; 6095c (18:495c)
	push hl
	push de
	push bc
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	pop de
	push hl
	ld hl, sp+$2
	ld l, [hl]
	push hl
	call GetHLAtSPPlus8
	pop de
	call GetRobotOrTrainerBaseStats
	pop hl
	push hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	call GetHLAtSPPlus8
	ld e, a
	call Func_6086c
	pop af
	call GetHLAtSPPlus6
	ld de, $13
	add hl, de
	ld [hl], a
	ld c, $0
Func_60994: ; 60994 (18:4994)
	ld a, c
	cp $3
	jp nc, Func_609b4
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld e, c
	ld d, $0
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus6
	ld de, $14
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld [hl], a
	inc c
	jp Func_60994

Func_609b4: ; 609b4 (18:49b4)
	pop hl
	push hl
	inc hl
	ld a, [hl]
	call GetHLAtSPPlus6
	ld de, $2e
	add hl, de
	ld [hl], a
	pop hl
	push hl
	ld de, $6
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus6
	ld de, $17
	add hl, de
	ld [hl], a
	pop bc
	pop bc
	pop bc
	ret

Func_609d3: ; 609d3 (18:49d3)
	push af
	push de
	ld hl, -$356
	add hl, sp
	ld sp, hl
	push bc
	ld hl, $357
	add hl, sp
	ld a, [hSRAMBank]
	ld [hl], a
	ld hl, $35b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $35b
	add hl, sp
	ld a, [hl]
	or a
	jp nz, Func_60a20
	ld hl, $0
	jp Func_60a23

Func_60a20: ; 60a20 (18:4a20)
	ld hl, $2f
Func_60a23: ; 60a23 (18:4a23)
	add hl, de
	write_hl_to_sp_plus $357
	pop bc
	push bc
	ld a, c
	cp $8
	jp z, Func_60d7b
	cp $7
	jp z, Func_60d07
	cp $6
	jp z, Func_60c66
	cp $5
	jp z, Func_60b8a
	cp $4
	jp z, Func_60b73
	cp $3
	jp z, Func_60b42
	cp $2
	jp z, Func_60af2
	cp $1
	jp z, Func_60abb
	or a
	jp nz, Func_60d8c
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $358
	add hl, sp
	ld a, [hl]
	call FarCall
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld l, a
	push hl
	read_hl_from_sp_plus $359
	pop de
	call GetRobotOrTrainerBaseStats
	ld bc, $23
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $359
	ld de, $c
	add hl, de
	pop de
	call CopyFromDEtoHL
	set_farcall_addrs_hli Func_5c6e3
	read_hl_from_sp_plus $357
	call FarCall
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $357
	ld de, $22
	add hl, de
	ld [hl], a
	jp Func_60d8c

Func_60abb: ; 60abb (18:4abb)
	ld hl, $358
	add hl, sp
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $359
	pop de
	call Func_6095c
	set_farcall_addrs_hli Func_5c6e3
	read_hl_from_sp_plus $357
	call FarCall
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $357
	ld de, $22
	add hl, de
	ld [hl], a
	jp Func_60d8c

Func_60af2: ; 60af2 (18:4af2)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $358
	add hl, sp
	ld a, [hl]
	call FarCall
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld l, a
	push hl
	read_hl_from_sp_plus $359
	pop de
	call GetRobotOrTrainerBaseStats
	ld bc, $23
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $359
	ld de, $c
	add hl, de
	pop de
	call CopyFromDEtoHL
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $357
	ld de, $22
	add hl, de
	ld [hl], a
	jp Func_60d8c

Func_60b42: ; 60b42 (18:4b42)
	ld bc, $23
	read_hl_from_sp_plus $357
	ld de, $c
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	call CopyFromDEtoHL
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $358
	add hl, sp
	ld a, [hl]
	call FarCall
	jp Func_60d8c

Func_60b73: ; 60b73 (18:4b73)
	set_farcall_addrs_hli Func_bd6fa
	ld de, $0
	ld hl, Data_60e6f
	call FarCall
	jp @ - 1 ; better luck next time

Func_60b8a: ; 60b8a (18:4b8a)
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld de, $5
	add hl, de
	ld a, [hl]
	dec a
	ld l, a
	push hl
	read_hl_from_sp_plus $359
	pop de
	call Func_6095c
	call GetHLAtSPPlus4
	ld de, $71
	add hl, de
	push hl
	ld hl, $35a
	add hl, sp
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	call GetHLAtSPPlus8
	ld de, $82
	add hl, de
	pop de
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $357
	ld de, $22
	add hl, de
	ld [hl], a
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $357
	ld de, $18
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $357
	ld de, $1a
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	read_hl_from_sp_plus $357
	ld de, $13
	add hl, de
	ld [hl], a
	jp Func_60d8c

Func_60c66: ; 60c66 (18:4c66)
	read_hl_from_sp_plus $357
	ld de, $18
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $357
	ld de, $1a
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	inc hl
	inc hl
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $357
	ld de, $13
	add hl, de
	ld a, [hl]
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	ld [hl], a
	read_hl_from_sp_plus $357
	ld de, $c
	add hl, de
	ld a, [hl]
	ld hl, $358
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1ac
	add hl, de
	pop de
	add hl, de
	ld de, $5
	add hl, de
	ld [hl], a
	jp Func_60d8c

Func_60d07: ; 60d07 (18:4d07)
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $358
	add hl, sp
	ld a, [hl]
	call FarCall
	ld hl, sp+$4
	ld a, [hl]
	dec a
	ld l, a
	push hl
	read_hl_from_sp_plus $359
	pop de
	call GetRobotOrTrainerBaseStats
	ld bc, $23
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $359
	ld de, $c
	add hl, de
	pop de
	call CopyFromDEtoHL
	set_farcall_addrs_hli Func_5c6e3
	read_hl_from_sp_plus $357
	call FarCall
	call GetHLAtSPPlus4
	ld de, $75
	add hl, de
	ld [hl], a
	read_hl_from_sp_plus $357
	ld de, $22
	add hl, de
	ld [hl], a
	ld c, $1
	read_hl_from_sp_plus $357
	reg16swap de, hl
	ld hl, $2f
	call Func_6015e
	jp Func_60d8c

Func_60d7b: ; 60d7b (18:4d7b)
	ld c, $1
	read_hl_from_sp_plus $357
	reg16swap de, hl
	ld hl, $2f
	call Func_6014a
Func_60d8c: ; 60d8c (18:4d8c)
	pop bc
	ld a, c
	cp $3
	jp c, Func_60da5
	ld a, c
	cp $5
	jp z, Func_60da5
	ld a, c
	cp $7
	jp z, Func_60da5
	ld a, c
	cp $8
	jp nz, Func_60e69
Func_60da5: ; 60da5 (18:4da5)
	push bc
	set_farcall_addrs_hli Func_673ff
	ld hl, $35b
	add hl, sp
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $357
	ld de, $c
	add hl, de
	ld l, [hl]
	pop bc
	ld a, c
	cp $8
	jp z, Func_60e24
	cp $7
	jp nz, Func_60e69
	push hl
	ld c, $1
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $c8
	call Func_6015e
	pop hl
	ld a, l
	cp $ab
	jp c, Func_60e21
	ld a, l
	cp $af
	jp nc, Func_60e21
	push hl
	ld a, $2
	call GetSRAMBank_ReadOnly
	pop hl
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, ($b29f - $351 * $ab) & $ffff
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $351
	call CopyFromDEtoHL
	ld hl, $355
	add hl, sp
	ld a, [hl]
	call GetSRAMBank
	ld c, $1
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $351
	call Func_6015e
Func_60e21: ; 60e21 (18:4e21)
	jp Func_60e69

Func_60e24: ; 60e24 (18:4e24)
	push hl
	ld c, $1
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, $c8
	call Func_6014a
	pop hl
	ld a, l
	cp $ab
	jp c, Func_60e69
	ld a, l
	cp $af
	jp nc, Func_60e69
	ld c, $1
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $351
	call Func_6014a
	ld bc, $351
	ld hl, sp+$2
	push hl
	read_hl_from wCurRobotPointer
	ld de, $1a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CopyFromDEtoHL
Func_60e69: ; 60e69 (18:4e69)
	ld hl, $35a
	add hl, sp
	ld sp, hl
	ret

Data_60e6f: ; 60e6f
	dr $60e6f, $60e77

Data_60e77: ; 60e77
	dr $60e77, $60e81

Func_60e81: ; 60e81
	add sp, -$2e
	push af
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	push hl
	ld a, [wSongCurrentlyPlaying]
	ld e, a
	push de
	ld hl, sp+$6
	ld [hl], $0
Func_60e9e: ; 60e9e (18:4e9e)
	ld hl, sp+$6
	ld a, [hl]
	cp $4
	jp nc, Func_60ef4
	set_farcall_addrs_hli AllocateMemory
	ld hl, $23
	call FarCall
	ld c, l
	ld b, h
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2a
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
	jp Func_60e9e

Func_60ef4: ; 60ef4 (18:4ef4)
	pop de
	pop hl
	pop af
	push de
	push hl
	cp $ff
	jp z, Func_60f5a
	push af
	set_farcall_addrs_hli GetRobotInParty
	pop af
	push af
	ld hl, sp+$7
	reg16swap de, hl
	call FarCall
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$7
	reg16swap de, hl
	xor a
	call FarCall
	ld hl, sp+$7
	ld [hl], $0
	ld a, $1
Func_60f30: ; 60f30 (18:4f30)
	cp $4
	jp nc, Func_60f51
	push af
	set_farcall_addrs_hli Func_6b74
	pop af
	push af
	ld hl, sp+$9
	reg16swap de, hl
	call FarCall
	pop af
	inc a
	jp Func_60f30

Func_60f51: ; 60f51 (18:4f51)
	ld a, $4
	call OverworldPlaySong
	pop af
	jp Func_60f61

Func_60f5a: ; 60f5a (18:4f5a)
	push af
	ld a, $6
	call OverworldPlaySong
	pop af
Func_60f61: ; 60f61 (18:4f61)
	push af
	ld a, $1
	ld [wc2fa], a
	ld a, [wc319]
	cp $81
	jp nz, Func_60f7d
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld [hl], $3
	jp Func_60f88

Func_60f7d: ; 60f7d (18:4f7d)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld [hl], $1
Func_60f88: ; 60f88 (18:4f88)
	pop af
	push af
	cp $ff
	jp nz, Func_60f92
	call Func_6020a
Func_60f92: ; 60f92 (18:4f92)
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $34
	ld hl, sp+$6
	ld [hl], $0
Func_60fa3: ; 60fa3 (18:4fa3)
	ld hl, sp+$6
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_6103d
	ld hl, sp+$6
	ld a, [hl]
	cp $4
	jp nc, Func_6103d
	ld c, $0
	ld hl, sp+$6
	ld e, [hl]
	xor a
	call Func_609d3
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	read_hl_from_sp_plus $36
	ld de, $82
	add hl, de
	pop de
	add hl, de
	push hl
	read_hl_from_sp_plus $36
	ld de, $71
	add hl, de
	pop de
	ld bc, $11
	call MemCopy
	read_hl_from_sp_plus $34
	ld de, $75
	add hl, de
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $22
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_6b74
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $c
	add hl, de
	reg16swap de, hl
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	ld hl, sp+$6
	ld a, [hl]
	inc a
	ld hl, sp+$6
	ld [hl], a
	jp Func_60fa3

Func_6103d: ; 6103d (18:503d)
	ld c, $0
Func_6103f: ; 6103f (18:503f)
	ld a, c
	cp $4
	jp nc, Func_61076
	push bc
	set_farcall_addrs_hli GetRobotInParty
	pop bc
	push bc
	ld a, c
	ld hl, sp+$9
	reg16swap de, hl
	call FarCall
	pop bc
	call GetHLAtSPPlusParam8
	dec d
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_61072
	jp Func_61076

Func_61072: ; 61072 (18:5072)
	inc c
	jp Func_6103f

Func_61076: ; 61076 (18:5076)
	push bc
	read_hl_from wCurRobotPointer
	ld de, $e2
	add hl, de
	ld [hl], c
	ld a, [hSRAMBank]
	ld l, a
	push hl
	ld a, $3
	call GetSRAMBank
	pop hl
	pop bc
	ld a, c
	ld [wc98d], a
	ld a, l
	call GetSRAMBank
	pop af
	pop hl
	cp $ff
	jp z, Func_610b1
	set_farcall_addrs_hli Func_d7f5
	ld de, $0
	ld a, $7
	call FarCall
	jp Func_610d1

Func_610b1: ; 610b1 (18:50b1)
	reg16swap de, hl
	ld hl, Data_60e77
	ld bc, $a
	call MemCopy
	set_farcall_addrs_hli Func_d7f5
	ld de, $0
	ld a, $4
	call FarCall
Func_610d1: ; 610d1 (18:50d1)
	call Func_62865
	call Func_601d4
	pop de
	push af
	push de
	xor a
	ld [wc2fa], a
	xor a
Func_610df: ; 610df (18:50df)
	cp $4
	jp nc, Func_6112a
	push af
	set_farcall_addrs_hli Func_6b74
	pop af
	push af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call FarCall
	set_farcall_addrs_hli FreeMemory
	pop af
	push af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2a
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	call FarCall
	pop af
	inc a
	jp Func_610df

Func_6112a: ; 6112a (18:512a)
	pop de
	ld a, e
	call OverworldPlaySong
	pop af
	add sp, $2e
	ret

Func_61133: ; 61133
	push hl
	add sp, -$44
	push de
	ld a, $1
	ld hl, -1
	write_hl_to_sp_plus $45
	pop hl
	write_hl_to_sp_plus $41
Func_61145: ; 61145 (18:5145)
	or a
	jp z, Func_61179
	set_farcall_addrs_hli Func_4b8ac
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, sp+$3f
	call FarCall
	push af
	ld hl, sp+$2
	push hl
	read_hl_from_sp_plus $4a
	pop de
	call PlaceStringDEatCoordHL
	read_hl_from_sp_plus $48
	inc hl
	inc hl
	write_hl_to_sp_plus $48
	pop af
	jp Func_61145

Func_61179: ; 61179 (18:5179)
	add sp, $46
	ret

Data_6117c: ; 6117c
	dr $6117c, $6118b

Palettes_6118b: ; 6118b
	RGB 29, 22, 14
	RGB 24, 07, 07

	RGB 31, 20, 16
	RGB 31, 09, 00

	RGB 31, 18, 18
	RGB 31, 00, 00

	RGB 19, 19, 31
	RGB 00, 00, 31

	RGB 31, 27, 24
	RGB 23, 15, 13

	RGB 21, 29, 00
	RGB 00, 20, 00

	RGB 24, 24, 24
	RGB 14, 14, 14

	RGB 16, 25, 16
	RGB 08, 19, 08

	RGB 31, 21, 31
	RGB 31, 00, 21

	RGB 31, 16, 00
	RGB 16, 09, 00

	RGB 23, 31, 00
	RGB 16, 20, 00

	RGB 19, 28, 31
	RGB 05, 18, 31

	RGB 30, 30, 17
	RGB 30, 21, 00

	RGB 23, 19, 16
	RGB 18, 12, 08

	RGB 31, 20, 27
	RGB 22, 09, 13

	RGB 31, 28, 27
	RGB 28, 20, 19

	RGB 30, 22, 19
	RGB 23, 12, 06

	RGB 27, 21, 31
	RGB 11, 09, 19

	RGB 31, 27, 11
	RGB 23, 17, 03

	RGB 16, 16, 16
	RGB 10, 10, 10

	RGB 24, 25, 24
	RGB 14, 15, 14

	RGB 14, 18, 26
	RGB 00, 00, 09

	RGB 12, 21, 00
	RGB 00, 14, 00

	RGB 24, 18, 28
	RGB 15, 09, 19

	RGB 15, 15, 25
	RGB 07, 07, 19

	RGB 24, 26, 28
	RGB 15, 15, 17

	RGB 31, 27, 08
	RGB 26, 14, 00

LoadRobotPaletteSGB: ; 611f7
	push af
	add sp, -$10
	push de
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_6117c
	ld bc, $f
	call MemCopy
	ld hl, $7fff
	call WriteHLToSPPlus5
	xor a
Func_61211: ; 61211 (18:5211)
	cp $2
	jp nc, Func_6123f
	ld hl, sp+$13
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Palettes_6118b
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$5
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	inc a
	jp Func_61211

Func_6123f: ; 6123f (18:523f)
	ld hl, $0
	call WriteHLToSPPlusParam8
	dec bc
	xor a
	pop de
Func_61248: ; 61248 (18:5248)
	cp $2
	jp nc, Func_61276
	push de
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Palettes_6118b
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	inc a
	pop de
	jp Func_61248

Func_61276: ; 61276 (18:5276)
	ld hl, $0
	call WriteHLToSPPlusParam8
	db $f
	ld de, $f
	ld hl, sp+$0
	call Func_2b83
	add sp, $12
	ret

RobotPicPalettes: ; 61288
	RGB 29, 22, 14
	RGB 24, 07, 07

	RGB 29, 10, 00
	RGB 15, 05, 00

	RGB 31, 10, 10
	RGB 31, 00, 00

	RGB 10, 16, 30
	RGB 02, 00, 23

	RGB 24, 13, 10
	RGB 13, 05, 06

	RGB 00, 21, 00
	RGB 00, 12, 00

	RGB 15, 15, 15
	RGB 09, 09, 09

	RGB 10, 20, 00
	RGB 00, 11, 00

	RGB 30, 08, 23
	RGB 18, 05, 00

	RGB 26, 08, 05
	RGB 13, 05, 00

	RGB 00, 31, 00
	RGB 00, 14, 00

	RGB 14, 20, 30
	RGB 09, 00, 30

	RGB 31, 31, 00
	RGB 16, 16, 00

	RGB 18, 10, 04
	RGB 12, 05, 05

	RGB 28, 00, 31
	RGB 16, 00, 16

	RGB 23, 12, 09
	RGB 12, 04, 05

	RGB 20, 10, 02
	RGB 09, 05, 00

	RGB 24, 00, 31
	RGB 14, 00, 21

	RGB 24, 14, 00
	RGB 17, 07, 00

	RGB 13, 13, 13
	RGB 07, 07, 07

	RGB 17, 17, 17
	RGB 11, 11, 11

	RGB 08, 14, 28
	RGB 00, 00, 21

	RGB 00, 19, 00
	RGB 00, 10, 00

	RGB 29, 00, 31
	RGB 14, 05, 20

	RGB 06, 12, 26
	RGB 00, 00, 19

	RGB 17, 17, 17
	RGB 07, 07, 07

	RGB 30, 21, 00
	RGB 14, 07, 00

LoadRobotPaletteCGB: ; 612f4
	push af
	push de
.wait0: ; 612f6 (18:52f6)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, .wait0
	ld hl, $7fff
	write_hl_to wCGB_BGPalsBuffer + 3 * 8
	write_hl_to wCGB_BGPalsBuffer + 2 * 8
	write_hl_to wCGB_BGPalsBuffer
	ld hl, $0
	write_hl_to wCGB_BGPalsBuffer + 3 * 8 + 6
	write_hl_to wCGB_BGPalsBuffer + 2 * 8 + 6
	write_hl_to wCGB_BGPalsBuffer + 6
	ld a, [wc2fa]
	cp $3
	jp z, .bgpal0
	ld hl, $7fff
	write_hl_to wCGB_BGPalsBuffer + 1 * 8
	ld hl, $0
	write_hl_to wCGB_BGPalsBuffer + 1 * 8 + 6
	xor a
.bgpal1_loop: ; 6133b (18:533b)
	cp $2
	jp nc, .bgpal0
	ld l, a
	ld h, $0
	add hl, hl
	ld de, RobotPicPalettes
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 1 * 8 + 2
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	inc a
	jp .bgpal1_loop

.bgpal0: ; 6135a (18:535a)
	xor a
.bgpal0_loop: ; 6135b (18:535b)
	cp $2
	jp nc, .bgpal2
	ld l, a
	ld h, $0
	add hl, hl
	ld de, RobotPicPalettes
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 2
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	inc a
	jp .bgpal0_loop

.bgpal2: ; 6137a (18:537a)
	xor a
.bgpal2_loop: ; 6137b (18:537b)
	cp $2
	jp nc, .bgpal3
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, RobotPicPalettes
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 2 * 8 + 2
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	inc a
	jp .bgpal2_loop

.bgpal3: ; 613a6 (18:53a6)
	xor a
	pop de
.bgpal3_loop: ; 613a8 (18:53a8)
	cp $2
	jp nc, .to_obpals
	push de
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, RobotPicPalettes
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld de, wCGB_BGPalsBuffer + 3 * 8 + 2
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	inc a
	pop de
	jp .bgpal3_loop

.to_obpals: ; 613d3 (18:53d3)
	ld bc, $40
	ld de, wCGB_BGPalsBuffer
	ld hl, wCGB_OBPalsBuffer
	call CopyFromDEtoHL
	ld a, [wc2fa]
	cp $4
	jp z, .quit
	call WaitVideoTransfer
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
.wait: ; 613f2 (18:53f2)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, .wait
.quit: ; 613fa (18:53fa)
	pop bc
	ret

Func_613fc:: ; 613fc (18:53fc)
	push af
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6140e
	ld hl, sp+$1
	ld a, [hl]
	call LoadRobotPaletteCGB
	jp Func_61414

Func_6140e: ; 6140e (18:540e)
	ld hl, sp+$1
	ld a, [hl]
	call LoadRobotPaletteSGB
Func_61414: ; 61414 (18:5414)
	pop bc
	ret

Data_61416: ; 61416
	dr $61416, $61424

Func_61424:: ; 61424 (18:5424)
	push af
	add sp, -$e
	push de
	push bc
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_61416
	ld bc, $e
	call MemCopy
	pop bc
	pop de
	ld a, [wSystemType]
	cp $ff
	jp z, Func_614c8
	cp $1
	jp z, Func_614c8
	cp $11
	jp nz, Func_614f0
	push de
	push bc
	set_farcall_addrs_hli Func_c7109
	pop bc
	pop de
	push bc
	push de
	ld de, $1405
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_c7109
	ld hl, sp+$13
	ld c, [hl]
	ld de, $908
	ld hl, $5
	call FarCall
	set_farcall_addrs_hli Func_c7109
	pop de
	ld c, e
	ld de, $908
	ld hl, $a05
	call FarCall
	set_farcall_addrs_hli Func_c7109
	pop bc
	ld de, $1405
	ld hl, $d
	call FarCall
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	jp Func_614f0

Func_614c8: ; 614c8 (18:54c8)
	ld hl, sp+$f
	ld a, [hl]
	add a
	add a
	ld hl, sp+$f
	add [hl]
	ld l, a
	ld a, c
	add a
	add a
	add a
	add a
	add l
	ld hl, sp+$3
	ld [hl], a
	ld a, c
	add a
	add a
	add a
	add a
	ld l, a
	ld a, e
	add a
	add a
	add e
	add l
	ld hl, sp+$9
	ld [hl], a
	ld de, $e
	ld hl, sp+$0
	call Func_2b83
Func_614f0: ; 614f0 (18:54f0)
	add sp, $10
	ret

Data_614f3: ; 614f3
	dr $614f3, $615be

Func_615be: ; 615be
	cp $cb
	jp nc, Func_615cc
Func_615c3: ; 615c3
	ld e, a
	ld d, $0
	ld hl, Data_614f3
	add hl, de
	ld a, [hl]
	ret

Func_615cc: ; 615cc (18:55cc)
	xor a
	ret

Func_615ce: ; 615ce (18:55ce)
	push hl
	push bc
	push bc
	push de
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld hl, wOAMBuffer
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $8
	add hl, de
	call WriteHLToSPPlus8
	pop de
	ld hl, $10
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld a, [hl]
	and $40
	jp z, Func_6160e
	ld hl, $30
	add hl, de
	reg16swap de, hl
	ld bc, $fff0
	jp Func_61611

Func_6160e: ; 6160e (18:560e)
	ld bc, $10
Func_61611: ; 61611 (18:5611)
	xor a
Func_61612: ; 61612 (18:5612)
	cp $4
	jp nc, Func_616c2
	push af
	push bc
	push de
	ld c, e
	ld b, d
	inc b
	dec b
	bit 7, b
	jr nz, .asm_6162d
	ld e, c
	ld d, b
	ld hl, $98
	call CompareHLtoDE
	jp nc, Func_61630
.asm_6162d
	ld bc, $0
Func_61630: ; 61630 (18:5630)
	ld hl, sp+$7
	ld [hl], $0
Func_61634: ; 61634 (18:5634)
	ld hl, sp+$7
	ld a, [hl]
	cp $8
	jp nc, Func_616b2
	push bc
	ld hl, sp+$8
	ld a, [hl]
	and $20
	jp z, Func_61662
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld hl, $7
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	ld c, l
	ld b, h
	jp Func_61675

Func_61662: ; 61662 (18:5662)
	read_hl_from_sp_plus $e
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld c, l
	ld b, h
Func_61675: ; 61675 (18:5675)
	inc b
	dec b
	bit 7, b
	jr nz, .asm_61686
	ld e, c
	ld d, b
	ld hl, $a8
	call CompareHLtoDE
	jp nc, Func_61689
.asm_61686
	ld bc, $0
Func_61689: ; 61689 (18:5689)
	read_hl_from_sp_plus $c
	inc hl
	ld [hl], c
	pop bc
	call GetHLAtSPPlus10
	ld [hl], c
	ld hl, sp+$6
	ld a, [hl]
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld [hl], a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	call WriteHLToSPPlus10
	jp Func_61634

Func_616b2: ; 616b2 (18:56b2)
	pop de
	pop bc
	reg16swap de, hl
	add hl, bc
	reg16swap de, hl
	pop af
	inc a
	jp Func_61612

Func_616c2: ; 616c2 (18:56c2)
	pop bc
	pop bc
	pop bc
	ret

Data_616c6: ; 616c6
	dr $616c6, $616ce

Data_616ce: ; 616ce
	dr $616ce, $616d5

Data_616d5: ; 616d5
	dr $616d5, $616db

Data_616db: ; 616db
	dr $616db, $616dd

Func_616dd: ; 616dd ; DoDamage?
	push af
	push de
	add sp, -$26
	ld e, $2
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	ld hl, sp+$27
	ld [hl], a
	ld hl, sp+$26
	ld [hl], $0
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, Data_616c6
	ld bc, $8
	call MemCopy
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_616ce
	ld bc, $7
	call MemCopy
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
.waitLoop
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, .waitLoop
	ld hl, sp+$2b
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$9
	call FarCall
	ld hl, sp+$2b
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_616d5
	add hl, de
	ld e, [hl]
	ld hl, sp+$19
	ld [hl], e
	ld hl, sp+$2b
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Data_616d5
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$1a
	ld [hl], e
	ld hl, sp+$2b
	ld a, [hl]
	or a
	jp nz, Func_6178d
	ld hl, $2
	write_hl_to_sp_plus $26
	ld hl, $703
	write_hl_to_sp_plus $24
	ld hl, sp+$27
	ld [hl], $1
	xor a
	jp Func_6179d

Func_6178d: ; 6178d (18:578d)
	ld hl, $b02
	write_hl_to_sp_plus $26
	ld hl, $1203
	write_hl_to_sp_plus $24
	ld a, $b
Func_6179d: ; 6179d (18:579d)
	push af
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$2d
	ld a, [hl]
	or a
	jp nz, Func_617b7
	ld hl, $0
	jp Func_617ba

Func_617b7: ; 617b7 (18:57b7)
	ld hl, $2f
Func_617ba: ; 617ba (18:57ba)
	add hl, de
	ld c, l
	ld b, h
	push bc
	ld hl, $1a
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $26
	ld hl, $18
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $24
	read_hl_from_sp_plus $2e
	push hl
	read_hl_from_sp_plus $26
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $22
	read_hl_from_sp_plus $22
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_61802
	ld hl, $0
	write_hl_to_sp_plus $22
Func_61802: ; 61802 (18:5802)
	ld hl, sp+$19
	ld c, l
	ld b, h
	read_hl_from_sp_plus $26
	push hl
	read_hl_from_sp_plus $26
	pop de
	call Func_2617
	ld hl, sp+$19
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$19
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$1b
	ld a, [hl]
	and $80
	jp z, Func_6182e
	ld hl, sp+$1a
	ld a, [hl]
	inc a
	ld hl, sp+$1a
	ld [hl], a
Func_6182e: ; 6182e (18:582e)
	ld hl, sp+$1a
	ld a, [hl]
	push af
	ld hl, sp+$17
	ld c, l
	ld b, h
	read_hl_from_sp_plus $28
	push hl
	read_hl_from_sp_plus $26
	pop de
	call Func_2617
	ld hl, sp+$17
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$17
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$19
	ld a, [hl]
	and $80
	jp z, Func_6185e
	ld hl, sp+$18
	ld a, [hl]
	inc a
	ld hl, sp+$18
	ld [hl], a
Func_6185e: ; 6185e (18:585e)
	ld hl, sp+$18
	ld a, [hl]
	ld hl, sp+$21
	ld [hl], a
	read_hl_from_sp_plus $26
	ld de, $100
	call DivideHLByDESigned
	ld a, l
	ld hl, sp+$1b
	ld [hl], a
	read_hl_from_sp_plus $26
	ld e, l
	ld hl, sp+$1c
	ld [hl], e
	ld hl, sp+$1e
	xor a
	ld [hl], a
	ld hl, sp+$1d
	ld [hl], a
	pop af
	push af
	ld hl, sp+$17
	ld c, l
	ld b, h
	ld hl, sp+$21
	ld e, [hl]
	ld d, $0
	ld l, a
	ld h, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	push hl
	read_hl_from_sp_plus $26
	push hl
	read_hl_from_sp_plus $2a
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call Func_2617
	ld a, $5d
	call OverworldPlaySFX
	pop af
	ld e, a
Func_618b1: ; 618b1 (18:58b1)
	ld hl, sp+$1f
	ld a, [hl]
	cp e
	jp nc, Func_6197c
	push de
	ld hl, sp+$31
	ld a, [hl]
	ld l, e
	ld h, a
	push hl
	read_hl_from_sp_plus $2e
	pop de
	call DrawHPBar
	ld hl, sp+$1a
	reg16swap de, hl
	ld hl, sp+$1e
	call Func_63ce1
	ld hl, sp+$2d
	ld a, [hl]
	or a
	jp z, Func_618eb
	ld hl, sp+$1c
	ld e, [hl]
	ld hl, sp+$1b
	ld h, [hl]
	ld d, h
	push de
	read_hl_from_sp_plus $2e
	inc h
	inc hl
	pop de
	call Func_63d05
Func_618eb: ; 618eb (18:58eb)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	read_hl_from_sp_plus $2c
	ld c, l
	ld b, h
	read_hl_from_sp_plus $2a
	reg16swap de, hl
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call Func_63e6f
	pop de
	ld hl, sp+$2a
	ld a, [hl]
	cp $7
	jp c, Func_6192c
	push de
	ld hl, sp+$31
	ld e, [hl]
	ld d, $0
	ld hl, Data_616db
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $28
	call Func_615ce
	pop de
	jp Func_61940

Func_6192c: ; 6192c (18:592c)
	push de
	ld a, e
	and $1
	ld e, a
	ld d, $0
	ld hl, sp+$1f
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $28
	call Func_615ce
	pop de
Func_61940: ; 61940 (18:5940)
	push de
	call WaitVideoTransfer
	ld a, [wc2cd]
	or a
	jp nz, Func_61956
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_6195e

Func_61956: ; 61956 (18:5956)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_6195e: ; 6195e (18:595e)
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
Func_61966: ; 61966 (18:5966)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_61966
	pop de
	dec e
	ld hl, sp+$2a
	ld a, [hl]
	inc a
	ld hl, sp+$2a
	ld [hl], a
	jp Func_618b1

Func_6197c: ; 6197c (18:597c)
	ld hl, sp+$2a
	ld a, [hl]
	cp $7
	jp nc, Func_619a5
	ld hl, sp+$2a
	ld a, [hl]
	and $1
	ld e, a
	ld d, $0
	ld hl, sp+$1d
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $28
	call Func_615ce
	call Func_0451
	ld hl, sp+$2a
	ld a, [hl]
	inc a
	ld hl, sp+$2a
	ld [hl], a
	jp Func_6197c

Func_619a5: ; 619a5 (18:59a5)
	ld hl, sp+$1f
	ld a, [hl]
	or a
	jp nz, Func_619c1
	read_hl_from_sp_plus $22
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_619c1
	ld hl, sp+$1f
	ld [hl], $1
Func_619c1: ; 619c1 (18:59c1) (ApplyDamage?)
	ld hl, sp+$1f
	ld e, [hl]
	ld hl, sp+$2f
	ld h, [hl]
	ld d, h
	push de
	read_hl_from_sp_plus $2c
	pop de
	call DrawHPBar
	ld hl, sp+$2b
	ld a, [hl]
	or a
	jp z, Func_619e7
	read_hl_from_sp_plus $22
	push hl
	read_hl_from_sp_plus $2c
	inc h
	inc hl
	pop de
	call Func_63d05
Func_619e7: ; 619e7 (18:59e7)
	call WaitVideoTransfer
	pop bc
	read_hl_from_sp_plus $20
	reg16swap de, hl
	ld hl, $18
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	pop de
	ld l, $2
	push hl
	ld c, $8
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$0
	call FarCall
	ld a, [wLCDC]
	and $f9
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
.waitLoop
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, .waitLoop
	read_hl_from_sp_plus $1c
	reg16swap de, hl
	add sp, $2a
	reg16swap de, hl
	ret

Func_61a3e: ; 61a3e
	push af
	push de
	add sp, -$14
	ld e, $2
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $5e
	add hl, de
	ld a, [hl]
	and $1
	ld hl, sp+$15
	ld [hl], a
	ld hl, sp+$19
	ld a, [hl]
	or a
	jp nz, Func_61a78
	ld hl, $2
	write_hl_to_sp_plus $15
	ld hl, $703
	write_hl_to_sp_plus $13
	ld hl, sp+$15
	ld [hl], $1
	xor a
	jp Func_61a88

Func_61a78: ; 61a78 (18:5a78)
	ld hl, $b02
	write_hl_to_sp_plus $15
	ld hl, $1203
	write_hl_to_sp_plus $13
	ld a, $b
Func_61a88: ; 61a88 (18:5a88)
	push af
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp nz, Func_61aa2
	ld hl, $0
	jp Func_61aa5

Func_61aa2: ; 61aa2 (18:5aa2)
	ld hl, $2f
Func_61aa5: ; 61aa5 (18:5aa5)
	add hl, de
	ld c, l
	ld b, h
	push bc
	ld hl, $1a
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $15
	ld hl, $18
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $13
	read_hl_from_sp_plus $1c
	push hl
	read_hl_from_sp_plus $15
	pop de
	add hl, de
	write_hl_to_sp_plus $11
	read_hl_from_sp_plus $15
	push hl
	read_hl_from_sp_plus $13
	pop de
	call CompareHLtoDE
	jp c, Func_61ae8
	read_hl_from_sp_plus $15
	write_hl_to_sp_plus $11
Func_61ae8: ; 61ae8 (18:5ae8)
	ld hl, sp+$a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $15
	push hl
	read_hl_from_sp_plus $15
	pop de
	call Func_2617
	ld hl, sp+$a
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$a
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$c
	ld a, [hl]
	and $80
	jp z, Func_61b14
	ld hl, sp+$b
	ld a, [hl]
	inc a
	ld hl, sp+$b
	ld [hl], a
Func_61b14: ; 61b14 (18:5b14)
	ld hl, sp+$b
	ld a, [hl]
	push af
	ld hl, sp+$8
	ld c, l
	ld b, h
	read_hl_from_sp_plus $17
	push hl
	read_hl_from_sp_plus $15
	pop de
	call Func_2617
	ld hl, sp+$8
	ld c, l
	ld b, h
	ld de, $30
	ld hl, sp+$8
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$a
	ld a, [hl]
	and $80
	jp z, Func_61b44
	ld hl, sp+$9
	ld a, [hl]
	inc a
	ld hl, sp+$9
	ld [hl], a
Func_61b44: ; 61b44 (18:5b44)
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$10
	ld [hl], a
	read_hl_from_sp_plus $15
	ld de, $100
	call DivideHLByDESigned
	ld a, l
	ld hl, sp+$c
	ld [hl], a
	read_hl_from_sp_plus $15
	ld e, l
	ld hl, sp+$d
	ld [hl], e
	ld hl, sp+$f
	xor a
	ld [hl], a
	ld hl, sp+$e
	ld [hl], a
	pop af
	push af
	ld hl, sp+$8
	ld c, l
	ld b, h
	ld e, a
	ld d, $0
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	push hl
	read_hl_from_sp_plus $17
	push hl
	read_hl_from_sp_plus $17
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	pop de
	call Func_2617
	pop af
	ld e, a
Func_61b92: ; 61b92 (18:5b92)
	ld a, e
	ld hl, sp+$e
	cp [hl]
	jp nc, Func_61c21
	push de
	ld hl, sp+$1f
	ld a, [hl]
	ld l, e
	ld h, a
	push hl
	read_hl_from_sp_plus $1d
	pop de
	call DrawHPBar
	ld hl, sp+$b
	reg16swap de, hl
	ld hl, sp+$f
	call Func_63cf3
	ld hl, sp+$1b
	ld a, [hl]
	or a
	jp z, Func_61bcc
	ld hl, sp+$d
	ld e, [hl]
	ld hl, sp+$c
	ld h, [hl]
	ld d, h
	push de
	read_hl_from_sp_plus $1d
	inc h
	inc hl
	pop de
	call Func_63d05
Func_61bcc: ; 61bcc (18:5bcc)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	read_hl_from_sp_plus $1b
	ld c, l
	ld b, h
	read_hl_from_sp_plus $19
	reg16swap de, hl
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call Func_63e6f
	call WaitVideoTransfer
	ld a, [wc2cd]
	or a
	jp nz, Func_61c02
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_61c0a

Func_61c02: ; 61c02 (18:5c02)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_61c0a: ; 61c0a (18:5c0a)
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
Func_61c12: ; 61c12 (18:5c12)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_61c12
	pop de
	inc e
	jp Func_61b92

Func_61c21: ; 61c21 (18:5c21)
	ld hl, sp+$e
	ld a, [hl]
	or a
	jp nz, Func_61c3d
	read_hl_from_sp_plus $11
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_61c3d
	ld hl, sp+$e
	ld [hl], $1
Func_61c3d: ; 61c3d (18:5c3d)
	ld hl, sp+$e
	ld e, [hl]
	ld hl, sp+$1d
	ld h, [hl]
	ld d, h
	push de
	read_hl_from_sp_plus $1b
	pop de
	call DrawHPBar
	ld hl, sp+$19
	ld a, [hl]
	or a
	jp z, Func_61c63
	read_hl_from_sp_plus $11
	push hl
	read_hl_from_sp_plus $1b
	inc h
	inc hl
	pop de
	call Func_63d05
Func_61c63: ; 61c63 (18:5c63)
	call WaitVideoTransfer
	pop bc
	read_hl_from_sp_plus $f
	reg16swap de, hl
	ld hl, $18
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	pop af
	pop de
	ld l, $2
	push hl
	ld c, $8
	call Func_3ca1
	pop bc
	read_hl_from_sp_plus $b
	reg16swap de, hl
	add sp, $18
	reg16swap de, hl
	ret

Func_61c90: ; 61c90
	push hl
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	call GetHLAtSPPlus4
	ld de, $b
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus4
	ld de, $d
	add hl, de
	ld c, [hl]
	push bc
	cp $ff
	jp z, Func_61cc6
	push af
	ld d, a
	add a
	add d
	inc a
	ld l, a
	ld h, $0
	ld de, Data_61d32
	call PlaceStringDEatCoordHL
	pop af
	ld e, a
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], $0
Func_61cc6: ; 61cc6 (18:5cc6)
	pop bc
	pop af
	push bc
	push af
	ld d, a
	add a
	add d
	inc a
	ld e, a
	xor a
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_61d34
	push hl
	call PlaceString
	pop bc
	pop bc
	pop af
	pop bc
	push af
	ld e, a
	ld d, $0
	ld hl, wc396
	add hl, de
	ld [hl], $1
	call GetHLAtSPPlus4
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	and [hl]
	inc a
	jp z, Func_61d23
	ld a, c
	cp $10
	jp nz, Func_61d23
	call GetHLAtSPPlus4
	ld de, $5
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	inc hl
	ld a, l
	ld e, a
	xor a
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_61d37
	push hl
	call PlaceString
	pop bc
	pop bc
Func_61d23: ; 61d23 (18:5d23)
	pop af
	pop hl
	push hl
	ld de, $b
	add hl, de
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	pop bc
	ret

Data_61d32: ; 61d32
	db " ", $0

Data_61d34: ; 61d34
	TX_STACK
	db $0

Data_61d37: ; 61d37
	TX_STACK
	db $0

Data_61d3a: ; 61d3a
	dr $61d3a, $61d3e

Func_61d3e: ; 61d3e
	push hl
	push de
	push bc
	push bc
	callba_hli Func_da4dc
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	ld c, $0
Func_61d61: ; 61d61 (18:5d61)
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_61dd8
	push bc
	ld a, c
	add a
	add a
	ld d, a
	add a
	add d
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$4
	ld [hl], $10
	ld a, c
	add a
	add a
	add a
	ld d, a
	add a
	add d
	add $18
	ld hl, sp+$3
	ld [hl], a
	call GetHLAtSPPlus8
	ld a, [hl]
	cp $1
	jp c, Func_61da6
	inc a
	cp $5
	jp nz, Func_61d9f
	ld a, $1
Func_61d9f: ; 61d9f (18:5d9f)
	call GetHLAtSPPlus8
	ld [hl], a
	jp Func_61da8

Func_61da6: ; 61da6 (18:5da6)
	ld a, $1
Func_61da8: ; 61da8 (18:5da8)
	push af
	set_farcall_addrs_hli UpdateCurSprite
	pop af
	ld e, a
	ld d, $0
	ld hl, $5d39
	add hl, de
	ld c, [hl]
	ld b, $0
	ld hl, sp+$3
	ld e, [hl]
	ld hl, sp+$4
	ld h, [hl]
	ld d, h
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	pop bc
	inc c
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	jp Func_61d61

Func_61dd8: ; 61dd8 (18:5dd8)
	callba_hli Func_d9f55
	pop bc
	pop bc
	pop bc
	pop bc
	ret

NamingScreen_: ; 61deb
	push af
.loop
	ld hl, sp+$1
	ld a, [hl]
	cp $1
	jp nz, .not_eq_1
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli DisplayPartyMenu_
	xor a
	call FarCall
	reg16swap de, hl
	ld hl, $3
	call CompareHLtoDE
	jp c, .next_
	ld a, e
	and d
	inc a
	jp nz, .not_eq_1
.next_
	jp .quit

.not_eq_1
	set_farcall_addrs_hli NamingScreen
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	ld hl, sp+$1
	ld a, [hl]
	cp $1
	jp nz, .not_eq_1_
	jp .quit

.not_eq_1_
	set_farcall_addrs_hli Func_14d93
	ld hl, $0
	call FarCall
	reg16swap de, hl
	ld a, e
	dec a
	or d
	jp z, .next
	jp .quit

.next
	jp .loop

.quit
	pop bc
	ret

Func_61e5b: ; 61e5b
	reg16swap de, hl
	ld l, e
	ld h, d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, $5
	add hl, de
	ld l, [hl]
	add l
	push af
	ld l, $d
	push hl
	ld c, $b
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop af
	cp $5
	jp z, Func_61eeb
	cp $4
	jp z, Func_61eda
	cp $3
	jp z, Func_61ec9
	cp $2
	jp z, Func_61eb8
	cp $1
	jp z, Func_61ea7
	or a
	jp nz, Func_61ef0
	callba_hli Func_804c
	jp Func_61ef0

Func_61ea7: ; 61ea7 (18:5ea7)
	callba_hli Func_cd9a
	jp Func_61ef0

Func_61eb8: ; 61eb8 (18:5eb8)
	callba_hli Func_10011
	jp Func_61ef0

Func_61ec9: ; 61ec9 (18:5ec9)
	callba_hli Func_144dd
	jp Func_61ef0

Func_61eda: ; 61eda (18:5eda)
	callba_hli Func_5190c
	jp Func_61ef0

Func_61eeb: ; 61eeb (18:5eeb)
	ld a, $3
	call OverworldPlaySong
Func_61ef0: ; 61ef0 (18:5ef0)
	ld hl, $8000
	ret

Func_61ef4: ; 61ef3
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_600f4
	ld de, Data_61f11
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_61f23
	ld hl, $110
	call PlaceStringDEatCoordHL
	ret

Data_61f11: ; 61f11
	db "(はけんする) ロホﾞホﾟン(を)", $0

Data_61f23: ; 61f23
	db "4(たい えらんてﾞくたﾞさい)", $0

Func_61f34: ; 61f34
	push af
	push de
	push bc
	ld hl, sp+$0
	ld [hl], $0
Func_61f3b: ; 61f3b (18:5f3b)
	ld hl, sp+$0
	ld a, [hl]
	cp c
	jp nc, Func_61fae
	push bc
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$4
	cp [hl]
	jp z, Func_61f64
	ld hl, sp+$2
	ld a, [hl]
	add a
	inc a
	ld e, a
	ld a, $8
	call SetStringStartState
	ld hl, $8f
	push hl
	ld hl, Data_61fb2
	push hl
	call PlaceString
	pop bc
	pop bc
Func_61f64: ; 61f64 (18:5f64)
	ld e, $0
Func_61f66: ; 61f66 (18:5f66)
	ld a, e
	cp $4
	jp nc, Func_61fa3
	push de
	ld hl, sp+$9
	ld a, [hl]
	ld hl, sp+$4
	add [hl]
	ld d, $0
	ld hl, wc383
	add hl, de
	cp [hl]
	jp nz, Func_61f9e
	ld hl, sp+$4
	ld a, [hl]
	ld hl, sp+$6
	cp [hl]
	jp z, Func_61f9e
	ld hl, sp+$4
	ld a, [hl]
	add a
	inc a
	ld e, a
	ld a, $8
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, $5fb5
	push hl
	call PlaceString
	pop bc
	pop bc
Func_61f9e: ; 61f9e (18:5f9e)
	pop de
	inc e
	jp Func_61f66

Func_61fa3: ; 61fa3 (18:5fa3)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	pop bc
	jp Func_61f3b

Func_61fae: ; 61fae (18:5fae)
	pop bc
	pop bc
	pop bc
	ret

Data_61fb2: ; 61fb2
	TX_STACK
	db $0

Data_61fb5: ; 61fb5
	TX_STACK
	db $0

Func_61fb8: ; 61fb8
	push hl
	pop hl
	push hl
	ld de, $d
	add hl, de
	ld a, [hl]
	push af
	cp $2
	jp z, Func_61fd8
	cp $5
	jp nz, Func_61fe5
	ld c, $3
	ld e, $d
	ld hl, $0
	call Func_600f4
	jp Func_61fef

Func_61fd8: ; 61fd8 (18:5fd8)
	ld c, $9
	ld e, $a
	ld hl, $6
	call Func_600f4
	jp Func_61fef

Func_61fe5: ; 61fe5 (18:5fe5)
	ld c, $7
	ld e, $a
	ld hl, $6
	call Func_600f4
Func_61fef: ; 61fef (18:5fef)
	pop af
	cp $5
	jp z, Func_62044
	cp $2
	jp z, Func_6201d
	cp $1
	jp nz, Func_62068
	ld de, Data_6206a
	ld hl, $107
	call PlaceStringDEatCoordHL
	ld de, Data_6206f
	ld hl, $109
	call PlaceStringDEatCoordHL
	ld de, Data_62076
	ld hl, $10b
	call PlaceStringDEatCoordHL
	jp Func_62068

Func_6201d: ; 6201d (18:601d)
	ld de, Data_62079
	ld hl, $107
	call PlaceStringDEatCoordHL
	ld de, Data_62085
	ld hl, $109
	call PlaceStringDEatCoordHL
	ld de, Data_62092
	ld hl, $10b
	call PlaceStringDEatCoordHL
	ld de, Data_6209e
	ld hl, $10d
	call PlaceStringDEatCoordHL
	jp Func_62068

Func_62044: ; 62044 (18:6044)
	ld de, Data_620a7
	ld hl, $c05
	call PlaceStringDEatCoordHL
	ld de, Data_620b3
	ld hl, $c07
	call PlaceStringDEatCoordHL
	ld de, Data_620c0
	ld hl, $c09
	call PlaceStringDEatCoordHL
	ld de, Data_620cc
	ld hl, $c0b
	call PlaceStringDEatCoordHL
Func_62068: ; 62068 (18:6068)
	pop bc
	ret

Data_6206a: ; 6206a
	db "RAM:", $0

Data_6206f: ; 6206f
	db "(いりょく)", $0

Data_62076: ; 62076
	db "EP", $0

Data_62079: ; 62079
	db "(こうけﾞき)   0", $0

Data_62085: ; 62085
	db "(ほﾞうきﾞょ)   0", $0

Data_62092: ; 62092
	db "(すはﾞやさ)   0", $0

Data_6209e: ; 6209e
	db "RAM:  0M", $0

Data_620a7: ; 620a7
	db "(こうけﾞき)   0", $0

Data_620b3: ; 620b3
	db "(ほﾞうきﾞょ)   0", $0

Data_620c0: ; 620c0
	db "(すはﾞやさ)   0", $0

Data_620cc: ; 620cc
	db "RAM:  0M", $0

Func_620d5: ; 620d5
	push hl
	push de
	push bc
	add sp, -$3a
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	ld c, l
	ld b, h
	read_hl_from_sp_plus $40
	ld e, h
	ld hl, sp+$36
	ld [hl], e
	read_hl_from_sp_plus $40
	ld h, $0
	write_hl_to_sp_plus $40
	ld a, l
	ld hl, sp+$35
	ld [hl], a
	ld hl, $17
	add hl, bc
	ld a, [hl]
	ld hl, sp+$3
	ld [hl], a
	ld hl, $14
	add hl, bc
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
	ld hl, $15
	add hl, bc
	ld a, [hl]
	ld hl, sp+$1
	ld [hl], a
	ld hl, $16
	add hl, bc
	ld a, [hl]
	ld hl, sp+$2
	ld [hl], a
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld e, a
	ld hl, sp+$37
	ld [hl], $ff
	ld hl, sp+$36
	ld a, [hl]
	cp $5
	jp z, Func_622e9
	or a
	jp nz, Func_62389
	push de
	ld hl, sp+$3a
	ld [hl], $0
Func_6214b: ; 6214b (18:614b)
	ld hl, sp+$3a
	ld a, [hl]
	cp $4
	jp nc, Func_6217d
	ld hl, sp+$3a
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp nz, Func_62173
	ld hl, sp+$39
	ld [hl], $1
	jp Func_6217d

Func_62173: ; 62173 (18:6173)
	ld hl, sp+$3a
	ld a, [hl]
	inc a
	ld hl, sp+$3a
	ld [hl], a
	jp Func_6214b

Func_6217d: ; 6217d (18:617d)
	pop de
	ld hl, sp+$37
	ld a, [hl]
	cp $ff
	jp nz, Func_6218f
	ld a, e
	call GetSRAMBank
	ld a, $ff
	jp Func_623cd

Func_6218f: ; 6218f (18:618f)
	push de
	ld hl, sp+$3c
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$8
	call GetRobotOrTrainerBaseStats
	ld hl, sp+$3c
	ld a, [hl]
	ld hl, sp+$3a
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld [hl], a
	ld hl, sp+$14
	push hl
	ld hl, sp+$3c
	ld l, [hl]
	ld h, 0
	get_party_bot
	pop de
	ld bc, $23
	call CopyFromDEtoHL
	ld hl, sp+$3a
	ld l, [hl]
	ld h, 0
	get_party_bot
	call WriteHLToSPPlus8
	ld hl, sp+$37
	ld a, [hl]
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld [hl], a
	ld hl, sp+$37
	ld e, [hl]
	ld d, $0
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $22
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld de, $e
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $40
	push hl
	call GetHLAtSPPlus10
	ld de, $c
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$37
	ld e, [hl]
	ld d, $0
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $26
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld de, $12
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus8
	ld de, $10
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$37
	ld e, [hl]
	ld d, $0
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $2d
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld de, $17
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$37
	ld e, [hl]
	ld d, $0
	ld hl, sp+$12
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $31
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld de, $1b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$37
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	ld l, [hl]
	ld h, $0
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $2f
	add hl, bc
	ld c, l
	ld b, h
	call GetHLAtSPPlus8
	ld de, $19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	call GetHLAtSPPlus8
	ld de, $1d
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$5
	ld a, [hl]
	call GetHLAtSPPlus8
	ld de, $b
	add hl, de
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	call GetHLAtSPPlus8
	ld de, $8
	add hl, de
	ld [hl], a
	ld hl, sp+$3
	ld a, [hl]
	call GetHLAtSPPlus8
	ld de, $9
	add hl, de
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	call GetHLAtSPPlus8
	ld de, $a
	add hl, de
	ld [hl], a
	pop de
	jp Func_62389

Func_622e9: ; 622e9 (18:62e9)
	push de
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $2
	call FarCall
	callba_hli Func_7d01
	ld hl, sp+$3a
	ld [hl], a
	pop de
	ld hl, sp+$38
	ld a, [hl]
	cp $ff
	jp z, Func_62389
	push de
	ld hl, sp+$38
	ld a, [hl]
	cp $5
	jp nz, Func_62381
	ld hl, sp+$3c
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$8
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_6086c
	ld hl, sp+$37
	ld e, [hl]
	ld hl, sp+$8
	call FarCall
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$1f
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$1c
	ld [hl], a
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$1d
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	ld hl, sp+$1e
	ld [hl], a
	ld hl, sp+$37
	ld a, [hl]
	ld hl, sp+$1b
	ld [hl], a
	read_hl_from_sp_plus $40
	write_hl_to_sp_plus $22
	ld hl, $0
	write_hl_to_sp_plus $33
	set_farcall_addrs_hli Func_7db0
	ld hl, sp+$14
	reg16swap de, hl
	ld hl, sp+$3a
	ld a, [hl]
	call FarCall
Func_62381: ; 62381 (18:6381)
	ld hl, sp+$39
	ld [hl], $1
	pop de
	jp Func_62389

Func_62389: ; 62389 (18:6389)
	ld a, e
	call GetSRAMBank
	ld hl, sp+$37
	ld a, [hl]
	cp $1
	jp nz, Func_623ca
	ld hl, sp+$36
	ld a, [hl]
	or a
	jp z, Func_623a4
	ld hl, sp+$36
	ld a, [hl]
	cp $5
	jp nz, Func_623ca
Func_623a4: ; 623a4 (18:63a4)
	set_farcall_addrs_hli Func_53a0d
	ld e, $0
	ld hl, sp+$3a
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_53a0d
	ld e, $1
	ld hl, sp+$3a
	ld a, [hl]
	call FarCall
Func_623ca: ; 623ca (18:63ca)
	ld hl, sp+$37
	ld a, [hl]
Func_623cd: ; 623cd (18:63cd)
	add sp, $40
	ret

Func_623d0: ; 623d0
	add sp, -$1c
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$1d
	xor a
	ld [hl], a
	ld hl, sp+$1c
	ld [hl], a
	ld hl, sp+$1b
	ld [hl], a
	set_farcall_addrs_hli Func_16104
	ld e, $0
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$1b
	ld [hl], a
	ld e, $1
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$1c
	ld [hl], a
	ld e, $2
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$1d
	ld [hl], a
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $b
	add hl, de
	ld a, [hl]
	ld e, a
	ld hl, sp+$2
	call Func_241f
	ld hl, sp+$11
	ld a, [hl]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, sp+$1a
	ld [hl], a
	ld c, $0
Func_62449: ; 62449 (18:6449)
	ld a, c
	cp $3
	jp nc, Func_62478
	ld e, c
	ld d, $0
	ld hl, sp+$1b
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_62474
	ld e, c
	ld d, $0
	ld hl, sp+$1b
	add hl, de
	ld a, [hl]
	rlca
	rlca
	and $3
	inc a
	add a
	ld d, a
	add a
	add a
	add d
	ld e, a
	ld hl, sp+$1a
	ld a, [hl]
	sub e
	ld hl, sp+$1a
	ld [hl], a
Func_62474: ; 62474 (18:6474)
	inc c
	jp Func_62449

Func_62478: ; 62478 (18:6478)
	pop af
	call GetSRAMBank
	ld hl, sp+$18
	ld a, [hl]
	add sp, $1c
	ret

Data_62482: ; 62482
	dw Data_62486, $0

Data_62486: ; 62486
	db "(RAMかﾞたりないよ)", $0

Data_62493: ; 62493
	dw Data_62497, $0

Data_62497: ; 62497
	db "ソフト(かﾞ いっはﾟいてﾞ はすﾞせません)", $0

Func_624af: ; 624af
	push af
	add sp, -$2c
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_62482
	ld bc, $4
	call MemCopy
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_62493
	ld bc, $4
	call MemCopy
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_600f4
	ld hl, sp+$2f
	ld a, [hl]
	cp $2
	jp z, Func_6251c
	cp $1
	jp nz, Func_6256a
	ld de, Data_6273a
	ld hl, $10e
	call PlaceStringDEatCoordHL
	jp Func_6256a

Func_6251c: ; 6251c (18:651c)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	set_farcall_addrs_hli Func_5601b
	ld c, $1
	ld a, [wc311]
	ld e, a
	ld hl, sp+$11
	call FarCall
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$f
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld hl, Data_6274e
	push hl
	call PlaceString
	pop bc
Func_6256a: ; 6256a (18:656a)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$2f
	ld a, [hl]
	cp $3
	jp z, Func_6259a
	or a
	jp nz, Func_625ab
	ld c, $18
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $10e
	call Func_6011c
	ld hl, $0
	write_hl_to_sp_plus $c
	jp Func_625bd

Func_6259a: ; 6259a (18:659a)
	ld c, $18
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $10e
	call Func_6011c
	jp Func_625bd

Func_625ab: ; 625ab (18:65ab)
	callba_hli Func_1482e
	write_hl_to_sp_plus $c
Func_625bd: ; 625bd (18:65bd)
	read_hl_from_sp_plus $c
	ld a, l
	or h
	jp nz, Func_626ff
	ld hl, sp+$2f
	ld a, [hl]
	cp $2
	jp nz, Func_626ff
	ld hl, sp+$c
	ld [hl], $0
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld a, [wc311]
	ld e, a
	ld d, $0
	add hl, de
	ld a, [hl]
	ld hl, sp+$f
	ld [hl], a
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$f
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_62656
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$f
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6264f
	ld c, $18
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $10e
	call Func_6011c
	ld hl, sp+$e
	ld [hl], $1
	jp Func_62656

Func_6264f: ; 6264f (18:664f)
	ld hl, $2
	write_hl_to_sp_plus $e
Func_62656: ; 62656 (18:6656)
	ld hl, sp+$e
	ld a, [hl]
	or a
	jp nz, Func_626fb
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld a, [wc311]
	ld e, a
	ld d, $0
	add hl, de
	ld [hl], $0
	ld hl, sp+$10
	ld a, [wc311]
	ld [hl], a
Func_62685: ; 62685 (18:6685)
	ld hl, sp+$10
	ld a, [hl]
	cp $2
	jp nc, Func_626e0
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld a, [hl]
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, de
	ld [hl], a
	ld hl, sp+$10
	ld a, [hl]
	inc a
	ld hl, sp+$10
	ld [hl], a
	jp Func_62685

Func_626e0: ; 626e0 (18:66e0)
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $a
.asm_626f6
	add hl, de
.asm_626f9
	ld [hl], $0
Func_626fb: ; 626fb (18:66fb)
	pop af
	call GetSRAMBank
Func_626ff: ; 626ff (18:66ff)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $1405
	ld hl, $d
	call RestoreTileMapRectangle
	ld l, $12
	push hl
	ld c, $14
.asm_6271c
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	call GetHLAtSPPlus10
	ld a, l
	add sp, $2e
	ret

Data_6273a: ; 6273a
	db "(すへﾞてはすﾞして いいてﾞすか?)", $0

Data_6274e: ; 6274e
	db "(を はすﾞしますか?)", $0

Func_6275b: ; 6275b
	push bc
	push bc
	push hl
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	ld hl, sp+$4
	ld [hl], a
	set_farcall_addrs_hli Func_524b6
	pop hl
	call FarCall
	cp $ff
	jp nz, Func_6278f
	ld hl, $4000
	jp Func_62822

Func_6278f: ; 6278f (18:678f)
	ld hl, sp+$1
	ld [hl], $0
Func_62793: ; 62793 (18:6793)
	ld hl, sp+$1
	ld a, [hl]
	cp $3
	jp nc, Func_6280a
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_62800
	ld hl, sp+$0
	ld [hl], $0
Func_627b9: ; 627b9 (18:67b9)
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nc, Func_62800
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$2
	cp [hl]
	jp nz, Func_627f6
	set_farcall_addrs_hli Func_6bbf3
	ld e, $0
	ld a, $8
	call FarCall
	ld hl, $8000
	jp Func_62822

Func_627f6: ; 627f6 (18:67f6)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_627b9

Func_62800: ; 62800 (18:6800)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_62793

Func_6280a: ; 6280a (18:680a)
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	ld e, $4
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	ld hl, -1
Func_62822: ; 62822 (18:6822)
	pop bc
	pop bc
	ret

Data_62825: ; 62825
	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 31, 31, 00
	RGB 20, 20, 00
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 00, 31, 31
	RGB 00, 00, 31
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 31, 00, 00
	RGB 20, 00, 00
	RGB 00, 00, 00

Data_62845: ; 62845
	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 31, 31, 00
	RGB 20, 20, 00
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 00, 31, 31
	RGB 00, 00, 31
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 31, 00, 00
	RGB 20, 00, 00
	RGB 00, 00, 00

Func_62865: ; 62865 (18:6865)
	ld a, [wSystemType]
	cp $11
	jp z, .wait1
	jp .not_cgb

.wait1
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, .wait1
	ld bc, $20
	ld de, Data_62825
	ld hl, wCGB_BGPalsBuffer + 4 * 8
	call CopyFromDEtoHL
	ld bc, $20
	ld de, Data_62845
	ld hl, wCGB_OBPalsBuffer + 4 * 8
	call CopyFromDEtoHL
	call WaitVideoTransfer
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
.wait2
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, .wait2
.not_cgb
	ret

Data_628a4: ; 628a4
	dr $628a4, $62ac4

Data_62ac4: ; 62ac4
	dr $62ac4, $62ce4

Func_62ce4:: ; 62ce4 (18:6ce4)
	ld a, [wNextVBlankFlags]
	bit 6, a
	ret nz
	ld a, [wCurRobotPointer]
	ld l, a
	ld a, [wCurRobotPointer + 1]
	ld h, a
	ld a, [hli]
	ld b, a
	ld a, [hl]
	inc a
	ld [hl], a
	cp b
	ret c
	xor a
	ld [hli], a
	push hl
	ld a, [hli]
	ld c, a
	ld a, [hli]
	add c
	pop hl
	cp $ff
	ret z
	cp $11
	ret z
	ld [hli], a
	ld c, a
	inc hl
	ld a, [hli]
	ld b, a
	ld a, [hl]
	cp $3
	jp z, Func_62d2c
	cp $5
	jp z, Func_62d37
	cp $7
	jp z, Func_62d42
	cp $2
	jp z, Func_62de6
	cp $4
	jp z, Func_62df1
	cp $6
	jp z, Func_62dfc
	ret

Func_62d2c: ; 62d2c (18:6d2c)
	ld de, CheckSongFinishedPredef
	add hl, de
	ld de, wCGB_BGPalsBuffer
	ld a, $20
	jr asm_62d4b

Func_62d37: ; 62d37 (18:6d37)
	ld de, $2a5
	add hl, de
	ld de, wCGB_OBPalsBuffer
	ld a, $20
	jr asm_62d4b

Func_62d42: ; 62d42 (18:6d42)
	ld de, CheckSongFinishedPredef
	add hl, de
	ld de, wCGB_BGPalsBuffer
	ld a, $40
asm_62d4b
	push af
	push de
	ld de, $0
	ld a, [hli]
	push hl
	push bc
	push af
	swap a
	ld c, a
	res 0, c
	and $1
	rra
	rl b
	ld hl, Data_62ac4
	add hl, bc
	pop af
	ld b, $0
	ld c, a
	add hl, bc
	pop bc
	add hl, bc
	ld e, [hl]
	sla e
	sla e
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	pop hl
	ld a, [hli]
	push hl
	push bc
	push af
	swap a
	ld c, a
	res 0, c
	and $1
	rra
	rl b
	ld hl, Data_62ac4
	add hl, bc
	pop af
	ld b, $0
	ld c, a
	add hl, bc
	pop bc
	add hl, bc
	ld a, [hl]
	or e
	ld e, a
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	pop hl
	ld a, [hli]
	push hl
	push bc
	push af
	swap a
	ld c, a
	res 0, c
	and $1
	rra
	rl b
	ld hl, Data_62ac4
	add hl, bc
	pop af
	ld b, $0
	ld c, a
	add hl, bc
	pop bc
	add hl, bc
	ld a, [hl]
	or e
	reg8rot e, a, c
	ld b, d
	pop de
	pop hl
	ld [hl], c
	inc hl
	ld [hl], b
	inc hl
	push hl
	ld l, e
	ld h, d
	pop de
	ld c, a
	ld b, $0
	pop af
	dec a
	jp nz, asm_62d4b
	ld a, [wNextVBlankFlags]
	set 6, a
	ld [wNextVBlankFlags], a
	ret

Func_62de6: ; 62de6 (18:6de6)
	ld de, CheckSongFinishedPredef
	add hl, de
	ld de, wCGB_BGPalsBuffer
	ld a, $20
	jr asm_62e05

Func_62df1: ; 62df1 (18:6df1)
	ld de, $2a5
	add hl, de
	ld de, wCGB_OBPalsBuffer
	ld a, $20
	jr asm_62e05

Func_62dfc: ; 62dfc (18:6dfc)
	ld de, CheckSongFinishedPredef
	add hl, de
	ld de, wCGB_BGPalsBuffer
	ld a, $40
asm_62e05
	push af
	push de
	ld de, $0
	ld a, [hli]
	push hl
	push bc
	push af
	swap a
	ld c, a
	res 0, c
	and $1
	rra
	rl b
	ld hl, Data_628a4
	add hl, bc
	pop af
	ld b, $0
	ld c, a
	add hl, bc
	pop bc
	add hl, bc
	ld e, [hl]
	sla e
	sla e
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	pop hl
	ld a, [hli]
	push hl
	push bc
	push af
	swap a
	ld c, a
	res 0, c
	and $1
	rra
	rl b
	ld hl, Data_628a4
	add hl, bc
	pop af
	ld b, $0
	ld c, a
	add hl, bc
	pop bc
	add hl, bc
	ld a, [hl]
	or e
	ld e, a
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	sla e
	rl d
	pop hl
	ld a, [hli]
	push hl
	push bc
	push af
	swap a
	ld c, a
	res 0, c
	and $1
	rra
	rl b
	ld hl, Data_628a4
	add hl, bc
	pop af
	ld b, $0
	ld c, a
	add hl, bc
	pop bc
	add hl, bc
	ld a, [hl]
	or e
	ld e, a
	ld a, c
	ld c, e
	ld b, d
	pop de
	pop hl
	ld [hl], c
	inc hl
	ld [hl], b
	inc hl
	push hl
	ld l, e
	ld h, d
	pop de
	ld c, a
	ld b, $0
	pop af
	dec a
	jp nz, asm_62e05
	ld a, [wNextVBlankFlags]
	set 6, a
	ld [wNextVBlankFlags], a
	ret

SGBWait: ; 62ea0
	ld de, 1750
.delay
	nop
	nop
	nop
	dec de
	ld a, d
	or e
	jr nz, .delay
	dec bc
	ld a, b
	or c
	jr nz, SGBWait
	ret

Func_62eb1: ; 62eb1 (18:6eb1)
	ld a, [hl]
	and $7
	ret z
	ld b, a
	ld c, $0
.asm_62eb8
	push bc
	ld a, $0
	ld [$ff00+c], a
	ld a, $30
	ld [$ff00+c], a
	ld b, $10
.asm_62ec1
	ld e, $8
	ld a, [hli]
	ld d, a
.asm_62ec5
	bit 0, d
	ld a, $10
	jr nz, .asm_62ecd
	ld a, $20
.asm_62ecd
	ld [$ff00+c], a
	ld a, $30
	ld [$ff00+c], a
	rr d
	dec e
	jr nz, .asm_62ec5
	dec b
	jr nz, .asm_62ec1
	ld a, $20
	ld [$ff00+c], a
	ld a, $30
	ld [$ff00+c], a
	pop bc
	dec b
	ret z
	jr .asm_62eb8

SGBInit: ; 62ee4
	ld hl, Data_62f52
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld a, [rJOYP]
	and $3
	cp $3
	jr nz, .is_sgb
	ld a, $20
	ld [rJOYP], a
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, $30
	ld [rJOYP], a
	ld a, $10
	ld [rJOYP], a
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, $30
	ld [rJOYP], a
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	and $3
	cp $3
	jr nz, .is_sgb
	ld hl, Data_62f42
	call Func_62eb1
	ld bc, $4
	call SGBWait
	sub a
	ret

.is_sgb
	ld hl, Data_62f42
	call Func_62eb1
	ld bc, $4
	call SGBWait
	scf
	ret

Data_62f42: ; 62f42
	dr $62f42, $62f52

Data_62f52: ; 62f52
	dr $62f52, $62f62

Func_62f62: ; 62f62
	ld a, [rLCDC]
	push af
	push de
	rlca
	jr nc, .asm_62f73
.asm_62f69
	ld a, [rLY]
	cp $94
	jr nz, .asm_62f69
	ld a, $41
	ld [rLCDC], a
.asm_62f73
	ld a, $e4
	ld [rBGP], a
	ld de, $8800
.asm_62f7a
	ld a, [hli]
	ld [de], a
	inc de
	dec bc
	ld a, b
	or c
	jr nz, .asm_62f7a
	hlbgcoord 0, 0
	ld de, $c
	ld a, $80
	ld c, $d
.asm_62f8c
	ld b, $14
.asm_62f8e
	ld [hli], a
	inc a
	dec b
	jr nz, .asm_62f8e
	add hl, de
	dec c
	jr nz, .asm_62f8c
	ld a, $c1
	ld [rLCDC], a
	pop hl
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld bc, $1
	call SGBWait
	pop af
	bit 7, a
	jr nz, .asm_62fb8
	push af
.asm_62fb1
	ld a, [rLY]
	cp $94
	jr nz, .asm_62fb1
	pop af
.asm_62fb8
	ld [rLCDC], a
	ret

Func_62fbb: ; 62fbb
	ld hl, Data_630f2
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ret

Func_62fc8: ; 62fc8
	ld hl, Data_63102
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ret

Func_62fd5: ; 62fd5
	ld hl, Data_63072
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_63082
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_63092
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_630a2
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_630b2
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_630c2
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_630d2
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_630e2
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ld hl, Data_63042
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ret

Data_63042: ; 63042
	dr $63042, $63072

Data_63072: ; 63072
	dr $63072, $63082

Data_63082: ; 63082
	dr $63082, $63092

Data_63092: ; 63092
	dr $63092, $630a2

Data_630a2: ; 630a2
	dr $630a2, $630b2

Data_630b2: ; 630b2
	dr $630b2, $630c2

Data_630c2: ; 630c2
	dr $630c2, $630d2

Data_630d2: ; 630d2
	dr $630d2, $630e2

Data_630e2: ; 630e2
	dr $630e2, $630f2

Data_630f2: ; 630f2
	dr $630f2, $63102

Data_63102: ; 63102
	dr $63102, $63112

Func_63112: ; 63112
	ld a, $80
	ld [rBGPI], a
	ld hl, rBGPD
	call Func_63123
	ld a, $80
	ld [rOBPI], a
	ld hl, rOBPD
Func_63123: ; 63123 (18:7123)
	ld a, $4
.asm_63125
	ld [hl], $ff
	ld [hl], $7f
	ld [hl], c
	ld [hl], b
	ld [hl], e
	ld [hl], d
	ld [hl], $0
	ld [hl], $0
	ld [hl], $ff
	ld [hl], $7f
	ld [hl], e
	ld [hl], d
	ld [hl], c
	ld [hl], b
	ld [hl], $0
	ld [hl], $0
	dec a
	jr nz, .asm_63125
	ret

Func_63141:: ; 63141 (18:7141)
; a: system type
; returns: a = 1 if SGB, 0 else
	cp $11
	jr z, .cgb
	push af
	di
	ld bc, $3c
	call SGBWait
	call SGBInit
	jr c, .is_sgb
	; DMG
	pop af
	ld a, $20
	predef Func_7d753
	call Func_631f7
	ld a, $f0
	ld [hBGP], a
	ld a, $1
	predef Func_7d78e
	call .Delay120
	xor a
	ret

.Delay120: ; 63167 (18:7167)
	ld b, 120
.delayLoop
	predef DelayFrame
	dec b
	jr nz, .delayLoop
	ret

.cgb
	ld a, $20
	predef Func_7d753
	call Func_631d0
	call Func_631f7
	ld a, $1
	predef Func_7d78e
	call .Delay120
	xor a
	ret

.is_sgb
	pop af
	ld a, $0
	predef Func_7d753
	ld bc, $2
	call SGBWait
	ld a, $20
	predef Func_7d753
	di
	call Func_62fd5
	call Func_631f7
	ld a, $1
	predef Func_7d78e
	ld bc, $2
	call SGBWait
	call .Delay120
	ld a, $0
	predef Func_7d753
	di
	ld bc, $2
	call SGBWait
	ld hl, Data_631c0
	call Func_62eb1
	ld bc, $4
	call SGBWait
	ei
	ld a, $1
	ret

Data_631c0: ; 631c0
	dr $631c0, $631d0

Func_631d0: ; 631d0 (18:71d0)
	ld a, $1
	ld [rVBK], a
	hlbgcoord 0, 0
	xor a
	ld bc, $800
.asm_631db
	ld [hli], a
	dec c
	jr nz, .asm_631db
	dec b
	jr nz, .asm_631db
	xor a
	ld [rVBK], a
	bcRGB 31, 27, 03
	deRGB 04, 07, 22
	jp Func_63112

Func_631ee: ; 631ee
	bcRGB 23, 23, 23
	deRGB 15, 15, 15
	jp Func_63112

Func_631f7: ; 631f7 (18:71f7)
	ei
	ld de, HudsonLogoGFX
	ld hl, $9000
	ld bc, $800 ; bleeds into next file
	predef CopyPredef
	ld de, Data_639af
	hlbgcoord 0, 0
	ld bc, $400 ; bleeds into next file
	predef CopyPredef
	ret

HudsonLogoGFX: INCBIN "gfx/logo/6320f.w128.t6.2bpp" ; 6320f
Data_639af: INCBIN "gfx/logo/639af.tilemap" ; 639af

INCLUDE "engine/draw_hp_bar.asm"

Func_63ce1: ; 63ce1 (18:7ce1)
	ld c, $4
	scf
	ccf
.asm_63ce5
	ld a, [de]
	ld b, a
	ld a, [hl]
	sbc b
	ld [hld], a
	dec de
	dec c
	jr nz, .asm_63ce5
	ld a, c
	jr nc, .asm_63cf2
	inc a
.asm_63cf2
	ret

Func_63cf3: ; 63cf3 (18:7cf3)
	ld c, $4
	scf
	ccf
.asm_63cf7
	ld a, [de]
	ld b, a
	ld a, [hl]
	adc b
	ld [hld], a
	dec de
	dec c
	jr nz, .asm_63cf7
	ld a, c
	jr nc, .asm_63d04
	inc a
.asm_63d04
	ret

Func_63d05: ; 63d05 (18:7d05)
	call Coord2TileMap
	push hl
	ld l, e
	ld h, d
	pop de
	ld a, $0
	ld bc, hBGP
.asm_63d11
	add hl, bc
	inc a
	bit 7, h
	jr z, .asm_63d11
	ld bc, $64
	add hl, bc
	dec a
	jr nz, .asm_63d3a
	ld a, $8f
	ld [de], a
	inc de
	ld a, $0
	ld bc, -10
.asm_63d27
	add hl, bc
	inc a
	bit 7, h
	jr z, .asm_63d27
	ld bc, $a
	add hl, bc
	dec a
	jr nz, .asm_63d4c
	ld a, $8f
	ld [de], a
	inc de
	jr .asm_63d4e

.asm_63d3a
	ld [de], a
	inc de
	ld a, $0
	ld bc, -10
.asm_63d41
	add hl, bc
	inc a
	bit 7, h
	jr z, .asm_63d41
	dec a
	ld bc, $a
	add hl, bc
.asm_63d4c
	ld [de], a
	inc de
.asm_63d4e
	ld a, $0
	ld bc, -1
.asm_63d53
	add hl, bc
	inc a
	bit 7, h
	jr z, .asm_63d53
	dec a
	ld [de], a
	ret

Func_63d5c: ; 63d5c (18:7d5c)
	or a
	jr nz, .asm_63d71
	ld a, $98
	ld [wc231], a
	ld a, [wSCX]
	ld [wc232], a
	ld a, [wSCY]
	ld [wc233], a
	ret

.asm_63d71
	ld a, $9c
	ld [wc231], a
	ld a, [wSCX2]
	ld [wc232], a
	ld a, [wSCY2]
	ld [wc233], a
	ret

Func_63d83: ; 63d83 (18:7d83)
	ld a, c
	or a
	jp z, PutOnVideoTransferQueue
	cp $1
	jp z, Func_63e01
	cp $2
	jp z, Func_63d93
	ret

Func_63d93: ; 63d93 (18:7d93)
	ld a, [wc233]
	srl a
	srl a
	srl a
	add e
	and $1f
	ld c, $0
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	ld [wc22e], a
	ld a, [wc231]
	add c
	ld [wc22e + 1], a
	ld a, [wc232]
	srl a
	srl a
	srl a
	add d
	and $1f
	ld [wc230], a
	add b
	cp $21
	jr nc, asm_63de5
Func_63dd3: ; 63dd3 (18:7dd3)
	ld a, [wc22e]
	ld e, a
	ld a, [wc230]
	add e
	ld e, a
	ld a, [wc22e + 1]
	adc $0
	ld d, a
	jp PutOnVideoTransferQueue

asm_63de5
	sub $20
	ld c, a
	ld a, b
	sub c
	ld b, a
	push bc
	push hl
	call Func_63dd3
	xor a
	ld [wc230], a
	pop hl
	pop bc
	ld a, l
	add b
	ld l, a
	ld a, h
	adc $0
	ld h, a
	ld b, c
	jp Func_63dd3

Func_63e01: ; 63e01 (18:7e01)
	ld a, [wc233]
	srl a
	srl a
	srl a
	add l
	and $1f
	ld c, $0
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	sla a
	rl c
	ld [wc22e], a
	ld a, [wc231]
	add c
	ld [wc22e + 1], a
	ld a, [wc232]
	srl a
	srl a
	srl a
	add h
	and $1f
	ld [wc230], a
	add b
	cp $21
	jr nc, asm_63e53
Func_63e41: ; 63e41 (18:7e41)
	ld a, [wc22e]
	ld l, a
	ld a, [wc230]
	add l
	ld l, a
	ld a, [wc22e + 1]
	adc $0
	ld h, a
	jp PutOnVideoTransferQueue

asm_63e53
	sub $20
	ld c, a
	ld a, b
	sub c
	ld b, a
	push bc
	push de
	call Func_63e41
	xor a
	ld [wc230], a
	pop de
	pop bc
	ld a, e
	add b
	ld e, a
	ld a, d
	adc $0
	ld d, a
	ld b, c
	jp Func_63e41

Func_63e6f: ; 63e6f (18:7e6f)
	push bc
	ld b, $0
	ld a, h
	or a
	jr z, .asm_63e7e
	ld b, $1
	cp $1
	jr z, .asm_63e7e
	ld b, $ff
.asm_63e7e
	ld c, $0
	ld a, l
	or a
	jr z, .asm_63e8c
	ld c, $1
	cp $1
	jr z, .asm_63e8c
	ld c, $ff
.asm_63e8c
	ld a, b
	cp $ff
	jr z, asm_63ec7
	call Func_63d5c
	pop bc
	ld a, d
	sub b
	inc a
	ld d, b
	ld b, a
	ld a, e
	sub c
	inc a
	ld e, c
	ld c, a
	push bc
	ld l, e
	ld h, d
	call Coord2TileMap
	pop bc
	ld a, e
	cp $12
	jp c, Func_63eaf
	sub $12
	ld e, a
Func_63eaf: ; 63eaf (18:7eaf)
	push bc
	push hl
	push de
	ld c, $2
	call Func_63d83
	pop de
	inc e
	pop hl
	ld a, l
	add $14
	ld l, a
	ld a, h
	adc $0
	ld h, a
	pop bc
	dec c
	jr nz, Func_63eaf
	ret

asm_63ec7
	ld a, c
	call Func_63d5c
	pop bc
	ld a, d
	sub b
	inc a
	ld d, b
	ld b, a
	ld a, e
	sub c
	inc a
	ld e, c
	ld c, a
	push bc
	ld l, e
	ld h, d
	call Coord2TileMap
	pop bc
	reg16swap de, hl
	ld a, l
	cp $12
	jp c, Func_63eea
	sub $12
	ld l, a
Func_63eea: ; 63eea (18:7eea)
	push bc
	push de
	push hl
	ld c, $1
	call Func_63d83
	pop hl
	inc l
	pop de
	ld a, e
	add $14
	ld e, a
	ld a, d
	adc $0
	ld d, a
	pop bc
	dec c
	jr nz, Func_63eea
	ret

SECTION "Bank 19", ROMX [$4000], BANK [$19]
INCLUDE "charmap2.asm"
Data_64000:
	dr $64000, $64082

Data_64082:
	dr $64082, $64093

Data_64093:: ; 64093
	dr $64093, $64390

Data_64390:: ; 64390
	dr $64390, $64c7d

GFX_64c7d: ; 64c7d
	dr $64c7d, $64c90

Data_64c90: ; 64c90
	dr $64c90, $657c5

Data_657c5:: ; 657c5
	dr $657c5, $65bc8

INCLUDE "data/base_stats.asm"
INCLUDE "text/types.asm"

DebugSaveState: ; 66f73
	dr $66f73, $67187 ; $214 bytes
	
SECTION "Bank 19 2", ROMX [$7187], BANK [$19]
INCLUDE "charmap.asm"
Func_67187: ; 67187 (19:7187)
	push af
	push bc
	ld hl, sp+$3
	ld a, [hl]
	or a
	jp z, Func_67195
	inc e
	dec e
	jp nz, Func_67199
Func_67195: ; 67195 (19:7195)
	xor a
	jp Func_67202

Func_67199: ; 67199 (19:7199)
	ld bc, Data_64c90
	ld hl, sp+$0
	ld [hl], $0
Func_671a0: ; 671a0 (19:71a0)
	ld hl, sp+$0
	ld a, [hl]
	cp $97
	jp nc, Func_671f2
	ld hl, $b
	add hl, bc
	ld a, [hl]
	or a
	jp z, Func_671b4
	jp Func_671e2

Func_671b4: ; 671b4 (19:71b4)
	ld hl, sp+$3
	ld a, [hl]
	ld hl, $9
	add hl, bc
	cp [hl]
	jp nz, Func_671cb
	ld hl, $a
	add hl, bc
	ld a, [hl]
	cp e
	jp nz, Func_671cb
	jp Func_671f2

Func_671cb: ; 671cb (19:71cb)
	ld hl, $9
	add hl, bc
	ld a, [hl]
	cp e
	jp nz, Func_671e2
	ld hl, sp+$3
	ld a, [hl]
	ld hl, $a
	add hl, bc
	cp [hl]
	jp nz, Func_671e2
	jp Func_671f2

Func_671e2: ; 671e2 (19:71e2)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	ld hl, $13
	add hl, bc
	ld c, l
	ld b, h
	jp Func_671a0

Func_671f2: ; 671f2 (19:71f2)
	ld hl, sp+$0
	ld a, [hl]
	cp $97
	jp c, Func_671fe
	xor a
	jp Func_67202

Func_671fe: ; 671fe (19:71fe)
	ld hl, sp+$0
	ld a, [hl]
	inc a
Func_67202: ; 67202 (19:7202)
	pop bc
	pop bc
	ret

Func_67205:
	push hl
	push de
	push bc
	call GetHLAtSPPlus4
	ld [hl], $0
	call GetHLAtSPPlus6
	ld a, [hl]
	or a
	jp z, Func_67350
	call GetHLAtSPPlus6
	inc hl
	ld a, [hl]
	or a
	jp z, Func_67350
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld a, [hl]
	or a
	jp z, Func_67350
	ld bc, Data_64c90
	ld hl, sp+$0
	ld [hl], $0
Func_6722f: ; 6722f (19:722f)
	ld hl, sp+$0
	ld a, [hl]
	cp $97
	jp nc, Func_6731c
	ld hl, $9
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	cp [hl]
	jp nz, Func_6727f
	ld hl, $a
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	cp [hl]
	jp nz, Func_67261
	ld hl, $b
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	cp [hl]
	jp nz, Func_67261
	jp Func_6731c

Func_67261: ; 67261 (19:7261)
	ld hl, $a
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	cp [hl]
	jp nz, Func_6727f
	ld hl, $b
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	cp [hl]
	jp nz, Func_6727f
	jp Func_6731c

Func_6727f: ; 6727f (19:727f)
	ld hl, $9
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	cp [hl]
	jp nz, Func_672c6
	ld hl, $a
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	cp [hl]
	jp nz, Func_672a9
	ld hl, $b
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	cp [hl]
	jp nz, Func_672a9
	jp Func_6731c

Func_672a9: ; 672a9 (19:72a9)
	ld hl, $a
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	cp [hl]
	jp nz, Func_672c6
	ld hl, $b
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	cp [hl]
	jp nz, Func_672c6
	jp Func_6731c

Func_672c6: ; 672c6 (19:72c6)
	ld hl, $9
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	cp [hl]
	jp nz, Func_6730c
	ld hl, $a
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	cp [hl]
	jp nz, Func_672f0
	ld hl, $b
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	cp [hl]
	jp nz, Func_672f0
	jp Func_6731c

Func_672f0: ; 672f0 (19:72f0)
	ld hl, $a
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	cp [hl]
	jp nz, Func_6730c
	ld hl, $b
	add hl, bc
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	cp [hl]
	jp nz, Func_6730c
	jp Func_6731c

Func_6730c: ; 6730c (19:730c)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	ld hl, $13
	add hl, bc
	ld c, l
	ld b, h
	jp Func_6722f

Func_6731c: ; 6731c (19:731c)
	ld hl, sp+$0
	ld a, [hl]
	cp $97
	jp nc, Func_67350
	ld hl, sp+$0
	ld a, [hl]
	inc a
	call GetHLAtSPPlus4
	ld [hl], a
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $1
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $2
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
Func_67350: ; 67350 (19:7350)
	call GetHLAtSPPlus6
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	ld e, [hl]
	call Func_67187
	or a
	jp z, Func_67388
	call GetHLAtSPPlus4
	ld [hl], a
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $1
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $ff
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
Func_67388: ; 67388 (19:7388)
	call GetHLAtSPPlus6
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld e, [hl]
	call Func_67187
	or a
	jp z, Func_673c1
	call GetHLAtSPPlus4
	ld [hl], a
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $2
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $ff
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
Func_673c1: ; 673c1 (19:73c1)
	call GetHLAtSPPlus6
	inc hl
	ld a, [hl]
	call GetHLAtSPPlus6
	inc hl
	inc hl
	ld e, [hl]
	call Func_67187
	or a
	jp z, Func_673fb
	call GetHLAtSPPlus4
	ld [hl], a
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $1
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $2
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $ff
	inc hl
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld [hl], $0
Func_673fb: ; 673fb (19:73fb)
	pop bc
	pop bc
	pop bc
	ret

Func_673ff: ; 673ff (19:73ff)
	add sp, -$40
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	or a
	jp nz, Func_67417
	ld hl, $0
	jp Func_6741a

Func_67417: ; 67417 (19:7417)
	ld hl, $2f
Func_6741a: ; 6741a (19:741a)
	add hl, de
	reg16swap de, hl
	push de
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $2b
	read_hl_from_sp_plus $2b
	write_hl_to_sp_plus $29
	read_hl_from_sp_plus $2b
	ld de, $20
	add hl, de
	ld c, l
	ld b, h
	push bc
	read_hl_from_sp_plus $2d
	ld de, $23
	add hl, de
	write_hl_to_sp_plus $23
	read_hl_from_sp_plus $2d
	ld de, $26
	add hl, de
	write_hl_to_sp_plus $21
	read_hl_from_sp_plus $2d
	ld de, $36
	add hl, de
	write_hl_to_sp_plus $1b
	read_hl_from_sp_plus $2d
	ld de, $3e
	add hl, de
	write_hl_to_sp_plus $19
	read_hl_from_sp_plus $2d
	ld de, $4e
	add hl, de
	write_hl_to_sp_plus $17
	ld bc, $20
	read_hl_from_sp_plus $2b
	ld e, $0
	call FillMemory
	ld bc, $3
	read_hl_from_sp_plus $23
	ld e, $0
	call FillMemory
	read_hl_from_sp_plus $2d
	ld de, $6f
	add hl, de
	ld a, [hl]
	and $fe
	ld [hl], a
	inc hl
	pop bc
	pop de
	ld hl, $14
	add hl, de
	write_hl_to_sp_plus $3e
	ld hl, sp+$3b
	ld [hl], $0
Func_674c2: ; 674c2 (19:74c2)
	ld hl, sp+$3b
	ld a, [hl]
	cp $3
	jp nc, Func_67533
	push bc
	read_hl_from_sp_plus $40
	ld a, [hl]
	and $3f
	read_hl_from_sp_plus $21
	ld [hl], a
	read_hl_from_sp_plus $40
	ld a, [hl]
	rlca
	rlca
	and $3
	inc a
	ld [bc], a
	read_hl_from_sp_plus $2b
	ld de, $71
	add hl, de
	ld a, [hl]
	and $8
	jp nz, Func_6750f
	read_hl_from_sp_plus $2b
	ld de, $71
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$3d
	ld b, [hl]
	ld hl, $1
	call LeftShiftHL
	ld a, e
	and l
	ld l, a
	ld a, d
	and h
	ld h, a
	ld a, l
	or h
	jp z, Func_67515
Func_6750f: ; 6750f (19:750f)
	read_hl_from_sp_plus $21
	ld [hl], $0
Func_67515: ; 67515 (19:7515)
	ld hl, sp+$3d
	ld a, [hl]
	inc a
	ld hl, sp+$3d
	ld [hl], a
	read_hl_from_sp_plus $21
	inc hl
	write_hl_to_sp_plus $21
	pop bc
	inc bc
	read_hl_from_sp_plus $3e
	inc hl
	write_hl_to_sp_plus $3e
	jp Func_674c2

Func_67533: ; 67533 (19:7533)
	read_hl_from_sp_plus $29
	ld de, $71
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld b, $4
	call RightShiftHL
	ld a, l
	and $f
	ld e, a
	ld d, $0
	ld hl, sp+$3f
	ld [hl], e
	ld hl, sp+$3f
	ld a, [hl]
	dec a
	ld hl, sp+$3f
	ld [hl], a
	read_hl_from_sp_plus $27
	ld [hl], $0
	read_hl_from_sp_plus $15
	ld [hl], $0
	inc hl
	ld [hl], $0
	inc hl
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $27
	inc hl
	inc hl
	inc hl
	inc hl
	write_hl_to_sp_plus $27
	read_hl_from_sp_plus $1d
	ld [hl], $0
	inc hl
	ld [hl], $0
	inc hl
	write_hl_to_sp_plus $1d
	read_hl_from_sp_plus $17
	ld [hl], $0
	inc hl
	write_hl_to_sp_plus $17
	read_hl_from_sp_plus $13
	ld [hl], $46
	inc hl
	ld [hl], $0
	inc hl
	write_hl_to_sp_plus $13
	read_hl_from_sp_plus $29
	ld de, $23
	add hl, de
	write_hl_to_sp_plus $1f
	read_hl_from_sp_plus $29
	ld de, $20
	add hl, de
	write_hl_to_sp_plus $21
	read_hl_from_sp_plus $27
	write_hl_to_sp_plus $23
	read_hl_from_sp_plus $1d
	ld c, l
	ld b, h
	ld hl, sp+$3b
	ld [hl], $0
Func_675c8: ; 675c8 (19:75c8)
	ld hl, sp+$3b
	ld a, [hl]
	cp $3
	jp nc, Func_67758
	read_hl_from_sp_plus $1f
	ld a, [hl]
	or a
	jp z, Func_6773c
	push bc
	read_hl_from_sp_plus $21
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2b
	call Func_248f
	pop bc
	ld hl, sp+$3f
	ld a, [hl]
	ld hl, sp+$2e
	cp [hl]
	jp nz, Func_675f3
	jp Func_6773c

Func_675f3: ; 675f3 (19:75f3)
	push bc
	read_hl_from_sp_plus $29
	ld [hl], $fe
	ld hl, sp+$3d
	ld a, [hl]
	read_hl_from_sp_plus $29
	inc hl
	ld [hl], a
	read_hl_from_sp_plus $23
	ld l, [hl]
	ld h, $0
	push hl
	read_hl_from_sp_plus $39
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $1f
	ld [hl], c
	inc hl
	ld [hl], b
	inc hl
	write_hl_to_sp_plus $1f
	ld l, c
	ld h, b
	write_hl_to_sp_plus $1b
	read_hl_from_sp_plus $23
	ld l, [hl]
	ld h, $0
	push hl
	read_hl_from_sp_plus $35
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $17
	ld [hl], c
	inc hl
	ld [hl], b
	inc hl
	write_hl_to_sp_plus $17
	ld hl, sp+$30
	ld a, [hl]
	read_hl_from_sp_plus $19
	ld [hl], a
	inc hl
	write_hl_to_sp_plus $19
	read_hl_from_sp_plus $35
	ld c, l
	ld b, h
	read_hl_from_sp_plus $15
	ld [hl], c
	inc hl
	ld [hl], b
	inc hl
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $39
	ld a, l
	and $80
	jp z, Func_67688
	ld a, l
	and $7f
	ld l, a
	ld h, $0
	ld a, l
	sub $16
	or h
	jp nz, Func_67688
	read_hl_from_sp_plus $2b
	ld de, $6f
	add hl, de
	ld a, [hl]
	or $1
	ld [hl], a
	inc hl
Func_67688: ; 67688 (19:7688)
	read_hl_from_sp_plus $25
	write_hl_to_sp_plus $27
	pop bc
	push bc
	ld l, c
	ld h, b
	write_hl_to_sp_plus $1d
Func_67698: ; 67698 (19:7698)
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $29
	pop de
	call CompareHLtoDE
	jp z, Func_676ef
	read_hl_from_sp_plus $27
	inc hl
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $2b
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	read_hl_from_sp_plus $21
	cp [hl]
	jp nz, Func_676d6
	read_hl_from_sp_plus $1d
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $1b
	call CompareHLtoBC
	jp nz, Func_676d6
	jp Func_676ef

Func_676d6: ; 676d6 (19:76d6)
	read_hl_from_sp_plus $27
	inc hl
	inc hl
	inc hl
	inc hl
	write_hl_to_sp_plus $27
	read_hl_from_sp_plus $1d
	inc hl
	inc hl
	write_hl_to_sp_plus $1d
	jp Func_67698

Func_676ef: ; 676ef (19:76ef)
	pop bc
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $27
	pop de
	call CompareHLtoDE
	jp z, Func_67730
	read_hl_from_sp_plus $17
	dec hl
	write_hl_to_sp_plus $17
	read_hl_from_sp_plus $1d
	dec hl
	dec hl
	write_hl_to_sp_plus $1d
	read_hl_from_sp_plus $15
	dec hl
	dec hl
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $13
	dec hl
	dec hl
	write_hl_to_sp_plus $13
	read_hl_from_sp_plus $27
	ld [hl], $0
	jp Func_6773c

Func_67730: ; 67730 (19:7730)
	read_hl_from_sp_plus $27
	inc hl
	inc hl
	inc hl
	inc hl
	write_hl_to_sp_plus $27
Func_6773c: ; 6773c (19:773c)
	ld hl, sp+$3b
	ld a, [hl]
	inc a
	ld hl, sp+$3b
	ld [hl], a
	read_hl_from_sp_plus $1f
	inc hl
	write_hl_to_sp_plus $1f
	read_hl_from_sp_plus $21
	inc hl
	write_hl_to_sp_plus $21
	jp Func_675c8

Func_67758: ; 67758 (19:7758)
	ld hl, sp+$0
	push hl
	read_hl_from_sp_plus $2b
	ld de, $23
	add hl, de
	pop de
	call Func_67205
	read_hl_from_sp_plus $27
	write_hl_to_sp_plus $23
	read_hl_from_sp_plus $1d
	ld c, l
	ld b, h
	ld hl, sp+$0
	write_hl_to_sp_plus $3e
	ld hl, sp+$3a
	ld [hl], $0
Func_6777f: ; 6777f (19:777f)
	ld hl, sp+$3a
	ld a, [hl]
	cp $4
	jp nc, Func_679e2
	read_hl_from_sp_plus $3e
	ld a, [hl]
	or a
	jp z, Func_679e2
	push bc
	read_hl_from_sp_plus $40
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	ld de, $12
	add hl, de
	ld e, [hl]
	ld hl, sp+$40
	ld [hl], e
	pop bc
	ld hl, sp+$3f
	ld a, [hl]
	ld hl, sp+$3e
	cp [hl]
	jp nz, Func_677c7
	read_hl_from_sp_plus $3e
	inc hl
	inc hl
	inc hl
	inc hl
	write_hl_to_sp_plus $3e
	jp Func_679d8

Func_677c7: ; 677c7 (19:77c7)
	push bc
	read_hl_from_sp_plus $40
	ld a, [hl]
	inc hl
	write_hl_to_sp_plus $40
	read_hl_from_sp_plus $29
	ld [hl], a
	read_hl_from_sp_plus $40
	ld a, [hl]
	inc hl
	write_hl_to_sp_plus $40
	read_hl_from_sp_plus $29
	inc hl
	ld [hl], a
	read_hl_from_sp_plus $40
	ld a, [hl]
	inc hl
	write_hl_to_sp_plus $40
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	ld [hl], a
	read_hl_from_sp_plus $40
	ld a, [hl]
	inc hl
	write_hl_to_sp_plus $40
	read_hl_from_sp_plus $29
	inc hl
	inc hl
	inc hl
	ld [hl], a
	read_hl_from_sp_plus $1f
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $15
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	read_hl_from_sp_plus $17
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$3d
	ld [hl], $0
Func_6782c: ; 6782c (19:782c)
	ld hl, sp+$3d
	ld a, [hl]
	cp $3
	jp nc, Func_678e7
	ld hl, sp+$3d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $29
	inc hl
	add hl, bc
	ld a, [hl]
	cp $ff
	jp z, Func_678dd
	ld hl, sp+$3d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $29
	inc hl
	add hl, bc
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $2b
	ld de, $20
	add hl, de
	add hl, bc
	write_hl_to_sp_plus $23
	ld hl, sp+$3d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $29
	inc hl
	add hl, bc
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $2b
	ld de, $23
	add hl, de
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2b
	call Func_248f
	read_hl_from_sp_plus $23
	ld l, [hl]
	ld h, $0
	push hl
	read_hl_from_sp_plus $39
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $1f
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	read_hl_from_sp_plus $23
	ld l, [hl]
	ld h, $0
	push hl
	read_hl_from_sp_plus $35
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	read_hl_from_sp_plus $17
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	read_hl_from_sp_plus $35
	push hl
	read_hl_from_sp_plus $17
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_678dd
	read_hl_from_sp_plus $35
	push hl
	read_hl_from_sp_plus $17
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
Func_678dd: ; 678dd (19:78dd)
	ld hl, sp+$3d
	ld a, [hl]
	inc a
	ld hl, sp+$3d
	ld [hl], a
	jp Func_6782c

Func_678e7: ; 678e7 (19:78e7)
	read_hl_from_sp_plus $29
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	add hl, bc
	ld de, GFX_64c7d
	add hl, de
	ld de, $12
	add hl, de
	ld a, [hl]
	read_hl_from_sp_plus $19
	ld [hl], a
	inc hl
	write_hl_to_sp_plus $19
	read_hl_from_sp_plus $1f
	ld c, [hl]
	inc hl
	ld b, [hl]
	inc hl
	write_hl_to_sp_plus $1f
	ld l, c
	ld h, b
	write_hl_to_sp_plus $1b
	read_hl_from_sp_plus $17
	inc hl
	inc hl
	write_hl_to_sp_plus $17
	read_hl_from_sp_plus $15
	inc hl
	inc hl
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $25
	write_hl_to_sp_plus $27
	pop bc
	push bc
	ld l, c
	ld h, b
	write_hl_to_sp_plus $1d
Func_67941: ; 67941 (19:7941)
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $29
	pop de
	call CompareHLtoDE
	jp z, Func_6798b
	read_hl_from_sp_plus $27
	ld a, [hl]
	read_hl_from_sp_plus $29
	cp [hl]
	jp nz, Func_67972
	read_hl_from_sp_plus $1d
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $1b
	call CompareHLtoBC
	jp nz, Func_67972
	jp Func_6798b

Func_67972: ; 67972 (19:7972)
	read_hl_from_sp_plus $27
	inc hl
	inc hl
	inc hl
	inc hl
	write_hl_to_sp_plus $27
	read_hl_from_sp_plus $1d
	inc hl
	inc hl
	write_hl_to_sp_plus $1d
	jp Func_67941

Func_6798b: ; 6798b (19:798b)
	pop bc
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $27
	pop de
	call CompareHLtoDE
	jp z, Func_679cc
	read_hl_from_sp_plus $17
	dec hl
	write_hl_to_sp_plus $17
	read_hl_from_sp_plus $1d
	dec hl
	dec hl
	write_hl_to_sp_plus $1d
	read_hl_from_sp_plus $13
	dec hl
	dec hl
	write_hl_to_sp_plus $13
	read_hl_from_sp_plus $15
	dec hl
	dec hl
	write_hl_to_sp_plus $15
	read_hl_from_sp_plus $27
	ld [hl], $0
	jp Func_679d8

Func_679cc: ; 679cc (19:79cc)
	read_hl_from_sp_plus $27
	inc hl
	inc hl
	inc hl
	inc hl
	write_hl_to_sp_plus $27
Func_679d8: ; 679d8 (19:79d8)
	ld hl, sp+$3a
	ld a, [hl]
	inc a
	ld hl, sp+$3a
	ld [hl], a
	jp Func_6777f

Func_679e2: ; 679e2 (19:79e2)
	add sp, $40
	ret

Func_679e5: ; 679e5 (19:79e5)
	push hl
	add sp, -$40
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Text_66f37
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	call LiteralStringInTree
	ld hl, sp+$0
	push hl
	read_hl_from_sp_plus $44
	pop de
	call PlaceStringDEatCoordHL
	add sp, $42
	ret

SECTION "Bank 1a", ROMX, BANK [$1a]
Func_68000:
	ret

Data_68001:
	dr $68001, $68020

Data_68020:
	dr $68020, $6802f

Data_6802f: ; 6802f
	dr $6802f, $6804e

Data_6804e: ; 6804e
	dr $6804e, $6805d

Data_6805d:
	dr $6805d, $68096

Data_68096:
	dr $68096, $680a5

Data_680a5:
	dr $680a5, $680c4

Data_680c4:
	dr $680c4, $680d3

Func_680d3:
	push hl
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

GetBanks_1a: ; 680e4 (1a:40e4)
	push af
	push de
	set_farcall_addrs_hli GetBanks
	pop de
	pop af
	jp FarCall

Func_680f6:
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_6810b: ; 6810b (1a:410b)
	push de
	add sp, -$48
	push af
	ld de, $19
	ld a, $3
	call GetBanks_1a
	ld e, a
	push de
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld c, [hl]
	pop de
	pop af
	push de
	ld e, a
	ld d, $0
	ld hl, wc9a3
	add hl, de
	ld a, [hl]
	push af
	ld e, c
	dec e
	ld hl, sp+$1c
	call GetRobotOrTrainerBaseStats
	pop af
	ld e, a
	ld hl, sp+$2
	call Func_241f
	ld hl, sp+$1f
	ld l, [hl]
	pop de
	push hl
	ld hl, sp+$a
	ld a, [hl]
	push af
	ld a, e
	call GetSRAMBank
	set_farcall_addrs_hli Func_5ec99
	pop af
	pop hl
	ld e, a
	ld a, l
	call FarCall
	cp $1
	jp nz, Func_68187
	ld hl, sp+$48
	ld a, [hl]
	or a
	jp nz, Func_6817f
	ld hl, Data_681a2
	push hl
	call PlaceString
	pop bc
	jp Func_68184

Func_6817f: ; 6817f (1a:417f)
	ld a, $1
	jp Func_6819f

Func_68184: ; 68184 (1a:4184)
	jp Func_6819e

Func_68187: ; 68187 (1a:4187)
	ld hl, sp+$48
	ld a, [hl]
	or a
	jp nz, Func_68199
	ld hl, Data_681a4
	push hl
	call PlaceString
	pop bc
	jp Func_6819e

Func_68199: ; 68199 (1a:4199)
	ld a, $ff
	jp Func_6819f

Func_6819e: ; 6819e (1a:419e)
	xor a
Func_6819f: ; 6819f (1a:419f)
	add sp, $4a
	ret

Data_681a2:
	db "c", $0

Data_681a4:
	db "*", $0

Func_681a6: ; 681a6 (1a:41a6)
	ld a, [wFarCallDestBank]
	push af
	callba_hli Func_61ef4
	pop af
	ld [wFarCallDestBank], a
	ret

Func_681bd: ; 681bd (1a:41bd)
	push af
	push de
	push bc
	ld a, [wFarCallDestBank]
	set_farcall_addrs_hli Func_61f34
	pop bc
	pop de
	pop af
	jp FarCall

Func_681d4:
	push bc
	push bc
	push bc
	push bc
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus7
	ld hl, $5
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus5
	ld hl, sp+$2
	ld [hl], $0
Func_681f5: ; 681f5 (1a:41f5)
	ld hl, sp+$2
	ld a, [hl]
	cp $3
	jp nc, Func_6826c
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_68262
	ld hl, sp+$0
	ld [hl], $0
Func_6821b: ; 6821b (1a:421b)
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nc, Func_68262
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus7
	push hl
	call GetHLAtSPPlus7
	pop de
	add hl, de
	call CompareHLtoBC
	jp nz, Func_68258
	ld e, $0
	ld a, $3
	call Func_6bbf3
	ld hl, $4000
	jp Func_68341

Func_68258: ; 68258 (1a:4258)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6821b

Func_68262: ; 68262 (1a:4262)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_681f5

Func_6826c: ; 6826c (1a:426c)
	ld hl, sp+$2
	ld [hl], $0
Func_68270: ; 68270 (1a:4270)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_682df
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, wc383
	add hl, de
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus7
	push hl
	call GetHLAtSPPlus7
	pop de
	add hl, de
	call CompareHLtoBC
	jp nz, Func_682d5
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, wc383
	add hl, de
	ld [hl], $ff
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$0
	ld [hl], a
Func_682a4: ; 682a4 (1a:42a4)
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nc, Func_682ca
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wc383 + 1
	add hl, de
	ld a, [hl]
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, wc383
	add hl, de
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_682a4

Func_682ca: ; 682ca (1a:42ca)
	ld a, $ff
	ld [wc383 + 3], a
	ld hl, $4000
	jp Func_68341

Func_682d5: ; 682d5 (1a:42d5)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_68270

Func_682df: ; 682df (1a:42df)
	ld hl, sp+$2
	ld [hl], $0
Func_682e3: ; 682e3 (1a:42e3)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_6832e
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, wc383
	add hl, de
	ld a, [hl]
	cp $ff
	jp nz, Func_68324
	call GetHLAtSPPlus7
	push hl
	call GetHLAtSPPlus7
	pop de
	add hl, de
	ld a, l
	ld hl, sp+$2
	ld e, [hl]
	ld d, $0
	ld hl, wc383
	add hl, de
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	cp $3
	jp nz, Func_6831d
	ld hl, sp+$1
	ld [hl], $0
	jp Func_68321

Func_6831d: ; 6831d (1a:431d)
	ld hl, sp+$1
	ld [hl], $1
Func_68321: ; 68321 (1a:4321)
	jp Func_6832e

Func_68324: ; 68324 (1a:4324)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_682e3

Func_6832e: ; 6832e (1a:432e)
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_6833e
	call Func_683be
	ld hl, -1
	jp Func_68341

Func_6833e: ; 6833e (1a:433e)
	ld hl, $4000
Func_68341: ; 68341 (1a:4341)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_68346:
	push bc
	pop de
	push hl
	ld a, [wc383]
	cp $ff
	jp nz, Func_6835a
	call FillVisibleAreaWithBlankTile
	ld hl, -1
	jp Func_683a4

Func_6835a: ; 6835a (1a:435a)
	ld de, $3
Func_6835d: ; 6835d (1a:435d)
	inc d
	dec d
	bit 7, d
	jr nz, Func_683a4
	ld hl, wc383
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_683a0
	ld hl, wc383
	add hl, de
	ld [hl], $ff
	pop hl
	push hl
	ld de, $9
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop hl
	push hl
	ld de, $5
	add hl, de
	ld a, [hl]
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_681bd
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ld hl, $4000
	jp Func_683a4

Func_683a0: ; 683a0 (1a:43a0)
	dec de
	jp Func_6835d

Func_683a4: ; 683a4 (1a:43a4)
	pop bc
	ret

Pointers_683a6:
	dw Data_683aa
	dw $0

Data_683aa:
	db "(はけんする ちいきを えらんてﾞね)", $0

Func_683be: ; 683be (1a:43be)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_683a6)
	ld de, Pointers_683a6
	ld hl, $10e
	call FarCall
	call FillVisibleAreaWithBlankTile
	ld a, [wc7e2]
	push af
	ld a, $1
	ld [wc7e2], a
Func_68402: ; 68402 (1a:4402)
	call Func_2009
	ld a, [wSongCurrentlyPlaying]
	callba_hli Func_e220d
	ld l, a
	push hl
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_6804e)
	ld de, Data_6804e
	ld hl, Data_6802f
	call FarCall
	ld a, l
	push af
	call FillVisibleAreaWithBlankTile
	pop af
	pop hl
	or a
	jp nz, Func_68441
	push hl
	call Func_3af6
	pop hl
	jp Func_68444

Func_68441: ; 68441 (1a:4441)
	jp Func_68402

Func_68444: ; 68444 (1a:4444)
	pop af
	ld [wc7e2], a
	ld a, l
	call Func_68457
	or a
	jp nz, Func_68454
	xor a
	jp Func_68456

Func_68454: ; 68454 (1a:4454)
	ld a, $ff
Func_68456: ; 68456 (1a:4456)
	ret

Func_68457: ; 68457 (1a:4457)
	push af
	add sp, -$1e
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $a
	ld hl, $0
	call Func_680f6
	ld c, $5
	ld e, $a
	ld hl, $5
	call Func_680f6
	ld c, $b
	ld e, $a
	ld hl, $a00
	call Func_680f6
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld de, Data_68886
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld de, Data_6888f
	ld hl, $106
	call PlaceStringDEatCoordHL
	ld de, Data_68899
	ld hl, $b01
	call PlaceStringDEatCoordHL
	ld de, Data_688a5
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld hl, sp+$1f
	ld a, [hl]
	call Func_689f0
	ld hl, sp+$1f
	ld a, [hl]
	cp $e
	jp nz, Func_684dc
	set_farcall_addrs_hli CheckEventFlag
	ld a, $44
	call FarCall
	cp $1
	jp nz, Func_684d9
	ld hl, sp+$1f
	ld [hl], $13
Func_684d9: ; 684d9 (1a:44d9)
	jp Func_68516

Func_684dc: ; 684dc (1a:44dc)
	ld hl, sp+$1f
	ld a, [hl]
	cp $c
	jp nz, Func_68516
	set_farcall_addrs_hli CheckEventFlag
	ld a, $35
	call FarCall
	cp $1
	jp nz, Func_68516
	ld hl, sp+$1f
	ld [hl], $14
	set_farcall_addrs_hli CheckEventFlag
	ld a, $23
	call FarCall
	cp $1
	jp nz, Func_68516
	ld hl, sp+$1f
	ld [hl], $c
Func_68516: ; 68516 (1a:4516)
	ld e, $8
	ld a, $3
	call SetStringStartState
	ld hl, wTimeSetDaysOnesDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, wTimeSetDaysTensDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, wTimeSetMonthsOnesDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, wTimeSetMonthsTensDigit
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688af
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	xor a
Func_68546: ; 68546 (1a:4546)
	cp $4
	jp nc, Func_68580
	push af
	ld e, a
	ld d, $0
	ld hl, wc383
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	call Func_6890a
	set_farcall_addrs_hli Func_16019
	pop af
	push af
	ld hl, sp+$2
	ld c, l
	ld b, h
	ld l, a
	ld h, $0
	add hl, hl
	inc hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, $b
	call FarCall
	pop af
	inc a
	jp Func_68546

Func_68580: ; 68580 (1a:4580)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_6887e
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld de, Data_688b9
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_685f7
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $9
	add hl, de
	ld [hl], $1
	jp Func_6860e

Func_685f7: ; 685f7 (1a:45f7)
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $9
	add hl, de
	ld [hl], $0
Func_6860e: ; 6860e (1a:460e)
	ld hl, sp+$1f
	ld e, [hl]
	ld a, $c
	call Func_6bbf3
	call Func_3af6
	call Func_68ac3
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld [hl], $1
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld a, [wc383]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	inc hl
	ld a, [wc383 + 1]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	inc hl
	inc hl
	ld a, [wc383 + 2]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	inc hl
	inc hl
	inc hl
	ld a, [wc383 + 3]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [wc388]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $5
	add hl, de
	ld a, [wc389]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $6
	add hl, de
	ld a, [wc38a]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $7
	add hl, de
	ld a, [wc38b]
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $8
	add hl, de
	ld a, [wc38c]
	ld [hl], a
	ld hl, sp+$1f
	ld a, [hl]
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $11
	add hl, de
	ld [hl], a
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $e
	add hl, de
	ld [hl], $0
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld [hl], $0
	callba_hli Func_e2cc7
	ld c, $9
	ld e, $a
	ld hl, $505
	call Func_680f6
	ld de, Data_688c9
	ld hl, $606
	call PlaceStringDEatCoordHL
	ld e, $8
	ld a, $6
	call SetStringStartState
	ld a, [wc388]
	cp $a
	jp nc, Func_68794
	ld hl, wc389
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688d4
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_687a4

Func_68794: ; 68794 (1a:4794)
	ld hl, wc389
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688dd
	push hl
	call PlaceString
	pop bc
	pop bc
Func_687a4: ; 687a4 (1a:47a4)
	ld a, [wc38a]
	cp $a
	jp nc, Func_687bf
	ld hl, wc38a
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688e5
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_687cf

Func_687bf: ; 687bf (1a:47bf)
	ld hl, wc38a
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688ed
	push hl
	call PlaceString
	pop bc
	pop bc
Func_687cf: ; 687cf (1a:47cf)
	ld e, $a
	ld a, $6
	call SetStringStartState
	ld a, [wc38b]
	cp $a
	jp nc, Func_687f1
	ld hl, wc38b
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688f4
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_68801

Func_687f1: ; 687f1 (1a:47f1)
	ld hl, wc38b
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688f9
	push hl
	call PlaceString
	pop bc
	pop bc
Func_68801: ; 68801 (1a:4801)
	ld a, [wc38c]
	cp $a
	jp nc, Func_6881c
	ld hl, wc38c
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_688fd
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_6882c

Func_6881c: ; 6881c (1a:481c)
	ld hl, wc38c
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_68901
	push hl
	call PlaceString
	pop bc
	pop bc
Func_6882c: ; 6882c (1a:482c)
	ld de, Data_68904
	ld hl, $b0c
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_60001
	ld c, $0
	ld e, $c
	ld a, $d
	call FarCall
	callba_hli WaitAorBButtonOverworld_17a44
	set_farcall_addrs_hli Func_60001
	ld c, $1
	ld e, $c
	ld a, $d
	call FarCall
	call FillVisibleAreaWithBlankTile
	xor a
	jp Func_68883

Func_6887e: ; 6887e (1a:487e)
	call Func_3af6
	ld a, $ff
Func_68883: ; 68883 (1a:4883)
	add sp, $20
	ret

Data_68886:
	db "(はけんちいき)", $0

Data_6888f:
	db "(はけんしﾞかん)", $0

Data_68899:
	db "(はけん)ハﾟーティー", $0

Data_688a5:
	db "(これてﾞいい?)", $0

Data_688af:
	TX_SNUM
	TX_SNUM
	db ":"
	TX_SNUM
	TX_SNUM
	db $0

Data_688b9:
	db "(しﾞかんを しらせますか)?", $0

Data_688c9:
	db "(きかんしﾞかんは)", $0

Data_688d4:
	db " "
	TX_SNUM
	db "(かﾞつ)", $0

Data_688dd:
	TX_SNUM
	db "(かﾞつ)", $0

Data_688e5:
	db " "
	TX_SNUM
	db "(にち)", $0

Data_688ed:
	TX_SNUM
	db "(にち)", $0

Data_688f4:
	db " "
	TX_SNUM
	db ":", $0

Data_688f9:
	TX_SNUM
	db ":", $0

Data_688fd:
	db "0"
	TX_SNUM
	db $0

Data_68901:
	TX_SNUM
	db $0

Data_68904:
	db "(たﾞよ)", $0

Func_6890a: ; 6890a (1a:490a)
	push hl
	add sp, -$24
	push de
	read_hl_from_sp_plus $28
	push hl
	read_hl_from_sp_plus $2a
	ld [hl], $81
	inc hl
	write_hl_to_sp_plus $2a
	set_farcall_addrs_hli Func_7dfc
	pop hl
	pop de
	push hl
	ld a, e
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	ld hl, sp+$9
	ld a, [hl]
	cp $a
	jp nc, Func_68972
	set_farcall_addrs_hli Func_17975
	ld c, $1
	read_hl_from_sp_plus $28
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	call FarCall
	read_hl_from_sp_plus $28
	inc hl
	write_hl_to_sp_plus $28
	read_hl_from_sp_plus $28
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $28
	jp Func_68999

Func_68972: ; 68972 (1a:4972)
	set_farcall_addrs_hli Func_17975
	ld c, $2
	read_hl_from_sp_plus $28
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	call FarCall
	read_hl_from_sp_plus $28
	inc hl
	inc hl
	write_hl_to_sp_plus $28
Func_68999: ; 68999 (1a:4999)
	ld bc, $6
	ld hl, sp+$3
	push hl
	read_hl_from_sp_plus $2a
	pop de
	call CopyFromDEtoHL
	pop hl
	call FindFirstNonzero
	ld c, l
	ld b, h
	push bc
	read_hl_from_sp_plus $28
	call FindFirstNonzero
	ld c, l
	ld b, h
	read_hl_from_sp_plus $28
	add hl, bc
	write_hl_to_sp_plus $28
	pop bc
Func_689c1: ; 689c1 (1a:49c1)
	ld l, c
	ld h, b
	ld de, $8
	call CompareHLtoDE
	jp nc, Func_689db
	read_hl_from_sp_plus $26
	ld [hl], $90
	inc hl
	write_hl_to_sp_plus $26
	inc bc
	jp Func_689c1

Func_689db: ; 689db (1a:49db)
	read_hl_from_sp_plus $26
	ld [hl], $0
	read_hl_from_sp_plus $26
	reg16swap de, hl
	add sp, $26
	reg16swap de, hl
	ret

Func_689f0: ; 689f0 (1a:49f0)
	add sp, -$14
	push af
	ld a, [wc7e2]
	ld l, a
	pop af
	push hl
	inc a
	ld [wc7e2], a
	set_farcall_addrs_hli Func_e26e0
	ld hl, sp+$2
	call FarCall
	ld e, $3
	ld a, $1
	call SetStringStartState
	ld hl, sp+$2
	push hl
	ld hl, Data_68a28
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
	ld a, l
	ld [wc7e2], a
	add sp, $14
	ret

Data_68a28:
	TX_CALL
	db $0

Func_68a2b:
	call Func_1fbe
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld c, $4
	ld e, $14
	ld hl, $5
	call Func_680f6
	ld de, Data_68a98
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_68aa6
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld de, Data_68ab7
	ld hl, $106
	call PlaceStringDEatCoordHL
	ld de, Data_68ac1
	ld hl, $d06
	call PlaceStringDEatCoordHL
	xor a
	ld [wc2f7], a
	xor a
	ld [wTimeSetDaysOnesDigit], a
	ld [wTimeSetMonthsOnesDigit], a
	ld [wTimeSetMonthsTensDigit], a
	ld a, $1
	ld [wTimeSetDaysTensDigit], a
	call Func_68b7d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	ret

Data_68a98:
	db "(はけんする しﾞかんを)", $0

Data_68aa6:
	db "(にゅうりょく してくたﾞさい)", $0

Data_68ab7:
	db "(はけんしﾞかん)", $0

Data_68ac1:
	db ":", $0

Func_68ac3: ; 68ac3 (1a:4ac3)
	push bc
	push bc
	push bc
	push bc
	set_farcall_addrs_hli Func_93370
	ld hl, sp+$3
	call FarCall
	set_farcall_addrs_hli Func_93883
	ld hl, sp+$5
	ld c, [hl]
	ld hl, sp+$4
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	call FarCall
	call WriteHLToSPPlus3
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	ld hl, sp+$0
	ld [hl], a
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	ld e, a
	ld hl, sp+$7
	ld a, [hl]
	add e
	push af
	ld b, $3c
	call DivideAbyB
	ld e, a
	ld hl, sp+$2
	ld a, [hl]
	ld hl, sp+$8
	add [hl]
	add e
	push af
	ld l, a
	ld h, $0
	ld de, $18
	call DivideHLByDESigned
	ld c, l
	ld b, h
	call GetHLAtSPPlus7
	add hl, bc
	call WriteHLToSPPlus7
	pop af
	ld b, $18
	call DivideAbyB
	ld hl, sp+$8
	ld [hl], b
	pop af
	ld b, $3c
	call DivideAbyB
	ld hl, sp+$7
	ld [hl], b
	set_farcall_addrs_hli Func_93792
	ld hl, sp+$3
	push hl
	call GetHLAtSPPlus5
	pop de
	call FarCall
	ld c, $0
Func_68b5b: ; 68b5b (1a:4b5b)
	ld a, c
	cp $5
	jp nc, Func_68b74
	ld e, c
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, wc388
	add hl, de
	ld [hl], a
	inc c
	jp Func_68b5b

Func_68b74: ; 68b74 (1a:4b74)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_68b79:
	dr $68b79, $68b7d

Func_68b7d: ; 68b7d (1a:4b7d)
	ld l, $0
Func_68b7f: ; 68b7f (1a:4b7f)
	ld a, l
	cp $4
	jp nc, Func_68bea
	ld a, [wc2f7]
	cp l
	jp nz, Func_68ba8
	push hl
	ld e, l
	ld d, $0
	ld hl, Data_68b79
	add hl, de
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $7
	add hl, de
	ld de, Data_68beb
	call PlaceStringDEatCoordHL
	pop hl
	jp Func_68bc1

Func_68ba8: ; 68ba8 (1a:4ba8)
	push hl
	ld e, l
	ld d, $0
	ld hl, Data_68b79
	add hl, de
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $7
	add hl, de
	ld de, Data_68bed
	call PlaceStringDEatCoordHL
	pop hl
Func_68bc1: ; 68bc1 (1a:4bc1)
	push hl
	ld e, l
	ld d, $0
	ld hl, Data_68b79
	add hl, de
	ld a, [hl]
	ld e, $6
	call SetStringStartState
	pop hl
	push hl
	ld e, l
	ld d, $0
	ld hl, wTimeSetMonthsTensDigit
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, Data_68bef
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
	inc l
	jp Func_68b7f

Func_68bea: ; 68bea (1a:4bea)
	ret

Data_68beb:
	db "b", $0

Data_68bed:
	db "_", $0

Data_68bef:
	TX_SNUM
	db $0

Func_68bf2: ; 68bf2 (1a:4bf2)
	ld a, [wc2f7]
	cp $2
	jp nz, Func_68bff
	ld c, $5
	jp Func_68c01

Func_68bff: ; 68bff (1a:4bff)
	ld c, $9
Func_68c01: ; 68c01 (1a:4c01)
	ld a, e
	sub $3
	or d
	jp z, Func_68c8a
	ld a, e
	sub $2
	or d
	jp z, Func_68c78
	ld a, e
	dec a
	or d
	jp z, Func_68c49
	ld a, e
	or d
	jp nz, Func_68c99
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	cp c
	jp nz, Func_68c38
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], $0
	jp Func_68c46

Func_68c38: ; 68c38 (1a:4c38)
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld a, $1
	add [hl]
	ld [hl], a
Func_68c46: ; 68c46 (1a:4c46)
	jp Func_68c99

Func_68c49: ; 68c49 (1a:4c49)
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_68c66
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld [hl], c
	jp Func_68c75

Func_68c66: ; 68c66 (1a:4c66)
	ld hl, wc2f7
	ld l, [hl]
	ld h, $0
	ld de, wTimeSetMonthsTensDigit
	add hl, de
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
Func_68c75: ; 68c75 (1a:4c75)
	jp Func_68c99

Func_68c78: ; 68c78 (1a:4c78)
	ld a, [wc2f7]
	cp $3
	jp nc, Func_68c87
	ld a, [wc2f7]
	inc a
	ld [wc2f7], a
Func_68c87: ; 68c87 (1a:4c87)
	jp Func_68c99

Func_68c8a: ; 68c8a (1a:4c8a)
	ld a, [wc2f7]
	cp $1
	jp c, Func_68c99
	ld a, [wc2f7]
	dec a
	ld [wc2f7], a
Func_68c99: ; 68c99 (1a:4c99)
	ld a, [wTimeSetMonthsTensDigit]
	or a
	jp nz, Func_68cc1
	ld a, [wTimeSetMonthsOnesDigit]
	or a
	jp nz, Func_68cc1
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	cp $a
	jp nc, Func_68cc1
	ld a, $1
	ld [wTimeSetDaysTensDigit], a
	xor a
	ld [wTimeSetDaysOnesDigit], a
Func_68cc1: ; 68cc1 (1a:4cc1)
	call Func_68b7d
	ld l, $4
	push hl
	ld c, $14
	ld e, $6
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	ret

Func_68cd4:
	ld de, $2
	call Func_68bf2
	ret

Func_68cdb:
	ld de, $3
	call Func_68bf2
	ret

Func_68ce2:
	ld a, [wTimeSetMonthsTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetMonthsOnesDigit
	add [hl]
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $7
	add hl, de
	ld [hl], a
	ld a, [wTimeSetDaysTensDigit]
	add a
	ld d, a
	add a
	add a
	add d
	ld hl, wTimeSetDaysOnesDigit
	add [hl]
	ld hl, wc387
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $8
	add hl, de
	ld [hl], a
	ld hl, $0
	ret

Func_68d2a:
	ld hl, -1
	ret

Pointers_68d2e:
	dw Data_68dac
	dw Data_68db4
	dw $0

Pointers_68d34:
	dw Data_68dba
	dw Data_68dc0
	dw $0

Pointers_68d3a:
	dw Data_68dc7
	dw Data_68dcd
	dw $0

Pointers_68d40:
	dw Data_68dd5
	dw Data_68ddb
	dw $0

Pointers_68d46:
	dw Data_68de3
	dw Data_68de9
	dw $0

Pointers_68d4c:
	dw Data_68df4
	dw Data_68dfa
	dw $0

Pointers_68d52:
	dw Data_68dfe
	dw Data_68e04
	dw $0

Pointers_68d58:
	dw Data_68e08
	dw Data_68e0e
	dw $0

Pointers_68d5e:
	dw Data_68e16
	dw Data_68e1c
	dw $0

Pointers_68d64:
	dw Data_68e25
	dw Data_68e2b
	dw $0

Pointers_68d6a:
	dw Data_68e37
	dw Data_68e3e
	dw $0

Pointers_68d70:
	dw Data_68e47
	dw Data_68e4e
	dw $0

Pointers_68d76:
	dw Data_68e57
	dw Data_68e5e
	dw $0

Pointers_68d7c:
	dw Data_68e67
	dw Data_68e6e
	dw $0

Pointers_68d82:
	dw Data_68e72
	dw Data_68e79
	dw $0

Pointers_68d88:
	dw Data_68e85
	dw Data_68e8c
	dw $0

Pointers_68d8e:
	dw Data_68e97
	dw Data_68e9e
	dw $0

Pointers_68d94:
	dw Data_68ea6
	dw Data_68ead
	dw $0

Pointers_68d9a:
	dw Data_68eb6
	dw Data_68ebd
	dw $0

Pointers_68da0:
	dw Data_68ec7
	dw Data_68ece
	dw $0

Pointers_68da6:
	dw Data_68ed9
	dw Data_68ee0
	dw $0

Data_68dac:
	db "(ちか1かい)", $0

Data_68db4:
	db "(そうこ)", $0

Data_68dba:
	db "(1かい)", $0

Data_68dc0:
	db "(うけつけ)", $0

Data_68dc7:
	db "(2かい)", $0

Data_68dcd:
	db "アイテム(や)", $0

Data_68dd5:
	db "(3かい)", $0

Data_68ddb:
	db "ハﾟーツ(や)", $0

Data_68de3:
	db "(4かい)", $0

Data_68de9:
	db "(けんきゅうしﾞょ)", $0

Data_68df4:
	db "(5かい)", $0

Data_68dfa:
	db "トイレ", $0

Data_68dfe:
	db "(6かい)", $0

Data_68e04:
	db "ハﾞス", $0

Data_68e08:
	db "(7かい)", $0

Data_68e0e:
	db "(こういしつ)", $0

Data_68e16:
	db "(8かい)", $0

Data_68e1c:
	db "(はけんしﾞょ)", $0

Data_68e25:
	db "(9かい)", $0

Data_68e2b:
	db "レクリエーションルーム", $0

Data_68e37:
	db "(10かい)", $0

Data_68e3e:
	db "ケﾞームコーナー", $0

Data_68e47:
	db "(11かい)", $0

Data_68e4e:
	db "(かいきﾞしつ)", $0

Data_68e57:
	db "(12かい)", $0

Data_68e5e:
	db "リラックスルーム", $0

Data_68e67:
	db "(13かい)", $0

Data_68e6e:
	db "サウナ", $0

Data_68e72:
	db "(14かい)", $0

Data_68e79:
	db "カウンセリンクﾞルーム", $0

Data_68e85:
	db "(15かい)", $0

Data_68e8c:
	db "(しちょうかくしつ)", $0

Data_68e97:
	db "(16かい)", $0

Data_68e9e:
	db "(あきへﾞや)", $0

Data_68ea6:
	db "(17かい)", $0

Data_68ead:
	db "(おうせつしつ)", $0

Data_68eb6:
	db "(18かい)", $0

Data_68ebd:
	db "(しゃちょうしつ)", $0

Data_68ec7:
	db "(19かい)", $0

Data_68ece:
	db "(てんしﾞしﾞょう)", $0

Data_68ed9:
	db "(20かい)", $0

Data_68ee0:
	db "(てんほﾞうたﾞい)", $0

Func_68eeb:
	reg16swap de, hl
	push de
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	pop de
	push hl
	push de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	set_farcall_addrs_hli PrintMapText_
	pop hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, Pointers_68d2e
	add hl, de
	reg16swap de, hl
	ld hl, $10e
	ld c, BANK(Pointers_68d2e)
	call FarCall
	ld l, $f
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call Func_2323
	pop hl
	call Func_680d3
	ld hl, $4000
	ret

Data_68f86:
	dr $68f86, $68f92

Func_68f92:
	push bc
	push bc
	push bc
	push hl
	ld a, [wc78c]
	ld b, $7
	call DivideAbyB
	ld l, a
	push hl
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_68f86
	add hl, de
	ld e, [hl]
	ld hl, sp+$8
	ld [hl], e
	pop hl
	push hl
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_68f86
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$7
	ld [hl], e
	pop hl
	push hl
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_68f86
	add hl, de
	inc hl
	inc hl
	ld a, [hl]
	pop hl
	push hl
	push af
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_68f86
	add hl, de
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop hl
	ld a, [wc78c]
	cp $6
	jp nc, Func_68ff4
	ld a, [wc78c]
	add a
	add $3
	ld l, a
Func_68ff4: ; 68ff4 (1a:4ff4)
	pop af
	ld c, l
	ld e, a
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$7
	ld l, [hl]
	ld h, a
	call Func_680f6
	ld c, $3
	ld e, $8
	ld hl, $c0f
	call Func_680f6
	pop hl
	ld a, l
	or a
	jp nz, Func_6904d
	ld c, $0
Func_69013: ; 69013 (1a:5013)
	ld a, [wc78c]
	cp c
	jp c, Func_6904a
	ld hl, sp+$6
	ld a, [hl]
	add $2
	ld e, a
	ld hl, sp+$5
	ld a, [hl]
	inc a
	ld l, a
	ld a, c
	add a
	add l
	inc c
	dec c
	jp nz, Func_6903a
	push bc
	ld h, e
	ld l, a
	ld de, Data_69114
	call PlaceStringDEatCoordHL
	pop bc
	jp Func_69046

Func_6903a: ; 6903a (1a:503a)
	push bc
	ld b, $0
	ld h, e
	ld l, a
	ld de, $2
	call Func_2230
	pop bc
Func_69046: ; 69046 (1a:5046)
	inc c
	jp Func_69013

Func_6904a: ; 6904a (1a:504a)
	jp Func_690e3

Func_6904d: ; 6904d (1a:504d)
	ld c, $0
Func_6904f: ; 6904f (1a:504f)
	ld a, l
	cp c
	jp c, Func_690e3
	push hl
	ld hl, sp+$4
	ld [hl], $0
Func_69059: ; 69059 (1a:5059)
	ld hl, sp+$4
	ld a, [hl]
	cp $7
	jp nc, Func_690de
	ld a, c
	ld d, a
	add a
	add d
	ld d, a
	ld hl, sp+$8
	ld a, [hl]
	add $2
	add d
	ld hl, sp+$6
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	add a
	ld e, a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	add e
	ld hl, sp+$5
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp nz, Func_6909a
	inc c
	dec c
	jp nz, Func_6909a
	push bc
	ld de, Data_69119
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$7
	ld l, [hl]
	ld h, a
	call PlaceStringDEatCoordHL
	pop bc
	jp Func_690c0

Func_6909a: ; 6909a (1a:509a)
	push bc
	ld l, c
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	ld c, l
	ld b, h
	add hl, hl
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	add hl, de
	ld c, l
	ld b, h
	ld de, $2
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$7
	ld l, [hl]
	ld h, a
	call Func_2230
	pop bc
Func_690c0: ; 690c0 (1a:50c0)
	ld a, c
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	ld hl, sp+$4
	add [hl]
	ld hl, wc78c
	cp [hl]
	jp nz, Func_690d4
	jp Func_690de

Func_690d4: ; 690d4 (1a:50d4)
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
	jp Func_69059

Func_690de: ; 690de (1a:50de)
	inc c
	pop hl
	jp Func_6904f

Func_690e3: ; 690e3 (1a:50e3)
	pop hl
	call Func_6912c
	ld a, [wc78c]
	ld c, a
	ld b, $0
	ld de, $2
	ld hl, $d10
	call Func_2230
	ld hl, Data_6911e
	push hl
	call PlaceString
	pop bc
	call Func_69581
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Data_69114:
	db "(ちか)", $0

Data_69119:
	db "(ちか)", $0

Data_6911e:
	db "(かいたﾞて)", $0

Data_69126:
	dr $69126, $6912c

Func_6912c: ; 6912c (1a:512c)
	push hl
	add sp, -$10
	ld hl, sp+$10
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	push hl
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_69126
	ld bc, $6
	call MemCopy
	pop hl
	write_hl_to_sp_plus $11
	ld a, [wc78c]
	ld b, $7
	call DivideAbyB
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	ld e, [hl]
	ld hl, sp+$e
	ld [hl], e
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$0
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$d
	ld [hl], e
	read_hl_from_sp_plus $11
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus10
	read_hl_from_sp_plus $11
	ld de, $b
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus8
	call GetHLAtSPPlus10
	ld de, $7
	call DivideHLByDESigned
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld a, l
	ld hl, sp+$c
	ld [hl], a
	call GetHLAtSPPlus10
	ld de, $7
	call DivideHLByDESigned
	reg16swap de, hl
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld a, l
	ld hl, sp+$b
	ld [hl], a
	call GetHLAtSPPlus8
	ld de, $7
	call DivideHLByDESigned
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$e
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld a, l
	ld hl, sp+$a
	ld [hl], a
	call GetHLAtSPPlus8
	ld de, $7
	call DivideHLByDESigned
	reg16swap de, hl
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	ld l, [hl]
	ld h, $0
	inc hl
	add hl, de
	ld c, l
	call GetHLAtSPPlus8
	ld a, l
	and h
	inc a
	jp nz, Func_6921f
	ld hl, sp+$b
	ld e, [hl]
	ld hl, sp+$c
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_6927c
	push hl
	call PlaceString
	pop bc
	pop bc
	jp Func_69279

Func_6921f: ; 6921f (1a:521f)
	push bc
	ld l, $f
	push hl
	ld c, $b
	ld e, $0
	ld a, $9
	call Func_3afc
	pop bc
	pop bc
	ld hl, sp+$a
	ld a, [hl]
	ld l, c
	ld h, a
	ld de, Data_6927f
	call PlaceStringDEatCoordHL
	ld hl, sp+$b
	ld e, [hl]
	ld hl, sp+$c
	ld a, [hl]
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_69281
	push hl
	call PlaceString
	pop bc
	pop bc
	call GetHLAtSPPlus10
	push hl
	read_hl_from_sp_plus $13
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld l, $f
	push hl
	ld c, $b
	ld e, $0
	ld a, $9
	call Func_3bc5
	pop bc
	ld l, $f
	push hl
	ld c, $b
	ld e, $0
	ld a, $9
	call Func_3ca1
	pop bc
Func_69279: ; 69279 (1a:5279)
	add sp, $12
	ret

Data_6927c:
	TX_STACK
	db $0

Data_6927f:
	db " ", $0

Data_69281:
	TX_STACK
	db $0

Func_69284: ; 69284 (1a:5284)
	push bc
	push bc
	push de
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus8
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, [wc78c]
	ld c, a
	push bc
	ld a, [wc78c]
	ld b, $7
	call DivideAbyB
	pop bc
	pop de
	ld a, e
	sub $3
	or d
	jp z, Func_6931d
	ld a, e
	sub $2
	or d
	jp z, Func_692fb
	ld a, e
	dec a
	or d
	jp z, Func_692e1
	ld a, e
	or d
	jp nz, Func_69335
	pop hl
	push hl
	dec hl
	pop de
	push hl
	inc h
	dec h
	bit 7, h
	jr z, .asm_692de
	ld hl, $0
	pop de
	push hl
.asm_692de
	jp Func_69335

Func_692e1: ; 692e1 (1a:52e1)
	pop hl
	push hl
	inc hl
	pop de
	push hl
	reg16swap de, hl
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_692f8
	ld l, c
	ld h, $0
	pop de
	push hl
Func_692f8: ; 692f8 (1a:52f8)
	jp Func_69335

Func_692fb: ; 692fb (1a:52fb)
	pop hl
	push hl
	ld de, $7
	add hl, de
	pop de
	push hl
	pop hl
	push hl
	reg16swap de, hl
	ld l, c
	ld h, $0
	call CompareHLtoDE
	jp nc, Func_6931a
	pop hl
	push hl
	ld de, -7
	add hl, de
	pop de
	push hl
Func_6931a: ; 6931a (1a:531a)
	jp Func_69335

Func_6931d: ; 6931d (1a:531d)
	pop hl
	push hl
	ld de, -7
	add hl, de
	pop de
	push hl
	pop hl
	push hl
	inc h
	dec h
	bit 7, h
	jr z, Func_69335
	pop hl
	push hl
	ld de, $7
	add hl, de
	pop de
	push hl
Func_69335: ; 69335 (1a:5335)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus4
	call Func_6912c
	ld hl, $4000
	pop bc
	pop bc
	ret

Func_6934e:
	ld de, $2
	jp Func_69284

Func_69354:
	ld de, $3
	jp Func_69284

Func_6935a:
	push hl
	ld bc, $8a00
	push bc
	call WaitVideoTransfer
	pop bc
	read_hl_from wc38e
	ld a, l
	or h
	jp nz, Func_69431
	push bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, Func_0150
	call FarCall
	write_hl_to wc38e
	ld a, $6
	ld [wFarCallDestBank], a
	pop bc
	push bc
	ld e, c
	ld d, b
	read_hl_from wc38e
	ld bc, Func_0150
	call FarRequestVideoData
	pop bc
Func_69399: ; 69399 (1a:5399)
	pop hl
	push hl
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_69431
	ld a, [wSystemType]
	cp $11
	jp nz, Func_693e7
	ld a, BANK(MapTiles_CGB)
	ld [wFarCallDestBank], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	and [hl]
	inc a
	jp nz, Func_693c7
	push bc
	ld l, c
	ld h, b
	ld de, MapTiles_CGB
	ld bc, $10
	call FarRequestVideoData
	pop bc
	jp Func_693e4

Func_693c7: ; 693c7 (1a:53c7)
	push bc
	call GetHLAtSPPlus4
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, MapTiles_CGB
	add hl, de
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $10
	call FarRequestVideoData
	pop bc
Func_693e4: ; 693e4 (1a:53e4)
	jp Func_69422

Func_693e7: ; 693e7 (1a:53e7)
	ld a, BANK(MapTiles_SGB_DMG)
	ld [wFarCallDestBank], a
	pop hl
	push hl
	ld a, [hl]
	inc hl
	and [hl]
	inc a
	jp nz, Func_69405
	push bc
	ld l, c
	ld h, b
	ld de, MapTiles_SGB_DMG
	ld bc, $10
	call FarRequestVideoData
	pop bc
	jp Func_69422

Func_69405: ; 69405 (1a:5405)
	push bc
	call GetHLAtSPPlus4
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	ld de, MapTiles_SGB_DMG
	add hl, de
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $10
	call FarRequestVideoData
	pop bc
Func_69422: ; 69422 (1a:5422)
	ld hl, $10
	add hl, bc
	ld c, l
	ld b, h
	pop hl
	push hl
	inc hl
	inc hl
	pop de
	push hl
	jp Func_69399

Func_69431: ; 69431 (1a:5431)
	call WaitVideoTransfer
	pop bc
	ret

Func_69436: ; 69436 (1a:5436)
	ld bc, $8a00
	read_hl_from wc38e
	ld a, l
	or h
	jp z, Func_69469
	ld a, $6
	ld [wFarCallDestBank], a
	read_hl_from wc38e
	reg16swap de, hl
	ld l, c
	ld h, b
	ld bc, $150
	call FarRequestVideoData
	read_hl_from wc38e
	call Func_680d3
	ld hl, $0
	write_hl_to wc38e
Func_69469: ; 69469 (1a:5469)
	ret

Data_6946a:
	dr $6946a, $69484

Data_69484:
	dr $69484, $6949c

Data_6949c:
	dr $6949c, $694c8
	
Data_694c8:
	dr $694c8, $694e0

Data_694e0:
	dr $694e0, $694ec

Data_694ec:
	dr $694ec, $694fe

Func_694fe:
	push hl
	push de
	push bc
	push bc
	ld hl, sp+$1
	ld [hl], $0
	ld hl, sp+$0
	ld [hl], $0
	call GetHLAtSPPlus8
	ld e, h
	ld hl, sp+$2
	ld [hl], e
	call GetHLAtSPPlus8
	ld e, l
Func_69515: ; 69515 (1a:5515)
	ld a, c
	cp $1
	jp c, Func_69563
	push de
	push bc
	ld d, $0
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	add hl, de
	push hl
	ld hl, sp+$8
	ld e, [hl]
	ld d, $0
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	add hl, de
	ld h, l
	ld l, $0
	pop de
	add hl, de
	call Coord2TileMap
	ld c, l
	ld b, h
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	add $a0
	ld [bc], a
	ld hl, sp+$5
	ld a, [hl]
	inc a
	ld hl, sp+$5
	ld [hl], a
	cp $6
	jp c, Func_6955d
	ld hl, sp+$5
	ld [hl], $0
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
Func_6955d: ; 6955d (1a:555d)
	pop bc
	dec c
	pop de
	jp Func_69515

Func_69563: ; 69563 (1a:5563)
	ld d, $0
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, de
	push hl
	ld hl, sp+$4
	ld e, [hl]
	ld d, $0
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	add hl, de
	ld h, l
	ld l, $0
	pop de
	add hl, de
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_69581: ; 69581 (1a:5581)
	ld a, [wc78c]
	cp $5
	jp nc, Func_6958f
	call Func_69593
	jp Func_69592

Func_6958f: ; 6958f (1a:558f)
	call Func_69609
Func_69592: ; 69592 (1a:5592)
	ret

Func_69593: ; 69593 (1a:5593)
	push bc
	ld hl, Data_6946a
	call Func_6935a
	ld hl, sp+$0
	ld [hl], $0
Func_6959e: ; 6959e (1a:559e)
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nc, Func_695fb
	ld hl, sp+$1
	ld [hl], $0
Func_695aa: ; 695aa (1a:55aa)
	ld hl, sp+$1
	ld a, [hl]
	cp $6
	jp nc, Func_695f1
	ld hl, sp+$1
	ld c, [hl]
	ld b, $0
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	add hl, bc
	ld de, Data_69484
	add hl, de
	ld a, [hl]
	add $a0
	push af
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld de, $b
	add hl, de
	reg16swap de, hl
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc h
	inc h
	add hl, de
	call Coord2TileMap
	pop af
	ld [hl], a
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_695aa

Func_695f1: ; 695f1 (1a:55f1)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6959e

Func_695fb: ; 695fb (1a:55fb)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	pop bc
	ret

Func_69609: ; 69609 (1a:5609)
	ld hl, Data_6949c
	call Func_6935a
	ld a, [wc78c]
	ld b, $5
	call DivideAbyB
	push af
	ld e, $1
	add a
	ld l, a
	ld a, $8
	sub l
	ld l, e
	ld h, $0
	ld h, l
	ld l, $0
	inc hl
	ld e, a
	ld d, $0
	add hl, de
	ld de, Data_694c8
	ld c, $18
	call Func_694fe
	pop af
Func_69633: ; 69633 (1a:5633)
	cp $1
	jp c, Func_69646
	push af
	ld de, Data_694e0
	ld c, $c
	call Func_694fe
	pop af
	dec a
	jp Func_69633

Func_69646: ; 69646 (1a:5646)
	ld de, Data_694ec
	ld c, $12
	call Func_694fe
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	ret

RepairRobots::
	ld de, $19
	ld a, $3
	call GetBanks_1a
	push af
	xor a
.loop
	cp $4
	jp nc, .quit

	ld l, a
	ld h, 0
	get_party_bot

	ld de, $e
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de

	ld l, a
	ld h, 0
	get_party_bot

	ld de, $c
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d

	ld l, a
	ld h, 0
	get_party_bot

	ld de, $12
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de

	ld l, a
	ld h, 0
	get_party_bot

	ld de, $10
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d

	ld l, a
	ld h, 0
	get_party_bot

	ld de, $16
	add hl, de
	ld [hl], $0
	inc a
	jp .loop

.quit
	pop af
	call GetSRAMBank
	ret

Func_696f3:
	push hl
	add sp, -$5e
	ld hl, sp+$5e
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld c, l
	ld b, h
	push bc
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $62
	read_hl_from_sp_plus $62
	ld e, [hl]
	ld hl, sp+$8
	ld [hl], e
	read_hl_from_sp_plus $62
	inc hl
	ld e, [hl]
	ld hl, sp+$7
	ld [hl], e
	read_hl_from_sp_plus $62
	inc hl
	inc hl
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $64
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$9
	ld [hl], a
	ld hl, $b
	add hl, bc
	ld a, [hl]
	ld hl, $9
	add hl, bc
	ld a, [hl]
	ld hl, sp+$8
	ld [hl], a
	ld hl, $5
	add hl, bc
	ld a, [hl]
	ld hl, sp+$7
	ld [hl], a
	ld hl, $d
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $f
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$7
	ld l, [hl]
	ld h, a
	call Func_680f6
	set_farcall_addrs_hli Func_17863
	pop bc
	push bc
	ld l, c
	ld h, b
	call FarCall
	pop bc
	ld hl, sp+$3
	ld e, [hl]
	ld d, $0
	ld hl, $b
	add hl, bc
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$6
	ld a, [hl]
	add $2
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$5
	ld a, [hl]
	inc a
	ld e, a
	ld a, [bc]
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$1
	add [hl]
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_69812
	xor a
Func_697b2: ; 697b2 (1a:57b2)
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_6980f
	push de
	push af
	ld hl, sp+$8
	ld a, [hl]
	call SetStringStartState
	ld hl, sp+$4
	ld a, [hl]
	ld [wFarCallDestBank], a
	pop af
	pop de
	push af
	push de
	read_hl_from_sp_plus $d
	reg16swap de, hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$d
	ld bc, $2
	call FarCopyVideoData
	ld hl, sp+$4
	ld a, [hl]
	ld [wFarCallDestBank], a
	ld bc, $3f
	read_hl_from_sp_plus $f
	reg16swap de, hl
	ld hl, sp+$23
	call FarCopyVideoData
	ld hl, sp+$23
	push hl
	ld hl, Data_698e2
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
	ld a, e
	add $2
	ld e, a
	pop af
	inc a
	jp Func_697b2

Func_6980f: ; 6980f (1a:580f)
	jp Func_69878

Func_69812: ; 69812 (1a:5812)
	ld hl, sp+$1
	ld c, [hl]
Func_69815: ; 69815 (1a:5815)
	ld hl, sp+$1
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	ld l, a
	ld a, c
	cp l
	jp nc, Func_69878
	push de
	push bc
	ld hl, sp+$8
	ld a, [hl]
	call SetStringStartState
	ld hl, sp+$4
	ld a, [hl]
	ld [wFarCallDestBank], a
	pop bc
	pop de
	push bc
	push de
	read_hl_from_sp_plus $d
	reg16swap de, hl
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$d
	ld bc, $2
	call FarCopyVideoData
	ld hl, sp+$4
	ld a, [hl]
	ld [wFarCallDestBank], a
	ld bc, $3f
	read_hl_from_sp_plus $f
	reg16swap de, hl
	ld hl, sp+$23
	call FarCopyVideoData
	ld hl, sp+$23
	push hl
	ld hl, Data_698e5
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
	ld a, e
	add $2
	ld e, a
	pop bc
	inc c
	jp Func_69815

Func_69878: ; 69878 (1a:5878)
	ld de, $19
	ld a, $3
	call GetBanks_1a
	push af
	ld hl, $c980
	reg16swap de, hl
	ld hl, sp+$d
	ld bc, $5
	call FarCopyVideoData
	pop af
	call GetSRAMBank
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$b
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld de, Data_698e8
	ld hl, -1
	call PlaceStringDEatCoordHL
	ld de, Data_698f0
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $60
	reg16swap de, hl
	ret

Data_698e2:
	TX_CALL
	db $0

Data_698e5:
	TX_CALL
	db $0

Data_698e8:
	db "(しゃちょう)", $0

Data_698f0:
	db "(こﾞようけんは なんてﾞすか)?", $0

Func_69902:
	push hl
	add sp, -$18
	ld hl, sp+$18
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, $19
	ld a, $3
	call GetBanks_1a
	ld l, a
	push hl
	ld bc, $0
	ld l, c
	ld h, b
	call WriteHLToSPPlus6
	xor a
Func_6991e: ; 6991e (1a:591e)
	cp $5
	jp nc, Func_699a3
	push af
	push bc
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$b
	add hl, de
	ld bc, $0
	ld [hl], c
	inc hl
	ld [hl], b
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld l, a
	ld h, $0
	add hl, hl
	ld de, wcb3f
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld l, a
	ld h, $0
	add hl, hl
	ld de, wcb49
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus10
	add hl, bc
	call WriteHLToSPPlus10
	pop bc
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, bc
	ld c, l
	ld b, h
	pop af
	inc a
	jp Func_6991e

Func_699a3: ; 699a3 (1a:59a3)
	read_hl_from wcb53
	call WriteHLToSPPlus4
	read_hl_from wcb55
	reg16swap de, hl
	ld a, [wcb57]
	pop hl
	push de
	push af
	push bc
	ld a, l
	call GetSRAMBank
	xor a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_101be
	ld bc, $81
	ld de, $14
	ld hl, $2
	call FarCall
	ld bc, $81
	ld de, $14
	ld hl, $c
	call FarCall
	ld de, Data_69b31
	ld hl, $100
	call PlaceStringDEatCoordHL
	ld de, Data_69b39
	ld hl, $103
	call PlaceStringDEatCoordHL
	ld de, Data_69b3f
	ld hl, $105
	call PlaceStringDEatCoordHL
	ld de, Data_69b47
	ld hl, $107
	call PlaceStringDEatCoordHL
	ld de, Data_69b4f
	ld hl, $109
	call PlaceStringDEatCoordHL
	ld de, Data_69b56
	ld hl, $10b
	call PlaceStringDEatCoordHL
	ld de, Data_69b5d
	ld hl, $900
	call PlaceStringDEatCoordHL
	ld de, Data_69b62
	ld hl, $e00
	call PlaceStringDEatCoordHL
	xor a
Func_69a38: ; 69a38 (1a:5a38)
	cp $5
	jp nc, Func_69a7d
	push af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$17
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld de, $803
	add hl, de
	ld de, $3
	call Func_2230
	pop af
	push af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld l, a
	ld h, $0
	add hl, hl
	ld de, $d03
	add hl, de
	ld de, $3
	call Func_2230
	pop af
	inc a
	jp Func_69a38

Func_69a7d: ; 69a7d (1a:5a7d)
	call GetHLAtSPPlus10
	ld c, l
	ld b, h
	ld de, $1
	ld hl, $a01
	call Func_2230
	pop bc
	ld de, $1
	ld hl, $f01
	call Func_2230
	ld a, BANK(GFX_58400)
	ld [wFarCallDestBank], a
	ld bc, $400
	ld de, GFX_58400
	ld hl, $8a00
	call FarRequestVideoData
	pop af
	cp $1
	jp nz, Func_69ae7
	ld hl, sp+$6
	ld [hl], $a0
	ld e, $0
Func_69ab2: ; 69ab2 (1a:5ab2)
	ld a, e
	cp $8
	jp nc, Func_69ae7
	ld c, $0
Func_69aba: ; 69aba (1a:5aba)
	ld a, c
	cp $8
	jp nc, Func_69ae3
	push de
	ld hl, sp+$8
	ld a, [hl]
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	decoord 0, 13
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld [hl], a
	inc c
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	pop de
	jp Func_69aba

Func_69ae3: ; 69ae3 (1a:5ae3)
	inc e
	jp Func_69ab2

Func_69ae7: ; 69ae7 (1a:5ae7)
	ld de, Data_69b67
	ld hl, $80d
	call PlaceStringDEatCoordHL
	pop bc
	ld de, $4
	ld hl, $d0e
	call Func_2230
	ld hl, Data_69b78
	push hl
	call PlaceString
	pop bc
	pop hl
	push hl
	ld c, l
	ld b, h
	ld de, $3
	ld hl, $811
	call Func_2230
	ld hl, Data_69b7a
	push hl
	call PlaceString
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $1a
	reg16swap de, hl
	ret

Data_69b31:
	db "(せいせきL)", $0

Data_69b39:
	db "ハﾞトラー", $0

Data_69b3f:
	db "シﾞャンハﾟー", $0

Data_69b47:
	db "スヒﾟータﾞー", $0

Data_69b4f:
	db "シールタﾞー", $0

Data_69b56:
	db "ハﾟンチャー", $0

Data_69b5d:
	db "(かち)", $0

Data_69b62:
	db "(まけ)", $0

Data_69b67:
	db "(おうしﾞゃにおくる) ヘﾞルト", $0

Data_69b78:
	db "p", $0

Data_69b7a:
	db "(れんしょうちゅう)!", $0

Func_69b86: ; 69b86 (1a:5b86)
	callba_hli Func_17470
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_68096)
	ld de, Data_68096
	ld hl, Data_6805d
	call FarCall
	callba_hli Func_17488
	ret

Func_69bb9:
	push bc
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	ld a, [hl]
	ld hl, sp+$2
	ld [hl], a
	ld l, e
	ld h, d
	inc hl
	inc hl
	ld l, [hl]
	push hl
	reg16swap de, hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	set_farcall_addrs_hli Func_17e95
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call FarCall
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld de, Data_69c49
	ld hl, $305
	call PlaceStringDEatCoordHL
	ld de, Data_69c50
	ld hl, $307
	call PlaceStringDEatCoordHL
	ld de, Data_69c57
	ld hl, $309
	call PlaceStringDEatCoordHL
	ld de, Data_69c5d
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_69c6a
	ld hl, $110
	call PlaceStringDEatCoordHL
	set_farcall_addrs_hli Func_17863
	pop hl
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	ret

Data_69c49:
	db "(こうかん)", $0

Data_69c50:
	db "(あけﾞる)", $0

Data_69c57:
	db "(もらう)", $0

Data_69c5d:
	db "キッス(てﾞ おこなう)", $0

Data_69c6a:
	db "モートﾞ(を えらんてﾞくたﾞさい)", $0

Func_69c7d:
	push bc
	push bc
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$4
	ld [hl], a
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	pop hl
	push hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	inc de
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	pop hl
	push hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld e, [hl]
	pop hl
	push hl
	inc hl
	inc hl
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld a, c
	ld [wc307], a
	pop hl
	ld a, c
	sub $2
	or b
	jp z, Func_69cff
	ld a, c
	dec a
	or b
	jp z, Func_69cc9
	ld a, c
	or b
	jp nz, Func_69d0a
Func_69cc9: ; 69cc9 (1a:5cc9)
	push de
	ld hl, sp+$3
	ld e, [hl]
	ld d, $0
	inc de
	ld l, c
	ld h, b
	add hl, hl
	add hl, de
	ld e, l
	ld hl, sp+$4
	ld a, [hl]
	inc a
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_69d10
	push hl
	call PlaceString
	pop bc
	pop bc
	pop de
	ld l, e
	push hl
	ld hl, sp+$2
	ld c, [hl]
	ld hl, sp+$3
	ld e, [hl]
	ld hl, sp+$4
	ld a, [hl]
	call Func_3ca1
	pop bc
	call Func_69d13
	jp Func_69d0a

Func_69cff: ; 69cff (1a:5cff)
	push hl
	call Func_1fbe
	pop hl
	call Func_6a0e9
	call Func_2009
Func_69d0a: ; 69d0a (1a:5d0a)
	ld hl, $8000
	pop bc
	pop bc
	ret

Data_69d10:
	TX_STACK
	db $0

Func_69d13: ; 69d13 (1a:5d13)
	call Func_1fbe
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_680c4)
	ld de, Data_680c4
	ld hl, Data_680a5
	call FarCall
	call Func_2009
	ret

Func_69d30: ; 69d30 (1a:5d30)
	jpba_hli Func_1c3b

Func_69d3e: ; 69d3e (1a:5d3e)
	jpba_hli Func_1c83

Func_69d4c: ; 69d4c (1a:5d4c)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7882
	pop bc
	pop de
	pop hl
	jp FarCall

Func_69d60: ; 69d60 (1a:5d60)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_790f
	pop bc
	pop de
	pop hl
	jp FarCall

Func_69d74:
	push hl
	add sp, -$7c
	ld hl, sp+$7c
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $7e
	read_hl_from_sp_plus $7e
	inc hl
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from_sp_plus $7e
	inc hl
	inc hl
	inc hl
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, [bc]
	ld hl, sp+$3
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	ld hl, sp+$2
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	inc hl
	ld e, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$1
	ld [hl], $0
	ld c, a
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call Func_680f6
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld de, Data_69ed2
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, $19
	ld a, $3
	call GetBanks_1a
	push af
	ld hl, sp+$2
	ld [hl], $0
Func_69ddb: ; 69ddb (1a:5ddb)
	ld hl, sp+$2
	ld a, [hl]
	cp $4
	jp nc, Func_69e3b
	ld hl, sp+$2
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_69e31
	set_farcall_addrs_hli Func_15ad6
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, sp+$6
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	inc h
	ld c, $6
	call FarCall
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
Func_69e31: ; 69e31 (1a:5e31)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_69ddb

Func_69e3b: ; 69e3b (1a:5e3b)
	pop af
	call GetSRAMBank
	ld hl, sp+$0
	ld [hl], $0
Func_69e43: ; 69e43 (1a:5e43)
	ld hl, sp+$0
	ld a, [hl]
	ld hl, sp+$1
	cp [hl]
	jp nc, Func_69e88
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	ld de, $1e
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, sp+$4
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	inc hl
	inc hl
	inc hl
	reg16swap de, hl
	ld hl, $c
	call FarCall
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_69e43

Func_69e88: ; 69e88 (1a:5e88)
	ld hl, sp+$1
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $7e
	ld de, $7
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	read_hl_from_sp_plus $7e
	ld de, $9
	add hl, de
	ld de, $4
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli Func_17863
	read_hl_from_sp_plus $7e
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	reg16swap de, hl
	add sp, $7e
	reg16swap de, hl
	ret

Data_69ed2:
	db "ロホﾞホﾟン(を) (えらんてﾞね)", $0

Func_69ee5: ; 69ee5 (1a:5ee5)
	push hl
	ld a, $b
	call OverworldPlaySong
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld c, $e
Func_69ef7: ; 69ef7 (1a:5ef7)
	pop hl
	push hl
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_69f1d
	push bc
	call GetHLAtSPPlus4
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	inc h
	call PlaceStringDEatCoordHL
	call GetHLAtSPPlus4
	inc hl
	inc hl
	call WriteHLToSPPlus4
	pop bc
	ld a, c
	add $2
	ld c, a
	jp Func_69ef7

Func_69f1d: ; 69f1d (1a:5f1d)
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
Func_69f29: ; 69f29 (1a:5f29)
	call CheckButton
	and $30
	jp z, Func_69f29
	ld hl, -1
	pop bc
	ret

Func_69f36: ; 69f36 (1a:5f36)
	push hl
	pop hl
	push hl
	ld de, $e
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop hl
	push hl
	ld de, $c
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $12
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	pop hl
	push hl
	ld de, $10
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop hl
	push hl
	ld de, $16
	add hl, de
	ld [hl], $0
	pop bc
	ret

Func_69f65: ; 69f65 (1a:5f65)
	push af
	xor a
Func_69f67: ; 69f67 (1a:5f67)
	cp $2
	jp nc, Func_69f86
	push af
	set_farcall_addrs_hli Func_53a0d
	pop af
	push af
	ld e, a
	ld hl, sp+$3
	ld a, [hl]
	call FarCall
	pop af
	inc a
	jp Func_69f67

Func_69f86: ; 69f86 (1a:5f86)
	pop bc
	ret

Pointers_69f88:
	dw Data_69f8c
	dw $0

Data_69f8c:
	db "(つうしん) エラー", $0

Pointers_69f97:
	dw Data_69f9b
	dw $0

Data_69f9b:
	db "モートﾞ(かﾞ ちかﾞうよ)", $0

Pointers_69faa:
	dw Data_69fb0
	dw Data_69fc3
	dw $0

Data_69fb0:
	db "ハﾟーティー(かﾞ いなくなるから)", $0

Data_69fc3:
	db "(あけﾞられないよ)", $0

Pointers_69fce:
	dw Data_69fd4
	dw Data_69fe5
	dw $0

Data_69fd4:
	db "(あいての)ハﾟーティー(かﾞ)", $0

Data_69fe5:
	db "(いなくなるのてﾞ もらえないよ)", $0

Pointers_69ff7:
	dw Data_69ffd
	dw Data_6a00e
	dw $0

Data_69ffd:
	db "(あいての)ハﾟーティー(かﾞ)", $0

Data_6a00e:
	db "(いっはﾟいなのてﾞ あけﾞられないよ)", $0

Pointers_6a023:
	dw Data_6a029
	dw Data_6a03e
	dw $0

Data_6a029:
	db "ハﾟーティー(かﾞ いっはﾟいなのてﾞ)", $0

Data_6a03e:
	db "(もらえないよ)", $0

Pointers_6a047:
	dw Data_6a04d
	dw Data_6a05b
	dw $0

Data_6a04d:
	db "(この)ロホﾞホﾟン(は)", $0

Data_6a05b:
	db "(こうかんてﾞきないよ)", $0

Pointers_6a068:
	dw Data_6a06e
	dw Data_6a07c
	dw $0

Data_6a06e:
	db "(この)ロホﾞホﾟン(は)", $0

Data_6a07c:
	db "(あけﾞられないよ)", $0

Pointers_6a087:
	dw Data_6a08d
	dw Data_6a09b
	dw $0

Data_6a08d:
	db "(この)ロホﾞホﾟン(は)", $0

Data_6a09b:
	db "(もらえないよ)", $0

Pointers_6a0a4:
	dw Data_6a0aa
	dw Data_6a0bb
	dw $0

Data_6a0aa:
	db "(いきてる)ロホﾞホﾟン(かﾞ)", $0

Data_6a0bb:
	db "(いなくなるよ)", $0

Pointers_6a0c4:
	dw Data_6a0c8
	dw $0

Data_6a0c8:
	db "(もらえないよ)", $0

Pointers_6a0d1:
	dw Data_6a0d5
	dw $0

Data_6a0d5:
	db "(せいしﾞょうに しゅうりょうしたよ)", $0

Func_6a0e9: ; 6a0e9 (1a:60e9)
	push hl
	add sp, -$5c
	ld hl, sp+$5c
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld a, [hSRAMBank]
	write_hl_to_sp_plus $5d
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	xor a
	call OverworldPlaySong
	set_farcall_addrs_hli Func_52d58
	ld hl, sp+$11
	call FarCall
	ld hl, sp+$8
	ld [hl], a
	ld hl, sp+$1
	ld [hl], $0
Func_6a11f: ; 6a11f (1a:611f)
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp nc, Func_6a141
	ld hl, sp+$1
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_6a137
	jp Func_6a141

Func_6a137: ; 6a137 (1a:6137)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_6a11f

Func_6a141: ; 6a141 (1a:6141)
	callba_hli Func_50d27
	ld hl, sp+$c
	ld [hl], a
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld de, Data_6aa8f
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_6aaa2
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3bc5
	pop bc
	call Func_69d30
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld de, Data_6aaba
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_6aac6
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3bc5
	pop bc
	ld a, [wc326]
	cp $80
	jp nz, Func_6a1cb
	call NextOverworldFrame
Func_6a1b0: ; 6a1b0 (1a:61b0)
	ld a, [wJoyPressed]
	and $20
	jp nz, Func_6a1b0
	call Func_69d3e
	or a
	jp z, Func_6a1c8
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a1c8: ; 6a1c8 (1a:61c8)
	call CheckButton
Func_6a1cb: ; 6a1cb (1a:61cb)
	ld hl, sp+$a
	ld a, [wc307]
	inc a
	add a
	add a
	add a
	add a
	ld [hl], a
	set_farcall_addrs_hli GetRobotInParty
	read_hl_from_sp_plus $5d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$15
	reg16swap de, hl
	call FarCall
	ld hl, sp+$15
	ld a, [hl]
	ld hl, sp+$6
	ld [hl], a
	ld de, $19
	ld a, $3
	call GetBanks_1a
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$0
	ld [hl], $0
Func_6a207: ; 6a207 (1a:6207)
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nc, Func_6a26a
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld [hl], $ff
	ld hl, sp+$0
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld a, [hl]
	or a
	jp z, Func_6a260
	ld hl, sp+$0
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $c
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp nc, Func_6a260
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld [hl], $1
Func_6a260: ; 6a260 (1a:6260)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6a207

Func_6a26a: ; 6a26a (1a:626a)
	ld hl, sp+$2
	ld a, [hl]
	call GetSRAMBank
	ld a, [wc326]
	cp $80
	jp nz, Func_6a353
	ld c, $0
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a293
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a293: ; 6a293 (1a:6293)
	ld c, $0
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a2ae
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a2ae: ; 6a2ae (1a:62ae)
	ld c, $0
	ld hl, sp+$c
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a2c9
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a2c9: ; 6a2c9 (1a:62c9)
	ld c, $0
	ld hl, sp+$b
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a2e4
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a2e4: ; 6a2e4 (1a:62e4)
	ld c, $0
	ld hl, sp+$8
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a2ff
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a2ff: ; 6a2ff (1a:62ff)
	ld c, $0
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a31a
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a31a: ; 6a31a (1a:631a)
	ld c, $0
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a335
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a335: ; 6a335 (1a:6335)
	ld c, $0
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a350
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a350: ; 6a350 (1a:6350)
	jp Func_6a42b

Func_6a353: ; 6a353 (1a:6353)
	ld c, $0
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a36e
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a36e: ; 6a36e (1a:636e)
	ld c, $0
	ld hl, sp+$a
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a389
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a389: ; 6a389 (1a:6389)
	ld c, $0
	ld hl, sp+$b
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a3a4
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a3a4: ; 6a3a4 (1a:63a4)
	ld c, $0
	ld hl, sp+$c
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a3bf
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a3bf: ; 6a3bf (1a:63bf)
	ld c, $0
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a3da
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a3da: ; 6a3da (1a:63da)
	ld c, $0
	ld hl, sp+$8
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a3f5
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a3f5: ; 6a3f5 (1a:63f5)
	ld c, $0
	ld hl, sp+$5
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a410
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a410: ; 6a410 (1a:6410)
	ld c, $0
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a42b
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a42b: ; 6a42b (1a:642b)
	ld e, $0
	ld hl, sp+$a
	ld a, [hl]
	cp $10
	jp nz, Func_6a442
	ld hl, sp+$9
	ld a, [hl]
	cp $10
	jp nz, Func_6a442
	ld e, $1
	jp Func_6a469

Func_6a442: ; 6a442 (1a:6442)
	ld hl, sp+$a
	ld a, [hl]
	cp $20
	jp nz, Func_6a457
	ld hl, sp+$9
	ld a, [hl]
	cp $30
	jp nz, Func_6a457
	ld e, $1
	jp Func_6a469

Func_6a457: ; 6a457 (1a:6457)
	ld hl, sp+$a
	ld a, [hl]
	cp $30
	jp nz, Func_6a469
	ld hl, sp+$9
	ld a, [hl]
	cp $20
	jp nz, Func_6a469
	ld e, $1
Func_6a469: ; 6a469 (1a:6469)
	inc e
	dec e
	jp nz, Func_6a477
	ld hl, Pointers_69f97
	call Func_69ee5
	jp Func_6aa84

Func_6a477: ; 6a477 (1a:6477)
	ld e, $0
	ld hl, sp+$a
	ld a, [hl]
	cp $30
	jp z, Func_6a93f
	cp $20
	jp z, Func_6a7ee
	cp $10
	jp nz, Func_6aa6d
	ld a, [wc326]
	cp $80
	jp nz, Func_6a62a
	ld hl, sp+$8
	ld a, [hl]
	cp $4
	jp nz, Func_6a4c4
	walle 16
	ld hl, sp+$5
	ld a, [hl]
	cp $ab
	jp c, Func_6a4c4
	ld hl, sp+$5
	ld a, [hl]
	cp $af
	jp nc, Func_6a4c4
	ld hl, Pointers_6a047
	call Func_69ee5
	jp Func_6aa84

Func_6a4c4: ; 6a4c4 (1a:64c4)
	ld hl, sp+$7
	ld a, [hl]
	cp $4
	jp nz, Func_6a4f5
	walle 16
	ld hl, sp+$6
	ld a, [hl]
	cp $ab
	jp c, Func_6a4f5
	ld hl, sp+$6
	ld a, [hl]
	cp $af
	jp nc, Func_6a4f5
	ld hl, Pointers_6a047
	call Func_69ee5
	jp Func_6aa84

Func_6a4f5: ; 6a4f5 (1a:64f5)
	ld c, $0
	ld hl, sp+$38
	reg16swap de, hl
	ld hl, $23
	call Func_69d4c
	or a
	jp z, Func_6a510
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a510: ; 6a510 (1a:6510)
	ld c, $0
	ld hl, sp+$15
	reg16swap de, hl
	ld hl, $23
	call Func_69d60
	or a
	jp z, Func_6a52b
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a52b: ; 6a52b (1a:652b)
	ld hl, sp+$6
	ld a, [hl]
	cp $ab
	jp c, Func_6a5a5
	ld hl, sp+$6
	ld a, [hl]
	cp $af
	jp nc, Func_6a5a5
	ld a, $1
	call GetSRAMBank_ReadOnly
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	debgcoord 31, 21
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $0
	call Func_69d60
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a570
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a570: ; 6a570 (1a:6570)
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $7b84
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $0
	call Func_69d60
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a5a5
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a5a5: ; 6a5a5 (1a:65a5)
	ld hl, sp+$5
	ld a, [hl]
	cp $ab
	jp c, Func_6a627
	ld hl, sp+$5
	ld a, [hl]
	cp $af
	jp nc, Func_6a627
	ld a, $1
	call GetSRAMBank
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	ld de, $ba24
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $0
	call Func_69d4c
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a5ea
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a5ea: ; 6a5ea (1a:65ea)
	ld a, $2
	call GetSRAMBank
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $b29f
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $0
	call Func_69d4c
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a61f
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a61f: ; 6a61f (1a:661f)
	ld hl, sp+$1
	ld a, [hl]
	add $ab
	ld hl, sp+$38
	ld [hl], a
Func_6a627: ; 6a627 (1a:6627)
	jp Func_6a7be

Func_6a62a: ; 6a62a (1a:662a)
	ld hl, sp+$7
	ld a, [hl]
	cp $4
	jp nz, Func_6a65b
	walle 16
	ld hl, sp+$6
	ld a, [hl]
	cp $ab
	jp c, Func_6a65b
	ld hl, sp+$6
	ld a, [hl]
	cp $af
	jp nc, Func_6a65b
	ld hl, Pointers_6a047
	call Func_69ee5
	jp Func_6aa84

Func_6a65b: ; 6a65b (1a:665b)
	ld hl, sp+$8
	ld a, [hl]
	cp $4
	jp nz, Func_6a68c
	walle 16
	ld hl, sp+$5
	ld a, [hl]
	cp $ab
	jp c, Func_6a68c
	ld hl, sp+$5
	ld a, [hl]
	cp $af
	jp nc, Func_6a68c
	ld hl, Pointers_6a047
	call Func_69ee5
	jp Func_6aa84

Func_6a68c: ; 6a68c (1a:668c)
	ld c, $0
	ld hl, sp+$15
	reg16swap de, hl
	ld hl, $23
	call Func_69d60
	or a
	jp z, Func_6a6a7
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a6a7: ; 6a6a7 (1a:66a7)
	ld c, $0
	ld hl, sp+$38
	reg16swap de, hl
	ld hl, $23
	call Func_69d4c
	or a
	jp z, Func_6a6c2
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a6c2: ; 6a6c2 (1a:66c2)
	ld hl, sp+$5
	ld a, [hl]
	cp $ab
	jp c, Func_6a744
	ld hl, sp+$5
	ld a, [hl]
	cp $af
	jp nc, Func_6a744
	ld a, $1
	call GetSRAMBank
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	ld de, $ba24
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $0
	call Func_69d4c
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a707
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a707: ; 6a707 (1a:6707)
	ld a, $2
	call GetSRAMBank
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $b29f
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $0
	call Func_69d4c
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a73c
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a73c: ; 6a73c (1a:673c)
	ld hl, sp+$1
	ld a, [hl]
	add $ab
	ld hl, sp+$38
	ld [hl], a
Func_6a744: ; 6a744 (1a:6744)
	ld hl, sp+$6
	ld a, [hl]
	cp $ab
	jp c, Func_6a7be
	ld hl, sp+$6
	ld a, [hl]
	cp $af
	jp nc, Func_6a7be
	ld a, $1
	call GetSRAMBank_ReadOnly
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	debgcoord 31, 21
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $0
	call Func_69d60
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a789
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a789: ; 6a789 (1a:6789)
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $7b84
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $0
	call Func_69d60
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a7be
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a7be: ; 6a7be (1a:67be)
	ld hl, sp+$38
	call Func_69f36
	set_farcall_addrs_hli Func_6b74
	read_hl_from_sp_plus $5d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$38
	reg16swap de, hl
	call FarCall
	ld hl, sp+$38
	ld a, [hl]
	call Func_69f65
	ld hl, sp+$15
	ld a, [hl]
	call Func_69f65
	jp Func_6aa6d

Func_6a7ee: ; 6a7ee (1a:67ee)
	ld hl, sp+$c
	ld a, [hl]
	cp $1
	jp nz, Func_6a7ff
	ld hl, Pointers_69faa
	call Func_69ee5
	jp Func_6aa84

Func_6a7ff: ; 6a7ff (1a:67ff)
	ld hl, sp+$b
	ld a, [hl]
	cp $4
	jp nz, Func_6a810
	ld hl, Pointers_69ff7
	call Func_69ee5
	jp Func_6aa84

Func_6a810: ; 6a810 (1a:6810)
	ld hl, sp+$4
	ld [hl], $ff
	ld c, $0
Func_6a816: ; 6a816 (1a:6816)
	ld a, c
	cp $4
	jp nc, Func_6a840
	ld a, [wc2e9]
	cp c
	jp z, Func_6a83c
	ld e, c
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld a, [hl]
	cp $ff
	jp z, Func_6a83c
	ld e, c
	ld d, $0
	ld hl, sp+$d
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	jp Func_6a840

Func_6a83c: ; 6a83c (1a:683c)
	inc c
	jp Func_6a816

Func_6a840: ; 6a840 (1a:6840)
	ld c, $0
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_69d60
	or a
	jp z, Func_6a85b
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a85b: ; 6a85b (1a:685b)
	ld hl, sp+$4
	ld a, [hl]
	cp $ff
	jp nz, Func_6a86c
	ld hl, Pointers_6a0a4
	call Func_69ee5
	jp Func_6aa84

Func_6a86c: ; 6a86c (1a:686c)
	ld hl, sp+$7
	ld a, [hl]
	cp $4
	jp nz, Func_6a88d
	ld hl, sp+$6
	ld a, [hl]
	cp $ab
	jp c, Func_6a88d
	ld hl, sp+$6
	ld a, [hl]
	cp $af
	jp nc, Func_6a88d
	ld hl, Pointers_6a068
	call Func_69ee5
	jp Func_6aa84

Func_6a88d: ; 6a88d (1a:688d)
	ld c, $0
	ld hl, sp+$15
	reg16swap de, hl
	ld hl, $23
	call Func_69d60
	or a
	jp z, Func_6a8a8
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a8a8: ; 6a8a8 (1a:68a8)
	ld hl, sp+$6
	ld a, [hl]
	cp $ab
	jp c, Func_6a922
	ld hl, sp+$6
	ld a, [hl]
	cp $af
	jp nc, Func_6a922
	ld a, $1
	call GetSRAMBank_ReadOnly
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	debgcoord 31, 21
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $0
	call Func_69d60
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a8ed
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a8ed: ; 6a8ed (1a:68ed)
	ld a, $2
	call GetSRAMBank_ReadOnly
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $7b84
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $0
	call Func_69d60
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6a922
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a922: ; 6a922 (1a:6922)
	set_farcall_addrs_hli Func_31bbe
	ld c, $0
	read_hl_from_sp_plus $5d
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld e, $1
	call FarCall
	jp Func_6aa6d

Func_6a93f: ; 6a93f (1a:693f)
	ld hl, sp+$b
	ld a, [hl]
	cp $1
	jp nz, Func_6a950
	ld hl, Pointers_69fce
	call Func_69ee5
	jp Func_6aa84

Func_6a950: ; 6a950 (1a:6950)
	ld hl, sp+$c
	ld a, [hl]
	cp $4
	jp nz, Func_6a961
	ld hl, Pointers_6a023
	call Func_69ee5
	jp Func_6aa84

Func_6a961: ; 6a961 (1a:6961)
	ld c, $0
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call Func_69d4c
	or a
	jp z, Func_6a97c
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a97c: ; 6a97c (1a:697c)
	ld hl, sp+$3
	ld a, [hl]
	cp $ff
	jp nz, Func_6a98d
	ld hl, Pointers_6a0c4
	call Func_69ee5
	jp Func_6aa84

Func_6a98d: ; 6a98d (1a:698d)
	ld hl, sp+$8
	ld a, [hl]
	cp $4
	jp nz, Func_6a9ae
	ld hl, sp+$5
	ld a, [hl]
	cp $ab
	jp c, Func_6a9ae
	ld hl, sp+$5
	ld a, [hl]
	cp $af
	jp nc, Func_6a9ae
	ld hl, Pointers_6a087
	call Func_69ee5
	jp Func_6aa84

Func_6a9ae: ; 6a9ae (1a:69ae)
	ld c, $0
	ld hl, sp+$38
	reg16swap de, hl
	ld hl, $23
	call Func_69d4c
	or a
	jp z, Func_6a9c9
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6a9c9: ; 6a9c9 (1a:69c9)
	ld hl, sp+$5
	ld a, [hl]
	cp $ab
	jp c, Func_6aa4b
	ld hl, sp+$5
	ld a, [hl]
	cp $af
	jp nc, Func_6aa4b
	ld a, $1
	call GetSRAMBank
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	ld de, $ba24
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $0
	call Func_69d4c
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6aa0e
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6aa0e: ; 6aa0e (1a:6a0e)
	ld a, $2
	call GetSRAMBank
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	ld de, $351
	call MultiplyHLbyDE
	ld de, $b29f
	add hl, de
	reg16swap de, hl
	ld hl, $351
	ld c, $0
	call Func_69d4c
	push af
	ld hl, sp+$4
	ld a, [hl]
	call GetSRAMBank
	pop af
	or a
	jp z, Func_6aa43
	ld hl, Pointers_69f88
	call Func_69ee5
	jp Func_6aa84

Func_6aa43: ; 6aa43 (1a:6a43)
	ld hl, sp+$1
	ld a, [hl]
	add $ab
	ld hl, sp+$38
	ld [hl], a
Func_6aa4b: ; 6aa4b (1a:6a4b)
	ld hl, sp+$38
	call Func_69f36
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$38
	reg16swap de, hl
	ld hl, sp+$c
	ld a, [hl]
	call FarCall
	ld hl, sp+$38
	ld a, [hl]
	call Func_69f65
Func_6aa6d: ; 6aa6d (1a:6a6d)
	callba_hli SaveGame
	ld hl, Pointers_6a0d1
	call Func_69ee5
	ld hl, -1
Func_6aa84: ; 6aa84 (1a:6a84)
	reg16swap de, hl
	add sp, $5e
	reg16swap de, hl
	ret

Data_6aa8f:
	db "ケﾞームホﾞーイ(を ちかつﾞけて)", $0

Data_6aaa2:
	db "(とﾞちらかかﾞ) Bホﾞタン(を おしてね)", $0

Data_6aaba:
	db "(ちゅうしするときは)", $0

Data_6aac6:
	db "Bホﾞタン(を おしてね)", $0

Func_6aad4::
	push af
	push bc
	ld de, $19
	ld a, $3
	call GetBanks_1a
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$1
	ld [hl], $0
Func_6aae5: ; 6aae5 (1a:6ae5)
	ld hl, sp+$1
	ld a, [hl]
	cp $4
	jp nc, Func_6ab1e
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$1
	ld l, [hl]
	ld h, 0
	get_party_bot
	cp [hl]
	jp nz, Func_6ab14
	ld hl, sp+$0
	ld a, [hl]
	call GetSRAMBank
	ld hl, sp+$1
	ld a, [hl]
	jp Func_6ab26

Func_6ab14: ; 6ab14 (1a:6b14)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_6aae5

Func_6ab1e: ; 6ab1e (1a:6b1e)
	ld hl, sp+$0
	ld a, [hl]
	call GetSRAMBank
	ld a, $ff
Func_6ab26: ; 6ab26 (1a:6b26)
	pop bc
	pop bc
	ret

Func_6ab29:: ; 6ab29 (1a:6b29)
	push af
	push bc
	ld de, $19
	ld a, $3
	call GetBanks_1a
	push af
	ld hl, sp+$2
	ld [hl], $0
	ld e, $0
Func_6ab3a: ; 6ab3a (1a:6b3a)
	ld a, e
	cp $4
	jp nc, Func_6ab66
	push de
	ld hl, sp+$7
	ld a, [hl]
	ld l, e
	ld h, 0
	get_party_bot
	cp [hl]
	jp nz, Func_6ab61
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
Func_6ab61: ; 6ab61 (1a:6b61)
	pop de
	inc e
	jp Func_6ab3a

Func_6ab66: ; 6ab66 (1a:6b66)
	pop af
	call GetSRAMBank
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	pop bc
	ret

Func_6ab70:
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $7
	or h
	jp z, Func_6ac24
	ld a, l
	sub $6
	or h
	jp z, Func_6ac1e
	ld a, l
	sub $5
	or h
	jp z, Func_6ac0b
	ld a, l
	sub $4
	or h
	jp z, Func_6abf7
	ld a, l
	sub $3
	or h
	jp z, Func_6abe3
	ld a, l
	sub $2
	or h
	jp z, Func_6abcf
	ld a, l
	dec a
	or h
	jp z, Func_6abbb
	ld a, l
	or h
	jp nz, Func_6ac27
	jp Func_6ac27

Func_6abbb: ; 6abbb (1a:6bbb)
	set_farcall_addrs_hli Func_14675
	ld hl, $0
	call FarCall
	jp Func_6ac27

Func_6abcf: ; 6abcf (1a:6bcf)
	set_farcall_addrs_hli Func_14b44
	ld hl, $0
	call FarCall
	jp Func_6ac27

Func_6abe3: ; 6abe3 (1a:6be3)
	set_farcall_addrs_hli Func_14c89
	ld hl, $0
	call FarCall
	jp Func_6ac27

Func_6abf7: ; 6abf7 (1a:6bf7)
	set_farcall_addrs_hli Func_14ca9
	ld hl, $0
	call FarCall
	jp Func_6ac27

Func_6ac0b: ; 6ac0b (1a:6c0b)
	set_farcall_addrs_hli NamingScreen__
	ld a, $1
	call FarCall
	jp Func_6ac27

Func_6ac1e: ; 6ac1e (1a:6c1e)
	call Func_6ac44
	jp Func_6ac27

Func_6ac24: ; 6ac24 (1a:6c24)
	call Func_6b31a
Func_6ac27: ; 6ac27 (1a:6c27)
	ld hl, $8000
	ret

Pointers_6ac2b:
	dw Data_6ac2f
	dw $0

Data_6ac2f:
	db "(これいしﾞょう はけん てﾞきないよ)", $0

Func_6ac44:: ; 6ac44 (1a:6c44)
	push bc
	ld hl, sp+$0
	ld [hl], $ff
	call Func_6ad7c
	or a
	jp nz, Func_6acc5
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_6ac63
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_6ac77
Func_6ac63: ; 6ac63 (1a:6c63)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_6ac77: ; 6ac77 (1a:6c77)
	callba_hli Func_17470
	call Func_1fbe
	xor a
Func_6ac89: ; 6ac89 (1a:6c89)
	cp $4
	jp nc, Func_6ac9b
	ld e, a
	ld d, $0
	ld hl, wc383
	add hl, de
	ld [hl], $ff
	inc a
	jp Func_6ac89

Func_6ac9b: ; 6ac9b (1a:6c9b)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_68020)
	ld de, Data_68020
	ld hl, Data_68001
	call FarCall
	call Func_2009
	callba_hli Func_17488
	jp Func_6ad77

Func_6acc5: ; 6acc5 (1a:6cc5)
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpAttrMapRectangle
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6ac2b)
	ld de, Pointers_6ac2b
	ld hl, $10e
	call FarCall
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop de
	push de
	ld c, e
	ld b, d
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreAttrMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	call Func_680d3
	ld hl, sp+$0
	ld [hl], $0
Func_6ad77: ; 6ad77 (1a:6d77)
	ld hl, sp+$0
	ld a, [hl]
	pop bc
	ret

Func_6ad7c: ; 6ad7c (1a:6d7c)
	ld c, $0
Func_6ad7e: ; 6ad7e (1a:6d7e)
	ld a, c
	cp $3
	jp nc, Func_6ada6
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_6ada2
	ld a, c
	ld [wc387], a
	jp Func_6ada6

Func_6ada2: ; 6ada2 (1a:6da2)
	inc c
	jp Func_6ad7e

Func_6ada6: ; 6ada6 (1a:6da6)
	ld a, c
	cp $3
	jp nz, Func_6adb1
	ld a, $1
	jp Func_6adb2

Func_6adb1: ; 6adb1 (1a:6db1)
	xor a
Func_6adb2: ; 6adb2 (1a:6db2)
	ret

Func_6adb3: ; 6adb3 (1a:6db3)
	push af
	ld a, e
	rrca
	rrca
	rrca
	rrca
	and $f
	ld e, a
	pop af
	cp $b
	jp z, Func_6ae2f
	cp $a
	jp z, Func_6ae2a
	cp $9
	jp z, Func_6ae25
	cp $8
	jp z, Func_6ae20
	cp $7
	jp z, Func_6ae1b
	cp $6
	jp z, Func_6ae16
	cp $5
	jp z, Func_6ae11
	cp $4
	jp z, Func_6ae0c
	cp $3
	jp z, Func_6ae07
	cp $2
	jp z, Func_6ae02
	cp $1
	jp z, Func_6adfd
	or a
	jp nz, Func_6ae45
	ld a, $14
	jp Func_6ae46

Func_6adfd: ; 6adfd (1a:6dfd)
	ld a, $2b
	jp Func_6ae46

Func_6ae02: ; 6ae02 (1a:6e02)
	ld a, $2d
	jp Func_6ae46

Func_6ae07: ; 6ae07 (1a:6e07)
	ld a, $2f
	jp Func_6ae46

Func_6ae0c: ; 6ae0c (1a:6e0c)
	ld a, $2c
	jp Func_6ae46

Func_6ae11: ; 6ae11 (1a:6e11)
	ld a, $31
	jp Func_6ae46

Func_6ae16: ; 6ae16 (1a:6e16)
	ld a, $2e
	jp Func_6ae46

Func_6ae1b: ; 6ae1b (1a:6e1b)
	ld a, $30
	jp Func_6ae46

Func_6ae20: ; 6ae20 (1a:6e20)
	ld a, $12
	jp Func_6ae46

Func_6ae25: ; 6ae25 (1a:6e25)
	ld a, $13
	jp Func_6ae46

Func_6ae2a: ; 6ae2a (1a:6e2a)
	ld a, $11
	jp Func_6ae46

Func_6ae2f: ; 6ae2f (1a:6e2f)
	ld a, e
	cp $1
	jp c, Func_6ae40
	ld a, e
	cp $8
	jp nc, Func_6ae40
	ld a, $16
	jp Func_6ae42

Func_6ae40: ; 6ae40 (1a:6e40)
	ld a, $15
Func_6ae42: ; 6ae42 (1a:6e42)
	jp Func_6ae46

Func_6ae45: ; 6ae45 (1a:6e45)
	xor a
Func_6ae46: ; 6ae46 (1a:6e46)
	ret

Func_6ae47::
	add sp, -$24
	or a
	jp nz, Func_6aed0
	ld hl, sp+$0
	ld [hl], $0
	xor a
Func_6ae52: ; 6ae52 (1a:6e52)
	cp $a8
	jp nc, Func_6ae7b
	push af
	set_farcall_addrs_hli Func_53b1e
	pop af
	push af
	ld e, $1
	call FarCall
	cp $1
	jp nz, Func_6ae76
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
Func_6ae76: ; 6ae76 (1a:6e76)
	pop af
	inc a
	jp Func_6ae52

Func_6ae7b: ; 6ae7b (1a:6e7b)
	ld de, $19
	ld a, $3
	call GetBanks_1a
	ld e, a
	ld a, $1
	ld [wcb57], a
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	write_hl_to wcb55
	ld a, e
	call GetSRAMBank
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$1
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$20
	ld a, [hl]
	or $4
	ld hl, sp+$20
	ld [hl], a
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$1
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	jp Func_6af0a

Func_6aed0: ; 6aed0 (1a:6ed0)
	ld e, $0
Func_6aed2: ; 6aed2 (1a:6ed2)
	ld a, e
	cp $4
	jp nc, Func_6af0a
	push de
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$3
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	pop de
	ld hl, sp+$20
	ld a, [hl]
	and $4
	cp $1
	jp nz, Func_6af06
	ld hl, sp+$20
	ld a, [hl]
	and $b
	ld hl, sp+$20
	ld [hl], a
	jp Func_6af0a

Func_6af06: ; 6af06 (1a:6f06)
	inc e
	jp Func_6aed2

Func_6af0a: ; 6af0a (1a:6f0a)
	add sp, $24
	ret

Func_6af0d:: ; 6af0d (1a:6f0d)
	push af
	inc e
	dec e
	jp nz, Func_6af88
	push de
	set_farcall_addrs_hli Func_4ed70
	pop de
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6af85
	set_farcall_addrs_hli Func_4ed70
	ld e, $2
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6af72
	set_farcall_addrs_hli Func_6f785
	ld a, $1
	call FarCall
	or a
	jp nz, Func_6af6d
	set_farcall_addrs_hli Func_4ed70
	ld e, $0
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	jp Func_6af9b

Func_6af6d: ; 6af6d (1a:6f6d)
	ld a, $ff
	jp Func_6af9b

Func_6af72: ; 6af72 (1a:6f72)
	callba_hli Func_fb205
	ld a, $1
	jp Func_6af9b

Func_6af85: ; 6af85 (1a:6f85)
	jp Func_6af9b

Func_6af88: ; 6af88 (1a:6f88)
	push de
	set_farcall_addrs_hli Func_4ed70
	pop de
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
Func_6af9b: ; 6af9b (1a:6f9b)
	pop bc
	ret

Func_6af9d:
	push hl
	add sp, -$16
	ld hl, sp+$16
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	reg16swap de, hl
	push de
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	ld c, l
	ld b, h
	push bc
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	pop bc
	pop de
	push bc
	push de
	ld a, e
	ld e, $1
	call Func_6810b
	push af
	ld l, $0
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop hl
	pop af
	pop de
	cp $1
	jp nz, Func_6b28f
	push de
	ld de, $19
	ld a, $3
	call GetBanks_1a
	pop de
	push af
	push de
	set_farcall_addrs_hli Func_55f95
	pop de
	push de
	ld hl, sp+$9
	ld c, $0
	call FarCall
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $b
	add hl, de
	ld a, [hl]
	pop de
	push de
	push af
	ld hl, wc9a3
	add hl, de
	ld a, [hl]
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $b
	add hl, de
	ld [hl], a
	pop af
	pop de
	ld hl, wc9a3
	add hl, de
	ld [hl], a
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $9
	add hl, de
	ld e, [hl]
	ld hl, sp+$5
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $a
	add hl, de
	ld e, [hl]
	ld hl, sp+$6
	ld [hl], e
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $8
	add hl, de
	ld [hl], $0
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $9
	add hl, de
	ld [hl], $0
	ld hl, wc2e9
	ld l, [hl]
	ld h, 0
	get_party_bot
	ld de, $a
	add hl, de
	ld [hl], $0
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_6b189
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$4
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6b189
Func_6b13f: ; 6b13f (1a:713f)
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$4
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6b183
	callba_hli Func_1535c
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$4
	ld a, [hl]
	call FarCall
	cp $ff
	jp z, Func_6b180
	jp Func_6b189

Func_6b180: ; 6b180 (1a:7180)
	jp Func_6b186

Func_6b183: ; 6b183 (1a:7183)
	jp Func_6b189

Func_6b186: ; 6b186 (1a:7186)
	jp Func_6b13f

Func_6b189: ; 6b189 (1a:7189)
	ld hl, sp+$5
	ld a, [hl]
	or a
	jp z, Func_6b1f2
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$5
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6b1f2
Func_6b1a8: ; 6b1a8 (1a:71a8)
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$5
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6b1ec
	callba_hli Func_1535c
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$5
	ld a, [hl]
	call FarCall
	cp $ff
	jp z, Func_6b1e9
	jp Func_6b1f2

Func_6b1e9: ; 6b1e9 (1a:71e9)
	jp Func_6b1ef

Func_6b1ec: ; 6b1ec (1a:71ec)
	jp Func_6b1f2

Func_6b1ef: ; 6b1ef (1a:71ef)
	jp Func_6b1a8

Func_6b1f2: ; 6b1f2 (1a:71f2)
	ld hl, sp+$6
	ld a, [hl]
	or a
	jp z, Func_6b25b
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6b25b
Func_6b211: ; 6b211 (1a:7211)
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6b255
	callba_hli Func_1535c
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	cp $ff
	jp z, Func_6b252
	jp Func_6b25b

Func_6b252: ; 6b252 (1a:7252)
	jp Func_6b258

Func_6b255: ; 6b255 (1a:7255)
	jp Func_6b25b

Func_6b258: ; 6b258 (1a:7258)
	jp Func_6b211

Func_6b25b: ; 6b25b (1a:725b)
	pop af
	call GetSRAMBank
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$5
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld de, Data_6b2ff
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $1
	jp Func_6b2a4

Func_6b28f: ; 6b28f (1a:728f)
	push hl
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld de, Data_6b30c
	ld hl, $10e
	call PlaceStringDEatCoordHL
	pop hl
Func_6b2a4: ; 6b2a4 (1a:72a4)
	push hl
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli WaitAorBButtonOverworld_17a44
	pop hl
	pop bc
	push hl
	push bc
	ld a, l
	cp $1
	jp z, Func_6b2d2
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call Func_2323
Func_6b2d2: ; 6b2d2 (1a:72d2)
	pop hl
	call Func_680d3
	pop hl
	ld a, l
	cp $1
	jp nz, Func_6b2f1
	callba_hli Func_15330
	ld hl, rIE
	jp Func_6b2f4

Func_6b2f1: ; 6b2f1 (1a:72f1)
	ld hl, $8000
Func_6b2f4: ; 6b2f4 (1a:72f4)
	reg16swap de, hl
	add sp, $18
	reg16swap de, hl
	ret

Data_6b2ff:
	db "(を そうひﾞしました)", $0

Data_6b30c:
	db "(そうひﾞ てﾞきません)", $0

Func_6b31a:: ; 6b31a (1a:731a)
	push bc
	push bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	call WriteHLToSPPlus4
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	call GetHLAtSPPlus4
	ld de, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpAttrMapRectangle
	ld c, $0
	ld hl, sp+$0
	ld [hl], c
	ld hl, sp+$1
	ld [hl], $0
Func_6b376: ; 6b376 (1a:7376)
	ld hl, sp+$1
	ld a, [hl]
	cp $3
	jp nc, Func_6b442
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_6b438
	ld c, $1
	push bc
	ld hl, sp+$3
	ld a, [hl]
	call Func_6bdfa
	pop bc
	cp $ff
	jp z, Func_6b3cb
	or a
	jp nz, Func_6b438
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld [hl], $2
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6b438

Func_6b3cb: ; 6b3cb (1a:73cb)
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld [hl], $2
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	xor a
Func_6b3e9: ; 6b3e9 (1a:73e9)
	cp $4
	jp nc, Func_6b40c
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $a
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld [hl], $1
	inc a
	jp Func_6b3e9

Func_6b40c: ; 6b40c (1a:740c)
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $e
	add hl, de
	ld [hl], $0
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld [hl], $0
Func_6b438: ; 6b438 (1a:7438)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_6b376

Func_6b442: ; 6b442 (1a:7442)
	inc c
	dec c
	jp nz, Func_6b450
	ld e, $9
	xor a
	call Func_6bbf3
	jp Func_6b468

Func_6b450: ; 6b450 (1a:7450)
	ld hl, sp+$0
	ld a, [hl]
	or a
	jp nz, Func_6b460
	ld e, $1
	xor a
	call Func_6bbf3
	jp Func_6b468

Func_6b460: ; 6b460 (1a:7460)
	ld hl, sp+$0
	ld e, [hl]
	ld a, $a
	call Func_6bbf3
Func_6b468: ; 6b468 (1a:7468)
	ld hl, sp+$0
	ld [hl], $0
	ld c, $0
Func_6b46e: ; 6b46e (1a:746e)
	ld a, c
	cp $3
	jp nc, Func_6b4ae
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $2
	jp nz, Func_6b4aa
	push bc
	ld hl, sp+$2
	ld e, [hl]
	ld a, $b
	call Func_6bbf3
	pop bc
	push bc
	ld a, c
	call GetHLAtSPPlus6
	reg16swap de, hl
	call Func_6b4e8
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	pop bc
Func_6b4aa: ; 6b4aa (1a:74aa)
	inc c
	jp Func_6b46e

Func_6b4ae: ; 6b4ae (1a:74ae)
	ld a, $2
	ld [wc39a], a
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreTileMapRectangle
	call GetHLAtSPPlus4
	ld de, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreAttrMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	call GetHLAtSPPlus4
	call Func_680d3
	pop bc
	pop bc
	ret

Func_6b4e8: ; 6b4e8 (1a:74e8)
	push af
	push de
	add sp, -$62
	ld c, $0
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $a
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_6b558
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $b
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_6b558
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $c
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_6b558
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $d
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_6b558
	ld c, $2
Func_6b558: ; 6b558 (1a:7558)
	push bc
	ld hl, sp+$62
	ld [hl], $0
GetRobotInPartyd: ; 6b55d (1a:755d)
	ld hl, sp+$62
	ld a, [hl]
	cp $4
	jp nc, Func_6b5ec
	ld hl, sp+$62
	ld c, [hl]
	ld b, $0
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $a
	add hl, de
	add hl, bc
	ld a, [hl]
	cp $1
	jp nz, Func_6b5e2
	set_farcall_addrs_hli Func_7dfc
	ld hl, sp+$62
	ld c, [hl]
	ld b, $0
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
	ld hl, $1
	write_hl_to_sp_plus $10
	set_farcall_addrs_hli Func_7db0
	ld hl, sp+$62
	ld c, [hl]
	ld b, $0
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$2
	reg16swap de, hl
	call FarCall
Func_6b5e2: ; 6b5e2 (1a:75e2)
	ld hl, sp+$62
	ld a, [hl]
	inc a
	ld hl, sp+$62
	ld [hl], a
	jp GetRobotInPartyd

Func_6b5ec: ; 6b5ec (1a:75ec)
	pop bc
	push bc
	ld a, c
	cp $2
	jp nz, Func_6b5f9
	ld e, c
	xor a
	call Func_6bbf3
Func_6b5f9: ; 6b5f9 (1a:75f9)
	pop bc
	push bc
	ld a, c
	cp $2
	jp z, Func_6b745
	ld hl, sp+$61
	ld [hl], $0
	ld c, $0
Func_6b607: ; 6b607 (1a:7607)
	ld a, c
	cp $4
	jp nc, Func_6b737
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $a
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld a, [hl]
	cp $1
	jp z, Func_6b6d4
	push bc
	set_farcall_addrs_hli Func_6f1eb
	pop bc
	push bc
	ld e, c
	ld hl, sp+$69
	ld a, [hl]
	call FarCall
	pop bc
	push af
	push bc
	set_farcall_addrs_hli Func_15ad6
	pop bc
	push bc
	ld hl, sp+$47
	push hl
	ld hl, sp+$6d
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $700
	add hl, de
	pop de
	ld c, $6
	call FarCall
	pop bc
	pop af
	push bc
	cp $1
	jp c, Func_6b6d0
	push af
	ld hl, sp+$65
	ld [hl], $1
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$47
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	pop af
	ld l, a
	ld h, $0
	push hl
	ld hl, Data_6ba07
	push hl
	call PlaceString
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld e, $0
	ld a, $4
	call Func_6bbf3
Func_6b6d0: ; 6b6d0 (1a:76d0)
	pop bc
	jp Func_6b733

Func_6b6d4: ; 6b6d4 (1a:76d4)
	push bc
	set_farcall_addrs_hli Func_7dfc
	ld hl, sp+$64
	ld c, [hl]
	ld b, $0
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$4
	reg16swap de, hl
	call FarCall
	ld hl, $1
	write_hl_to_sp_plus $12
	set_farcall_addrs_hli Func_7db0
	ld hl, sp+$64
	ld c, [hl]
	ld b, $0
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$4
	reg16swap de, hl
	call FarCall
	pop bc
Func_6b733: ; 6b733 (1a:7733)
	inc c
	jp Func_6b607

Func_6b737: ; 6b737 (1a:7737)
	ld hl, sp+$61
	ld a, [hl]
	or a
	jp nz, Func_6b745
	ld e, $0
	ld a, $5
	call Func_6bbf3
Func_6b745: ; 6b745 (1a:7745)
	pop bc
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $e
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_6b99e
	ld a, c
	cp $2
	jp z, Func_6b99e
	ld e, $0
	ld a, $6
	call Func_6bbf3
	set_farcall_addrs_hli Func_15ad6
	ld c, $6
	ld hl, sp+$23
	push hl
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $700
	add hl, de
	pop de
	call FarCall
	ld de, $19
	ld a, $3
	call GetBanks_1a
	push af
	set_farcall_addrs_hli Func_15ad6
	ld hl, sp+$67
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $e
	add hl, de
	ld a, [hl]
	cp $3
	jp z, Func_6b81d
	cp $2
	jp z, Func_6b7f6
	cp $1
	jp nz, Func_6b83f
	ld c, $a
	ld hl, sp+$43
	push hl
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $3ff
	add hl, de
	pop de
	call FarCall
	jp Func_6b83f

Func_6b7f6: ; 6b7f6 (1a:77f6)
	ld c, $5
	ld hl, sp+$43
	push hl
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld a, [hl]
	and $3f
	ld l, a
	ld h, $0
	dec hl
	pop de
	call FarCall
	jp Func_6b83f

Func_6b81d: ; 6b81d (1a:781d)
	ld c, $8
	ld hl, sp+$43
	push hl
	ld hl, sp+$69
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	pop de
	call FarCall
Func_6b83f: ; 6b83f (1a:783f)
	pop af
	call GetSRAMBank
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$23
	ld c, l
	ld b, h
	ld de, $e
	ld hl, $1
	call FarCall
	ld hl, Data_6ba15
	push hl
	call PlaceString
	pop bc
	set_farcall_addrs_hli Func_16019
	ld hl, sp+$41
	ld c, l
	ld b, h
	ld de, -1
	ld hl, -1
	call FarCall
	ld hl, Data_6ba1c
	push hl
	call PlaceString
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld e, $0
	ld a, $7
	call Func_6bbf3
	ld a, $2
	ld [wc39a], a
	read_hl_from_sp_plus $64
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreTileMapRectangle
	read_hl_from_sp_plus $64
	ld de, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreAttrMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $e
	add hl, de
	ld a, [hl]
	cp $3
	jp z, Func_6b96d
	cp $2
	jp z, Func_6b939
	cp $1
	jp nz, Func_6b99e
	set_farcall_addrs_hli Func_5a0e0
	ld c, $0
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld a, [hl]
	ld e, $1
	call FarCall
	cp $ff
	jp nz, Func_6b936
	ld e, $0
	ld a, $d
	call Func_6bbf3
Func_6b936: ; 6b936 (1a:7936)
	jp Func_6b99e

Func_6b939: ; 6b939 (1a:7939)
	set_farcall_addrs_hli Func_4ed5d
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld a, [hl]
	ld e, $0
	call FarCall
	cp $ff
	jp nz, Func_6b96a
	ld e, $0
	ld a, $d
	call Func_6bbf3
Func_6b96a: ; 6b96a (1a:796a)
	jp Func_6b99e

Func_6b96d: ; 6b96d (1a:796d)
	set_farcall_addrs_hli Func_6af0d
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld a, [hl]
	ld e, $0
	call FarCall
	cp $ff
	jp nz, Func_6b99e
	ld e, $0
	ld a, $d
	call Func_6bbf3
Func_6b99e: ; 6b99e (1a:799e)
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld [hl], $0
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $e
	add hl, de
	ld [hl], $0
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $f
	add hl, de
	ld [hl], $0
	xor a
Func_6b9e1: ; 6b9e1 (1a:79e1)
	cp $4
	jp nc, Func_6ba04
	ld hl, sp+$65
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $a
	add hl, de
	ld e, a
	ld d, $0
	add hl, de
	ld [hl], $0
	inc a
	jp Func_6b9e1

Func_6ba04: ; 6ba04 (1a:7a04)
	add sp, $66
	ret

Data_6ba07:
	db "(は)レヘﾞル(かﾞ)"
	TX_SNUM
	db $0

Data_6ba15:
	db "(たちは )", $0

Data_6ba1c:
	db "(を)", $0

Pointers_6ba20:
	dw Data_6ba26
	dw Data_6ba37
	dw $0

Data_6ba26:
	db "(はけんした)ハﾟーティー(は)", $0

Data_6ba37:
	db "(かえってきているよ!)", $0

Pointers_6ba44:
	dw Data_6ba4a
	dw Data_6ba5b
	dw $0

Data_6ba4a:
	db "(はけんした)ハﾟーティー(は)", $0

Data_6ba5b:
	db "(またﾞ かえってきて いないね#)", $0

Pointers_6ba6e:
	dw Data_6ba78
	dw Data_6ba89
	dw Data_6ba99
	dw Data_6baac
	dw $0

Data_6ba78:
	db "(はけんした)ハﾟーティー(は)", $0

Data_6ba89:
	db "(かえってきてはいるけとﾞ#)", $0

Data_6ba99:
	db "ホﾞロホﾞロ(のしﾞょうたいたﾞね)", $0

Data_6baac:
	db "(むりを させすきﾞしﾞゃないの?)", $0

Pointers_6babf:
	dw Data_6bac3
	dw $0

Data_6bac3:
	db "(その)ロホﾞホﾟン(は はけん されているよ)", $0

Pointers_6badc:
	dw Data_6bae0
	dw $0

Data_6bae0:
	db "(あかﾞったよ)", $0

Pointers_6bae9:
	dw Data_6baf3
	dw Data_6bb08
	dw Data_6bb20
	dw Data_6bb2e
	dw $0

Data_6baf3:
	db "(こんかいの はけんてﾞ)レヘﾞル(の)", $0

Data_6bb08:
	db "アッフﾟ(した) ロホﾞホﾟン(は いないね)", $0

Data_6bb20:
	db "(らくを させすきﾞても)", $0

Data_6bb2e:
	db "レヘﾞル(は あかﾞらないよ)", $0

Pointers_6bb3e:
	dw Data_6bb44
	dw Data_6bb56
	dw $0

Data_6bb44:
	db "(そうそう たひﾞのとちゅうてﾞ)", $0

Data_6bb56:
	db "(なにかを みつけてきたようたﾞね)", $0

Pointers_6bb69:
	dw Data_6bb6d
	dw $0

Data_6bb6d:
	db "(みつけてきた)", $0

Pointers_6bb76:
	dw Data_6bb7c
	dw Data_6bb8f
	dw $0

Data_6bb7c:
	db "(はけんしている)ハﾟーティー(は)", $0

Data_6bb8f:
	db "(いないよ)", $0

Pointers_6bb96:
	dw Data_6bb9a
	dw $0

Data_6bb9a:
	db "(かえってきてるよ)", $0

Pointers_6bba5:
	dw Data_6bba9
	dw $0

Data_6bba9:
	db "(くみめの) ハﾟーティー", $0

Pointers_6bbb7:
	dw Data_6bbbd
	dw Data_6bbd1
	dw $0

Data_6bbbd:
	db "(はけんにたﾞすときに たいりょくを)", $0

Data_6bbd1:
	db "(かいふく させとくよ!)", $0

Pointers_6bbdf:
	dw Data_6bbe3
	dw $0

Data_6bbe3:
	db "(いっはﾟいなのてﾞ すてた)", $0

Func_6bbf3: ; 6bbf3 (1a:7bf3)
	push de
	push af
	cp $4
	jp z, Func_6bc1a
	cp $7
	jp z, Func_6bc1a
	ld a, $2
	ld [wc39a], a
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_680f6
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
Func_6bc1a: ; 6bc1a (1a:7c1a)
	pop af
	pop de
	cp $d
	jp z, Func_6bdc7
	cp $c
	jp z, Func_6bdae
	cp $b
	jp z, Func_6bd7e
	cp $a
	jp z, Func_6bd4f
	cp $7
	jp z, Func_6bd36
	cp $6
	jp z, Func_6bd1d
	cp $5
	jp z, Func_6bd04
	cp $4
	jp z, Func_6bceb
	cp $8
	jp z, Func_6bcab
	cp $3
	jp z, Func_6bcab
	or a
	jp nz, Func_6bddd
	push de
	set_farcall_addrs_hli PrintMapText_
	pop de
	ld a, e
	cp $9
	jp z, Func_6bc9d
	cp $2
	jp z, Func_6bc8f
	cp $1
	jp z, Func_6bc81
	or a
	jp nz, Func_6bca8
	ld c, BANK(Pointers_6ba20)
	ld de, Pointers_6ba20
	ld hl, $10e
	call FarCall
	jp Func_6bca8

Func_6bc81: ; 6bc81 (1a:7c81)
	ld c, BANK(Pointers_6ba44)
	ld de, Pointers_6ba44
	ld hl, $10e
	call FarCall
	jp Func_6bca8

Func_6bc8f: ; 6bc8f (1a:7c8f)
	ld c, BANK(Pointers_6ba6e)
	ld de, Pointers_6ba6e
	ld hl, $10e
	call FarCall
	jp Func_6bca8

Func_6bc9d: ; 6bc9d (1a:7c9d)
	ld c, BANK(Pointers_6bb76)
	ld de, Pointers_6bb76
	ld hl, $10e
	call FarCall
Func_6bca8: ; 6bca8 (1a:7ca8)
	jp Func_6bddd

Func_6bcab: ; 6bcab (1a:7cab)
	push af
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6babf)
	ld de, Pointers_6babf
	ld hl, $10e
	call FarCall
	pop af
	cp $3
	jp nz, Func_6bce8
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call Func_681a6
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
Func_6bce8: ; 6bce8 (1a:7ce8)
	jp Func_6bddd

Func_6bceb: ; 6bceb (1a:7ceb)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6badc)
	ld de, Pointers_6badc
	ld hl, $110
	call FarCall
	jp Func_6bddd

Func_6bd04: ; 6bd04 (1a:7d04)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bae9)
	ld de, Pointers_6bae9
	ld hl, $10e
	call FarCall
	jp Func_6bddd

Func_6bd1d: ; 6bd1d (1a:7d1d)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bb3e)
	ld de, Pointers_6bb3e
	ld hl, $10e
	call FarCall
	jp Func_6bddd

Func_6bd36: ; 6bd36 (1a:7d36)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bb69)
	ld de, Pointers_6bb69
	ld hl, $110
	call FarCall
	jp Func_6bddd

Func_6bd4f: ; 6bd4f (1a:7d4f)
	push de
	ld e, $e
	ld a, $1
	call SetStringStartState
	pop de
	ld l, e
	ld h, $0
	push hl
	ld hl, Data_6bdde
	push hl
	call PlaceString
	pop bc
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bb96)
	ld de, Pointers_6bb96
	ld hl, $110
	call FarCall
	jp Func_6bddd

Func_6bd7e: ; 6bd7e (1a:7d7e)
	push de
	ld e, $e
	ld a, $1
	call SetStringStartState
	pop de
	ld l, e
	ld h, $0
	inc hl
	push hl
	ld hl, Data_6bdf5
	push hl
	call PlaceString
	pop bc
	pop bc
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bba5)
	ld de, Pointers_6bba5
	ld hl, $30e
	call FarCall
	jp Func_6bddd

Func_6bdae: ; 6bdae (1a:7dae)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bbb7)
	ld de, Pointers_6bbb7
	ld hl, $10e
	call FarCall
	jp Func_6bddd

Func_6bdc7: ; 6bdc7 (1a:7dc7)
	set_farcall_addrs_hli PrintMapText_
	ld c, BANK(Pointers_6bbdf)
	ld de, Pointers_6bbdf
	ld hl, $10e
	call FarCall
Func_6bddd: ; 6bddd (1a:7ddd)
	ret

Data_6bdde:
	db "(はけんした) ハﾟーティー(は "
	TX_SNUM
	db "くみ)", $0

Data_6bdf5:
	db "("
	TX_SNUM
	db ")", $0

Func_6bdfa: ; 6bdfa (1a:7dfa)
	push af
	push bc
	push bc
	push bc
	push bc
	push bc
	push bc
	set_farcall_addrs_hli Func_93370
	ld hl, sp+$6
	call FarCall
	set_farcall_addrs_hli Func_93883
	ld hl, sp+$8
	ld c, [hl]
	ld hl, sp+$7
	ld e, [hl]
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	push hl
	ld hl, sp+$b
	ld l, [hl]
	ld h, $0
	ld de, $3c
	call MultiplyHLbyDE
	reg16swap de, hl
	ld hl, sp+$c
	ld l, [hl]
	ld h, $0
	add hl, de
	call WriteHLToSPPlus6
	set_farcall_addrs_hli Func_93883
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $6
	add hl, de
	ld c, [hl]
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	inc hl
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $5
	add hl, de
	ld e, [hl]
	call FarCall
	reg16swap de, hl
	push de
	ld hl, sp+$11
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $7
	add hl, de
	ld l, [hl]
	ld h, $0
	ld de, $3c
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	ld hl, sp+$11
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $8
	add hl, de
	ld l, [hl]
	ld h, $0
	add hl, bc
	call WriteHLToSPPlus10
	pop de
	pop hl
	ld a, e
	sub l
	ld a, d
	sbc h
	jp nc, Func_6beda
	xor a
	jp Func_6bf38

Func_6beda: ; 6beda (1a:7eda)
	call CompareHLtoDE
	jp nz, Func_6bef8
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus6
	pop de
	ld a, l
	sub e
	ld a, h
	sbc d
	jp c, Func_6bef3
	xor a
	jp Func_6bf38

Func_6bef3: ; 6bef3 (1a:7ef3)
	ld a, $1
	jp Func_6bf38

Func_6bef8: ; 6bef8 (1a:7ef8)
	ld a, e
	sub l
	ld l, a
	ld a, d
	sbc h
	ld h, a
	pop de
	push hl
	ld a, $6
	sub l
	ld a, $0
	sbc h
	jp nc, Func_6bf0e
	ld a, $ff
	jp Func_6bf38

Func_6bf0e: ; 6bf0e (1a:7f0e)
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	call GetHLAtSPPlus6
	ld a, l
	sub c
	ld c, a
	ld a, h
	sbc b
	ld b, a
	push bc
	call GetHLAtSPPlus4
	ld de, $5a0
	call MultiplyHLbyDE
	pop bc
	add hl, bc
	ld a, $70
	sub l
	ld a, $17
	sbc h
	jp nc, Func_6bf36
	ld a, $ff
	jp Func_6bf38

Func_6bf36: ; 6bf36 (1a:7f36)
	ld a, $1
Func_6bf38: ; 6bf38 (1a:7f38)
	add sp, $e
	ret

SECTION "Bank 1b", ROMX, BANK [$1b]
Func_6c000:
	ret

Func_6c001:
	push af
	set_farcall_addrs_hli RandomRange
	pop af
	jp FarCall

Func_6c011: ; 6c011 (1b:4011)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_6c011
	ret

Func_6c01c: ; 6c01c (1b:401c)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7748
	pop bc
	pop de
	pop hl
	jp FarCall

Func_6c030: ; 6c030 (1b:4030)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_7766
	pop bc
	pop de
	pop hl
	jp FarCall

Func_6c044:
	push bc
	ld hl, sp+$0
	ld [hl], $ff
	ld a, [wc319]
	cp $81
	jp nz, Func_6c062
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_6c030
	jp Func_6c070

Func_6c062: ; 6c062 (1b:4062)
	ld c, $0
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $1
	call Func_6c01c
Func_6c070: ; 6c070 (1b:4070)
	pop bc
	ret

Func_6c072: ; 6c072 (1b:4072)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17975
	pop bc
	pop de
	pop hl
	jp FarCall

Func_6c086:
	ld c, $80
	jp Func_6c072

Func_6c08b: ; 6c08b (1b:408b)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_6c0a0: ; 6c0a0 (1b:40a0)
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_6c08b
	ret

Func_6c0ab: ; 6c0ab (1b:40ab)
	push hl
	push de
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	push bc
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld de, $0
	ld [hl], e
	inc hl
	ld [hl], d
	set_farcall_addrs_hli PrintMapText_
	ld c, $a8
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, $10e
	call FarCall
	pop bc
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	pop bc
	pop bc
	ret

Func_6c102:
	push hl
	push de
	call Func_6c0a0
	pop de
	pop hl
	call Func_6c0ab
	ret

Data_6c10d:
	dr $6c10d, $6c115

Data_6c115:
	dr $6c115, $6c11d

Func_6c11d: ; 6c11d (1b:411d)
	push af
	ld hl, -$114
	add hl, sp
	ld sp, hl
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $113
	read_hl_from wCurRobotPointer
	ld de, $1c
	add hl, de
	write_hl_to_sp_plus $111
	read_hl_from wCurRobotPointer
	ld de, $1c5
	add hl, de
	ld a, [hl]
	push af
	set_farcall_addrs_hli AllocateMemory ; has a crash check
	ld hl, $2d0
	call FarCall
	call WriteHLToSPPlus4
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call BackUpTileMapRectangle
	call GetHLAtSPPlus4
	ld de, $168
	add hl, de
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call BackUpAttrMapRectangle
	pop af
	cp $b
	jp z, .set_equal_1
	cp $a
	jp z, .double
	cp $9
	jp nz, .okay
	ld hl, $115
	add hl, sp
	ld [hl], $5
	jp .okay

.double
	ld hl, $115
	add hl, sp
	ld a, [hl]
	add a
	ld hl, $115
	add hl, sp
	ld [hl], a
	jp .okay

.set_equal_1
	ld hl, $115
	add hl, sp
	ld [hl], $1
.okay
	xor a
.loop
	cp $a
	jp nc, .next
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, sp+$31
	add hl, de
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fd
	add hl, sp
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	inc a
	jp .loop

.next
	ld hl, $fa
	add hl, sp
	ld [hl], $0
	ld c, BANK(Text_200fd)
	ld hl, $fa
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $fa
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fb
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_200fd
	call FarCopyUntilNull
	reg16swap de, hl
	ld hl, $115
	add hl, sp
	ld l, [hl]
	ld h, $0
	call Func_6c086
	ld c, BANK(Text_20116)
	ld hl, $fa
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $fa
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fb
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_20116
	call FarCopyUntilNull
	ld hl, $f9
	add hl, sp
	ld [hl], $0
Func_6c240: ; 6c240 (1b:4240)
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	cp $4
	jp nc, Func_6c2a9
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$e
	reg16swap de, hl
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	call FarCall
	read_hl_from_sp_plus $2d
	ld c, l
	ld b, h
	ld hl, sp+$e
	ld a, [hl]
	or a
	jp nz, Func_6c273
	jp Func_6c29b

Func_6c273: ; 6c273 (1b:4273)
	push bc
	ld hl, sp+$10
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$4
	call GetRobotOrTrainerBaseStats
	pop bc
	ld hl, sp+$4
	ld a, [hl]
	or a
	jp z, Func_6c295
	call GetHLAtSPPlus7
	reg16swap de, hl
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp c, Func_6c298
Func_6c295: ; 6c295 (1b:4295)
	jp Func_6c29b

Func_6c298: ; 6c298 (1b:4298)
	jp Func_6c2a9

Func_6c29b: ; 6c29b (1b:429b)
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $f9
	add hl, sp
	ld [hl], a
	jp Func_6c240

Func_6c2a9: ; 6c2a9 (1b:42a9)
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	cp $4
	jp c, Func_6c2d8
	ld c, BANK(Text_2015d)
	ld hl, $fa
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $fa
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fb
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Text_2015d
	call FarCopyUntilNull
Func_6c2d8: ; 6c2d8 (1b:42d8)
	ld hl, $fa
	add hl, sp
	ld e, [hl]
	ld hl, $fb
	add hl, sp
	call Func_6c102
	call Func_6c0a0
	ld hl, $f9
	add hl, sp
	ld a, [hl]
	cp $4
	jp c, Func_6c304
	set_farcall_addrs_hli FreeMemory
	pop hl
	push hl
	call FarCall
	jp Func_6c534

Func_6c304: ; 6c304 (1b:4304)
	call Func_6c0a0
	ld de, Data_6c53a
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp z, Func_6c342
	set_farcall_addrs_hli FreeMemory
	pop hl
	push hl
	call FarCall
	jp Func_6c534

Func_6c342: ; 6c342 (1b:4342)
	set_farcall_addrs_hli DisplayPartyMenu
	ld hl, $115
	add hl, sp
	ld e, [hl]
	ld d, $0
	ld a, $3
	call FarCall
	push hl
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
	ld a, [wSystemType]
	cp $1
	jp z, Func_6c37e
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_6c3a2
Func_6c37e: ; 6c37e (1b:437e)
	ld a, [wc316]
	or a
	jp nz, Func_6c391
	ld de, $8
	ld hl, Data_6c10d
	call Func_2b7d
	jp Func_6c3a2

Func_6c391: ; 6c391 (1b:4391)
	ld a, [wc316]
	cp $1
	jp nz, Func_6c3a2
	ld de, $8
	ld hl, Data_6c115
	call Func_2b7d
Func_6c3a2: ; 6c3a2 (1b:43a2)
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call GetHLAtSPPlus4
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call RestoreTileMapRectangle
	call GetHLAtSPPlus4
	ld de, $168
	add hl, de
	ld c, l
	ld b, h
	ld de, $1412
	ld hl, $0
	call RestoreAttrMapRectangle
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop hl
	ld a, l
	and h
	inc a
	jp nz, Func_6c3fe
	jp Func_6c304

Func_6c3fe: ; 6c3fe (1b:43fe)
	set_farcall_addrs_hli FreeMemory
	pop hl
	push hl
	call FarCall
	set_farcall_addrs_hli Func_6b94
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld de, $900
	add hl, de
	reg16swap de, hl
	ld hl, $115
	add hl, sp
	ld l, [hl]
	ld h, $0
	call FarCall
	ld a, $1b
	ld [wFarCallDestAddr], a
	ld a, $6e
	ld [wFarCallDestAddr + 1], a
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld de, $900
	add hl, de
	call FarCall
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$10
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$10
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$4
	call GetRobotOrTrainerBaseStats
	call GetHLAtSPPlus9
	reg16swap de, hl
	pop bc
	push de
	ld a, [wc2e9]
	read_hl_from_sp_plus $113
	ld de, $c6
	add hl, de
	cp [hl]
	jp nz, Func_6c491
	read_hl_from_sp_plus $115
	ld de, $29
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6c491: ; 6c491 (1b:4491)
	pop de
	ld l, c
	ld h, b
	call CompareHLtoDE
	jp nc, Func_6c49d
	jp Func_6c534

Func_6c49d: ; 6c49d (1b:449d)
	push de
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$10
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	pop hl
	write_hl_to_sp_plus $2d
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$e
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, $fa
	add hl, sp
	ld [hl], $0
	ld hl, sp+$f
	push hl
	ld hl, $fc
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $fc
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fd
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	call CopyUntilNull
	ld de, Func_6c102
	ld c, $8
	call FarCopyUntilNull
	ld c, $8
	ld hl, $fa
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $fa
	add hl, sp
	ld [hl], a
	dec a
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $fb
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld de, Func_6c11d
	call FarCopyUntilNull
	ld hl, $fa
	add hl, sp
	ld e, [hl]
	ld hl, $fb
	add hl, sp
	call Func_6c102
Func_6c534: ; 6c534 (1b:4534)
	ld hl, $116
	add hl, sp
	ld sp, hl
	ret

Data_6c53a:
	db "(たへﾞさせますか?)", $0

Func_6c546:
	push hl
	ld bc, $a0
	ld e, $0
	ld hl, wOAM00YCoord
	call FillMemory
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_6c011
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	ld a, $28
	ld [rLYC], a
	xor a
	ld [wc2e1], a
	xor a
	ld [wc2e2], a
	ld a, $91
	ld [wc2e3], a
	call EnableHBlank
	call Func_6c011
	call WaitVideoTransfer
	set_farcall_addrs_hli Func_f723
	pop hl
	call FarCall
	ld bc, $a0
	ld e, $0
	ld hl, wOAM00YCoord
	call FillMemory
	call DisableHBlank
	ld a, [wLCDC]
	and $f9
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_6c011
	call WaitVideoTransfer
	ret

Func_6c5bb: ; 6c5bb (1b:45bb)
	push af
	add sp, -$10
	ld hl, sp+$6
	xor a
	ld [hl], a
	ld hl, sp+$7
	ld [hl], a
	ld hl, sp+$11
	ld a, [hl]
	cp $2
	jp nz, Func_6c5dc
	callba_hli Func_10766
	xor a
Func_6c5dc: ; 6c5dc (1b:45dc)
	ld hl, $0
	call WriteHLToSPPlus4
	pop de
	push hl
	ld hl, sp+$11
	ld a, [hl]
	cp $1
	jp nz, Func_6c600
	set_farcall_addrs_hli Func_105ce
	xor a
	call FarCall
	ld e, $1
	jp Func_6c610

Func_6c600: ; 6c600 (1b:4600)
	callba_hli Func_1028b
	ld e, $0
Func_6c610: ; 6c610 (1b:4610)
	push de
	ld a, $10
	call OverworldPlaySong
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli AllocateMemory
	ld hl, $80
	call FarCall
	write_hl_to_sp_plus $11
	ld hl, $80
	call FarCall
	write_hl_to_sp_plus $f
	ld hl, $80
	call FarCall
	write_hl_to_sp_plus $d
	ld hl, $200
	call FarCall
	ld c, l
	ld b, h
	push bc
	ld hl, $80
	call FarCall
	pop bc
	push hl
	push bc
	ld bc, $80
	read_hl_from_sp_plus $15
	ld de, $9270
	call RequestVideoData
	call WaitVideoTransfer
	ld bc, $80
	read_hl_from_sp_plus $13
	ld de, $9340
	call RequestVideoData
	call WaitVideoTransfer
	ld bc, $80
	read_hl_from_sp_plus $11
	ld de, $9420
	call RequestVideoData
	call WaitVideoTransfer
	pop bc
	push bc
	ld l, c
	ld h, b
	ld de, $9520
	ld bc, $200
	call RequestVideoData
	call WaitVideoTransfer
	pop bc
	pop hl
	push bc
	push hl
	ld de, $9750
	ld bc, $80
	call RequestVideoData
	call WaitVideoTransfer
	ld a, BANK(GFX_58000)
	ld [wFarCallDestBank], a
	ld bc, $80
	ld de, GFX_58000
	ld hl, $9270
	call FarRequestVideoData
	ld a, BANK(GFX_58080)
	ld [wFarCallDestBank], a
	ld bc, $80
	ld de, GFX_58080
	ld hl, $9340
	call FarRequestVideoData
	ld a, BANK(GFX_58100)
	ld [wFarCallDestBank], a
	ld bc, $80
	ld de, GFX_58100
	ld hl, $9420
	call FarRequestVideoData
	ld a, BANK(GFX_58180)
	ld [wFarCallDestBank], a
	ld bc, $200
	ld de, GFX_58180
	ld hl, $9520
	call FarRequestVideoData
	ld a, BANK(GFX_58380)
	ld [wFarCallDestBank], a
	ld bc, $80
	ld de, GFX_58380
	ld hl, $9750
	call FarRequestVideoData
	pop hl
	pop bc
	pop de
	push bc
	push hl
Func_6c6fe: ; 6c6fe (1b:46fe)
	push de
	ld a, e
	call Func_6d167
	pop de
	push de
	ld hl, sp+$a
	call Func_6c8cf
	pop de
	push af
	push de
	callba_hli WaitAorBButtonOverworld_17a44
	pop de
	push de
	ld a, e
	cp $1
	jp nz, Func_6c726
	call Func_6c044
Func_6c726: ; 6c726 (1b:4726)
	pop de
	pop af
	push de
	or a
	jp nz, Func_6c74d
	read_hl_from_sp_plus $c
	push hl
	call GetHLAtSPPlus10
	pop de
	call CompareHLtoDE
	jp nc, Func_6c743
	read_hl_from_sp_plus $c
	call WriteHLToSPPlus8
Func_6c743: ; 6c743 (1b:4743)
	ld hl, sp+$d
	ld a, [hl]
	inc a
	ld hl, sp+$d
	ld [hl], a
	jp Func_6c770

Func_6c74d: ; 6c74d (1b:474d)
	cp $1
	jp nz, Func_6c770
	read_hl_from_sp_plus $c
	push hl
	read_hl_from_sp_plus $c
	pop de
	call CompareHLtoDE
	jp nc, Func_6c769
	read_hl_from_sp_plus $c
	call WriteHLToSPPlus10
Func_6c769: ; 6c769 (1b:4769)
	ld hl, sp+$c
	ld a, [hl]
	inc a
	ld hl, sp+$c
	ld [hl], a
Func_6c770: ; 6c770 (1b:4770)
	call FillVisibleAreaWithBlankTile
	pop de
	ld hl, sp+$b
	ld a, [hl]
	cp $2
	jp nz, Func_6c77f
	jp Func_6c78d

Func_6c77f: ; 6c77f (1b:477f)
	ld hl, sp+$a
	ld a, [hl]
	cp $2
	jp nz, Func_6c78a
	jp Func_6c78d

Func_6c78a: ; 6c78a (1b:478a)
	jp Func_6c6fe

Func_6c78d: ; 6c78d (1b:478d)
	pop hl
	pop bc
	push de
	push hl
	push bc
	ld bc, $80
	read_hl_from_sp_plus $15
	reg16swap de, hl
	ld hl, $9270
	call FarRequestVideoData
	call WaitVideoTransfer
	ld bc, $80
	read_hl_from_sp_plus $13
	reg16swap de, hl
	ld hl, $9340
	call FarRequestVideoData
	call WaitVideoTransfer
	ld bc, $80
	read_hl_from_sp_plus $11
	reg16swap de, hl
	ld hl, $9420
	call FarRequestVideoData
	call WaitVideoTransfer
	pop bc
	push bc
	ld e, c
	ld d, b
	ld hl, $9520
	ld bc, $200
	call FarRequestVideoData
	call WaitVideoTransfer
	pop bc
	pop hl
	push hl
	push bc
	reg16swap de, hl
	ld hl, $9750
	ld bc, $80
	call FarRequestVideoData
	call WaitVideoTransfer
	set_farcall_addrs_hli FreeMemory
	read_hl_from_sp_plus $15
	call FarCall
	read_hl_from_sp_plus $13
	call FarCall
	read_hl_from_sp_plus $11
	call FarCall
	pop hl
	call FarCall
	pop hl
	call FarCall
	xor a
	ld [wPoncotPicAlignment], a
	ld hl, sp+$9
	ld a, [hl]
	cp $2
	jp nz, Func_6c833
	call GetHLAtSPPlus4
	call WriteHLToSPPlus8
	ld hl, sp+$a
	ld [hl], $0
	jp Func_6c83d

Func_6c833: ; 6c833 (1b:4833)
	call GetHLAtSPPlus6
	call WriteHLToSPPlus8
	ld hl, sp+$a
	ld [hl], $1
Func_6c83d: ; 6c83d (1b:483d)
	set_farcall_addrs_hli Func_107d7
	pop de
	push de
	ld c, e
	ld b, $0
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, sp+$a
	ld a, [hl]
	call FarCall
	pop de
	ld a, e
	cp $1
	jp nz, Func_6c864
	call Func_6c044
Func_6c864: ; 6c864 (1b:4864)
	ld hl, sp+$11
	ld a, [hl]
	cp $2
	jp nz, Func_6c87a
	callba_hli Func_107b8
Func_6c87a: ; 6c87a (1b:487a)
	ld hl, sp+$11
	ld a, [hl]
	or a
	jp nz, Func_6c88f
	ld hl, sp+$8
	ld a, [hl]
	cp $1
	jp nz, Func_6c88f
	ld hl, $1
	jp Func_6c8c4

Func_6c88f: ; 6c88f (1b:488f)
	ld hl, sp+$11
	ld a, [hl]
	cp $1
	jp nz, Func_6c8c1
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6c8ae
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	jp Func_6c8c4

Func_6c8ae: ; 6c8ae (1b:48ae)
	ld hl, sp+$8
	ld a, [hl]
	or a
	jp nz, Func_6c8bb
	ld hl, $1
	jp Func_6c8c4

Func_6c8bb: ; 6c8bb (1b:48bb)
	ld hl, $0
	jp Func_6c8c4

Func_6c8c1: ; 6c8c1 (1b:48c1)
	ld hl, $0
Func_6c8c4: ; 6c8c4 (1b:48c4)
	reg16swap de, hl
	add sp, $12
	reg16swap de, hl
	ret

Func_6c8cf: ; 6c8cf (1b:48cf)
	push hl
	push de
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$6
	ld [hl], $1
	ld hl, sp+$5
	ld [hl], $1
	ld hl, sp+$0
	xor a
	ld [hl], a
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$1
	ld [hl], a
	ld hl, sp+$8
	ld a, [hl]
	or a
	jp nz, Func_6c8fd
	push bc
	ld hl, sp+$6
	ld [hl], $0
	call Func_6ca37
	ld hl, sp+$5
	ld [hl], a
	pop bc
	jp Func_6c917

Func_6c8fd: ; 6c8fd (1b:48fd)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6c911
	ld c, $0
	jp Func_6c913

Func_6c911: ; 6c911 (1b:4911)
	ld c, $1
Func_6c913: ; 6c913 (1b:4913)
	ld hl, sp+$4
	ld [hl], $0
Func_6c917: ; 6c917 (1b:4917)
	push bc
	ld hl, sp+$a
	ld c, [hl]
	ld hl, sp+$7
	ld e, [hl]
	ld hl, sp+$8
	ld a, [hl]
	call Func_6d350
	ld l, $a
	push hl
	ld c, $4
	ld e, $0
	ld a, $d
	call Func_3bc5
	pop bc
	call GetJoyPressed
	and $10
	jp z, Func_6c943
	ld hl, sp+$6
	ld e, [hl]
	ld d, $0
	ld hl, sp+$3
	add hl, de
	ld [hl], $1
Func_6c943: ; 6c943 (1b:4943)
	pop bc
	ld hl, sp+$8
	ld a, [hl]
	or a
	jp nz, Func_6c99d
	push bc
	ld hl, sp+$2
	ld a, [hl]
	cp $15
	jp c, Func_6c983
	ld hl, sp+$4
	ld a, [hl]
	cp $1
	jp z, Func_6c983
	ld hl, sp+$2
	ld a, [hl]
	cp $32
	jp nc, Func_6c983
	ld hl, sp+$7
	ld e, [hl]
	ld hl, sp+$5
	ld a, [hl]
	call Func_6ca8a
	cp $1
	jp nz, Func_6c979
	ld hl, sp+$4
	ld [hl], $1
	jp Func_6c980

Func_6c979: ; 6c979 (1b:4979)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
Func_6c980: ; 6c980 (1b:4980)
	jp Func_6c999

Func_6c983: ; 6c983 (1b:4983)
	ld hl, sp+$2
	ld a, [hl]
	cp $33
	jp c, Func_6c992
	ld hl, sp+$4
	ld [hl], $1
	jp Func_6c999

Func_6c992: ; 6c992 (1b:4992)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
Func_6c999: ; 6c999 (1b:4999)
	pop bc
	jp Func_6c9e1

Func_6c99d: ; 6c99d (1b:499d)
	inc c
	dec c
	jp nz, Func_6c9c3
	push bc
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_6c01c
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call Func_6c030
	pop bc
	jp Func_6c9e1

Func_6c9c3: ; 6c9c3 (1b:49c3)
	push bc
	ld c, $1
	ld hl, sp+$3
	reg16swap de, hl
	ld hl, $1
	call Func_6c030
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $1
	call Func_6c01c
	pop bc
Func_6c9e1: ; 6c9e1 (1b:49e1)
	ld hl, sp+$1
	ld a, [hl]
	cp $1
	jp nz, Func_6ca08
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp nz, Func_6ca08
	ld hl, sp+$8
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $e
	ld c, l
	ld b, h
	ld hl, sp+$7
	ld e, [hl]
	ld hl, sp+$8
	ld a, [hl]
	call Func_6cb0f
	pop bc
	jp Func_6ca2a

Func_6ca08: ; 6ca08 (1b:4a08)
	push bc
	ld a, $63
	call Func_6c001
	inc a
	ld e, a
	ld hl, sp+$3
	ld a, [hl]
	cp $1
	jp z, Func_6ca1b
	ld hl, sp+$8
	ld [hl], e
Func_6ca1b: ; 6ca1b (1b:4a1b)
	pop bc
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp z, Func_6ca27
	ld hl, sp+$5
	ld [hl], e
Func_6ca27: ; 6ca27 (1b:4a27)
	jp Func_6c917

Func_6ca2a: ; 6ca2a (1b:4a2a)
	add sp, $c
	ret

Data_6ca2d:
	dr $6ca2d, $6ca37

Func_6ca37: ; 6ca37 (1b:4a37)
	push bc
	push bc
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_6ca2d
	ld bc, $a
	call MemCopy
	ld a, $64
	call Func_6c001
	ld e, a
	ld hl, sp+$a
	ld [hl], $0
	ld c, $0
Func_6ca58: ; 6ca58 (1b:4a58)
	ld a, c
	cp $a
	jp nc, Func_6ca7b
	push de
	ld hl, sp+$c
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$2
	add hl, de
	add [hl]
	ld hl, sp+$c
	ld [hl], a
	pop de
	ld a, e
	ld hl, sp+$a
	cp [hl]
	jp nc, Func_6ca77
	jp Func_6ca7b

Func_6ca77: ; 6ca77 (1b:4a77)
	inc c
	jp Func_6ca58

Func_6ca7b: ; 6ca7b (1b:4a7b)
	ld a, c
	add sp, $c
	ret

Data_6ca7f:
	dr $6ca7f, $6ca8a

Func_6ca8a: ; 6ca8a (1b:4a8a)
	push af
	push de
	push bc
	push bc
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_6ca7f
	ld bc, $b
	call MemCopy
	ld hl, sp+$f
	ld e, [hl]
	ld d, $0
	ld hl, sp+$0
	add hl, de
	ld a, [hl]
	ld hl, sp+$c
	cp [hl]
	jp c, Func_6cac4
	ld hl, sp+$c
	ld a, [hl]
	ld hl, sp+$f
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1
	add hl, de
	cp [hl]
	jp nc, Func_6cac4
	ld a, $1
	jp Func_6cac6

Func_6cac4: ; 6cac4 (1b:4ac4)
	ld a, $ff
Func_6cac6: ; 6cac6 (1b:4ac6)
	add sp, $10
	ret

Data_6cac9:
	dr $6cac9, $6caec

Data_6caec:
	dr $6caec, $6cb0f

Func_6cb0f: ; 6cb0f (1b:4b0f)
	push bc
	ld hl, -$8e
	add hl, sp
	ld sp, hl
	push de
	push af
	ld hl, sp+$27
	reg16swap de, hl
	ld hl, Data_6cac9
	ld bc, $23
	call MemCopy
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_6caec
	ld bc, $23
	call MemCopy
	ld hl, $8a
	add hl, sp
	ld [hl], $7
Func_6cb3b: ; 6cb3b (1b:4b3b)
	ld hl, $96
	add hl, sp
	ld a, [hl]
	or a
	jp z, Func_6cb5d
	ld hl, $96
	add hl, sp
	ld a, [hl]
	cp $1
	jp nz, Func_6cb78
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6cb78
Func_6cb5d: ; 6cb5d (1b:4b5d)
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $8a
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
	jp Func_6cb94

Func_6cb78: ; 6cb78 (1b:4b78)
	ld hl, $8a
	add hl, sp
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	add hl, bc
	reg16swap de, hl
Func_6cb94: ; 6cb94 (1b:4b94)
	ld c, $0
Func_6cb96: ; 6cb96 (1b:4b96)
	ld a, c
	cp $8
	jp nc, Func_6cbb1
	ld a, [de]
	cp $8f
	jp z, Func_6cba5
	jp Func_6cbb1

Func_6cba5: ; 6cba5 (1b:4ba5)
	inc c
	ld hl, $8
	add hl, de
	reg16swap de, hl
	jp Func_6cb96

Func_6cbb1: ; 6cbb1 (1b:4bb1)
	ld a, c
	cp $8
	jp c, Func_6cbc1
	ld hl, $8a
	add hl, sp
	ld a, [hl]
	cp $3
	jp nz, Func_6cbc4
Func_6cbc1: ; 6cbc1 (1b:4bc1)
	jp Func_6cbd2

Func_6cbc4: ; 6cbc4 (1b:4bc4)
	ld hl, $8a
	add hl, sp
	ld a, [hl]
	dec a
	ld hl, $8a
	add hl, sp
	ld [hl], a
	jp Func_6cb3b

Func_6cbd2: ; 6cbd2 (1b:4bd2)
	ld a, $8
	ld hl, $8a
	add hl, sp
	sub [hl]
	add a
	ld hl, sp+$3b
	add [hl]
	ld hl, sp+$3b
	ld [hl], a
	ld a, $8
	ld hl, $8a
	add hl, sp
	sub [hl]
	ld hl, sp+$3e
	add [hl]
	ld hl, sp+$3e
	ld [hl], a
	ld hl, $8a
	add hl, sp
	ld [hl], $7
Func_6cbf3: ; 6cbf3 (1b:4bf3)
	ld hl, $96
	add hl, sp
	ld a, [hl]
	or a
	jp z, Func_6cc15
	ld hl, $96
	add hl, sp
	ld a, [hl]
	cp $1
	jp nz, Func_6cc34
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6cc34
Func_6cc15: ; 6cc15 (1b:4c15)
	ld hl, $8a
	add hl, sp
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	add hl, bc
	reg16swap de, hl
	jp Func_6cc4c

Func_6cc34: ; 6cc34 (1b:4c34)
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $8a
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, de
	reg16swap de, hl
Func_6cc4c: ; 6cc4c (1b:4c4c)
	ld c, $0
Func_6cc4e: ; 6cc4e (1b:4c4e)
	ld a, c
	cp $8
	jp nc, Func_6cc69
	ld a, [de]
	cp $8f
	jp z, Func_6cc5d
	jp Func_6cc69

Func_6cc5d: ; 6cc5d (1b:4c5d)
	inc c
	ld hl, $8
	add hl, de
	reg16swap de, hl
	jp Func_6cc4e

Func_6cc69: ; 6cc69 (1b:4c69)
	ld a, c
	cp $8
	jp c, Func_6cc79
	ld hl, $8a
	add hl, sp
	ld a, [hl]
	cp $3
	jp nz, Func_6cc7c
Func_6cc79: ; 6cc79 (1b:4c79)
	jp Func_6cc8a

Func_6cc7c: ; 6cc7c (1b:4c7c)
	ld hl, $8a
	add hl, sp
	ld a, [hl]
	dec a
	ld hl, $8a
	add hl, sp
	ld [hl], a
	jp Func_6cbf3

Func_6cc8a: ; 6cc8a (1b:4c8a)
	ld a, $8
	ld hl, $8a
	add hl, sp
	sub [hl]
	add a
	ld hl, sp+$18
	add [hl]
	ld hl, sp+$18
	ld [hl], a
	ld a, $8
	ld hl, $8a
	add hl, sp
	sub [hl]
	ld hl, sp+$1b
	add [hl]
	ld hl, sp+$1b
	ld [hl], a
	ld hl, sp+$27
	call Func_6c546
	ld hl, sp+$4
	call Func_6c546
	ld hl, $96
	add hl, sp
	ld a, [hl]
	or a
	jp z, Func_6ccd1
	ld hl, $96
	add hl, sp
	ld a, [hl]
	cp $1
	jp nz, Func_6ccf4
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6ccf4
Func_6ccd1: ; 6ccd1 (1b:4cd1)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	ld c, l
	ld b, h
	pop de
	jp Func_6cd14

Func_6ccf4: ; 6ccf4 (1b:4cf4)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
Func_6cd14: ; 6cd14 (1b:4d14)
	push bc
	push de
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	pop de
	push de
	ld hl, $23
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $8c
	pop de
	pop bc
	push de
	ld hl, $23
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $8c
	pop de
	ld hl, $2e
	add hl, de
	ld a, [hl]
	ld hl, $8e
	add hl, sp
	ld [hl], a
	ld hl, $2e
	add hl, bc
	ld a, [hl]
	ld hl, $8f
	add hl, sp
	ld [hl], a
	ld hl, $5
	add hl, de
	ld a, [hl]
	ld hl, $8c
	add hl, sp
	ld [hl], a
	ld hl, $5
	add hl, bc
	ld a, [hl]
	ld hl, $8d
	add hl, sp
	ld [hl], a
	ld hl, $17
	add hl, de
	ld a, [hl]
	ld hl, $90
	add hl, sp
	ld [hl], a
	ld hl, $17
	add hl, bc
	ld a, [hl]
	ld hl, $91
	add hl, sp
	ld [hl], a
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, $92
	add hl, sp
	ld e, [hl]
	ld hl, sp+$4c
	call Func_241f
	ld hl, $93
	add hl, sp
	ld e, [hl]
	ld hl, sp+$64
	call Func_241f
	pop af
	call GetSRAMBank
	ld hl, sp+$5a
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $88
	add hl, bc
	write_hl_to_sp_plus $88
	ld hl, sp+$72
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $8a
	add hl, bc
	write_hl_to_sp_plus $8a
	set_farcall_addrs_hli Func_e39a
	ld hl, $8b
	add hl, sp
	ld [hl], $0
Func_6cdd5: ; 6cdd5 (1b:4dd5)
	ld hl, $8b
	add hl, sp
	ld a, [hl]
	cp $2
	jp nc, Func_6ce5b
	ld hl, $8b
	add hl, sp
	ld e, [hl]
	ld d, $0
	ld hl, $8e
	add hl, sp
	add hl, de
	ld a, [hl]
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call FarCall
	ld c, l
	ld b, h
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_6ce4d
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld de, $1
	ld [hl], e
	inc hl
	ld [hl], d
Func_6ce4d: ; 6ce4d (1b:4e4d)
	ld hl, $8b
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $8b
	add hl, sp
	ld [hl], a
	jp Func_6cdd5

Func_6ce5b: ; 6ce5b (1b:4e5b)
	ld hl, $8b
	add hl, sp
	ld [hl], $0
Func_6ce61: ; 6ce61 (1b:4e61)
	ld hl, $8b
	add hl, sp
	ld a, [hl]
	cp $2
	jp nc, Func_6cf1b
	ld hl, $8b
	add hl, sp
	ld e, [hl]
	ld d, $0
	ld hl, $8c
	add hl, sp
	add hl, de
	ld a, [hl]
	cp $7
	jp z, Func_6ced8
	cp $6
	jp z, Func_6ced8
	cp $5
	jp z, Func_6ced8
	cp $4
	jp z, Func_6ced8
	cp $3
	jp z, Func_6ced8
	cp $2
	jp z, Func_6ced8
	cp $1
	jp z, Func_6ced8
	or a
	jp nz, Func_6cf0d
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, $4
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6cf0d

Func_6ced8: ; 6ced8 (1b:4ed8)
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $2
	call DivideHLByDESigned
	ld c, l
	ld b, h
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, $86
	add hl, sp
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6cf0d: ; 6cf0d (1b:4f0d)
	ld hl, $8b
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $8b
	add hl, sp
	ld [hl], a
	jp Func_6ce61

Func_6cf1b: ; 6cf1b (1b:4f1b)
	read_hl_from_sp_plus $88
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_6cf33
	ld hl, $1
	write_hl_to_sp_plus $88
Func_6cf33: ; 6cf33 (1b:4f33)
	read_hl_from_sp_plus $8a
	reg16swap de, hl
	ld hl, $0
	call CompareHLtoDE
	jp c, Func_6cf4b
	ld hl, $1
	write_hl_to_sp_plus $8a
Func_6cf4b: ; 6cf4b (1b:4f4b)
	pop af
	ld hl, sp+$78
	ld c, l
	ld b, h
	ld l, a
	ld h, $0
	ld de, $64
	call Func_2617
	ld hl, sp+$78
	ld c, l
	ld b, h
	read_hl_from_sp_plus $86
	reg16swap de, hl
	ld hl, sp+$78
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$78
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_6cf79
	dec bc
.asm_6cf79
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, Init
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$7d
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_6cf95
	dec bc
.asm_6cf95
	push bc
	push hl
	call AddLongsFromStack
	ld hl, $80
	add hl, sp
	call PutLongFromStackToHL
	ld hl, sp+$7a
	ld a, [hl]
	and $80
	jp z, Func_6cfb8
	ld hl, $0
	push hl
	ld hl, $1
	push hl
	ld hl, $80
	add hl, sp
	call AddLongs
Func_6cfb8: ; 6cfb8 (1b:4fb8)
	pop de
	ld hl, sp+$76
	ld c, l
	ld b, h
	ld l, e
	ld h, $0
	ld de, $64
	call Func_2617
	ld hl, sp+$76
	ld c, l
	ld b, h
	read_hl_from_sp_plus $86
	reg16swap de, hl
	ld hl, sp+$76
	call MultiplyULongAtHLByUShortDE
	ld hl, sp+$76
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_6cfe6
	dec bc
.asm_6cfe6
	push bc
	push hl
	ld hl, $0
	push hl
	ld hl, Init
	push hl
	call MultiplyLongsFromStack
	ld hl, sp+$7b
	ld l, [hl]
	ld h, $0
	ld bc, $0
	inc h
	dec h
	bit 7, h
	jr z, .asm_6d002
	dec bc
.asm_6d002
	push bc
	push hl
	call AddLongsFromStack
	ld hl, $82
	add hl, sp
	call PutLongFromStackToHL
	ld hl, sp+$78
	ld a, [hl]
	and $80
	jp z, Func_6d025
	ld hl, $0
	push hl
	ld hl, $1
	push hl
	ld hl, $82
	add hl, sp
	call AddLongs
Func_6d025: ; 6d025 (1b:5025)
	ld hl, $87
	add hl, sp
	ld [hl], $0
Func_6d02b: ; 6d02b (1b:502b)
	ld hl, $87
	add hl, sp
	ld a, [hl]
	cp $2
	jp nc, Func_6d0be
	ld hl, $87
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$7a
	add hl, de
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $1
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_6d074
	ld hl, $0
	push hl
	ld hl, $1
	push hl
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$7e
	add hl, de
	call PutLongFromStackToHL
	jp Func_6d0b0

Func_6d074: ; 6d074 (1b:5074)
	ld hl, $0
	push hl
	ld hl, $3e7
	push hl
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$7e
	add hl, de
	call PutLongFromHLOnStack
	call CompareStackLongs_Signed
	jp nc, Func_6d0b0
	ld hl, $0
	push hl
	ld hl, $3e7
	push hl
	ld hl, $8b
	add hl, sp
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$7e
	add hl, de
	call PutLongFromStackToHL
Func_6d0b0: ; 6d0b0 (1b:50b0)
	ld hl, $87
	add hl, sp
	ld a, [hl]
	inc a
	ld hl, $87
	add hl, sp
	ld [hl], a
	jp Func_6d02b

Func_6d0be: ; 6d0be (1b:50be)
	ld e, $4
	ld a, $f
	call SetStringStartState
	ld hl, sp+$7a
	call PutLongFromHLOnStack
	ld hl, Data_6d153
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld e, $d
	ld a, $f
	call SetStringStartState
	ld hl, sp+$7e
	call PutLongFromHLOnStack
	ld hl, Data_6d156
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, sp+$7a
	call PutLongFromHLOnStack
	ld hl, $82
	add hl, sp
	call PutLongFromHLOnStack
	call CompareStackLongs
	jp nz, Func_6d11b
	ld hl, sp+$7a
	call PutLongFromHLOnStack
	pop bc
	pop af
	read_hl_from_sp_plus $90
	ld [hl], c
	inc hl
	ld [hl], b
	ld a, $2
	jp Func_6d14d

Func_6d11b: ; 6d11b (1b:511b)
	ld hl, sp+$7e
	call PutLongFromHLOnStack
	ld hl, sp+$7e
	call PutLongFromHLOnStack
	call CompareStackLongs_Signed
	jp nc, Func_6d13d
	ld hl, sp+$7a
	call PutLongFromHLOnStack
	pop bc
	pop af
	read_hl_from_sp_plus $90
	ld [hl], c
	inc hl
	ld [hl], b
	xor a
	jp Func_6d14d

Func_6d13d: ; 6d13d (1b:513d)
	ld hl, sp+$7e
	call PutLongFromHLOnStack
	pop bc
	pop af
	read_hl_from_sp_plus $90
	ld [hl], c
	inc hl
	ld [hl], b
	ld a, $1
Func_6d14d: ; 6d14d (1b:514d)
	ld hl, $90
	add hl, sp
	ld sp, hl
	ret

Data_6d153:
	TX_SNUM
	db $0

Data_6d156:
	TX_SNUM
	db $0

Data_6d159:
	dr $6d159, $6d167

Func_6d167: ; 6d167 (1b:5167)
	push bc
	push af
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld e, $5
	xor a
	call SetStringStartState
	ld hl, sp+$2
	ld [hl], $0
Func_6d17f: ; 6d17f (1b:517f)
	ld hl, sp+$2
	ld a, [hl]
	cp $2
	jp nc, Func_6d20f
	ld hl, sp+$3
	ld [hl], $27
	ld c, $0
Func_6d18d: ; 6d18d (1b:518d)
	ld a, c
	cp $8
	jp nc, Func_6d205
	ld e, $0
Func_6d195: ; 6d195 (1b:5195)
	ld a, e
	cp $8
	jp nc, Func_6d1d1
	push de
	ld hl, sp+$5
	ld a, [hl]
	ld l, e
	ld h, $0
	ld de, $b
	add hl, de
	push hl
	ld hl, sp+$6
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld e, c
	ld d, $0
	inc de
	add hl, de
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	decoord 0, 0
	add hl, de
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
	ld hl, sp+$3
	ld a, [hl]
	inc a
	ld hl, sp+$3
	ld [hl], a
	jp Func_6d195

Func_6d1d1: ; 6d1d1 (1b:51d1)
	inc c
	dec c
	jp nz, Func_6d1dd
	ld hl, sp+$3
	ld [hl], $34
	jp Func_6d201

Func_6d1dd: ; 6d1dd (1b:51dd)
	ld a, c
	cp $1
	jp nz, Func_6d1ea
	ld hl, sp+$3
	ld [hl], $42
	jp Func_6d201

Func_6d1ea: ; 6d1ea (1b:51ea)
	ld a, c
	cp $2
	jp nz, Func_6d1f7
	ld hl, sp+$3
	ld [hl], $52
	jp Func_6d201

Func_6d1f7: ; 6d1f7 (1b:51f7)
	ld a, c
	cp $6
	jp nz, Func_6d201
	ld hl, sp+$3
	ld [hl], $75
Func_6d201: ; 6d201 (1b:5201)
	inc c
	jp Func_6d18d

Func_6d205: ; 6d205 (1b:5205)
	ld hl, sp+$2
	ld a, [hl]
	inc a
	ld hl, sp+$2
	ld [hl], a
	jp Func_6d17f

Func_6d20f: ; 6d20f (1b:520f)
	call WaitVideoTransfer
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6d234
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
Func_6d234: ; 6d234 (1b:5234)
	ld a, $1
	ld [wPoncotPicAlignment], a
	pop af
	push af
	or a
	jp z, Func_6d253
	cp $1
	jp nz, Func_6d276
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6d276
Func_6d253: ; 6d253 (1b:5253)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	ld c, l
	ld b, h
	pop de
	jp Func_6d296

Func_6d276: ; 6d276 (1b:5276)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
Func_6d296: ; 6d296 (1b:5296)
	push bc
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	pop bc
	ld hl, $c
	add hl, bc
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	ld a, [wSystemType]
	cp $1
	jp z, Func_6d2e2
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_6d2eb
Func_6d2e2: ; 6d2e2 (1b:52e2)
	ld de, $e
	ld hl, Data_6d159
	call Func_2b7d
Func_6d2eb: ; 6d2eb (1b:52eb)
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $1
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	reg16swap de, hl
	ld hl, $a
	call FarCall
	call WaitVideoTransfer
	pop af
	ld c, a
	ld e, $1
	ld a, $1
	call Func_6d350
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	ret

Func_6d350: ; 6d350 (1b:5350)
	push bc
	push de
	ld e, $0
	ld hl, sp+$2
	ld [hl], $9
	ld c, a
	ld b, $0
	ld l, e
	ld h, $0
	ld de, $d00
	add hl, de
	ld de, $3
	call Func_2230
	pop de
	ld c, e
	ld b, $0
	ld hl, sp+$0
	ld l, [hl]
	ld h, $0
	ld de, $d00
	add hl, de
	ld de, $3
	call Func_2230
	pop bc
	ret

Func_6d37d:
	ld a, [wLCDC]
	ld [rLCDC], a
	ld hl, rIE
	res 1, [hl]
	ld hl, rIF
	res 1, [hl]
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	ret

Func_6d395: ; 6d395 (1b:5395)
	push bc
	push bc
	push af
	cp $2
	jp nz, Func_6d3ac
	callba_hli Func_10766
	xor a
Func_6d3ac: ; 6d3ac (1b:53ac)
	pop af
	push af
	cp $1
	jp nz, Func_6d3c7
	set_farcall_addrs_hli Func_105ce
	xor a
	call FarCall
	ld e, $1
	jp Func_6d3d7

Func_6d3c7: ; 6d3c7 (1b:53c7)
	callba_hli Func_1028b
	ld e, $0
Func_6d3d7: ; 6d3d7 (1b:53d7)
	push de
	call FillVisibleAreaWithBlankTile
	xor a
	ld [wSCX2], a
	ld [wSCX], a
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_6c011
	pop de
Func_6d3f5: ; 6d3f5 (1b:53f5)
	push de
	ld a, e
	call Func_6e77b
	ld a, $e
	call OverworldPlaySong
	pop de
	push de
	ld a, e
	ld hl, sp+$4
	reg16swap de, hl
	call Func_6d723
	ld hl, sp+$6
	ld [hl], a
	pop de
	push de
	ld a, e
	cp $1
	jp nz, Func_6d4f3
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6d47f
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	call WaitVideoTransfer
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	call WaitVideoTransfer
	jp Func_6d4f0

Func_6d47f: ; 6d47f (1b:547f)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	call WaitVideoTransfer
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	call WaitVideoTransfer
	ld hl, sp+$6
	ld a, [hl]
	or a
	jp nz, Func_6d4e4
	ld hl, sp+$6
	ld [hl], $1
	jp Func_6d4f0

Func_6d4e4: ; 6d4e4 (1b:54e4)
	ld hl, sp+$6
	ld a, [hl]
	cp $1
	jp nz, Func_6d4f0
	ld hl, sp+$6
	ld [hl], $0
Func_6d4f0: ; 6d4f0 (1b:54f0)
	jp Func_6d54a

Func_6d4f3: ; 6d4f3 (1b:54f3)
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	xor a
	call FarCall
	call WaitVideoTransfer
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	push de
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld hl, $c
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld a, $1
	call FarCall
	call WaitVideoTransfer
Func_6d54a: ; 6d54a (1b:554a)
	pop de
	ld hl, sp+$4
	ld a, [hl]
	cp $2
	jp z, Func_6d556
	jp Func_6d599

Func_6d556: ; 6d556 (1b:5556)
	push de
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld de, Data_6d62f
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	xor a
	pop de
Func_6d586: ; 6d586 (1b:5586)
	cp $3c
	jp nc, Func_6d596
	push de
	push af
	call NextOverworldFrame
	pop af
	inc a
	pop de
	jp Func_6d586

Func_6d596: ; 6d596 (1b:5596)
	jp Func_6d3f5

Func_6d599: ; 6d599 (1b:5599)
	push de
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_107d7
	pop de
	push de
	ld c, e
	ld b, $0
	inc b
	call GetHLAtSPPlus6
	reg16swap de, hl
	ld hl, sp+$6
	ld a, [hl]
	call FarCall
	pop de
	push de
	ld a, e
	cp $1
	jp nz, Func_6d5c6
	call Func_6c044
Func_6d5c6: ; 6d5c6 (1b:55c6)
	pop de
	pop af
	push de
	cp $2
	jp nz, Func_6d5dc
	callba_hli Func_107b8
Func_6d5dc: ; 6d5dc (1b:55dc)
	pop de
	ld a, e
	cp $1
	jp nz, Func_6d61c
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6d5fa
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	jp Func_6d62c

Func_6d5fa: ; 6d5fa (1b:55fa)
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp nz, Func_6d608
	ld hl, sp+$2
	ld [hl], $1
	jp Func_6d614

Func_6d608: ; 6d608 (1b:5608)
	ld hl, sp+$2
	ld a, [hl]
	cp $1
	jp nz, Func_6d614
	ld hl, sp+$2
	ld [hl], $0
Func_6d614: ; 6d614 (1b:5614)
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	jp Func_6d62c

Func_6d61c: ; 6d61c (1b:561c)
	ld hl, sp+$2
	ld a, [hl]
	or a
	jp nz, Func_6d629
	ld hl, $0
	jp Func_6d62c

Func_6d629: ; 6d629 (1b:5629)
	ld hl, $1
Func_6d62c: ; 6d62c (1b:562c)
	pop bc
	pop bc
	ret

Data_6d62f:
	db "(ひきわけなのてﾞ もういちとﾞ)", $0

Func_6d641: ; 6d641 (1b:5641)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8f00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	call ClearSprites
	ld a, [wc2cd]
	or a
	jp nz, Func_6d67e
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_6d686

Func_6d67e: ; 6d67e (1b:567e)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_6d686: ; 6d686 (1b:5686)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6d6ba
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_667d
	ld a, [wc2cd]
	ld c, a
	ld b, $0
	ld de, $1f1f
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_6d6ba: ; 6d6ba (1b:56ba)
	set_farcall_addrs_hli Func_667d
	ld bc, $2
	ld de, $1311
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, $1b
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, $537d
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $82
	ld [wNextVBlankFlags], a
Func_6d705: ; 6d705 (1b:5705)
	ld a, [wNextVBlankFlags]
	and $80
	jp nz, Func_6d705
	xor a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_6c011
	call WaitVideoTransfer
	ret

Func_6d723: ; 6d723 (1b:5723)
	push af
	push de
	add sp, -$2a
	ld hl, sp+$2d
	ld a, [hl]
	or a
	jp nz, Func_6d739
	ld hl, sp+$22
	ld [hl], $0
	ld hl, sp+$21
	ld [hl], $1
	jp Func_6d75b

Func_6d739: ; 6d739 (1b:5739)
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6d753
	ld hl, sp+$22
	ld [hl], $0
	ld hl, sp+$21
	ld [hl], $1
	jp Func_6d75b

Func_6d753: ; 6d753 (1b:5753)
	ld hl, sp+$22
	ld [hl], $1
	ld hl, sp+$21
	ld [hl], $0
Func_6d75b: ; 6d75b (1b:575b)
	ld hl, $0
	write_hl_to_sp_plus $13
	write_hl_to_sp_plus $11
	ld hl, sp+$7
	xor a
	ld [hl], a
	ld hl, sp+$8
	ld [hl], a
	ld hl, sp+$28
	ld [hl], a
	ld hl, sp+$27
	ld [hl], a
	ld hl, $0
	write_hl_to_sp_plus $27
	write_hl_to_sp_plus $25
	ld hl, sp+$5
	xor a
	ld [hl], a
	ld hl, sp+$4
	ld [hl], a
	ld hl, sp+$1c
	ld a, $b0
	ld [hl], a
	ld hl, sp+$1b
	ld [hl], a
	ld hl, sp+$1d
	ld [hl], $0
	ld a, [hl]
	ld hl, sp+$1e
	ld [hl], a
	ld hl, $ff
	write_hl_to_sp_plus $1b
	write_hl_to_sp_plus $19
	ld hl, $0
	write_hl_to_sp_plus $f
	write_hl_to_sp_plus $d
	ld hl, sp+$22
	ld a, [hl]
	or a
	jp nz, Func_6d836
	set_farcall_addrs_hli Func_10a8b
	ld hl, sp+$22
	ld a, [hl]
	call FarCall
	ld hl, sp+$22
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1f
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_10a8b
	ld hl, sp+$21
	ld a, [hl]
	call FarCall
	ld hl, sp+$21
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1f
	add hl, de
	ld [hl], a
	ld c, $0
Func_6d7e8: ; 6d7e8 (1b:57e8)
	ld a, c
	cp $2
	jp nc, Func_6d836
	ld e, c
	ld d, $0
	ld hl, sp+$1f
	add hl, de
	ld a, [hl]
	cp $8
	jp z, Func_6d82a
	cp $4
	jp z, Func_6d81f
	cp $2
	jp z, Func_6d814
	cp $1
	jp nz, Func_6d832
	ld e, c
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld [hl], $3c
	jp Func_6d832

Func_6d814: ; 6d814 (1b:5814)
	ld e, c
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld [hl], $78
	jp Func_6d832

Func_6d81f: ; 6d81f (1b:581f)
	ld e, c
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld [hl], $b4
	jp Func_6d832

Func_6d82a: ; 6d82a (1b:582a)
	ld e, c
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld [hl], $f0
Func_6d832: ; 6d832 (1b:5832)
	inc c
	jp Func_6d7e8

Func_6d836: ; 6d836 (1b:5836)
	ld hl, sp+$2d
	ld a, [hl]
	cp $1
	jp nz, Func_6d880
	ld hl, sp+$22
	ld a, [hl]
	or a
	jp nz, Func_6d864
	ld c, $2
	ld hl, sp+$1f
	reg16swap de, hl
	ld hl, $2
	call Func_6c030
	ld c, $2
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, $2
	call Func_6c030
	jp Func_6d880

Func_6d864: ; 6d864 (1b:5864)
	ld c, $2
	ld hl, sp+$1f
	reg16swap de, hl
	ld hl, $2
	call Func_6c01c
	ld c, $2
	ld hl, sp+$9
	reg16swap de, hl
	ld hl, $2
	call Func_6c01c
Func_6d880: ; 6d880 (1b:5880)
	callba_hli WaitAorBButtonOverworld_17a44
	ld hl, sp+$2d
	ld a, [hl]
	cp $1
	jp nz, Func_6d8c1
	ld hl, sp+$6
	ld [hl], $ff
	ld a, [wc319]
	cp $81
	jp nz, Func_6d8b3
	ld c, $2
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $1
	call Func_6c030
	jp Func_6d8c1

Func_6d8b3: ; 6d8b3 (1b:58b3)
	ld c, $2
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $1
	call Func_6c01c
Func_6d8c1: ; 6d8c1 (1b:58c1)
	ld hl, sp+$22
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1f
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld l, [hl]
	ld h, $0
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	ld hl, sp+$22
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$21
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1f
	add hl, de
	ld l, [hl]
	ld h, $0
	push hl
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld l, [hl]
	ld h, $0
	pop de
	call MultiplyHLbyDE
	ld c, l
	ld b, h
	ld hl, sp+$21
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$b
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	xor a
	ld c, $0
Func_6d91e: ; 6d91e (1b:591e)
	ld hl, sp+$22
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld a, [hl]
	cp $20
	jp c, Func_6d958
	push bc
	call GetJoyPressed
	pop bc
	and $10
	jp z, Func_6d956
	inc c
	dec c
	jp nz, Func_6d953
	ld c, $1
	ld hl, sp+$22
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	ld a, [hl]
	add $1
	ld [hl], a
	inc hl
	ld a, [hl]
	adc $0
	ld [hl], a
Func_6d953: ; 6d953 (1b:5953)
	jp Func_6d958

Func_6d956: ; 6d956 (1b:5956)
	ld c, $0
Func_6d958: ; 6d958 (1b:5958)
	push bc
	ld hl, sp+$24
	ld a, [hl]
	or a
	jp nz, Func_6de4e
	ld hl, sp+$1f
	ld l, [hl]
	push hl
	ld hl, sp+$22
	ld l, [hl]
	push hl
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld a, [hl]
	add $70
	ld l, a
	push hl
	ld c, $48
	ld hl, sp+$2a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	add hl, de
	ld a, [hl]
	add $20
	ld e, a
	ld a, $48
	call Func_6ec6a
	pop bc
	pop bc
	pop bc
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1d
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6d9d0
	ld hl, sp+$24
	ld l, [hl]
	push hl
	ld hl, sp+$26
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$25
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$21
	add hl, de
	reg16swap de, hl
	xor a
	call Func_6e6d4
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	jp Func_6dbea

Func_6d9d0: ; 6d9d0 (1b:59d0)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6dbea
	ld hl, sp+$20
	ld a, [hl]
	inc a
	ld hl, sp+$20
	ld [hl], a
	ld hl, sp+$20
	ld a, [hl]
	cp $4
	jp nz, Func_6d9f1
	ld hl, sp+$20
	ld [hl], $0
Func_6d9f1: ; 6d9f1 (1b:59f1)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6db5b
	ld hl, sp+$2f
	ld a, [hl]
	cp $1
	jp nz, Func_6da12
	ld hl, sp+$9
	ld a, [hl]
	or a
	jp nz, Func_6da12
	ld hl, sp+$9
	ld [hl], $1
Func_6da12: ; 6da12 (1b:5a12)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc a
	inc hl
	or [hl]
	jp nz, Func_6db45
	ld hl, sp+$2f
	ld a, [hl]
	or a
	jp nz, Func_6db1f
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_6da73
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_6db1c

Func_6da73: ; 6da73 (1b:5a73)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $28
	call CompareHLtoDE
	jp nc, Func_6dab6
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $4
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6db1c

Func_6dab6: ; 6dab6 (1b:5ab6)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $3c
	call CompareHLtoDE
	jp nc, Func_6daf9
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $8
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6db1c

Func_6daf9: ; 6daf9 (1b:5af9)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $10
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6db1c: ; 6db1c (1b:5b1c)
	jp Func_6db45

Func_6db1f: ; 6db1f (1b:5b1f)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
Func_6db45: ; 6db45 (1b:5b45)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
Func_6db5b: ; 6db5b (1b:5b5b)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	push hl
	ld hl, sp+$26
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1b
	add hl, de
	ld e, [hl]
	push de
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$2a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$27
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$2a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	reg16swap de, hl
	xor a
	call Func_6e72f
	pop bc
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6dbea
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_6dbea
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6dbea: ; 6dbea (1b:5bea)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1d
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6dc30
	ld hl, sp+$23
	ld l, [hl]
	push hl
	ld hl, sp+$25
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$25
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$21
	add hl, de
	reg16swap de, hl
	ld a, $1
	call Func_6e6d4
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	jp Func_6de4b

Func_6dc30: ; 6dc30 (1b:5c30)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6de4b
	ld hl, sp+$1f
	ld a, [hl]
	inc a
	ld hl, sp+$1f
	ld [hl], a
	ld hl, sp+$1f
	ld a, [hl]
	cp $4
	jp nz, Func_6dc51
	ld hl, sp+$1f
	ld [hl], $0
Func_6dc51: ; 6dc51 (1b:5c51)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6ddbb
	ld hl, sp+$2f
	ld a, [hl]
	cp $1
	jp nz, Func_6dc72
	ld hl, sp+$a
	ld a, [hl]
	or a
	jp nz, Func_6dc72
	ld hl, sp+$a
	ld [hl], $1
Func_6dc72: ; 6dc72 (1b:5c72)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc a
	inc hl
	or [hl]
	jp nz, Func_6dda5
	ld hl, sp+$2f
	ld a, [hl]
	or a
	jp nz, Func_6dd7f
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_6dcd3
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_6dd7c

Func_6dcd3: ; 6dcd3 (1b:5cd3)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $28
	call CompareHLtoDE
	jp nc, Func_6dd16
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $4
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6dd7c

Func_6dd16: ; 6dd16 (1b:5d16)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $3c
	call CompareHLtoDE
	jp nc, Func_6dd59
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $8
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6dd7c

Func_6dd59: ; 6dd59 (1b:5d59)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $10
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6dd7c: ; 6dd7c (1b:5d7c)
	jp Func_6dda5

Func_6dd7f: ; 6dd7f (1b:5d7f)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
Func_6dda5: ; 6dda5 (1b:5da5)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
Func_6ddbb: ; 6ddbb (1b:5dbb)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	push hl
	ld hl, sp+$25
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1b
	add hl, de
	ld e, [hl]
	push de
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$27
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	reg16swap de, hl
	ld a, $1
	call Func_6e72f
	pop bc
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6de4b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_6de4b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6de4b: ; 6de4b (1b:5e4b)
	jp Func_6e339

Func_6de4e: ; 6de4e (1b:5e4e)
	ld hl, sp+$20
	ld l, [hl]
	push hl
	ld hl, sp+$21
	ld l, [hl]
	push hl
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld a, [hl]
	add $20
	ld l, a
	push hl
	ld c, $48
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$c
	add hl, de
	ld a, [hl]
	add $70
	ld e, a
	ld a, $48
	call Func_6ec6a
	pop bc
	pop bc
	pop bc
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1d
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6debf
	ld hl, sp+$23
	ld l, [hl]
	push hl
	ld hl, sp+$25
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$25
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$21
	add hl, de
	reg16swap de, hl
	ld a, $1
	call Func_6e6d4
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	jp Func_6e0da

Func_6debf: ; 6debf (1b:5ebf)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6e0da
	ld hl, sp+$1f
	ld a, [hl]
	inc a
	ld hl, sp+$1f
	ld [hl], a
	ld hl, sp+$1f
	ld a, [hl]
	cp $4
	jp nz, Func_6dee0
	ld hl, sp+$1f
	ld [hl], $0
Func_6dee0: ; 6dee0 (1b:5ee0)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6e04a
	ld hl, sp+$2f
	ld a, [hl]
	cp $1
	jp nz, Func_6df01
	ld hl, sp+$a
	ld a, [hl]
	or a
	jp nz, Func_6df01
	ld hl, sp+$a
	ld [hl], $1
Func_6df01: ; 6df01 (1b:5f01)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc a
	inc hl
	or [hl]
	jp nz, Func_6e034
	ld hl, sp+$2f
	ld a, [hl]
	or a
	jp nz, Func_6e00e
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_6df62
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_6e00b

Func_6df62: ; 6df62 (1b:5f62)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $28
	call CompareHLtoDE
	jp nc, Func_6dfa5
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $4
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6e00b

Func_6dfa5: ; 6dfa5 (1b:5fa5)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $3c
	call CompareHLtoDE
	jp nc, Func_6dfe8
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $8
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6e00b

Func_6dfe8: ; 6dfe8 (1b:5fe8)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $10
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6e00b: ; 6e00b (1b:600b)
	jp Func_6e034

Func_6e00e: ; 6e00e (1b:600e)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
Func_6e034: ; 6e034 (1b:6034)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
Func_6e04a: ; 6e04a (1b:604a)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	push hl
	ld hl, sp+$25
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1b
	add hl, de
	ld e, [hl]
	push de
	ld hl, sp+$27
	ld e, [hl]
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$27
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$29
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	reg16swap de, hl
	ld a, $1
	call Func_6e72f
	pop bc
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6e0da
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_6e0da
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6e0da: ; 6e0da (1b:60da)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$1d
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6e11f
	ld hl, sp+$24
	ld l, [hl]
	push hl
	ld hl, sp+$26
	ld e, [hl]
	ld d, $0
	ld hl, sp+$8
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$25
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$21
	add hl, de
	reg16swap de, hl
	xor a
	call Func_6e6d4
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	jp Func_6e339

Func_6e11f: ; 6e11f (1b:611f)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $1
	jp c, Func_6e339
	ld hl, sp+$20
	ld a, [hl]
	inc a
	ld hl, sp+$20
	ld [hl], a
	ld hl, sp+$20
	ld a, [hl]
	cp $4
	jp nz, Func_6e140
	ld hl, sp+$20
	ld [hl], $0
Func_6e140: ; 6e140 (1b:6140)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6e2aa
	ld hl, sp+$2f
	ld a, [hl]
	cp $1
	jp nz, Func_6e161
	ld hl, sp+$9
	ld a, [hl]
	or a
	jp nz, Func_6e161
	ld hl, sp+$9
	ld [hl], $1
Func_6e161: ; 6e161 (1b:6161)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc a
	inc hl
	or [hl]
	jp nz, Func_6e294
	ld hl, sp+$2f
	ld a, [hl]
	or a
	jp nz, Func_6e26e
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_6e1c2
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	jp Func_6e26b

Func_6e1c2: ; 6e1c2 (1b:61c2)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $28
	call CompareHLtoDE
	jp nc, Func_6e205
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $4
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6e26b

Func_6e205: ; 6e205 (1b:6205)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $3c
	call CompareHLtoDE
	jp nc, Func_6e248
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $8
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	jp Func_6e26b

Func_6e248: ; 6e248 (1b:6248)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld bc, $10
	ld [hl], c
	inc hl
	ld [hl], b
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6e26b: ; 6e26b (1b:626b)
	jp Func_6e294

Func_6e26e: ; 6e26e (1b:626e)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld de, $2
	ld [hl], e
	inc hl
	ld [hl], d
Func_6e294: ; 6e294 (1b:6294)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	sub $1
	ld [hl], a
	inc hl
	ld a, [hl]
	sbc $0
	ld [hl], a
Func_6e2aa: ; 6e2aa (1b:62aa)
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	push hl
	ld hl, sp+$26
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$1b
	add hl, de
	ld e, [hl]
	push de
	ld hl, sp+$28
	ld e, [hl]
	ld d, $0
	ld hl, sp+$a
	add hl, de
	ld l, [hl]
	push hl
	ld hl, sp+$2a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$27
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$2a
	ld e, [hl]
	ld d, $0
	ld hl, sp+$11
	add hl, de
	reg16swap de, hl
	xor a
	call Func_6e72f
	pop bc
	pop bc
	pop bc
	ld a, l
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld [hl], a
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$b
	add hl, de
	ld a, [hl]
	cp $20
	jp nc, Func_6e339
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp nz, Func_6e339
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$19
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
Func_6e339: ; 6e339 (1b:6339)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$29
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_6e39e
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$21
	add hl, de
	ld c, [hl]
	ld b, $0
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$25
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$25
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $f0
	call CompareHLtoDE
	jp nc, Func_6e39e
	ld e, $0
	ld a, $1
	call Func_6edcf
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6e394
	ld e, $0
	ld a, $1
	call Func_6ee8b
Func_6e394: ; 6e394 (1b:6394)
	ld hl, sp+$24
	ld e, [hl]
	ld d, $0
	ld hl, sp+$29
	add hl, de
	ld [hl], $1
Func_6e39e: ; 6e39e (1b:639e)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$29
	add hl, de
	ld a, [hl]
	or a
	jp nz, Func_6e403
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$21
	add hl, de
	ld c, [hl]
	ld b, $0
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$25
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$25
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $f0
	call CompareHLtoDE
	jp nc, Func_6e403
	ld e, $1
	ld a, $1
	call Func_6edcf
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6e3f9
	ld e, $1
	ld a, $1
	call Func_6ee8b
Func_6e3f9: ; 6e3f9 (1b:63f9)
	ld hl, sp+$23
	ld e, [hl]
	ld d, $0
	ld hl, sp+$29
	add hl, de
	ld [hl], $1
Func_6e403: ; 6e403 (1b:6403)
	pop bc
	ld hl, sp+$21
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld a, [hl]
	cp $1
	jp nc, Func_6e5da
	ld hl, sp+$22
	ld e, [hl]
	ld d, $0
	ld hl, sp+$9
	add hl, de
	ld a, [hl]
	cp $1
	jp nc, Func_6e5da
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_6c011
	call Func_6d641
	call FillVisibleAreaWithBlankTile
	ld hl, sp+$2d
	ld a, [hl]
	cp $1
	jp nz, Func_6e4a7
	ld hl, sp+$22
	ld a, [hl]
	or a
	jp nz, Func_6e475
	ld c, $1
	ld hl, sp+$22
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	reg16swap de, hl
	ld hl, $2
	call Func_6c030
	ld c, $1
	ld hl, sp+$21
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	reg16swap de, hl
	ld hl, $2
	call Func_6c01c
	jp Func_6e4a7

Func_6e475: ; 6e475 (1b:6475)
	ld c, $1
	ld hl, sp+$21
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	reg16swap de, hl
	ld hl, $2
	call Func_6c01c
	ld c, $1
	ld hl, sp+$22
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	reg16swap de, hl
	ld hl, $2
	call Func_6c030
Func_6e4a7: ; 6e4a7 (1b:64a7)
	xor a
Func_6e4a8: ; 6e4a8 (1b:64a8)
	cp $2
	jp nc, Func_6e587
	push af
	or a
	jp nz, Func_6e4bd
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	call WriteHLToSPPlus6
	jp Func_6e4c5

Func_6e4bd: ; 6e4bd (1b:64bd)
	ld hl, sp+$23
	ld l, [hl]
	ld h, $0
	call WriteHLToSPPlus6
Func_6e4c5: ; 6e4c5 (1b:64c5)
	call GetHLAtSPPlus6
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $14
	call CompareHLtoDE
	jp nc, Func_6e4e6
	ld bc, $0
	jp Func_6e52b

Func_6e4e6: ; 6e4e6 (1b:64e6)
	call GetHLAtSPPlus6
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $28
	call CompareHLtoDE
	jp nc, Func_6e507
	ld bc, $7c
	jp Func_6e52b

Func_6e507: ; 6e507 (1b:6507)
	call GetHLAtSPPlus6
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$11
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $3c
	call CompareHLtoDE
	jp nc, Func_6e528
	ld bc, $f8
	jp Func_6e52b

Func_6e528: ; 6e528 (1b:6528)
	ld bc, $1f0
Func_6e52b: ; 6e52b (1b:652b)
	ld hl, $0
	call WriteHLToSPPlus4
Func_6e531: ; 6e531 (1b:6531)
	ld hl, $ffc0
	add hl, bc
	push hl
	call GetHLAtSPPlus6
	pop de
	call CompareHLtoDE
	jp nc, Func_6e582
	push bc
	call GetHLAtSPPlus8
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, e
	sub $60
	ld a, d
	sbc $ea
	jp nc, Func_6e577
	call GetHLAtSPPlus8
	reg16swap de, hl
	ld hl, sp+$23
	add hl, de
	ld c, [hl]
	ld b, $0
	call GetHLAtSPPlus8
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$f
	add hl, de
	ld a, [hl]
	add c
	ld [hl], a
	inc hl
	ld a, [hl]
	adc b
	ld [hl], a
Func_6e577: ; 6e577 (1b:6577)
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	pop bc
	jp Func_6e531

Func_6e582: ; 6e582 (1b:6582)
	pop af
	inc a
	jp Func_6e4a8

Func_6e587: ; 6e587 (1b:6587)
	ld hl, sp+$21
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$b
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$24
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$d
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld hl, sp+$26
	ld l, [hl]
	push hl
	read_hl_from_sp_plus $32
	ld c, l
	ld b, h
	ld hl, sp+$28
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld a, [hl]
	ld hl, sp+$27
	ld l, [hl]
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$15
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_6e5ed
	pop bc
	pop bc
	pop bc
	jp Func_6e5ea

Func_6e5da: ; 6e5da (1b:65da)
	push bc
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_6c011
	pop bc
	jp Func_6d91e

Func_6e5ea: ; 6e5ea (1b:65ea)
	add sp, $2e
	ret

Func_6e5ed: ; 6e5ed (1b:65ed)
	push af
	push de
	push bc
	push bc
	push bc
	set_farcall_addrs_hli Func_1099a
	xor a
	call FarCall
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli Func_1099a
	ld a, $1
	call FarCall
	reg16swap de, hl
	pop bc
	ld hl, sp+$c
	ld a, [hl]
	or a
	jp nz, Func_6e653
	push de
	ld l, c
	ld h, b
	ld de, $a
	call DivideHLByDESigned
	push hl
	ld hl, sp+$d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $14
	add hl, bc
	pop de
	add hl, de
	call WriteHLToSPPlus8
	pop hl
	ld de, $a
	call DivideHLByDESigned
	push hl
	ld hl, sp+$8
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $14
	add hl, bc
	pop de
	add hl, de
	call WriteHLToSPPlus4
	jp Func_6e685

Func_6e653: ; 6e653 (1b:6653)
	push bc
	reg16swap de, hl
	ld de, $a
	call DivideHLByDESigned
	push hl
	ld hl, sp+$d
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $14
	add hl, bc
	pop de
	add hl, de
	call WriteHLToSPPlus6
	pop hl
	ld de, $a
	call DivideHLByDESigned
	push hl
	ld hl, sp+$8
	ld c, [hl]
	ld b, $0
	read_hl_from_sp_plus $14
	add hl, bc
	pop de
	add hl, de
	call WriteHLToSPPlus6
Func_6e685: ; 6e685 (1b:6685)
	pop bc
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus4
	pop de
	call CompareHLtoDE
	jp nc, Func_6e6a4
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld l, c
	ld h, b
	ld [hl], e
	inc hl
	ld [hl], d
	xor a
	jp Func_6e6cf

Func_6e6a4: ; 6e6a4 (1b:66a4)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call CompareHLtoDE
	jp nc, Func_6e6c1
	pop hl
	push hl
	reg16swap de, hl
	ld l, c
	ld h, b
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, $1
	jp Func_6e6cf

Func_6e6c1: ; 6e6c1 (1b:66c1)
	call GetHLAtSPPlus4
	reg16swap de, hl
	ld l, c
	ld h, b
	ld [hl], e
	inc hl
	ld [hl], d
	ld a, $2
Func_6e6cf: ; 6e6cf (1b:66cf)
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_6e6d4: ; 6e6d4 (1b:66d4)
	cp $1
	jp z, Func_6e6e8
	or a
	jp nz, Func_6e6f0
	ld a, [bc]
	ld hl, wc2e4 + 1
	add [hl]
	ld [wc2e4 + 1], a
	jp Func_6e6f0

Func_6e6e8: ; 6e6e8 (1b:66e8)
	ld a, [bc]
	ld hl, wc2e4
	add [hl]
	ld [wc2e4], a
Func_6e6f0: ; 6e6f0 (1b:66f0)
	ld a, [de]
	cp $21
	jp c, Func_6e700
	ld l, e
	ld h, d
	ld a, [bc]
	ld e, a
	ld a, [hl]
	sub e
	ld [hl], a
	jp Func_6e729

Func_6e700: ; 6e700 (1b:6700)
	ld a, [de]
	cp $19
	jp c, Func_6e719
	ld l, e
	ld h, d
	ld a, [bc]
	ld e, a
	ld a, [hl]
	sub e
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	ld l, c
	ld h, b
	sub [hl]
	ld hl, sp+$2
	ld [hl], a
	jp Func_6e729

Func_6e719: ; 6e719 (1b:6719)
	reg16swap de, hl
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	dec a
	ld hl, sp+$2
	ld [hl], a
Func_6e729: ; 6e729 (1b:6729)
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ret

Func_6e72f: ; 6e72f (1b:672f)
	push af
	ld a, [de]
	ld a, [de]
	cp $20
	jp nc, Func_6e751
	ld hl, sp+$6
	ld a, [hl]
	or a
	jp nz, Func_6e74e
	reg16swap de, hl
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
	ld hl, sp+$4
	ld a, [hl]
	inc a
	ld hl, sp+$4
	ld [hl], a
Func_6e74e: ; 6e74e (1b:674e)
	jp Func_6e75a

Func_6e751: ; 6e751 (1b:6751)
	reg16swap de, hl
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
Func_6e75a: ; 6e75a (1b:675a)
	ld hl, sp+$1
	ld a, [hl]
	or a
	jp nz, Func_6e76c
	ld a, [bc]
	ld hl, wc2e4 + 1
	add [hl]
	ld [wc2e4 + 1], a
	jp Func_6e774

Func_6e76c: ; 6e76c (1b:676c)
	ld a, [bc]
	ld hl, wc2e4
	add [hl]
	ld [wc2e4], a
Func_6e774: ; 6e774 (1b:6774)
	ld hl, sp+$4
	ld l, [hl]
	ld h, $0
	pop bc
	ret

Func_6e77b: ; 6e77b (1b:677b)
	push af
	ld a, [rLCDC]
	ld l, a
	push hl
	set_farcall_addrs_hli Func_6183
	pop hl
	push hl
	ld a, l
	and $7f
	call FarCall
	call Func_6eb1f
	call Func_6e867
	pop hl
	pop af
	push hl
	cp $1
	jp nz, Func_6e7e0
	read_hl_from wCurRobotPointer
	ld de, $1c4
	add hl, de
	ld a, [hl]
	and $2
	jp z, Func_6e7c8
	ld l, $0
	push hl
	ld l, $0
	push hl
	ld l, $70
	push hl
	ld c, $48
	ld e, $20
	ld a, $48
	call Func_6ec6a
	pop bc
	pop bc
	pop bc
	jp Func_6e7dd

Func_6e7c8: ; 6e7c8 (1b:67c8)
	ld l, $0
	push hl
	ld l, $0
	push hl
	ld l, $20
	push hl
	ld c, $48
	ld e, $70
	ld a, $48
	call Func_6ec6a
	pop bc
	pop bc
	pop bc
Func_6e7dd: ; 6e7dd (1b:67dd)
	jp Func_6e7f5

Func_6e7e0: ; 6e7e0 (1b:67e0)
	ld l, $0
	push hl
	ld l, $0
	push hl
	ld l, $70
	push hl
	ld c, $48
	ld e, $20
	ld a, $48
	call Func_6ec6a
	pop bc
	pop bc
	pop bc
Func_6e7f5: ; 6e7f5 (1b:67f5)
	set_farcall_addrs_hli Func_6183
	pop hl
	ld a, l
	call FarCall
	ld a, [wc2cd]
	or a
	jp nz, Func_6e817
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_6e81f

Func_6e817: ; 6e817 (1b:6817)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_6e81f: ; 6e81f (1b:681f)
	call WaitVideoTransfer
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	call Func_6c011
	ld a, $1
	ld [wc2e1], a
	ld a, $48
	ld [wc2e2], a
	ld a, $90
	ld [wc2e3], a
	xor a
	ld [wc2e4], a
	xor a
	ld [wc2e4 + 1], a
	call Func_6c011
	ld a, [wLCDC]
	or $2
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call EnableHBlank
	ret

Data_6e85b:
	dr $6e85b, $6e85f

Data_6e85f:
	dr $6e85f, $6e867

Func_6e867: ; 6e867 (1b:6867)
	add sp, -$e
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_6e85f
	ld bc, $8
	call MemCopy
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6e88b
	call Func_6e9d1
Func_6e88b: ; 6e88b (1b:688b)
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $a400
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8400
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f08
	ld hl, $8
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8100
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f09
	ld hl, $9
	call FarCall
	ld a, [wc2cd]
	or a
	jp nz, Func_6e8fc
	hlbgcoord 0, 0
	write_hl_to_sp_plus $c
	jp Func_6e903

Func_6e8fc: ; 6e8fc (1b:68fc)
	hlbgcoord 0, 0, vWindowMap
	write_hl_to_sp_plus $c
Func_6e903: ; 6e903 (1b:6903)
	xor a
Func_6e904: ; 6e904 (1b:6904)
	cp $4
	jp nc, Func_6e994
	push af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$a
	ld [hl], e
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	ld e, [hl]
	ld hl, sp+$b
	ld [hl], e
	xor a
Func_6e92a: ; 6e92a (1b:692a)
	cp $4
	jp nc, Func_6e98f
	push af
	ld e, $0
	ld c, $0
Func_6e934: ; 6e934 (1b:6934)
	ld a, c
	cp $2
	jp nc, Func_6e982
	ld hl, sp+$10
	ld [hl], $0
Func_6e93e: ; 6e93e (1b:693e)
	ld hl, sp+$10
	ld a, [hl]
	cp $2
	jp nc, Func_6e97e
	push de
	ld d, $0
	ld hl, Data_6e85b
	add hl, de
	ld a, [hl]
	ld hl, sp+$12
	ld e, [hl]
	ld d, $0
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, de
	push hl
	ld e, c
	ld d, $0
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, de
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $16
	pop de
	add hl, de
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
	ld hl, sp+$10
	ld a, [hl]
	inc a
	ld hl, sp+$10
	ld [hl], a
	jp Func_6e93e

Func_6e97e: ; 6e97e (1b:697e)
	inc c
	jp Func_6e934

Func_6e982: ; 6e982 (1b:6982)
	ld hl, sp+$d
	ld a, [hl]
	add $8
	ld hl, sp+$d
	ld [hl], a
	pop af
	inc a
	jp Func_6e92a

Func_6e98f: ; 6e98f (1b:698f)
	pop af
	inc a
	jp Func_6e904

Func_6e994: ; 6e994 (1b:6994)
	ld e, $0
	xor a
	call Func_6edcf
	ld e, $1
	xor a
	call Func_6edcf
	ld a, [wc2cd]
	or a
	jp nz, Func_6e9b6
	ld bc, $400
	debgcoord 0, 0
	hlbgcoord 0, 0, vWindowMap
	call CopyFromDEtoHL
	jp Func_6e9c2

Func_6e9b6: ; 6e9b6 (1b:69b6)
	ld bc, $400
	debgcoord 0, 0, vWindowMap
	hlbgcoord 0, 0
	call CopyFromDEtoHL
Func_6e9c2: ; 6e9c2 (1b:69c2)
	add sp, $e
	ret

Data_6e9c5:
	dr $6e9c5, $6e9c9

Data_6e9c9:
	dr $6e9c9, $6e9d1

Func_6e9d1: ; 6e9d1 (1b:69d1)
	add sp, -$e
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_6e9c9
	ld bc, $8
	call MemCopy
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $500
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld a, [wc2cd]
	ld c, a
	ld b, $0
	ld de, $1f08
	ld hl, $8
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld a, [wc2cd]
	ld c, a
	ld b, $0
	ld de, $1f09
	ld hl, $9
	call FarCall
	ld a, [wc2cd]
	or a
	jp nz, Func_6ea50
	hlbgcoord 0, 0
	write_hl_to_sp_plus $c
	jp Func_6ea57

Func_6ea50: ; 6ea50 (1b:6a50)
	hlbgcoord 0, 0, vWindowMap
	write_hl_to_sp_plus $c
Func_6ea57: ; 6ea57 (1b:6a57)
	xor a
Func_6ea58: ; 6ea58 (1b:6a58)
	cp $4
	jp nc, Func_6eae8
	push af
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$a
	ld [hl], e
	ld l, a
	ld h, $0
	add hl, hl
	reg16swap de, hl
	ld hl, sp+$2
	add hl, de
	ld e, [hl]
	ld hl, sp+$b
	ld [hl], e
	xor a
Func_6ea7e: ; 6ea7e (1b:6a7e)
	cp $4
	jp nc, Func_6eae3
	push af
	ld e, $0
	ld c, $0
Func_6ea88: ; 6ea88 (1b:6a88)
	ld a, c
	cp $2
	jp nc, Func_6ead6
	ld hl, sp+$10
	ld [hl], $0
Func_6ea92: ; 6ea92 (1b:6a92)
	ld hl, sp+$10
	ld a, [hl]
	cp $2
	jp nc, Func_6ead2
	push de
	ld d, $0
	ld hl, Data_6e9c5
	add hl, de
	ld a, [hl]
	ld hl, sp+$12
	ld e, [hl]
	ld d, $0
	ld hl, sp+$f
	ld l, [hl]
	ld h, $0
	add hl, de
	push hl
	ld e, c
	ld d, $0
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, de
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $16
	pop de
	add hl, de
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
	ld hl, sp+$10
	ld a, [hl]
	inc a
	ld hl, sp+$10
	ld [hl], a
	jp Func_6ea92

Func_6ead2: ; 6ead2 (1b:6ad2)
	inc c
	jp Func_6ea88

Func_6ead6: ; 6ead6 (1b:6ad6)
	ld hl, sp+$d
	ld a, [hl]
	add $8
	ld hl, sp+$d
	ld [hl], a
	pop af
	inc a
	jp Func_6ea7e

Func_6eae3: ; 6eae3 (1b:6ae3)
	pop af
	inc a
	jp Func_6ea58

Func_6eae8: ; 6eae8 (1b:6ae8)
	ld e, $0
	xor a
	call Func_6ee8b
	ld e, $1
	xor a
	call Func_6ee8b
	ld a, [wc2cd]
	or a
	jp nz, Func_6eb0a
	ld bc, $400
	debgcoord 0, 0
	hlbgcoord 0, 0, vWindowMap
	call CopyFromDEtoHL
	jp Func_6eb16

Func_6eb0a: ; 6eb0a (1b:6b0a)
	ld bc, $400
	debgcoord 0, 0, vWindowMap
	hlbgcoord 0, 0
	call CopyFromDEtoHL
Func_6eb16: ; 6eb16 (1b:6b16)
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
	add sp, $e
	ret

Func_6eb1f: ; 6eb1f (1b:6b1f)
	push bc
	push bc
	ld a, [wSystemType]
	cp $11
	jp nz, Func_6eb31
	ld a, BANK(MapTiles_CGB)
	ld de, MapTiles_CGB
	jp Func_6eb36

Func_6eb31: ; 6eb31 (1b:6b31)
	ld a, BANK(MapTiles_SGB_DMG)
	ld de, MapTiles_SGB_DMG
Func_6eb36: ; 6eb36 (1b:6b36)
	push af
	push de
	ld [wFarCallDestBank], a
	ld hl, $6a0
	add hl, de
	reg16swap de, hl
	ld hl, $8a00
	ld bc, $20
	call FarRequestVideoData
	pop de
	push de
	ld hl, $7a0
	add hl, de
	reg16swap de, hl
	ld hl, $8a20
	ld bc, $20
	call FarRequestVideoData
	pop de
	push de
	inc d
	inc d
	inc d
	ld hl, $8a40
	ld bc, $10
	call FarRequestVideoData
	pop de
	push de
	ld hl, $19a0
	add hl, de
	reg16swap de, hl
	ld hl, $8a50
	ld bc, $30
	call FarRequestVideoData
	pop de
	push de
	ld hl, $1aa0
	add hl, de
	reg16swap de, hl
	ld hl, $8a80
	ld bc, $30
	call FarRequestVideoData
	pop de
	pop af
	push de
	push af
	ld hl, $1ba0
	add hl, de
	reg16swap de, hl
	ld hl, $8ab0
	ld bc, $30
	call FarRequestVideoData
	call ClearSprites
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	read_hl_from wCurRobotPointer
	ld de, $16
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $2f
	add hl, de
	reg16swap de, hl
	ld hl, $5
	add hl, bc
	ld a, [hl]
	ld hl, sp+$6
	ld [hl], a
	ld hl, $5
	add hl, de
	ld a, [hl]
	ld hl, sp+$7
	ld [hl], a
	ld hl, $2b
	add hl, bc
	ld a, [hl]
	ld hl, sp+$4
	ld [hl], a
	ld hl, $2b
	add hl, de
	ld a, [hl]
	ld hl, sp+$5
	ld [hl], a
	ld c, $0
Func_6ebed: ; 6ebed (1b:6bed)
	ld a, c
	cp $2
	jp nc, Func_6ec3e
	push bc
	set_farcall_addrs_hli Func_6adb3
	pop bc
	push bc
	ld e, c
	ld d, $0
	ld hl, sp+$8
	add hl, de
	ld a, [hl]
	ld e, c
	ld d, $0
	ld hl, sp+$6
	add hl, de
	ld e, [hl]
	call FarCall
	ld l, a
	push hl
	ld a, $e
	call OverworldPlaySong
	pop hl
	pop bc
	push bc
	push hl
	ld a, c
	add a
	add a
	ld d, a
	add a
	add d
	push af
	set_farcall_addrs_hli LoadSpriteGFX
	pop af
	pop hl
	ld h, a
	ld e, $c
	ld c, $c
	call FarCall
	pop bc
	inc c
	jp Func_6ebed

Func_6ec3e: ; 6ec3e (1b:6c3e)
	pop af
	ld [wFarCallDestBank], a
	pop de
	push de
	ld hl, $3f80
	add hl, de
	reg16swap de, hl
	ld hl, $8180
	ld bc, $40
	call FarRequestVideoData
	pop de
	ld hl, $3f80
	add hl, de
	reg16swap de, hl
	ld hl, $81c0
	ld bc, $40
	call FarRequestVideoData
	pop bc
	pop bc
	ret

Func_6ec6a: ; 6ec6a (1b:6c6a)
	push af
	push de
	push bc
	ld hl, sp+$5
	ld a, [hl]
	add $8
	ld hl, sp+$5
	ld [hl], a
	ld hl, sp+$0
	ld a, [hl]
	add $8
	ld hl, sp+$0
	ld [hl], a
	ld hl, sp+$2
	ld a, [hl]
	add $10
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$8
	ld a, [hl]
	add $10
	ld hl, sp+$8
	ld [hl], a
	set_farcall_addrs_hli Func_da835
	xor a
	call FarCall
	ld hl, sp+$a
	ld a, [hl]
	cp $2
	jp nz, Func_6eca8
	xor a
	jp Func_6ecb8

Func_6eca8: ; 6eca8 (1b:6ca8)
	ld hl, sp+$a
	ld a, [hl]
	cp $3
	jp nz, Func_6ecb5
	ld a, $2
	jp Func_6ecb8

Func_6ecb5: ; 6ecb5 (1b:6cb5)
	ld hl, sp+$a
	ld a, [hl]
Func_6ecb8: ; 6ecb8 (1b:6cb8)
	push af
	ld hl, sp+$e
	ld a, [hl]
	cp $2
	jp nz, Func_6ecc6
	ld l, $0
	jp Func_6ecd6

Func_6ecc6: ; 6ecc6 (1b:6cc6)
	ld hl, sp+$e
	ld a, [hl]
	cp $3
	jp nz, Func_6ecd3
	ld l, $2
	jp Func_6ecd6

Func_6ecd3: ; 6ecd3 (1b:6cd3)
	ld hl, sp+$e
	ld l, [hl]
Func_6ecd6: ; 6ecd6 (1b:6cd6)
	push hl
	set_farcall_addrs_hli UpdateCurSprite
	pop hl
	pop af
	push hl
	ld l, a
	ld h, $0
	ld de, $3
	call DivideHLByDESigned
	inc d
	ld c, e
	ld b, d
	ld hl, sp+$4
	ld e, [hl]
	ld hl, sp+$7
	ld h, [hl]
	ld d, h
	xor a
	call FarCall
	set_farcall_addrs_hli UpdateCurSprite
	pop hl
	ld h, $0
	ld de, $3
	call DivideHLByDESigned
	inc d
	ld c, e
	ld b, d
	ld hl, sp+$8
	ld e, [hl]
	ld hl, sp+$0
	ld h, [hl]
	ld d, h
	ld a, $c
	call FarCall
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$2
	cp [hl]
	jp nc, Func_6ed34
	ld hl, sp+$2
	ld e, [hl]
	ld hl, sp+$8
	ld a, [hl]
	ld hl, sp+$2
	ld [hl], a
	ld hl, sp+$8
	ld [hl], e
Func_6ed34: ; 6ed34 (1b:6d34)
	ld hl, sp+$2
	ld a, [hl]
	cp $30
	jp nc, Func_6ed73
	ld hl, sp+$2
	ld a, [hl]
	cp $1c
	jp nc, Func_6ed49
	ld l, $1a
	jp Func_6ed4b

Func_6ed49: ; 6ed49 (1b:6d49)
	ld l, $18
Func_6ed4b: ; 6ed4b (1b:6d4b)
	ld a, $38
	ld [wOAM18YCoord], a
	ld a, $50
	ld [wOAM18XCoord], a
	ld a, l
	ld [wOAM18VTile], a
	xor a
	ld [wOAM18Attrs], a
	ld a, $38
	ld [wOAM19YCoord], a
	ld a, $58
	ld [wOAM19XCoord], a
	ld a, l
	inc a
	ld [wOAM19VTile], a
	xor a
	ld [wOAM19Attrs], a
	jp Func_6ed7b

Func_6ed73: ; 6ed73 (1b:6d73)
	xor a
	ld [wOAM18YCoord], a
	xor a
	ld [wOAM19YCoord], a
Func_6ed7b: ; 6ed7b (1b:6d7b)
	ld hl, sp+$8
	ld a, [hl]
	cp $80
	jp nc, Func_6edba
	ld hl, sp+$8
	ld a, [hl]
	cp $6c
	jp nc, Func_6ed90
	ld l, $1e
	jp Func_6ed92

Func_6ed90: ; 6ed90 (1b:6d90)
	ld l, $1c
Func_6ed92: ; 6ed92 (1b:6d92)
	ld a, $88
	ld [wOAM1aYCoord], a
	ld a, $50
	ld [wOAM1aXCoord], a
	ld a, l
	ld [wOAM1aVTile], a
	xor a
	ld [wOAM1aAttrs], a
	ld a, $88
	ld [wOAM1bYCoord], a
	ld a, $58
	ld [wOAM1bXCoord], a
	ld a, l
	inc a
	ld [wOAM1bVTile], a
	xor a
	ld [wOAM1bAttrs], a
	jp Func_6edc2

Func_6edba: ; 6edba (1b:6dba)
	xor a
	ld [wOAM1aYCoord], a
	xor a
	ld [wOAM1bYCoord], a
Func_6edc2: ; 6edc2 (1b:6dc2)
	pop bc
	pop bc
	pop bc
	ret

Data_6edc6:
	dr $6edc6, $6edcf

Func_6edcf: ; 6edcf (1b:6dcf)
	push bc
	push bc
	inc e
	dec e
	jp nz, Func_6eddd
	ld hl, sp+$3
	ld [hl], $0
	jp Func_6ede1

Func_6eddd: ; 6eddd (1b:6ddd)
	ld hl, sp+$3
	ld [hl], $a
Func_6ede1: ; 6ede1 (1b:6de1)
	or a
	jp nz, Func_6ee51
	ld a, [wc2cd]
	or a
	jp nz, Func_6edf5
	hlbgcoord 0, 0
	call WriteHLToSPPlus3
	jp Func_6edfb

Func_6edf5: ; 6edf5 (1b:6df5)
	hlbgcoord 0, 0, vWindowMap
	call WriteHLToSPPlus3
Func_6edfb: ; 6edfb (1b:6dfb)
	ld e, $0
	ld c, $0
Func_6edff: ; 6edff (1b:6dff)
	ld a, c
	cp $3
	jp nc, Func_6ee4e
	ld hl, sp+$0
	ld [hl], $0
Func_6ee09: ; 6ee09 (1b:6e09)
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nc, Func_6ee4a
	push de
	ld d, $0
	ld hl, Data_6edc6
	add hl, de
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld de, $1c
	add hl, de
	push hl
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, $0
	inc hl
	inc hl
	inc hl
	inc hl
	add hl, de
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	call GetHLAtSPPlus9
	pop de
	add hl, de
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6ee09

Func_6ee4a: ; 6ee4a (1b:6e4a)
	inc c
	jp Func_6edff

Func_6ee4e: ; 6ee4e (1b:6e4e)
	jp Func_6ee7f

Func_6ee51: ; 6ee51 (1b:6e51)
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $a400
	add hl, de
	ld c, l
	ld b, h
	ld hl, sp+$3
	ld l, [hl]
	ld h, $0
	ld de, $1e06
	add hl, de
	push hl
	ld hl, sp+$5
	ld l, [hl]
	ld h, $0
	ld de, $1c04
	add hl, de
	pop de
	call FarCall
Func_6ee7f: ; 6ee7f (1b:6e7f)
	pop bc
	pop bc
	ret

Data_6ee82:
	dr $6ee82, $6ee8b

Func_6ee8b: ; 6ee8b (1b:6e8b)
	push bc
	push bc
	inc e
	dec e
	jp nz, Func_6ee99
	ld hl, sp+$3
	ld [hl], $0
	jp Func_6ee9d

Func_6ee99: ; 6ee99 (1b:6e99)
	ld hl, sp+$3
	ld [hl], $a
Func_6ee9d: ; 6ee9d (1b:6e9d)
	or a
	jp nz, Func_6ef0a
	ld a, [wc2cd]
	or a
	jp nz, Func_6eeb1
	hlbgcoord 0, 0
	call WriteHLToSPPlus3
	jp Func_6eeb7

Func_6eeb1: ; 6eeb1 (1b:6eb1)
	hlbgcoord 0, 0, vWindowMap
	call WriteHLToSPPlus3
Func_6eeb7: ; 6eeb7 (1b:6eb7)
	ld e, $0
	ld c, $0
Func_6eebb: ; 6eebb (1b:6ebb)
	ld a, c
	cp $3
	jp nc, Func_6ef0a
	ld hl, sp+$0
	ld [hl], $0
Func_6eec5: ; 6eec5 (1b:6ec5)
	ld hl, sp+$0
	ld a, [hl]
	cp $3
	jp nc, Func_6ef06
	push de
	ld d, $0
	ld hl, Data_6ee82
	add hl, de
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	ld de, $1c
	add hl, de
	push hl
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld l, c
	ld h, $0
	inc hl
	inc hl
	inc hl
	inc hl
	add hl, de
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	call GetHLAtSPPlus9
	pop de
	add hl, de
	pop de
	add hl, de
	ld [hl], a
	pop de
	inc e
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6eec5

Func_6ef06: ; 6ef06 (1b:6f06)
	inc c
	jp Func_6eebb

Func_6ef0a: ; 6ef0a (1b:6f0a)
	pop bc
	pop bc
	ret

Func_6ef0d: ; 6ef0d (1b:6f0d)
	ld hl, -$352
	add hl, sp
	ld sp, hl
	push af
	ld a, [hSRAMBank]
	ld l, a
	push hl
	set_farcall_addrs_hli Func_7e8a
	pop hl
	pop af
	push hl
	push af
	add $55
	ld hl, sp+$4
	reg16swap de, hl
	call FarCall
	set_farcall_addrs_hli Func_7766
	ld c, $1
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, $351
	call FarCall
	ld a, $1
	call GetSRAMBank_ReadOnly
	set_farcall_addrs_hli Func_7766
	pop af
	ld l, a
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	debgcoord 31, 21
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $1
	call FarCall
	pop hl
	ld a, l
	call GetSRAMBank
	ld hl, $352
	add hl, sp
	ld sp, hl
	ret

Func_6ef7f: ; 6ef7f (1b:6f7f)
	ld hl, -$380
	add hl, sp
	ld sp, hl
	push af
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$31
	reg16swap de, hl
	ld hl, $351
	call FarCall
	set_farcall_addrs_hli Func_7f14
	pop af
	push af
	add $55
	ld hl, sp+$31
	reg16swap de, hl
	call FarCall
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, $2f
	call FarCall
	pop af
	push af
	ld hl, sp+$e
	ld [hl], a
	set_farcall_addrs_hli Func_fb0db
	pop af
	push af
	add $55
	ld e, a
	ld hl, sp+$2
	call FarCall
	pop af
	ld hl, $380
	add hl, sp
	ld sp, hl
	ret

Func_6eff0:
	add sp, -$30
	push af
	push de
	ld hl, sp+$33
	ld a, [hSRAMBank]
	ld [hl], a
	set_farcall_addrs_hli AllocateMemory
	ld hl, $351
	call FarCall
	ld c, l
	ld b, h
	push bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $351
	call FarCall
	pop bc
	pop de
	pop af
	inc e
	dec e
	jp nz, Func_6f0f7
	push bc
	push hl
	push af
	set_farcall_addrs_hli Func_7e8a
	pop af
	pop hl
	pop bc
	push af
	push hl
	push bc
	ld e, c
	ld d, b
	add $55
	call FarCall
	set_farcall_addrs_hli Func_7766
	pop bc
	push bc
	ld e, c
	ld d, b
	ld hl, $351
	ld c, $1
	call FarCall
	set_farcall_addrs_hli Func_7748
	pop bc
	pop hl
	push bc
	push hl
	reg16swap de, hl
	ld hl, $351
	ld c, $1
	call FarCall
	ld a, $1
	call GetSRAMBank_ReadOnly
	set_farcall_addrs_hli Func_7766
	pop hl
	pop bc
	pop af
	push bc
	push hl
	push af
	ld l, a
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	debgcoord 31, 21
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $1
	call FarCall
	ld hl, sp+$35
	ld a, [hl]
	call GetSRAMBank
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $2f
	call FarCall
	pop af
	push af
	ld hl, sp+$12
	ld [hl], a
	set_farcall_addrs_hli Func_7f14
	pop af
	pop hl
	push hl
	push af
	reg16swap de, hl
	add $55
	call FarCall
	set_farcall_addrs_hli Func_fb0db
	pop af
	add $55
	ld e, a
	ld hl, sp+$4
	call FarCall
	pop hl
	pop bc
	jp Func_6f1c5

Func_6f0f7: ; 6f0f7 (1b:70f7)
	push bc
	push hl
	push af
	set_farcall_addrs_hli Func_7e8a
	pop af
	pop hl
	pop bc
	push af
	push bc
	push hl
	ld e, c
	ld d, b
	add $55
	call FarCall
	set_farcall_addrs_hli Func_7748
	pop hl
	pop bc
	push hl
	push bc
	reg16swap de, hl
	ld hl, $351
	ld c, $1
	call FarCall
	set_farcall_addrs_hli Func_7766
	pop bc
	push bc
	ld e, c
	ld d, b
	ld hl, $351
	ld c, $1
	call FarCall
	set_farcall_addrs_hli Func_7748
	ld c, $1
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, $2f
	call FarCall
	pop bc
	pop hl
	pop af
	push bc
	push hl
	push af
	ld hl, sp+$12
	ld [hl], a
	ld a, $1
	call GetSRAMBank_ReadOnly
	set_farcall_addrs_hli Func_7766
	pop af
	push af
	ld l, a
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	debgcoord 31, 21
	add hl, de
	reg16swap de, hl
	ld hl, $2f
	ld c, $1
	call FarCall
	ld hl, sp+$35
	ld a, [hl]
	call GetSRAMBank
	set_farcall_addrs_hli Func_7f14
	pop af
	pop hl
	push hl
	push af
	reg16swap de, hl
	add $55
	call FarCall
	set_farcall_addrs_hli Func_fb0db
	pop af
	add $55
	ld e, a
	ld hl, sp+$4
	call FarCall
	pop hl
	pop bc
Func_6f1c5: ; 6f1c5 (1b:71c5)
	push hl
	push bc
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ld hl, sp+$c
	ld a, [hl]
	add sp, $30
	ret

Func_6f1eb: ; 6f1eb (1b:71eb)
	push de
	add sp, -$54
	push af
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $12
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$54
	ld [hl], $0
	ld c, e
	ld b, d
	push bc
	set_farcall_addrs_hli Func_7dfc
	pop bc
	pop af
	push af
	push bc
	ld hl, sp+$58
	ld c, [hl]
	ld b, $0
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$33
	reg16swap de, hl
	call FarCall
	pop bc
	ld hl, sp+$38
	ld a, [hl]
	cp $63
	jp c, Func_6f244
	ld bc, $0
Func_6f244: ; 6f244 (1b:7244)
	read_hl_from_sp_plus $47
	add hl, bc
	write_hl_to_sp_plus $47
	ld hl, sp+$31
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$38
	ld e, [hl]
	ld hl, sp+$2
	call FarCall
	read_hl_from_sp_plus $1e
	push hl
	read_hl_from_sp_plus $43
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $41
	read_hl_from_sp_plus $22
	push hl
	read_hl_from_sp_plus $47
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $45
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4a
	read_hl_from_sp_plus $2b
	push hl
	read_hl_from_sp_plus $50
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4e
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4c
	ld de, $0
	ld hl, sp+$7
	ld a, [hl]
	ld hl, sp+$38
	ld l, [hl]
	ld h, a
	call Func_270a
	ld c, l
	ld b, h
	read_hl_from_sp_plus $47
	ld a, l
	sub c
	ld a, h
	sbc b
	jp c, Func_6f34c
Func_6f2e8: ; 6f2e8 (1b:72e8)
	read_hl_from_sp_plus $47
	ld a, l
	sub c
	ld a, h
	sbc b
	jp c, Func_6f329
	ld hl, sp+$38
	ld a, [hl]
	cp $63
	jp nc, Func_6f329
	ld hl, sp+$38
	ld a, [hl]
	inc a
	ld hl, sp+$38
	ld [hl], a
	ld hl, sp+$54
	ld a, [hl]
	inc a
	ld hl, sp+$54
	ld [hl], a
	read_hl_from_sp_plus $47
	ld a, l
	sub c
	ld l, a
	ld a, h
	sbc b
	ld h, a
	write_hl_to_sp_plus $47
	ld de, $0
	ld hl, sp+$7
	ld a, [hl]
	ld hl, sp+$38
	ld l, [hl]
	ld h, a
	call Func_270a
	ld c, l
	ld b, h
	jp Func_6f32c

Func_6f329: ; 6f329 (1b:7329)
	jp Func_6f32f

Func_6f32c: ; 6f32c (1b:732c)
	jp Func_6f2e8

Func_6f32f: ; 6f32f (1b:732f)
	ld hl, sp+$31
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$2
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$38
	ld e, [hl]
	ld hl, sp+$2
	call FarCall
Func_6f34c: ; 6f34c (1b:734c)
	read_hl_from_sp_plus $1e
	push hl
	read_hl_from_sp_plus $43
	pop de
	add hl, de
	write_hl_to_sp_plus $41
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_6f36f
	ld hl, $3e7
	write_hl_to_sp_plus $41
Func_6f36f: ; 6f36f (1b:736f)
	read_hl_from_sp_plus $22
	push hl
	read_hl_from_sp_plus $47
	pop de
	add hl, de
	write_hl_to_sp_plus $45
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_6f392
	ld hl, $3e7
	write_hl_to_sp_plus $45
Func_6f392: ; 6f392 (1b:7392)
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	add hl, de
	write_hl_to_sp_plus $4a
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_6f3b5
	ld hl, $3e7
	write_hl_to_sp_plus $4a
Func_6f3b5: ; 6f3b5 (1b:73b5)
	read_hl_from_sp_plus $2b
	push hl
	read_hl_from_sp_plus $50
	pop de
	add hl, de
	write_hl_to_sp_plus $4e
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_6f3d8
	ld hl, $3e7
	write_hl_to_sp_plus $4e
Func_6f3d8: ; 6f3d8 (1b:73d8)
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	add hl, de
	write_hl_to_sp_plus $4c
	reg16swap de, hl
	ld hl, $3e7
	call CompareHLtoDE
	jp nc, Func_6f3fb
	ld hl, $3e7
	write_hl_to_sp_plus $4c
Func_6f3fb: ; 6f3fb (1b:73fb)
	read_hl_from_sp_plus $41
	write_hl_to_sp_plus $3f
	read_hl_from_sp_plus $45
	write_hl_to_sp_plus $43
	set_farcall_addrs_hli Func_7db0
	pop af
	ld hl, sp+$54
	ld c, [hl]
	ld b, $0
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld a, [hl]
	ld hl, sp+$2f
	reg16swap de, hl
	call FarCall
	ld hl, sp+$52
	ld a, [hl]
	add sp, $56
	ret

Func_6f43b: ; 6f43b (1b:743b)
	push af
	push bc
	ld hl, sp+$1
	ld [hl], $0
Func_6f441: ; 6f441 (1b:7441)
	ld hl, sp+$1
	ld a, [hl]
	cp $3
	jp nc, Func_6f4bb
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	ld de, $10
	add hl, de
	ld a, [hl]
	cp $1
	jp nz, Func_6f4b1
	ld hl, sp+$0
	ld [hl], $0
Func_6f467: ; 6f467 (1b:7467)
	ld hl, sp+$0
	ld a, [hl]
	cp $4
	jp nc, Func_6f4b1
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	cp [hl]
	jp nc, Func_6f4a7
	ld hl, sp+$0
	ld c, [hl]
	ld b, $0
	ld hl, sp+$1
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, wc347
	add hl, de
	add hl, bc
	ld e, $1
	ld a, [hl]
	sub e
	ld [hl], a
Func_6f4a7: ; 6f4a7 (1b:74a7)
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	jp Func_6f467

Func_6f4b1: ; 6f4b1 (1b:74b1)
	ld hl, sp+$1
	ld a, [hl]
	inc a
	ld hl, sp+$1
	ld [hl], a
	jp Func_6f441

Func_6f4bb: ; 6f4bb (1b:74bb)
	pop bc
	pop bc
	ret

INCLUDE "engine/std_scripts/heal.asm"

Func_6f6de: ; 6f6de (1b:76de)
	push af
	inc e
	dec e
	jp nz, Func_6f74d
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6f74a
	set_farcall_addrs_hli Func_4ec2b
	ld e, $2
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	cp $ff
	jp nz, Func_6f737
	xor a
	call Func_6f785
	or a
	jp nz, Func_6f732
	set_farcall_addrs_hli Func_4ec2b
	ld e, $0
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
	jp Func_6f760

Func_6f732: ; 6f732 (1b:7732)
	ld a, $ff
	jp Func_6f760

Func_6f737: ; 6f737 (1b:7737)
	callba_hli Func_fb205
	ld a, $1
	jp Func_6f760

Func_6f74a: ; 6f74a (1b:774a)
	jp Func_6f760

Func_6f74d: ; 6f74d (1b:774d)
	push de
	set_farcall_addrs_hli Func_4ec2b
	pop de
	ld hl, sp+$1
	ld a, [hl]
	call FarCall
Func_6f760: ; 6f760 (1b:7760)
	pop bc
	ret

Pointers_6f762:
	dw Data_6f768
	dw Data_6f776
	dw $0

Data_6f768:
	db "(そうこもいっはﾟいてﾞ)", $0

Data_6f776:
	db "(これいしﾞょうもてないよ)", $0

Func_6f785: ; 6f785 (1b:7785)
	push af
	ld a, $1
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpAttrMapRectangle
	ld a, $2
	ld [wc39a], a
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_da901
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call FarCall
	push hl
	set_farcall_addrs_hli PrintMapText_
	ld bc, BANK(Pointers_6f762)
	ld de, Pointers_6f762
	ld hl, $10e
	call FarCall
	set_farcall_addrs_hli Func_17e95
	ld c, $5
	ld e, $14
	ld hl, $d
	call FarCall
	ld e, $e
	ld a, $1
	call SetStringStartState
	ld de, Data_6f95b
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld c, l
	ld b, h
	pop hl
	pop de
	push bc
	ld a, c
	or b
	jp nz, Func_6f906
	push de
	callba_hli Func_17470
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_6f886
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_6f89a
Func_6f886: ; 6f886 (1b:7886)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_6f89a: ; 6f89a (1b:789a)
	call Func_3af6
	ld hl, sp+$5
	ld a, [hl]
	cp $1
	jp z, Func_6f8ba
	or a
	jp nz, Func_6f8c8
	callba_hli Func_1535c
	jp Func_6f8c8

Func_6f8ba: ; 6f8ba (1b:78ba)
	callba_hli Func_1491a
Func_6f8c8: ; 6f8c8 (1b:78c8)
	callba_hli Func_17488
	set_farcall_addrs_hli FadeInMap
	xor a
	call FarCall
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop de
	jp Func_6f947

Func_6f906: ; 6f906 (1b:7906)
	push hl
	push de
	ld a, $2
	ld [wc39a], a
	ld c, e
	ld b, d
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreAttrMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_daa40
	pop de
	pop hl
	push de
	call FarCall
	pop de
Func_6f947: ; 6f947 (1b:7947)
	push de
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop bc
	ld a, c
	pop bc
	ret

Data_6f95b:
	db "(すてる?)", $0

Func_6f962: ; 6f962 (1b:7962)
	add sp, -$52
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$2f
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$2f
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$36
	ld e, [hl]
	ld hl, sp+$0
	call FarCall
	read_hl_from_sp_plus $1c
	push hl
	read_hl_from_sp_plus $41
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $3f
	read_hl_from_sp_plus $20
	push hl
	read_hl_from_sp_plus $45
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $43
	read_hl_from_sp_plus $25
	push hl
	read_hl_from_sp_plus $4a
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $48
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4c
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	write_hl_to_sp_plus $4a
	ld hl, sp+$36
	ld a, [hl]
	inc a
	ld hl, sp+$36
	ld [hl], a
	ld hl, sp+$2f
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$0
	call GetRobotOrTrainerBaseStats
	set_farcall_addrs_hli Func_dbe2
	ld hl, sp+$36
	ld e, [hl]
	ld hl, sp+$0
	call FarCall
	read_hl_from_sp_plus $1c
	push hl
	read_hl_from_sp_plus $41
	pop de
	add hl, de
	write_hl_to_sp_plus $3f
	read_hl_from_sp_plus $20
	push hl
	read_hl_from_sp_plus $45
	pop de
	add hl, de
	write_hl_to_sp_plus $43
	read_hl_from_sp_plus $25
	push hl
	read_hl_from_sp_plus $4a
	pop de
	add hl, de
	write_hl_to_sp_plus $48
	read_hl_from_sp_plus $29
	push hl
	read_hl_from_sp_plus $4e
	pop de
	add hl, de
	write_hl_to_sp_plus $4c
	read_hl_from_sp_plus $27
	push hl
	read_hl_from_sp_plus $4c
	pop de
	add hl, de
	write_hl_to_sp_plus $4a
	read_hl_from_sp_plus $3f
	write_hl_to_sp_plus $3d
	read_hl_from_sp_plus $43
	write_hl_to_sp_plus $41
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$2f
	reg16swap de, hl
	ld a, [wc2e9]
	call FarCall
	ld hl, sp+$36
	ld c, [hl]
	ld b, $0
	ld hl, wc2e9
	ld l, [hl]
	ld h, $0
	ld e, l
	ld d, h
	add hl, hl
	add hl, de
	ld de, $502
	add hl, de
	ld de, $103
	call Func_2230
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	add sp, $52
	ret

Func_6faba: ; 6faba (1b:7aba)
	push af
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_6face
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_6fae2
Func_6face: ; 6face (1b:7ace)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_6fae2: ; 6fae2 (1b:7ae2)
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	set_farcall_addrs_hli Func_17e95
	ld c, $3
	ld e, $a
	ld hl, $506
	call FarCall
	ld e, $7
	ld a, $6
	call SetStringStartState
	pop af
	or a
	jp nz, Func_6fb1f
	ld hl, Data_6fb43
	push hl
	call PlaceString
	pop bc
	jp Func_6fb27

Func_6fb1f: ; 6fb1f (1b:7b1f)
	ld hl, Data_6fb4c
	push hl
	call PlaceString
	pop bc
Func_6fb27: ; 6fb27 (1b:7b27)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	xor a
Func_6fb34: ; 6fb34 (1b:7b34)
	cp $3c
	jp nc, Func_6fb42
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_6fb34

Func_6fb42: ; 6fb42 (1b:7b42)
	ret

Data_6fb43:
	db "(あなたのかち)", $0

Data_6fb4c:
	db "(あなたのまけ)", $0

INCLUDE "engine/predef.asm"

SECTION "Bank 2f", ROMX, BANK [$2f]
INCLUDE "engine/debug.asm"

SECTION "Bank 30", ROMX, BANK [$30]
GFX_c0000: INCBIN "gfx/sprites/c0000.w16.2bpp" ; c0000
GFX_c0240: INCBIN "gfx/sprites/c0240.w16.2bpp" ; c0240
GFX_c0480: INCBIN "gfx/sprites/c0480.w16.2bpp" ; c0480
GFX_c06c0: INCBIN "gfx/sprites/c06c0.w16.2bpp" ; c06c0
GFX_c0900: INCBIN "gfx/sprites/c0900.w16.2bpp" ; c0900
GFX_c0b40: INCBIN "gfx/sprites/c0b40.w16.2bpp" ; c0b40
GFX_c0d80: INCBIN "gfx/sprites/c0d80.w16.2bpp" ; c0d80
GFX_c0fc0: INCBIN "gfx/sprites/c0fc0.w16.2bpp" ; c0fc0
GFX_c1200: INCBIN "gfx/sprites/c1200.w16.2bpp" ; c1200
GFX_c1440: INCBIN "gfx/sprites/c1440.w16.2bpp" ; c1440
GFX_c1680: INCBIN "gfx/sprites/c1680.w16.2bpp" ; c1680
GFX_c18c0: INCBIN "gfx/sprites/c18c0.w16.2bpp" ; c18c0
GFX_c1b00: INCBIN "gfx/sprites/c1b00.w16.2bpp" ; c1b00
GFX_c1d40: INCBIN "gfx/sprites/c1d40.w16.2bpp" ; c1d40
GFX_c1f80: INCBIN "gfx/sprites/c1f80.w16.2bpp" ; c1f80
GFX_c21c0: INCBIN "gfx/sprites/c21c0.w16.2bpp" ; c21c0
GFX_c2400: INCBIN "gfx/sprites/c2400.w16.2bpp" ; c2400
GFX_c2640: INCBIN "gfx/sprites/c2640.w16.2bpp" ; c2640
GFX_c2880: INCBIN "gfx/sprites/c2880.w16.2bpp" ; c2880
GFX_c2ac0: INCBIN "gfx/sprites/c2ac0.w16.2bpp" ; c2ac0
GFX_c2d00: INCBIN "gfx/sprites/c2d00.w16.2bpp" ; c2d00
GFX_c2f40: INCBIN "gfx/sprites/c2f40.w16.2bpp" ; c2f40
GFX_c3180: INCBIN "gfx/sprites/c3180.w16.2bpp" ; c3180
GFX_c33c0: INCBIN "gfx/sprites/c33c0.w16.2bpp" ; c33c0
GFX_c3600: INCBIN "gfx/sprites/c3600.w16.2bpp" ; c3600

SECTION "Bank 31", ROMX, BANK [$31]
Emotes_c4000::
	dw $0, $0
	emote_header Emotes_c4000, GFX_c4070, $192
	emote_header Emotes_c4000, GFX_c4129, $152
	emote_header Emotes_c4000, GFX_c419d, $1d2
	emote_header Emotes_c4000, GFX_c4256, $202
	emote_header Emotes_c4000, GFX_c4320, $132
	emote_header Emotes_c4000, GFX_c4362, $132
	emote_header Emotes_c4000, GFX_c43a6, $112
	emote_header Emotes_c4000, GFX_c43b5, $122
	emote_header Emotes_c4000, GFX_c43ce, $1b2
	emote_header Emotes_c4000, GFX_c44f3, $142
	emote_header Emotes_c4000, GFX_c454f, $1a2
	emote_header Emotes_c4000, GFX_c4606, $132
	emote_header Emotes_c4000, GFX_c4635, $402
	emote_header Emotes_c4000, GFX_c48e1, $212
	emote_header Emotes_c4000, GFX_c4a57, $322
	emote_header Emotes_c4000, GFX_c4bb8, $142
	emote_header Emotes_c4000, GFX_c4c35, $152
	emote_header Emotes_c4000, GFX_c4cc7, $372
	emote_header Emotes_c4000, GFX_c4ebd, $182
	emote_header Emotes_c4000, GFX_c4f94, $3a2
	emote_header Emotes_c4000, GFX_c5226, $3a2
	emote_header Emotes_c4000, GFX_c54b8, $152
	emote_header Emotes_c4000, GFX_c552a, $362
	emote_header Emotes_c4000, GFX_c5789, $172
	emote_header Emotes_c4000, GFX_c57f9, $322
	emote_header Emotes_c4000, GFX_c5929, $1e2
	emote_header Emotes_c4000, GFX_c5a38, $1d2

GFX_c4070: INCBIN "gfx/emotes/emote_c4070.emote.rz"
GFX_c4129: INCBIN "gfx/emotes/emote_c4129.emote.rz"
GFX_c419d: INCBIN "gfx/emotes/emote_c419d.emote.rz"
GFX_c4256: INCBIN "gfx/emotes/emote_c4256.emote.rz"
GFX_c4320: INCBIN "gfx/emotes/emote_c4320.emote.rz"
GFX_c4362: INCBIN "gfx/emotes/emote_c4362.emote.rz"
GFX_c43a6: INCBIN "gfx/emotes/emote_c43a6.emote.rz"
GFX_c43b5: INCBIN "gfx/emotes/emote_c43b5.emote.rz"
GFX_c43ce: INCBIN "gfx/emotes/emote_c43ce.emote.rz"
GFX_c44f3: INCBIN "gfx/emotes/emote_c44f3.emote.rz"
GFX_c454f: INCBIN "gfx/emotes/emote_c454f.emote.rz"
GFX_c4606: INCBIN "gfx/emotes/emote_c4606.emote.rz"
GFX_c4635: INCBIN "gfx/emotes/emote_c4635.emote.rz"
GFX_c48e1: INCBIN "gfx/emotes/emote_c48e1.emote.rz"
GFX_c4a57: INCBIN "gfx/emotes/emote_c4a57.emote.rz"
GFX_c4bb8: INCBIN "gfx/emotes/emote_c4bb8.emote.rz"
GFX_c4c35: INCBIN "gfx/emotes/emote_c4c35.emote.rz"
GFX_c4cc7: INCBIN "gfx/emotes/emote_c4cc7.emote.rz"
GFX_c4ebd: INCBIN "gfx/emotes/emote_c4ebd.emote.rz"
GFX_c4f94: INCBIN "gfx/emotes/emote_c4f94.emote.rz"
GFX_c5226: INCBIN "gfx/emotes/emote_c5226.emote.rz"
GFX_c54b8: INCBIN "gfx/emotes/emote_c54b8.emote.rz"
GFX_c552a: INCBIN "gfx/emotes/emote_c552a.emote.rz"
GFX_c5789: INCBIN "gfx/emotes/emote_c5789.emote.rz"
GFX_c57f9: INCBIN "gfx/emotes/emote_c57f9.emote.rz"
GFX_c5929: INCBIN "gfx/emotes/emote_c5929.emote.rz"
GFX_c5a38: INCBIN "gfx/emotes/emote_c5a38.emote.rz"

EmoteAttrs_c5b26:: ; c5b26
	dw $0, $0
	emote_header EmoteAttrs_c5b26, Data_c5bae, $8e
	emote_header EmoteAttrs_c5b26, Data_c5be0, $77
	emote_header EmoteAttrs_c5b26, Data_c5c00, $d4
	emote_header EmoteAttrs_c5b26, Data_c5c4b, $148
	emote_header EmoteAttrs_c5b26, Data_c5cec, $6c
	emote_header EmoteAttrs_c5b26, Data_c5d05, $6c
	emote_header EmoteAttrs_c5b26, Data_c5d1e, $16f
	emote_header EmoteAttrs_c5b26, Data_c5de6, $168
	emote_header EmoteAttrs_c5b26, Data_c5ea7, $ac
	emote_header EmoteAttrs_c5b26, Data_c5ef2, $1e6
	emote_header EmoteAttrs_c5b26, Data_c5fd6, $136
	emote_header EmoteAttrs_c5b26, Data_c6064, $cf
	emote_header EmoteAttrs_c5b26, Data_c60c2, $54a
	emote_header EmoteAttrs_c5b26, Data_c61e5, $640
	emote_header EmoteAttrs_c5b26, Data_c6328, $480
	emote_header EmoteAttrs_c5b26, Data_c6449, $260
	emote_header EmoteAttrs_c5b26, Data_c6574, $309
	emote_header EmoteAttrs_c5b26, Data_c6682, $424
	emote_header EmoteAttrs_c5b26, Data_c6876, $ca
	emote_header EmoteAttrs_c5b26, Data_c68d1, $124
	emote_header EmoteAttrs_c5b26, Data_c6960, $1d8
	emote_header EmoteAttrs_c5b26, Data_c6a70, $176
	emote_header EmoteAttrs_c5b26, Data_c6afd, $134
	emote_header EmoteAttrs_c5b26, Data_c6b47, $19e
	emote_header EmoteAttrs_c5b26, Data_c6bbd, $14e
	emote_header EmoteAttrs_c5b26, Data_c6c4d, $4ee
	emote_header EmoteAttrs_c5b26, Data_c6cea, $bb
	emote_header EmoteAttrs_c5b26, Data_c6d2f, $167
	emote_header EmoteAttrs_c5b26, Data_c6ddd, $fc
	emote_header EmoteAttrs_c5b26, Data_c6e47, $8f
	emote_header EmoteAttrs_c5b26, Data_c6e78, $116
	emote_header EmoteAttrs_c5b26, Data_c6ef0, $279
	emote_header EmoteAttrs_c5b26, Data_c6fff, $26a

Data_c5bae: INCBIN "gfx/emotes/emote_c5bae.emoteattrs.rz" ; c5bae
Data_c5be0: INCBIN "gfx/emotes/emote_c5be0.emoteattrs.rz" ; c5be0
Data_c5c00: INCBIN "gfx/emotes/emote_c5c00.emoteattrs.rz" ; c5c00
Data_c5c4b: INCBIN "gfx/emotes/emote_c5c4b.emoteattrs.rz" ; c5c4b
Data_c5cec: INCBIN "gfx/emotes/emote_c5cec.emoteattrs.rz" ; c5cec
Data_c5d05: INCBIN "gfx/emotes/emote_c5d05.emoteattrs.rz" ; c5d05
Data_c5d1e: INCBIN "gfx/emotes/emote_c5d1e.emoteattrs.rz" ; c5d1e
Data_c5de6: INCBIN "gfx/emotes/emote_c5de6.emoteattrs.rz" ; c5de6
Data_c5ea7: INCBIN "gfx/emotes/emote_c5ea7.emoteattrs.rz" ; c5ea7
Data_c5ef2: INCBIN "gfx/emotes/emote_c5ef2.emoteattrs.rz" ; c5ef2
Data_c5fd6: INCBIN "gfx/emotes/emote_c5fd6.emoteattrs.rz" ; c5fd6
Data_c6064: INCBIN "gfx/emotes/emote_c6064.emoteattrs.rz" ; c6064
Data_c60c2: INCBIN "gfx/emotes/emote_c60c2.emoteattrs.rz" ; c60c2
Data_c61e5: INCBIN "gfx/emotes/emote_c61e5.emoteattrs.rz" ; c61e5
Data_c6328: INCBIN "gfx/emotes/emote_c6328.emoteattrs.rz" ; c6328
Data_c6449: INCBIN "gfx/emotes/emote_c6449.emoteattrs.rz" ; c6449
Data_c6574: INCBIN "gfx/emotes/emote_c6574.emoteattrs.rz" ; c6574
Data_c6682: INCBIN "gfx/emotes/emote_c6682.emoteattrs.rz" ; c6682
Data_c6876: INCBIN "gfx/emotes/emote_c6876.emoteattrs.rz" ; c6876
Data_c68d1: INCBIN "gfx/emotes/emote_c68d1.emoteattrs.rz" ; c68d1
Data_c6960: INCBIN "gfx/emotes/emote_c6960.emoteattrs.rz" ; c6960
Data_c6a70: INCBIN "gfx/emotes/emote_c6a70.emoteattrs.rz" ; c6a70
Data_c6afd: INCBIN "gfx/emotes/emote_c6afd.emoteattrs.rz" ; c6afd
Data_c6b47: INCBIN "gfx/emotes/emote_c6b47.emoteattrs.rz" ; c6b47
Data_c6bbd: INCBIN "gfx/emotes/emote_c6bbd.emoteattrs.rz" ; c6bbd
Data_c6c4d: INCBIN "gfx/emotes/emote_c6c4d.emoteattrs.rz" ; c6c4d
Data_c6cea: INCBIN "gfx/emotes/emote_c6cea.emoteattrs.rz" ; c6cea
Data_c6d2f: INCBIN "gfx/emotes/emote_c6d2f.emoteattrs.rz" ; c6d2f
Data_c6ddd: INCBIN "gfx/emotes/emote_c6ddd.emoteattrs.rz" ; c6ddd
Data_c6e47: INCBIN "gfx/emotes/emote_c6e47.emoteattrs.rz" ; c6e47
Data_c6e78: INCBIN "gfx/emotes/emote_c6e78.emoteattrs.rz" ; c6e78
Data_c6ef0: INCBIN "gfx/emotes/emote_c6ef0.emoteattrs.rz" ; c6ef0
Data_c6fff: INCBIN "gfx/emotes/emote_c6fff.emoteattrs.rz" ; c6fff

AllocateMemory_31: ; c70e8
	push hl
	set_farcall_addrs_hli AllocateMemory
	pop hl
	jp FarCall

FreeMemory_31:
	push hl
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Func_c7109:: ; c7109 (31:7109)
	push bc
	push bc
	push bc
	ld c, h
	ld a, l
	ld hl, sp+$4
	ld [hl], d
	ld l, e
	push hl
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	decoord 0, 0, wAttrMap
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	reg16swap de, hl
	xor a
	pop hl
	pop bc
Func_c712c: ; c712c (31:712c)
	cp l
	jp nc, Func_c715f
	push hl
	push af
	push de
	reg16swap de, hl
	call WriteHLToSPPlus8
	xor a
Func_c713b: ; c713b (31:713b)
	ld hl, sp+$8
	cp [hl]
	jp nc, Func_c7150
	push af
	ld a, c
	call GetHLAtSPPlus10
	ld [hl], a
	inc hl
	call WriteHLToSPPlus10
	pop af
	inc a
	jp Func_c713b

Func_c7150: ; c7150 (31:7150)
	pop de
	ld hl, $14
	add hl, de
	reg16swap de, hl
	pop af
	inc a
	pop hl
	jp Func_c712c

Func_c715f: ; c715f (31:715f)
	pop bc
	pop bc
	ret

INCLUDE "engine/map/color.asm"

Data_c795a:
	dr $c795a, $c796a

Func_c796a:: ; c796a (31:796a)
	push hl
	add sp, -$e
	ld hl, sp+$e
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	ld a, [wSystemType]
	cp $1
	jp z, Func_c7983
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_c79ae
Func_c7983: ; c7983 (31:7983)
	push de
	push hl
	ld bc, $10
	ld de, Data_c795a
	ld hl, sp+$4
	call CopyFromDEtoHL
	pop hl
	call WriteHLToSPPlus7
	pop hl
	call WriteHLToSPPlus7
	ld hl, $3add
	write_hl_to_sp_plus $b
	ld hl, $1cf8
	write_hl_to_sp_plus $d
	ld de, $10
	ld hl, sp+$0
	call Func_2b83
Func_c79ae: ; c79ae (31:79ae)
	add sp, $10
	ret

INCLUDE "engine/triggers.asm"

Data_c7b84:
	RGB 29, 22, 14
	RGB 24, 07, 07

	RGB 15, 15, 25
	RGB 07, 07, 19

	RGB 25, 15, 15
	RGB 19, 07, 07

	RGB 24, 18, 28
	RGB 15, 09, 19

	RGB 15, 25, 15
	RGB 07, 19, 07

	RGB 20, 23, 31
	RGB 10, 14, 31

	RGB 16, 16, 00
	RGB 26, 17, 00

	RGB 25, 28, 28
	RGB 21, 21, 25

	RGB 16, 14, 16
	RGB 11, 09, 11

	RGB 24, 25, 24
	RGB 14, 15, 14

	RGB 31, 22, 31
	RGB 22, 09, 13

	RGB 30, 23, 19
	RGB 22, 12, 10

	RGB 17, 22, 22
	RGB 00, 13, 13

	RGB 19, 13, 11
	RGB 11, 05, 03

	RGB 31, 28, 21
	RGB 23, 14, 10

	RGB 24, 27, 17
	RGB 11, 14, 11

	RGB 25, 19, 25
	RGB 14, 10, 14

	RGB 25, 15, 25
	RGB 19, 07, 19

	RGB 22, 19, 14
	RGB 09, 05, 03

Func_c7bd0: ; c7bd0 (31:7bd0)
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_c7b84
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld l, a
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_c7b84
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call Func_c796a
	ret

SECTION "Bank 35", ROMX, BANK [$35]
GFX_d4000: INCBIN "gfx/sprites/d4000.w16.2bpp" ; d4000
GFX_d4240: INCBIN "gfx/sprites/d4240.w16.2bpp" ; d4240
GFX_d4480: INCBIN "gfx/sprites/d4480.w16.2bpp" ; d4480
GFX_d46c0: INCBIN "gfx/sprites/d46c0.w16.2bpp" ; d46c0
GFX_d4900: INCBIN "gfx/sprites/d4900.w16.2bpp" ; d4900
GFX_d4b40: INCBIN "gfx/sprites/d4b40.w16.2bpp" ; d4b40
GFX_d4d80: INCBIN "gfx/sprites/d4d80.w16.2bpp" ; d4d80
GFX_d4fc0: INCBIN "gfx/sprites/d4fc0.w16.2bpp" ; d4fc0
GFX_d5200: INCBIN "gfx/sprites/d5200.w16.2bpp" ; d5200
GFX_d5440: INCBIN "gfx/sprites/d5440.w16.2bpp" ; d5440
GFX_d5680: INCBIN "gfx/sprites/d5680.w16.2bpp" ; d5680
GFX_d58c0: INCBIN "gfx/sprites/d58c0.w16.2bpp" ; d58c0
GFX_d5b00: INCBIN "gfx/sprites/d5b00.w16.2bpp" ; d5b00
GFX_d5d40: INCBIN "gfx/sprites/d5d40.w16.2bpp" ; d5d40
GFX_d5f80: INCBIN "gfx/sprites/d5f80.w16.2bpp" ; d5f80
GFX_d61c0: INCBIN "gfx/sprites/d61c0.w16.2bpp" ; d61c0
GFX_d6400: INCBIN "gfx/sprites/d6400.w16.2bpp" ; d6400
GFX_d6640: INCBIN "gfx/sprites/d6640.w16.2bpp" ; d6640
GFX_d6880: INCBIN "gfx/sprites/d6880.w16.2bpp" ; d6880
GFX_d6ac0: INCBIN "gfx/sprites/d6ac0.w16.2bpp" ; d6ac0
GFX_d6d00: INCBIN "gfx/sprites/d6d00.w16.2bpp" ; d6d00
GFX_d6f40: INCBIN "gfx/sprites/d6f40.w16.2bpp" ; d6f40
GFX_d7180: INCBIN "gfx/sprites/d7180.w16.2bpp" ; d7180
GFX_d73c0: INCBIN "gfx/sprites/d73c0.w16.2bpp" ; d73c0
GFX_d7600: INCBIN "gfx/sprites/d7600.w16.2bpp" ; d7600
GFX_d7840: INCBIN "gfx/sprites/d7840.w16.2bpp" ; d7840

SECTION "Bank 39", ROMX, BANK [$39]
MapTiles_CGB: INCBIN "gfx/tiles/cgb.2bpp" ; e4000

SECTION "Bank 3e 2", ROMX [$6fb2], BANK [$3e]
Func_fafb2:
	ret

Data_fafb3: ; fafb3
	dr $fafb3, $fb007

Data_fb007: ; fb007
	dr $fb007, $fb016

Data_fb016: ; fb016
	dr $fb016, $fb035

Data_fb035: ; fb035
	dr $fb035, $fb044

Data_fb044: ; fb044
	dr $fb044, $fb089

Data_fb089: ; fb089
	dr $fb089, $fb098

Data_fb098: ; fb098
	dr $fb098, $fb0b7

Data_fb0b7: ; fb0b7
	dr $fb0b7, $fb0c6

Func_fb0c6: ; fb0c6 (3e:70c6)
	push hl
	push de
	push bc
	set_farcall_addrs_hli Func_17e95
	pop bc
	pop de
	pop hl
	call FarCall
	ret

Func_fb0db: ; fb0db (3e:70db)
	push hl
	add sp, -$30
	push de
	ld a, [hSRAMBank]
	push af
	ld hl, sp+$4
	push hl
	read_hl_from_sp_plus $38
	pop de
	ld bc, $2f
	call MemCopy
	ld a, $1
	call GetSRAMBank
	pop af
	pop de
	push af
	ld l, e
	ld h, $0
	ld de, $2f
	call MultiplyHLbyDE
	ld de, $ba24
	add hl, de
	reg16swap de, hl
	ld hl, sp+$2
	ld bc, $2f
	call MemCopy
	pop af
	call GetSRAMBank
	add sp, $32
	ret

Func_fb118:
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	cp $2
	jp z, Func_fb16e
	cp $1
	jp z, Func_fb15a
	or a
	jp nz, Func_fb187
	call FillVisibleAreaWithBlankTile
Func_fb13d: ; fb13d (3e:713d)
	callba_hli Func_59c89
	ld a, l
	and h
	inc a
	jp z, Func_fb154
	jp Func_fb157

Func_fb154: ; fb154 (3e:7154)
	jp Func_fb13d

Func_fb157: ; fb157 (3e:7157)
	jp Func_fb187

Func_fb15a: ; fb15a (3e:715a)
	callba_hli Func_5a3e1
	ld hl, $0
	jp Func_fb187

Func_fb16e: ; fb16e (3e:716e)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_58cf2)
	ld de, Data_58cf2
	ld hl, Data_58cd3
	call FarCall
	ld hl, $0
Func_fb187: ; fb187 (3e:7187)
	call Func_3af6
	ld hl, $8000
	ret

Func_fb18e: ; fb18e (3e:718e)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	ld l, a
	ld a, $1
	ld [wSaveScratchBirthMonth], a
	ld a, $1
	ld [wSaveScratchBirthDay], a
	ld a, $9
	ld [wc987], a
	ld a, l
	call GetSRAMBank
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_fb1c8
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_fb1dc
Func_fb1c8: ; fb1c8 (3e:71c8)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_fb1dc: ; fb1dc (3e:71dc)
	ld hl, $1
	ret

Pointers_fb1e0:
	dw Data_fb1e6
	dw Data_fb1f9
	dw $0000

Data_fb1e6:
	db "(もちものかﾞ いっはﾟいなのてﾞ)", $0

Data_fb1f9:
	db "(そうこに おくるよ)", $0

Func_fb205: ; fb205 (3e:7205)
	ld a, $3
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli AllocateMemory
	ld hl, $c8
	call FarCall
	reg16swap de, hl
	push de
	ld c, e
	ld b, d
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	pop de
	push de
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpAttrMapRectangle
	ld a, $2
	ld [wc39a], a
	set_farcall_addrs_hli Func_da901
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call FarCall
	push hl
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli PrintMapText
	ld bc, BANK(Pointers_fb1e0)
	ld de, Pointers_fb1e0
	ld hl, $10e
	call FarCall
	ld a, $2
	ld [wc39a], a
	pop hl
	pop de
	push hl
	push de
	ld c, e
	ld b, d
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreTileMapRectangle
	pop de
	pop hl
	push de
	push hl
	ld hl, $64
	add hl, de
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call RestoreAttrMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	set_farcall_addrs_hli Func_daa40
	pop hl
	call FarCall
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	ret

Func_fb2ed: ; fb2ed (3e:72ed)
	push af
	push bc
	push bc
	push bc
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	get_party_bot
	ld de, $20
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	ld hl, sp+$7
	ld [hl], $0
Func_fb328: ; fb328 (3e:7328)
	ld hl, sp+$7
	ld a, [hl]
	cp $3
	jp nc, Func_fb368
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	get_party_bot
	ld de, $8
	add hl, de
	reg16swap de, hl
	ld hl, sp+$7
	ld l, [hl]
	ld h, $0
	add hl, de
	ld a, [hl]
	and $3f
	ld hl, sp+$7
	ld e, [hl]
	ld d, $0
	ld hl, sp+$4
	add hl, de
	ld [hl], a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	jp Func_fb328

Func_fb368: ; fb368 (3e:7368)
	pop af
	call GetSRAMBank
	pop hl
	push hl
	ld a, l
	and $f
	ld l, a
	ld h, $0
	pop de
	push hl
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, sp+$0
	call Func_fb3bb
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	pop hl
	push hl
	push hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	get_party_bot
	ld de, $20
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetSRAMBank
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_fb3bb: ; fb3bb (3e:73bb)
	push hl
	add sp, -$14
	push de
	read_hl_from_sp_plus $18
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to_sp_plus $15
	ld c, $0
	pop de
Func_fb3ce: ; fb3ce (3e:73ce)
	ld a, c
	cp $3
	jp nc, Func_fb41d
	push de
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_fb418
	push bc
	ld l, c
	ld h, $0
	add hl, de
	ld a, [hl]
	dec a
	ld e, a
	ld hl, sp+$4
	call Func_248f
	pop bc
	read_hl_from_sp_plus $10
	ld h, $0
	ld a, l
	sub $aa
	or h
	jp nz, Func_fb418
	ld a, c
	inc a
	add a
	add a
	ld b, a
	read_hl_from_sp_plus $10
	ld l, h
	ld h, $0
	call LeftShiftHL
	push hl
	read_hl_from_sp_plus $17
	pop de
	ld a, l
	or e
	ld l, a
	ld a, h
	or d
	ld h, a
	write_hl_to_sp_plus $15
Func_fb418: ; fb418 (3e:7418)
	inc c
	pop de
	jp Func_fb3ce

Func_fb41d: ; fb41d (3e:741d)
	read_hl_from_sp_plus $13
	push hl
	read_hl_from_sp_plus $18
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	add sp, $16
	ret

Func_fb42d: ; fb42d (3e:742d)
	push af
	xor a
	ld [wc316], a
	ld hl, $0
	write_hl_to wc312
	ld hl, $0
	write_hl_to wc314
	pop af
	cp $27
	jp z, Func_fb556
	cp $26
	jp z, Func_fb54b
	cp $42
	jp z, Func_fb538
	cp $41
	jp z, Func_fb538
	cp $39
	jp z, Func_fb538
	cp $38
	jp z, Func_fb525
	cp $37
	jp z, Func_fb512
	cp $36
	jp z, Func_fb507
	cp $35
	jp z, Func_fb4fc
	cp $34
	jp z, Func_fb4f1
	cp $33
	jp z, Func_fb4e6
	cp $29
	jp z, Func_fb4db
	cp $32
	jp z, Func_fb4db
	cp $28
	jp z, Func_fb4d0
	cp $31
	jp z, Func_fb4d0
	cp $25
	jp z, Func_fb4c5
	cp $30
	jp z, Func_fb4c5
	cp $24
	jp z, Func_fb4ba
	cp $2f
	jp z, Func_fb4ba
	cp $c
	jp nz, Func_fb55e
	ld hl, $a
	write_hl_to wc312
	ld hl, $a
	write_hl_to wc314
	jp Func_fb55e

Func_fb4ba: ; fb4ba (3e:74ba)
	ld hl, $14
	write_hl_to wc312
	jp Func_fb55e

Func_fb4c5: ; fb4c5 (3e:74c5)
	ld hl, $32
	write_hl_to wc312
	jp Func_fb55e

Func_fb4d0: ; fb4d0 (3e:74d0)
	ld hl, $c8
	write_hl_to wc312
	jp Func_fb55e

Func_fb4db: ; fb4db (3e:74db)
	ld hl, $3e7
	write_hl_to wc312
	jp Func_fb55e

Func_fb4e6: ; fb4e6 (3e:74e6)
	ld hl, $14
	write_hl_to wc314
	jp Func_fb55e

Func_fb4f1: ; fb4f1 (3e:74f1)
	ld hl, $32
	write_hl_to wc314
	jp Func_fb55e

Func_fb4fc: ; fb4fc (3e:74fc)
	ld hl, $c8
	write_hl_to wc314
	jp Func_fb55e

Func_fb507: ; fb507 (3e:7507)
	ld hl, $3e7
	write_hl_to wc314
	jp Func_fb55e

Func_fb512: ; fb512 (3e:7512)
	ld hl, $64
	write_hl_to wc312
	ld hl, $64
	write_hl_to wc314
	jp Func_fb55e

Func_fb525: ; fb525 (3e:7525)
	ld hl, $c8
	write_hl_to wc312
	ld hl, $c8
	write_hl_to wc314
	jp Func_fb55e

Func_fb538: ; fb538 (3e:7538)
	ld hl, $3e7
	write_hl_to wc312
	ld hl, $3e7
	write_hl_to wc314
	jp Func_fb55e

Func_fb54b: ; fb54b (3e:754b)
	ld hl, $50
	write_hl_to wc312
	jp Func_fb55e

Func_fb556: ; fb556 (3e:7556)
	ld hl, $64
	write_hl_to wc312
Func_fb55e: ; fb55e (3e:755e)
	ret

Func_fb55f:: ; fb55f (3e:755f)
	add sp, -$24
	push af
	set_farcall_addrs_hli GetRobotInParty
	ld hl, sp+$2
	reg16swap de, hl
	xor a
	call FarCall
	pop af
	ld l, a
	ld h, $0
	write_hl_to_sp_plus $16
	set_farcall_addrs_hli Func_6b74
	ld hl, sp+$0
	reg16swap de, hl
	xor a
	call FarCall
	add sp, $24
	ret

Func_fb597:
	ld c, l
	ld b, h
	push bc
	ld c, $3
	ld e, $7
	ld hl, $209
	call Func_fb0c6
	ld c, $3
	ld e, $7
	ld hl, $909
	call Func_fb0c6
	ld c, $5
	ld e, $7
	ld hl, $20b
	call Func_fb0c6
	ld c, $5
	ld e, $7
	ld hl, $90b
	call Func_fb0c6
	ld de, Data_fb67f
	ld hl, $40a
	call PlaceStringDEatCoordHL
	ld de, Data_fb683
	ld hl, $50c
	call PlaceStringDEatCoordHL
	ld de, Data_fb686
	ld hl, $50e
	call PlaceStringDEatCoordHL
	ld de, Data_fb689
	ld hl, $a0a
	call PlaceStringDEatCoordHL
	ld de, Data_fb690
	ld hl, $c0c
	call PlaceStringDEatCoordHL
	ld de, Data_fb693
	ld hl, $c0e
	call PlaceStringDEatCoordHL
	ld a, [wc307]
	and $1
	add a
	add $c
	ld l, a
	push hl
	ld a, [wc307]
	ld b, $2
	call DivideAbyB
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	add $3
	pop de
	call SetStringStartState
	ld hl, $8b
	push hl
	ld hl, Data_fb696
	push hl
	call PlaceString
	pop bc
	pop bc
	ld a, [wc308]
	add $2
	and $1
	add a
	add $c
	ld l, a
	push hl
	ld a, [wc308]
	add $2
	ld b, $2
	call DivideAbyB
	ld d, a
	add a
	ld e, a
	add a
	add d
	add e
	add $3
	pop de
	call SetStringStartState
	ld hl, $8c
	push hl
	ld hl, Data_fb699
	push hl
	call PlaceString
	pop bc
	pop bc
	ld l, $7
	push hl
	ld c, $e
	ld e, $9
	ld a, $2
	call Func_3ca1
	pop bc
	pop bc
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [wc307]
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $b
	add hl, bc
	ld a, [wc307]
	ld e, a
	ld d, $0
	ld [hl], e
	inc hl
	ld [hl], d
	ld hl, $4000
	ret

Data_fb67f:
	db "アニメ", $0

Data_fb683:
	db "オン", $0

Data_fb686:
	db "オフ", $0

Data_fb689:
	db "スヒﾟーカー", $0

Data_fb690:
	db "オン", $0

Data_fb693:
	db "オフ", $0

Data_fb696:
	TX_STACK
	db $0

Data_fb699:
	TX_STACK
	db $0

Func_fb69c:
	push hl
	push bc
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	add $2
	ld hl, sp+$0
	ld [hl], a
	call GetHLAtSPPlus4
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	inc a
	ld c, a
	push bc
	call GetHLAtSPPlus6
	ld de, $9
	add hl, de
	ld c, [hl]
	call GetHLAtSPPlus6
	ld de, $7
	add hl, de
	ld a, [hl]
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld l, [hl]
	cp c
	jp nc, Func_fb6d4
	ld c, a
Func_fb6d4: ; fb6d4 (3e:76d4)
	ld a, l
	add c
	ld e, a
	pop bc
	ld a, [wBackupMapGroup]
	or a
	jp nz, Func_fb733
Func_fb6df: ; fb6df (3e:76df)
	ld a, l
	cp e
	jp nc, Func_fb730
	push de
	push bc
	push hl
	ld e, c
	ld hl, sp+$6
	ld a, [hl]
	call SetStringStartState
	pop hl
	inc l
	dec l
	jp nz, Func_fb701
	push hl
	ld hl, Data_fb773
	push hl
	call PlaceString
	pop bc
	pop hl
	jp Func_fb726

Func_fb701: ; fb701 (3e:7701)
	ld a, l
	cp $a
	jp nc, Func_fb718
	push hl
	ld h, $0
	push hl
	ld hl, Data_fb778
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
	jp Func_fb726

Func_fb718: ; fb718 (3e:7718)
	push hl
	ld h, $0
	push hl
	ld hl, Data_fb77c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
Func_fb726: ; fb726 (3e:7726)
	pop bc
	ld a, c
	add $2
	ld c, a
	inc l
	pop de
	jp Func_fb6df

Func_fb730: ; fb730 (3e:7730)
	jp Func_fb75f

Func_fb733: ; fb733 (3e:7733)
	ld a, l
Func_fb734: ; fb734 (3e:7734)
	cp e
	jp nc, Func_fb75f
	push de
	push bc
	push af
	ld e, c
	ld hl, sp+$6
	ld a, [hl]
	call SetStringStartState
	pop af
	pop bc
	push af
	push bc
	ld l, a
	ld h, $0
	inc hl
	push hl
	ld hl, Data_fb77f
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	ld a, c
	add $2
	ld c, a
	pop af
	inc a
	pop de
	jp Func_fb734

Func_fb75f: ; fb75f (3e:775f)
	set_farcall_addrs_hli Func_17863
	call GetHLAtSPPlus4
	call FarCall
	pop bc
	pop bc
	ret

Data_fb773:
	db "(ちか)", $0

Data_fb778:
	db " "
	TX_SNUM
	db $0

Data_fb77c:
	TX_SNUM
	db $0

Data_fb77f:
	db " "
	TX_SNUM
	db $0

Func_fb783: ; fb783 (3e:7783)
	push bc
	push hl
	ld c, l
	ld b, h
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld a, [de]
	ld hl, sp+$3
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	inc de
	ld a, [de]
	ld hl, sp+$2
	ld [hl], a
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	ld l, [hl]
	push hl
	ld l, c
	ld h, b
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	push af
	ld a, $2
.asm_fb7b5
	ld [wc39a], a
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	ld de, Data_fb7ee
	ld hl, $10e
	call PlaceStringDEatCoordHL
	pop af
	pop hl
	ld c, a
	ld e, l
	ld hl, sp+$3
	ld a, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, a
	call Func_fb0c6
	pop hl
	call Func_fb69c
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	ret

Data_fb7ee:
	db "(なんかいにいく)?", $0

Func_fb7f9: ; fb7f9 (3e:77f9)
	push bc
	push bc
	push bc
	push de
	call WriteHLToSPPlus8
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $5
	add hl, de
	ld c, [hl]
	inc hl
	ld b, [hl]
	call GetHLAtSPPlus8
	ld de, $9
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus10
	ld de, $b
	add hl, de
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	pop de
	ld a, e
	or d
	jp nz, Func_fb85a
	call GetHLAtSPPlus4
	dec hl
	call WriteHLToSPPlus4
	inc h
	dec h
	bit 7, h
	jr z, .asm_fb857
	ld hl, $0
	call WriteHLToSPPlus4
	dec bc
	inc b
	dec b
	bit 7, b
	jr z, .asm_fb857
	ld bc, $0
.asm_fb857
	jp Func_fb88c

Func_fb85a: ; fb85a (3e:785a)
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	inc hl
	call WriteHLToSPPlus6
	pop de
	call CompareHLtoDE
	jp c, Func_fb88c
	pop hl
	push hl
	dec hl
	call WriteHLToSPPlus4
	inc bc
	pop hl
	push hl
	add hl, bc
	push hl
	call GetHLAtSPPlus8
	ld de, $7
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	pop de
	call CompareHLtoDE
	jp nc, Func_fb88c
	dec bc
Func_fb88c: ; fb88c (3e:788c)
	call GetHLAtSPPlus4
	push hl
	call GetHLAtSPPlus8
	inc hl
	inc hl
	inc hl
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	call GetHLAtSPPlus6
	ld de, $5
	add hl, de
	ld [hl], c
	inc hl
	ld [hl], b
	ld l, $b
	push hl
	ld c, $4
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	call GetHLAtSPPlus6
	call Func_fb69c
	ld l, $b
	push hl
	ld c, $4
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	ld hl, $4000
	pop bc
	pop bc
	pop bc
	ret

Pointers_fb8c9:
	dw Data_fb8cd
	dw $0000

Data_fb8cd:
	db "(かいにいとﾞうするよ)", $0

Pointers_fb8da:
	dw Data_fb8de
	dw $0000

Data_fb8de:
	db "(にいとﾞうするよ)", $0

Func_fb8e9: ; fb8e9 (3e:78e9)
	ld c, l
	ld b, h
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	push hl
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	ld e, $e
	ld a, $1
	call SetStringStartState
	pop hl
	ld a, [wBackupMapGroup]
	or a
	jp nz, Func_fb945
	inc l
	dec l
	jp nz, Func_fb934
	push hl
	ld hl, Data_fba37
	push hl
	call PlaceString
	pop bc
	pop hl
	jp Func_fb942

Func_fb934: ; fb934 (3e:7934)
	push hl
	ld h, $0
	push hl
	ld hl, Data_fba3c
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
Func_fb942: ; fb942 (3e:7942)
	jp Func_fb954

Func_fb945: ; fb945 (3e:7945)
	push hl
	ld h, $0
	inc hl
	push hl
	ld hl, Data_fba3f
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
Func_fb954: ; fb954 (3e:7954)
	push hl
	set_farcall_addrs_hli PrintMapText
	pop hl
	push hl
	ld a, [wBackupMapGroup]
	or a
	jp nz, Func_fb98c
	inc l
	dec l
	jp nz, Func_fb97d
	ld bc, BANK(Pointers_fb8da)
	ld de, Pointers_fb8da
	ld hl, $30e
	call FarCall
	jp Func_fb989

Func_fb97d: ; fb97d (3e:797d)
	ld bc, BANK(Pointers_fb8c9)
	ld de, Pointers_fb8c9
	ld hl, $30e
	call FarCall
Func_fb989: ; fb989 (3e:7989)
	jp Func_fb998

Func_fb98c: ; fb98c (3e:798c)
	ld bc, BANK(Pointers_fb8c9)
	ld de, Pointers_fb8c9
	ld hl, $30e
	call FarCall
Func_fb998: ; fb998 (3e:7998)
	callba_hli Func_9d3e
	ld a, $5f
	call OverworldPlaySFX
	set_farcall_addrs_hli Func_b5db
	ld hl, $3c
	call FarCall
	callba_hli Func_9d4d
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	ld e, $e
	ld a, $1
	call SetStringStartState
	pop hl
	ld a, [wBackupMapGroup]
	or a
	jp nz, Func_fba06
	inc l
	dec l
	jp nz, Func_fb9f5
	push hl
	ld hl, Data_fba42
	push hl
	call PlaceString
	pop bc
	pop hl
	jp Func_fba03

Func_fb9f5: ; fb9f5 (3e:79f5)
	push hl
	ld h, $0
	push hl
	ld hl, Data_fba4b
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
Func_fba03: ; fba03 (3e:7a03)
	jp Func_fba15

Func_fba06: ; fba06 (3e:7a06)
	push hl
	ld h, $0
	inc hl
	push hl
	ld hl, Data_fba56
	push hl
	call PlaceString
	pop bc
	pop bc
	pop hl
Func_fba15: ; fba15 (3e:7a15)
	push hl
	ld l, $5
	push hl
	ld c, $14
	ld e, $d
	xor a
	call Func_3ca1
	pop bc
	pop hl
	ld a, l
	ld [wc7de], a
	ld a, [wBackupMapGroup]
	or a
	jp nz, Func_fba33
	ld h, $0
	jp Func_fba36

Func_fba33: ; fba33 (3e:7a33)
	ld h, $0
	inc hl
Func_fba36: ; fba36 (3e:7a36)
	ret

Data_fba37:
	db "(ちか)", $0

Data_fba3c:
	TX_SNUM
	db $0

Data_fba3f:
	TX_SNUM
	db $0

Data_fba42:
	db "(ちか たﾞよ)", $0

Data_fba4b:
	TX_SNUM
	db " (かいたﾞよ)", $0

Data_fba56:
	TX_SNUM
	db " (かいたﾞよ)", $0

Pointers_fba61:
	dw Data_fba65
	dw $0000

Data_fba65:
	db "セーフﾞ(したよ)", $0

Func_fba6f: ; fba6f (3e:7a6f)
	set_farcall_addrs_hli AllocateMemory
	ld hl, $64
	call FarCall
	push hl
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call BackUpTileMapRectangle
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	ld de, Data_fbb91
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld de, Data_fbb9d
	ld hl, $110
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	reg16swap de, hl
	pop hl
	push de
	push hl
	ld c, l
	ld b, h
	ld de, PutOnVideoTransferQueue
	ld hl, $d
	call Func_2323
	set_farcall_addrs_hli FreeMemory
	pop hl
	call FarCall
	pop de
	ld a, e
	or d
	jp nz, Func_fbb90
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	ld de, Data_fbbab
	ld hl, $10e
	call PlaceStringDEatCoordHL
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	callba_hli Func_1482e
	ld a, l
	or h
	jp nz, Func_fbb6e
	callba_hli SaveGame
	ld c, $5
	ld e, $14
	ld hl, $d
	call Func_fb0c6
	set_farcall_addrs_hli PrintMapText
	ld bc, BANK(Pointers_fba61)
	ld de, Pointers_fba61
	ld hl, $10e
	call FarCall
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
Func_fbb6e: ; fbb6e (3e:7b6e)
	call FillVisibleAreaWithBlankTile
	callba_hli Func_237be
	callba_hli Func_2380f
	call Func_03a4
Func_fbb90: ; fbb90 (3e:7b90)
	ret

Data_fbb91:
	db "タイトルメニュー(に)", $0

Data_fbb9d:
	db "(もとﾞるけとﾞ いい)?", $0

Data_fbbab:
	db "セーフﾞ(する)?", $0

Func_fbbb5: ; fbbb5 (3e:7bb5)
	push bc
	push bc
	push hl
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fbbe7
	set_farcall_addrs_hli Func_613fc
	ld e, $0
	xor a
	call FarCall
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_fbbfb

Func_fbbe7: ; fbbe7 (3e:7be7)
	set_farcall_addrs_hli Func_61424
	ld c, $1
	ld e, $1
	ld a, $1
	call FarCall
Func_fbbfb: ; fbbfb (3e:7bfb)
	set_farcall_addrs_hli GetBanks
	ld de, $19
	ld a, $3
	call FarCall
	push af
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, SaveScratchMoney
	ld bc, $4
	call MemCopy
	pop af
	call GetSRAMBank
	set_farcall_addrs_hli Func_1503d
	pop hl
	call FarCall
	ld c, $4
	ld e, $a
	ld hl, $0
	call Func_fb0c6
	ld de, Data_fbd22
	ld hl, $101
	call PlaceStringDEatCoordHL
	ld e, $2
	ld a, $1
	call SetStringStartState
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $a
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_fbc70
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_fbd2b
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_fbd13

Func_fbc70: ; fbc70 (3e:7c70)
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $64
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_fbc95
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_fbd36
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_fbd13

Func_fbc95: ; fbc95 (3e:7c95)
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $3e8
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_fbcba
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_fbd40
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_fbd13

Func_fbcba: ; fbcba (3e:7cba)
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, $0
	push hl
	ld hl, $2710
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_fbcdf
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_fbd49
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_fbd13

Func_fbcdf: ; fbcdf (3e:7cdf)
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, $1
	push hl
	ld hl, $86a0
	push hl
	call CompareStackLongs_Signed
	jp nc, Func_fbd04
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_fbd51
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
	jp Func_fbd13

Func_fbd04: ; fbd04 (3e:7d04)
	ld hl, sp+$0
	call PutLongFromHLOnStack
	ld hl, Data_fbd58
	push hl
	call PlaceString
	pop bc
	pop bc
	pop bc
Func_fbd13: ; fbd13 (3e:7d13)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	pop bc
	pop bc
	ret

Data_fbd22:
	db "(しょしﾞきん)", $0

Data_fbd2b:
	db "      "
	TX_UNUM
	db "G", $0

Data_fbd36:
	db "     "
	TX_UNUM
	db "G", $0

Data_fbd40:
	db "    "
	TX_UNUM
	db "G", $0

Data_fbd49:
	db "   "
	TX_UNUM
	db "G", $0

Data_fbd51:
	db "  "
	TX_UNUM
	db "G", $0

Data_fbd58:
	db " "
	TX_UNUM
	db "G", $0

Func_fbd5e: ; fbd5e (3e:7d5e)
	or a
	jp nz, Func_fbd99
	inc e
	dec e
	jp nz, Func_fbd80
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_fb007)
	ld de, Data_fb007
	ld hl, Data_fafb3
	call FarCall
	jp Func_fbd96

Func_fbd80: ; fbd80 (3e:7d80)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_fb035)
	ld de, Data_fb035
	ld hl, Data_fb016
	call FarCall
Func_fbd96: ; fbd96 (3e:7d96)
	jp Func_fbdcd

Func_fbd99: ; fbd99 (3e:7d99)
	inc e
	dec e
	jp nz, Func_fbdb7
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_fb089)
	ld de, Data_fb089
	ld hl, Data_fb044
	call FarCall
	jp Func_fbdcd

Func_fbdb7: ; fbdb7 (3e:7db7)
	set_farcall_addrs_hli MenuWithSecondaryHeader
	ld c, BANK(Data_fb0b7)
	ld de, Data_fb0b7
	ld hl, Data_fb098
	call FarCall
Func_fbdcd: ; fbdcd (3e:7dcd)
	ret

Func_fbdce:
	ld c, l
	ld b, h
	push bc
	ld l, $b
	push hl
	ld c, $b
	ld e, $3
	ld a, $4
	call Func_3bc5
	pop bc
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $3
	or h
	jp z, Func_fbeb5
	ld a, l
	sub $2
	or h
	jp z, Func_fbe7f
	ld a, l
	dec a
	or h
	jp z, Func_fbe55
	ld a, l
	or h
	jp nz, Func_fbef3
	callba_hli LoadGame
	cp $ff
	jp z, Func_fbe52
	callba_hli Func_58df9
	or a
	jp nz, Func_fbe52
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	ld c, $1
	ld e, $0
	xor a
	call FarCall
Func_fbe52: ; fbe52 (3e:7e52)
	jp Func_fbef3

Func_fbe55: ; fbe55 (3e:7e55)
	call NewSaveFileInWRam
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_fbef3

Func_fbe7f: ; fbe7f (3e:7e7f)
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_52df8
	callba_hli Func_17470
	call Func_204c
	call Func_3af6
	jp Func_fbef3

Func_fbeb5: ; fbeb5 (3e:7eb5)
	callba_hli LoadDebugSaveState
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_144bd
	callba_hli Func_17470
	call Func_204c
Func_fbef3: ; fbef3 (3e:7ef3)
	ld hl, $8000
	ret

Func_fbef7:
	ld c, l
	ld b, h
	push bc
	ld l, $b
	push hl
	ld c, $b
	ld e, $3
	ld a, $4
	call Func_3bc5
	pop bc
	pop bc
	ld hl, $5
	add hl, bc
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, b
	inc hl
	inc hl
	inc hl
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	add hl, de
	ld a, l
	sub $2
	or h
	jp z, Func_fbf8b
	ld a, l
	dec a
	or h
	jp z, Func_fbf55
	ld a, l
	or h
	jp nz, Func_fbfc9
	call NewSaveFileInWRam
	callba_hli Func_17488
	call Func_2097
	set_farcall_addrs_hli OverworldLoop
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	jp Func_fbfc9

Func_fbf55: ; fbf55 (3e:7f55)
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_52df8
	callba_hli Func_17470
	call Func_204c
	call Func_3af6
	jp Func_fbfc9

Func_fbf8b: ; fbf8b (3e:7f8b)
	callba_hli LoadDebugSaveState
	callba_hli Func_17488
	call Func_2097
	callba_hli Func_144bd
	callba_hli Func_17470
	call Func_204c
Func_fbfc9: ; fbfc9 (3e:7fc9)
	ld hl, $8000
	ret

SECTION "Bank 3f", ROMX, BANK [$3f]
INCLUDE "charmap2.asm"
Func_fc000:
	ret

Data_fc001:
	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 06, 19, 27
	RGB 30, 23, 00
	RGB 18, 00, 00

	RGB 31, 31, 31
	RGB 00, 00, 00
	RGB 30, 23, 00
	RGB 18, 00, 00

	RGB 31, 31, 31
	RGB 06, 19, 27
	RGB 00, 00, 00
	RGB 18, 00, 00

	RGB 00, 00, 00
	RGB 06, 19, 27
	RGB 30, 23, 00
	RGB 18, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 31, 31
	RGB 29, 22, 14
	RGB 24, 07, 07
	RGB 00, 00, 00

	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00

	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00

	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00

	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00
	RGB 31, 00, 00

TitleScreenRandom: ; fc081
	push af
	set_farcall_addrs_hli RandomRange
	pop af
	call FarCall
	ret

Func_fc092: ; fc092 (3f:4092)
	ld a, [wNextVBlankFlags]
	ld hl, wLastVBlankFlags
	cp [hl]
	jp nz, Func_fc092
	ret

Func_fc09d: ; fc09d (3f:409d)
	ld a, [wJoyHeld]
	ld hl, wJoyPressed
	or [hl]
	and $b0
	jp z, Func_fc0ac
	call Func_1b01
Func_fc0ac: ; fc0ac (3f:40ac)
	xor a
	ret

Func_fc0ae: ; fc0ae (3f:40ae)
	push hl
	push bc
	push bc
	push de
	read_hl_from wCurRobotPointer
	ld de, $15
	add hl, de
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld hl, wOAMBuffer
	call WriteHLToSPPlus6
	call GetHLAtSPPlus8
	ld de, $8
	add hl, de
	call WriteHLToSPPlus8
	pop de
	ld hl, $10
	add hl, de
	reg16swap de, hl
	ld hl, sp+$0
	ld a, [hl]
	and $40
	jp z, Func_fc0ee
	ld hl, $30
	add hl, de
	reg16swap de, hl
	ld bc, -$10
	jp Func_fc0f1

Func_fc0ee: ; fc0ee (3f:40ee)
	ld bc, $10
Func_fc0f1: ; fc0f1 (3f:40f1)
	xor a
Func_fc0f2: ; fc0f2 (3f:40f2)
	cp $4
	jp nc, Func_fc1a2
	push af
	push bc
	push de
	ld c, e
	ld b, d
	inc b
	dec b
	bit 7, b
	jr nz, .asm_fc10d
	ld e, c
	ld d, b
	ld hl, $98
	call CompareHLtoDE
	jp nc, Func_fc110
.asm_fc10d
	ld bc, $0
Func_fc110: ; fc110 (3f:4110)
	ld hl, sp+$7
	ld [hl], $0
Func_fc114: ; fc114 (3f:4114)
	ld hl, sp+$7
	ld a, [hl]
	cp $8
	jp nc, Func_fc192
	push bc
	ld hl, sp+$8
	ld a, [hl]
	and $20
	jp z, Func_fc142
	ld hl, sp+$9
	ld e, [hl]
	ld d, $0
	ld hl, $7
	ld a, l
	sub e
	ld l, a
	ld a, h
	sbc d
	ld h, a
	add hl, hl
	add hl, hl
	add hl, hl
	push hl
	read_hl_from_sp_plus $10
	pop de
	add hl, de
	ld c, l
	ld b, h
	jp Func_fc155

Func_fc142: ; fc142 (3f:4142)
	read_hl_from_sp_plus $e
	reg16swap de, hl
	ld hl, sp+$9
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	ld c, l
	ld b, h
Func_fc155: ; fc155 (3f:4155)
	inc b
	dec b
	bit 7, b
	jr nz, .asm_fc166
	ld e, c
	ld d, b
	ld hl, $a8
	call CompareHLtoDE
	jp nc, Func_fc169
.asm_fc166
	ld bc, $0
Func_fc169: ; fc169 (3f:4169)
	read_hl_from_sp_plus $c
	inc hl
	ld [hl], c
	pop bc
	call GetHLAtSPPlus10
	ld [hl], c
	ld hl, sp+$6
	ld a, [hl]
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	ld [hl], a
	ld hl, sp+$7
	ld a, [hl]
	inc a
	ld hl, sp+$7
	ld [hl], a
	call GetHLAtSPPlus10
	inc hl
	inc hl
	inc hl
	inc hl
	call WriteHLToSPPlus10
	jp Func_fc114

Func_fc192: ; fc192 (3f:4192)
	pop de
	pop bc
	reg16swap de, hl
	add hl, bc
	reg16swap de, hl
	pop af
	inc a
	jp Func_fc0f2

Func_fc1a2: ; fc1a2 (3f:41a2)
	pop bc
	pop bc
	pop bc
	ret

Func_fc1a6: ; fc1a6 (3f:41a6)
	push hl
	push bc
	push bc
	push bc
	push bc
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld l, a
	ld h, $0
	call WriteHLToSPPlus6
	call GetHLAtSPPlus6
	ld de, $80
	call CompareHLtoDE
	jp c, Func_fc1cc
	call GetHLAtSPPlus6
	dec h
	call WriteHLToSPPlus6
Func_fc1cc: ; fc1cc (3f:41cc)
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld hl, sp+$6
	ld [hl], a
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld a, [hl]
	or a
	jp z, Func_fc1f2
	call GetHLAtSPPlus6
	ld a, l
	cpl
	ld l, a
	ld a, h
	cpl
	ld h, a
	inc hl
	call WriteHLToSPPlus6
Func_fc1f2: ; fc1f2 (3f:41f2)
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call WriteHLToSPPlus4
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $11
	add hl, de
	add hl, bc
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	pop de
	push hl
Func_fc255: ; fc255 (3f:4255)
	ld hl, sp+$6
	ld a, [hl]
	cp $1
	jp c, Func_fc294
	pop hl
	push hl
	push hl
	call GetHLAtSPPlus6
	pop de
	call Func_fc0ae
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_fc092
	call Func_fc09d
	or a
	jp z, Func_fc27e
	ld a, $1
	jp Func_fc2c8

Func_fc27e: ; fc27e (3f:427e)
	ld hl, sp+$6
	ld a, [hl]
	dec a
	ld hl, sp+$6
	ld [hl], a
	call GetHLAtSPPlus6
	push hl
	call GetHLAtSPPlus6
	pop de
	add hl, de
	call WriteHLToSPPlus4
	jp Func_fc255

Func_fc294: ; fc294 (3f:4294)
	call GetHLAtSPPlus4
	push hl
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld c, [hl]
	ld b, $0
	read_hl_from wCurRobotPointer
	ld de, $c
	add hl, de
	ld l, [hl]
	ld h, $0
	ld a, l
	xor c
	ld l, a
	ld a, h
	xor b
	ld h, a
	add hl, hl
	ld c, l
	ld b, h
	read_hl_from wCurRobotPointer
	ld de, $d
	add hl, de
	add hl, bc
	pop de
	ld [hl], e
	inc hl
	ld [hl], d
	xor a
Func_fc2c8: ; fc2c8 (3f:42c8)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_fc2ce:
	dr $fc2ce, $fc2d3

Data_fc2d3:
	dr $fc2d3, $fc2d7

Func_fc2d7: ; fc2d7 (3f:42d7)
	push bc
	push bc
	push bc
	push bc
	push bc
	push af
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, Data_fc2ce
	ld bc, $5
	call MemCopy
	read_hl_from Data_fc2d3
	call WriteHLToSPPlus6
	read_hl_from Data_fc2d3 + 2
	call WriteHLToSPPlus4
	set_farcall_addrs_hli Func_dc0a
	pop af
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$4
	call FarCall
	ld hl, sp+$2
	call Func_fc1a6
	or a
	jp z, Func_fc329
	jp Func_fc351

Func_fc329: ; fc329 (3f:4329)
	ld hl, sp+$9
	ld [hl], $0
Func_fc32d: ; fc32d (3f:432d)
	ld hl, sp+$9
	ld a, [hl]
	cp $1e
	jp nc, Func_fc34c
	call NextOverworldFrame
	call Func_fc09d
	or a
	jp z, Func_fc342
	jp Func_fc351

Func_fc342: ; fc342 (3f:4342)
	ld hl, sp+$9
	ld a, [hl]
	inc a
	ld hl, sp+$9
	ld [hl], a
	jp Func_fc32d

Func_fc34c: ; fc34c (3f:434c)
	ld hl, sp+$0
	call Func_fc1a6
Func_fc351: ; fc351 (3f:4351)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_fc357:
	dr $fc357, $fc35c

Data_fc35c:
	dr $fc35c, $fc360

Func_fc360: ; fc360 (3f:4360)
	push bc
	push bc
	push bc
	push bc
	push bc
	push af
	ld hl, sp+$6
	reg16swap de, hl
	ld hl, Data_fc357
	ld bc, $5
	call MemCopy
	read_hl_from Data_fc35c
	call WriteHLToSPPlus6
	read_hl_from Data_fc35c + 2
	call WriteHLToSPPlus4
	set_farcall_addrs_hli Func_dc0a
	pop af
	ld e, a
	ld a, $1
	call FarCall
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$4
	call FarCall
	ld hl, sp+$2
	call Func_fc1a6
	or a
	jp z, Func_fc3b3
	jp Func_fc3db

Func_fc3b3: ; fc3b3 (3f:43b3)
	ld hl, sp+$9
	ld [hl], $0
Func_fc3b7: ; fc3b7 (3f:43b7)
	ld hl, sp+$9
	ld a, [hl]
	cp $1e
	jp nc, Func_fc3d6
	call NextOverworldFrame
	call Func_fc09d
	or a
	jp z, Func_fc3cc
	jp Func_fc3db

Func_fc3cc: ; fc3cc (3f:43cc)
	ld hl, sp+$9
	ld a, [hl]
	inc a
	ld hl, sp+$9
	ld [hl], a
	jp Func_fc3b7

Func_fc3d6: ; fc3d6 (3f:43d6)
	ld hl, sp+$0
	call Func_fc1a6
Func_fc3db: ; fc3db (3f:43db)
	pop bc
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_fc3e1:
	ld a, [wBlinkerOffTile]
	ld [wc31e], a
	ret

Func_fc3e8:
	ld a, [wc2cd]
	or a
	jp nz, Func_fc3fa
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_fc402

Func_fc3fa: ; fc3fa (3f:43fa)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_fc402: ; fc402 (3f:4402)
	xor a
	ld [rSCX], a
	ld [wc31e], a
	ld a, [wLCDC]
	ld [rLCDC], a
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	ret

Func_fc416: ; fc416 (3f:4416)
	ld a, [wc31e]
	cpl
	inc a
	push af
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	set_farcall_addrs_hli Func_7c8a
	pop af
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	push de
	ld l, a
	ld h, $0
	ld de, $8
	call DivideHLByDESigned
	ld h, l
	ld l, $0
	ld de, $f805
	add hl, de
	pop de
	ld a, [wc2cd]
	ld c, a
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	push hl
	read_hl_from $c325
	ld de, $8
	call DivideHLByDESigned
	ld h, l
	ld l, $0
	ld de, $5
	add hl, de
	pop de
	ld a, [wc2cd]
	ld c, a
	call FarCall
	call WaitVideoTransfer
	ld a, $3f
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, Func_fc3e8
	write_hl_to wVBlankCallbackAddress
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $82
	ld [wNextVBlankFlags], a
Func_fc4ab: ; fc4ab (3f:44ab)
	ld a, [wNextVBlankFlags]
	and $80
	jp nz, Func_fc4ab
	ld a, [wc2cd]
	or a
	jp nz, Func_fc4c9
	ld bc, Func_0300
	debgcoord 0, 5
	hlbgcoord 0, 5, vWindowMap
	call RequestVideoData
	jp Func_fc4d5

Func_fc4c9: ; fc4c9 (3f:44c9)
	ld bc, Func_0300
	debgcoord 0, 5, vWindowMap
	hlbgcoord 0, 5
	call RequestVideoData
Func_fc4d5: ; fc4d5 (3f:44d5)
	set_farcall_addrs_hli Func_62a3
	ld bc, $5
	ld de, $130c
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	inc hl
	inc hl
	call FarCall
	ret

Data_fc4f5:
	dr $fc4f5, $fc501

Func_fc501: ; fc501 (3f:4501)
	push af
	push de
	push bc
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_fc4f5
	add hl, de
	ld e, [hl]
	ld hl, sp+$4
	ld [hl], e
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_fc4f5
	add hl, de
	inc hl
	ld e, [hl]
	ld hl, sp+$3
	ld [hl], e
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_fc4f5
	add hl, de
	inc hl
	inc hl
	ld e, [hl]
	ld hl, sp+$2
	ld [hl], e
	ld hl, sp+$10
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld de, Data_fc4f5
	add hl, de
	inc hl
	inc hl
	inc hl
	ld l, [hl]
	ld h, $0
	pop de
	push hl
	pop hl
	push hl
	ld de, $80
	call CompareHLtoDE
	jp c, Func_fc55b
	pop hl
	push hl
	dec h
	pop de
	push hl
Func_fc55b: ; fc55b (3f:455b)
	xor a
	ld [wBlinkerOffTile], a
	ld a, $3f
	ld [wVBlankCallbackROMBank], a
	ld a, $3
	ld [wVBlankCallbackRAMBank], a
	ld hl, Func_fc3e1
	write_hl_to wVBlankCallbackAddress
	ld a, [wNextVBlankFlags]
	or $80
	ld [wNextVBlankFlags], a
	ld hl, sp+$5
	xor a
	ld [hl], a
	ld hl, sp+$6
	ld [hl], a
Func_fc580: ; fc580 (3f:4580)
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$d
	cp [hl]
	jp nc, Func_fc602
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$a
	cp [hl]
	jp nc, Func_fc602
	call GetHLAtSPPlus10
	ld e, [hl]
	inc hl
	ld d, [hl]
	reg16swap de, hl
	ld de, $28
	call Func_fc0ae
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	write_hl_to $c325
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$d
	cp [hl]
	jp nc, Func_fc5c9
	ld hl, sp+$6
	ld a, [hl]
	ld hl, sp+$4
	add [hl]
	ld hl, sp+$6
	ld [hl], a
	ld a, [wBlinkerOffTile]
	ld hl, sp+$3
	add [hl]
	ld [wBlinkerOffTile], a
Func_fc5c9: ; fc5c9 (3f:45c9)
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$a
	cp [hl]
	jp nc, Func_fc5ea
	ld hl, sp+$5
	ld a, [hl]
	ld hl, sp+$2
	add [hl]
	ld hl, sp+$5
	ld [hl], a
	pop hl
	push hl
	push hl
	read_hl_from_sp_plus $c
	pop de
	ld a, [hl]
	add e
	ld [hl], a
	inc hl
	ld a, [hl]
	adc d
	ld [hl], a
Func_fc5ea: ; fc5ea (3f:45ea)
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_fc092
	call Func_fc09d
	or a
	jp z, Func_fc5ff
	jp Func_fc602

Func_fc5ff: ; fc5ff (3f:45ff)
	jp Func_fc580

Func_fc602: ; fc602 (3f:4602)
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	call Func_fc092
	add sp, $e
	ret

Data_fc610:
	dr $fc610, $fc615

Func_fc615: ; fc615 (3f:4615)
	push bc
	push bc
	push bc
	push bc
	push de
	push af
	ld hl, sp+$7
	reg16swap de, hl
	ld hl, Data_fc610
	ld bc, $5
	call MemCopy
	ld hl, $a0
	call WriteHLToSPPlus7
	set_farcall_addrs_hli Func_dc0a
	pop af
	ld e, a
	xor a
	call FarCall
	set_farcall_addrs_hli Func_dc0a
	pop de
	ld a, $1
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld hl, $a0
	call WriteHLToSPPlus3
	ld a, [wc2cd]
	ld c, a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $1805
	call FarCall
	ld c, $7
Func_fc67b: ; fc67b (3f:467b)
	push bc
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	add hl, de
	ld c, l
	ld b, h
	ld e, $0
Func_fc690: ; fc690 (3f:4690)
	ld a, e
	cp $8
	jp nc, Func_fc6a9
	ld a, [bc]
	cp $8f
	jp z, Func_fc69f
	jp Func_fc6a9

Func_fc69f: ; fc69f (3f:469f)
	inc e
	ld hl, $8
	add hl, bc
	ld c, l
	ld b, h
	jp Func_fc690

Func_fc6a9: ; fc6a9 (3f:46a9)
	pop bc
	ld a, e
	cp $8
	jp c, Func_fc6b6
	ld a, c
	cp $3
	jp nz, Func_fc6b9
Func_fc6b6: ; fc6b6 (3f:46b6)
	jp Func_fc6bd

Func_fc6b9: ; fc6b9 (3f:46b9)
	dec c
	jp Func_fc67b

Func_fc6bd: ; fc6bd (3f:46bd)
	inc c
	ld l, c
	dec l
	ld a, $7
	sub l
	add a
	add a
	add a
	add $50
	ld hl, sp+$0
	ld [hl], a
	ld c, $0
Func_fc6cd: ; fc6cd (3f:46cd)
	push bc
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, $40
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld c, l
	ld b, h
	ld e, $0
Func_fc6e6: ; fc6e6 (3f:46e6)
	ld a, e
	cp $8
	jp nc, Func_fc6ff
	ld a, [bc]
	cp $8f
	jp z, Func_fc6f5
	jp Func_fc6ff

Func_fc6f5: ; fc6f5 (3f:46f5)
	inc e
	ld hl, $8
	add hl, bc
	ld c, l
	ld b, h
	jp Func_fc6e6

Func_fc6ff: ; fc6ff (3f:46ff)
	pop bc
	ld a, e
	cp $8
	jp c, Func_fc70c
	ld a, c
	cp $3
	jp nz, Func_fc70f
Func_fc70c: ; fc70c (3f:470c)
	jp Func_fc713

Func_fc70f: ; fc70f (3f:470f)
	inc c
	jp Func_fc6cd

Func_fc713: ; fc713 (3f:4713)
	ld a, c
	add a
	add a
	add a
	add $50
	push af
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$5
	call FarCall
	pop af
	push af
	ld l, $0
	push hl
	ld e, a
	ld hl, sp+$4
	ld a, [hl]
	ld hl, sp+$5
	ld c, l
	ld b, h
	call Func_fc501
	pop bc
	pop af
	ld b, $8
	call DivideAbyB
	ld l, a
	push hl
	ld hl, sp+$2
	ld a, [hl]
	ld b, $8
	call DivideAbyB
	add $f8
	pop de
	call Func_fc416
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Func_fc756: ; fc756 (3f:4756)
	ld a, [wc2cd]
	or a
	jp nz, Func_fc768
	ld a, [wLCDC]
	and $f7
	ld [wLCDC], a
	jp Func_fc770

Func_fc768: ; fc768 (3f:4768)
	ld a, [wLCDC]
	or $8
	ld [wLCDC], a
Func_fc770: ; fc770 (3f:4770)
	ret

Data_fc771:
	db $48, $50, $08, $00
	db $50, $48, $09, $00
	db $50, $50, $0a, $00
	db $48, $58, $08, $20
	db $50, $58, $0a, $20
	db $50, $60, $09, $20
	db $58, $48, $09, $40
	db $58, $50, $0a, $40
	db $60, $50, $08, $40
	db $58, $58, $0a, $60
	db $58, $60, $09, $60
	db $60, $58, $08, $60

Func_fc7a1: ; fc7a1 (3f:47a1)
	call ClearSprites
	ld bc, $30
	ld de, Data_fc771
	ld hl, wOAMBuffer
	call CopyFromDEtoHL
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_fc092
	ret

Data_fc7bc:
	db $40, $48, $00, $00
	db $40, $50, $01, $00
	db $48, $40, $02, $00
	db $48, $48, $03, $00
	db $48, $50, $04, $00
	db $50, $40, $05, $00
	db $50, $48, $06, $00
	db $50, $50, $07, $00
	db $40, $58, $01, $20
	db $40, $60, $00, $20
	db $48, $58, $04, $20
	db $48, $60, $03, $20
	db $48, $68, $02, $20
	db $50, $58, $07, $20
	db $50, $60, $06, $20
	db $50, $68, $05, $20
	db $58, $40, $05, $40
	db $58, $48, $06, $40
	db $58, $50, $07, $40
	db $60, $40, $02, $40
	db $60, $48, $03, $40
	db $60, $50, $04, $40
	db $68, $48, $00, $40
	db $68, $50, $01, $40
	db $58, $58, $07, $60
	db $58, $60, $06, $60
	db $58, $68, $05, $60
	db $60, $58, $04, $60
	db $60, $60, $03, $60
	db $60, $68, $02, $60
	db $68, $58, $01, $60
	db $68, $60, $00, $60

Func_fc83c: ; fc83c (3f:483c)
	call ClearSprites
	ld bc, $80
	ld de, Data_fc7bc
	ld hl, wOAM00YCoord
	call CopyFromDEtoHL
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_fc092
	ret

Data_fc857:
	dr $fc857, $fc85c

Func_fc85c:
	push bc
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_fc857
	ld bc, $5
	call MemCopy
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$0
	call FarCall
	pop bc
	pop bc
	pop bc
	ret

Data_fc882:
	dw $11

Func_fc884: ; fc884 (3f:4884)
	push bc
	read_hl_from Data_fc882
	pop de
	push hl
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$0
	call FarCall
	pop bc
	ret

Func_fc89e:
	push bc
	ld a, BANK(GFX_d8000)
	ld [wFarCallDestBank], a
	ld bc, $790
	ld de, GFX_d8000
	ld hl, $9000
	call FarRequestVideoData
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	ld e, $0
Func_fc8d6: ; fc8d6 (3f:48d6)
	ld a, e
	cp $12
	jp nc, Func_fc92b
	ld c, $0
Func_fc8de: ; fc8de (3f:48de)
	ld a, c
	cp $14
	jp nc, Func_fc927
	push de
	push bc
	ld a, BANK(Data_d8790)
	ld [wFarCallDestBank], a
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_d8790
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	reg16swap de, hl
	ld hl, sp+$4
	ld bc, $1
	call FarCopyVideoData
	pop bc
	pop de
	push de
	ld hl, sp+$2
	ld a, [hl]
	ld l, e
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	decoord 0, 0
	add hl, de
	ld e, c
	ld d, $0
	add hl, de
	ld [hl], a
	inc c
	pop de
	jp Func_fc8de

Func_fc927: ; fc927 (3f:4927)
	inc e
	jp Func_fc8d6

Func_fc92b: ; fc92b (3f:492b)
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3ca1
	pop bc
	xor a
Func_fc938: ; fc938 (3f:4938)
	cp $78
	jp nc, Func_fc946
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_fc938

Func_fc946: ; fc946 (3f:4946)
	pop bc
	ret

Data_fc948:
IF DEF(SUN)
	dr $fc948, $fc9bc
ENDC
IF DEF(STAR)
	dr $fc948, $fc9ba
ENDC
Data_fc948End

Func_fc9bc: ; fc9bc (3f:49bc)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fca19
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $12
	ld de, $1323
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
	jp Func_fca1c

Func_fca19: ; fca19 (3f:4a19)
	call WaitVideoTransfer
Func_fca1c: ; fca1c (3f:4a1c)
	ret

Data_fca1d:
IF DEF(SUN)
	dr $fca1d, $fca25
ENDC
IF DEF(STAR)
	dr $fca1b, $fca23
ENDC

Func_fca25: ; fca25 (3f:4a25)
	push bc
	push bc
	set_farcall_addrs_hli Func_da729
	ld e, $1
IF DEF(SUN)
	ld a, $3b
ENDC
IF DEF(STAR)
	ld a, $3c
ENDC
	call FarCall
	call WriteHLToSPPlus3
	ld hl, wc770
	write_hl_to $c201
	call Func_fe004
	xor a
	ld [wJoyHeld], a
Func_fca4b: ; fca4b (3f:4a4b)
	call CheckButton
	and $b0
	jp z, Func_fca56
	jp Func_fcbae

Func_fca56: ; fca56 (3f:4a56)
	ld a, [rIE]
	and $2
	jp nz, Func_fca60
	jp Func_fca63

Func_fca60: ; fca60 (3f:4a60)
	jp Func_fca4b

Func_fca63: ; fca63 (3f:4a63)
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, $1
	call OverworldPlaySong
	call Func_fc9bc
	call Func_fc756
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld hl, sp+$0
	ld [hl], $0
	ld a, $46
Func_fca8a: ; fca8a (3f:4a8a)
	ld a, Data_fc948End - Data_fc948
	call TitleScreenRandom
	ld e, a
	ld d, $0
	ld hl, Data_fc948
	add hl, de
	ld a, [hl]
	dec a
	push af
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	or a
	jp z, Func_fcabb
	ld a, $64
	call TitleScreenRandom
	cp $4b
	jp nc, Func_fcab7
	ld a, $1
	ld [wPoncotPicAlignment], a
	jp Func_fcabb

Func_fcab7: ; fcab7 (3f:4ab7)
	xor a
	ld [wPoncotPicAlignment], a
Func_fcabb: ; fcabb (3f:4abb)
	set_farcall_addrs_hli Func_dc0a
	pop af
	ld e, a
	ld a, [wc2cd]
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld a, [wc2cd]
	ld c, a
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $608
	call FarCall
	call Func_fc756
	ld a, [rIE]
	and $2
	jp nz, Func_fcb12
	ld a, [wLCDC]
	or $3
	ld [wLCDC], a
Func_fcb12: ; fcb12 (3f:4b12)
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
Func_fcb1d: ; fcb1d (3f:4b1d)
	set_farcall_addrs_hli Func_da093
	xor a
	call FarCall
	or a
	jp nz, Func_fcb33
	jp Func_fcb85

Func_fcb33: ; fcb33 (3f:4b33)
	callba_hli Func_d9f55
	call CheckButton
	ld c, a
	inc c
	dec c
	jp z, Func_fcb82
	ld a, c
	and $b0
	jp z, Func_fcb53
	jp Func_fcbae

Func_fcb53: ; fcb53 (3f:4b53)
	ld hl, sp+$0
	ld e, [hl]
	ld d, $0
	ld hl, Data_fca1d
	add hl, de
	ld a, [hl]
	and c
	jp z, Func_fcb7e
	xor a
	ld [wc208], a
	ld hl, sp+$0
	ld a, [hl]
	inc a
	ld hl, sp+$0
	ld [hl], a
	cp $8
	jp c, Func_fcb7b
	ld a, $2a
	call OverworldPlaySFX
	ld a, $ff
	ld [wc213], a
Func_fcb7b: ; fcb7b (3f:4b7b)
	jp Func_fcb82

Func_fcb7e: ; fcb7e (3f:4b7e)
	ld hl, sp+$0
	ld [hl], $0
Func_fcb82: ; fcb82 (3f:4b82)
	jp Func_fcb1d

Func_fcb85: ; fcb85 (3f:4b85)
	set_farcall_addrs_hli FreeMemory
	call GetHLAtSPPlus3
	call FarCall
	set_farcall_addrs_hli Func_da729
	ld e, $1
IF DEF(SUN)
	ld a, $3b
ENDC
IF DEF(STAR)
	ld a, $3c
ENDC
	call FarCall
	call WriteHLToSPPlus3
	jp Func_fca8a

Func_fcbae: ; fcbae (3f:4bae)
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld a, [wc2cd]
	ld e, a
	ld d, $0
	ld a, e
	xor $1
	ld e, a
	add hl, de
	ld de, $1311
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fcc1b
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $12
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld h, l
	ld l, $0
	ld a, [wc2cd]
	ld e, a
	ld d, $0
	ld a, e
	xor $1
	ld e, a
	add hl, de
	ld de, $1323
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
	jp Func_fcc1e

Func_fcc1b: ; fcc1b (3f:4c1b)
	call WaitVideoTransfer
Func_fcc1e: ; fcc1e (3f:4c1e)
	set_farcall_addrs_hli FreeMemory
	call GetHLAtSPPlus3
	call FarCall
	xor a
	ld [wPoncotPicAlignment], a
	pop bc
	pop bc
	ret

Data_fcc36:
IF DEF(SUN)
	dr $fcc36, $fccaa
ENDC
IF DEF(STAR)
	dr $fcc34, $fcca8
ENDC

Func_fccaa:
	add sp, -$14
	ld hl, sp+$0
	reg16swap de, hl
	ld l, $0
Func_fccb4: ; fccb4 (3f:4cb4)
	ld a, l
	cp $10
	jp nc, Func_fccc2
	ld a, $ff
	ld [de], a
	inc de
	inc l
	jp Func_fccb4

Func_fccc2: ; fccc2 (3f:4cc2)
	ld bc, $10
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, $88e0
	call FarRequestVideoData
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8e00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $3
	ld de, $1311
	ld hl, $0
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fcd66
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_667d
	ld a, [wc2cd]
	ld c, a
	ld b, $0
	ld de, $1f1f
	ld hl, $0
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
	jp Func_fcd69

Func_fcd66: ; fcd66 (3f:4d66)
	call WaitVideoTransfer
Func_fcd69: ; fcd69 (3f:4d69)
	call Func_fc756
	call ClearSprites
	ld a, [wLCDC]
	and $fb
	ld [wLCDC], a
	ld a, [wLCDC]
	or $2
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	call Func_fc092
	di
	ld a, [rIE]
	and $fd
	ld [rIE], a
	ei
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld [wSCX2], a
	ld [wSCX], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_fc092
	call Func_fc884
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fcddc
	call WaitVideoTransfer
Func_fcdb8: ; fcdb8 (3f:4db8)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_fcdb8
	ld bc, $80
	ld de, Data_fc001
	ld hl, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
Func_fcdd4: ; fcdd4 (3f:4dd4)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_fcdd4
Func_fcddc: ; fcddc (3f:4ddc)
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fcdf8
	ld a, BANK(GFX_d97e8)
	ld [wFarCallDestBank], a
	ld bc, $750
	ld de, GFX_d97e8
	ld hl, $9000
	call FarRequestVideoData
	jp Func_fce09

Func_fcdf8: ; fcdf8 (3f:4df8)
	ld a, BANK(GFX_d88f8)
	ld [wFarCallDestBank], a
	ld bc, $750
	ld de, GFX_d88f8
	ld hl, $9000
	call FarRequestVideoData
Func_fce09: ; fce09 (3f:4e09)
	ld hl, sp+$12
	ld [hl], $0
Func_fce0d: ; fce0d (3f:4e0d)
	ld hl, sp+$12
	ld a, [hl]
	cp $12
	jp nc, Func_fcea1
	ld hl, sp+$13
	ld [hl], $0
Func_fce19: ; fce19 (3f:4e19)
	ld hl, sp+$13
	ld a, [hl]
	cp $14
	jp nc, Func_fce97
	ld a, BANK(Data_d9048)
	ld [wFarCallDestBank], a
	ld hl, sp+$13
	ld c, [hl]
	ld b, $0
	ld hl, sp+$12
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	ld de, Data_d9048
	add hl, de
	add hl, bc
	reg16swap de, hl
	ld hl, sp+$10
	ld bc, $1
	call FarCopyVideoData
	ld hl, sp+$10
	ld a, [hl]
	ld hl, sp+$13
	ld c, [hl]
	ld b, $0
	ld hl, sp+$12
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	decoord 0, 0
	add hl, de
	add hl, bc
	ld [hl], a
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fce8d
	ld hl, sp+$10
	ld e, [hl]
	ld d, $0
	ld hl, Data_fcc36
	add hl, de
	ld a, [hl]
	add $4
	ld hl, sp+$13
	ld c, [hl]
	ld b, $0
	ld hl, sp+$12
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	ld e, l
	ld d, h
	add hl, hl
	add hl, hl
	add hl, de
	decoord 0, 0, wAttrMap
	add hl, de
	add hl, bc
	ld [hl], a
Func_fce8d: ; fce8d (3f:4e8d)
	ld hl, sp+$13
	ld a, [hl]
	inc a
	ld hl, sp+$13
	ld [hl], a
	jp Func_fce19

Func_fce97: ; fce97 (3f:4e97)
	ld hl, sp+$12
	ld a, [hl]
	inc a
	ld hl, sp+$12
	ld [hl], a
	jp Func_fce0d

Func_fcea1: ; fcea1 (3f:4ea1)
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	set_farcall_addrs_hli Func_667d
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, $8f00
	add hl, de
	ld c, l
	ld b, h
	ld de, $1f1f
	ld hl, $0
	call FarCall
	call Func_fc756
	ld a, [wLCDC]
	or $3
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	call Func_fc9bc
	call Func_fc756
	call Func_fca25
	xor a
	call OverworldPlaySong
	di
	ld a, [rIE]
	and $fd
	ld [rIE], a
	ld hl, LCDInterrupt
	write_hl_to $c201
	ei
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3afc
	pop bc
	add sp, $14
	ret

Func_fcf0b:
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, $43
	call OverworldPlaySFX
IF DEF(SUN)
	ld a, $c
ENDC
IF DEF(STAR)
	ld a, $1
ENDC
	call Func_fc2d7
	call Func_fc09d
	or a
	jp z, Func_fcf30
	ret

Func_fcf30: ; fcf30 (3f:4f30)
	ld a, $43
	call OverworldPlaySFX
IF DEF(SUN)
	ld a, $6
ENDC
IF DEF(STAR)
	ld a, $31
ENDC
	call Func_fc360
	call Func_fc09d
	or a
	jp z, Func_fcf42
	ret

Func_fcf42: ; fcf42 (3f:4f42)
	ld a, $43
	call OverworldPlaySFX
IF DEF(SUN)
	ld a, $2a
ENDC
IF DEF(STAR)
	ld a, $37
ENDC
	call Func_fc2d7
	call Func_fc09d
	or a
	jp z, Func_fcf54
	ret

Func_fcf54: ; fcf54 (3f:4f54)
	ld a, $43
	call OverworldPlaySFX
IF DEF(SUN)
	ld a, $3a
ENDC
IF DEF(STAR)
	ld a, $45
ENDC
	call Func_fc360
	call Func_fc09d
	or a
	jp z, Func_fcf66
	ret

Func_fcf66: ; fcf66 (3f:4f66)
	ld a, $43
	call OverworldPlaySFX
IF DEF(SUN)
	ld e, $6
	ld a, $c
ENDC
IF DEF(STAR)
	ld e, $31
	ld a, $1
ENDC
	call Func_fc615
	call Func_fc09d
	or a
	jp z, Func_fcf7a
	ret

Func_fcf7a: ; fcf7a (3f:4f7a)
	ld a, [wLCDC]
	and $fb
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	di
	ld a, [rIE]
	and $fd
	ld [rIE], a
	ld hl, LCDInterrupt
	write_hl_to wLCD + 1
	ei
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, BANK(GFX_4d32)
	ld [wFarCallDestBank], a
	ld bc, $70
	ld de, GFX_4d32
	ld hl, $8000
	call FarRequestVideoData
	ld a, BANK(GFX_4a12)
	ld [wFarCallDestBank], a
	ld bc, $10
	ld de, GFX_4a12
	ld hl, $8070
	call FarRequestVideoData
	ld a, BANK(GFX_4da2)
	ld [wFarCallDestBank], a
	ld bc, $30
	ld de, GFX_4da2
	ld hl, $8080
	call FarRequestVideoData
	ld a, $3a
	call OverworldPlaySFX
	call Func_fc7a1
	call NextOverworldFrame
	call Func_fc09d
	or a
	jp z, Func_fcfee
	ret

Func_fcfee: ; fcfee (3f:4fee)
	call Func_fc83c
	call Func_fc09d
	or a
	jp z, Func_fcff9
	ret

Func_fcff9: ; fcff9 (3f:4ff9)
	call Func_fc85c
	ret

GFX_fcffd: INCBIN "gfx/misc/fcffd.2bpp"

Func_fd03d:
	xor a
	ld [wSCX2], a
	ld [wSCX], a
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_fc092
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_fc092
	call FillVisibleAreaWithBlankTile
	ld a, [rLCDC]
	ld [wLCDC], a
	push af
	set_farcall_addrs_hli Func_6183
	pop af
	push af
	and $7f
	call FarCall
	ld bc, $800
	ld e, $8f
	hlbgcoord 0, 0
	call FillMemory
	ld a, BANK(GFX_4cd2)
	ld [wFarCallDestBank], a
	ld bc, $60
	ld de, GFX_4cd2
	ld hl, $9000
	call FarCopyVideoData
	ld a, [wSystemType]
	cp $11
	jp z, Func_fd0b1
	ld bc, $10
	ld e, $ff
	ld hl, $9060
	call FillMemory
	jp Func_fd0c2

Func_fd0b1: ; fd0b1 (3f:50b1)
	ld a, BANK(GFX_fcffd)
	ld [wFarCallDestBank], a
	ld bc, $40
	ld de, GFX_fcffd
	ld hl, $9060
	call FarCopyVideoData
Func_fd0c2: ; fd0c2 (3f:50c2)
	ld l, $1d
Func_fd0c4: ; fd0c4 (3f:50c4)
	ld a, l
	cp $37
	jp nc, Func_fd0fc
	ld c, $0
Func_fd0cc: ; fd0cc (3f:50cc)
	ld a, c
	cp $3
	jp nc, Func_fd0f5
	push hl
	ld a, l
	add c
	and $1f
	ld l, a
	ld h, $0
	debgcoord 0, 4
	add hl, de
	ld [hl], c
	pop hl
	push hl
	ld a, l
	add c
	and $1f
	ld l, a
	ld h, $0
	debgcoord 0, 13
	add hl, de
	ld a, c
	add $3
	ld [hl], a
	inc c
	pop hl
	jp Func_fd0cc

Func_fd0f5: ; fd0f5 (3f:50f5)
	ld a, l
	add $3
	ld l, a
	jp Func_fd0c4

Func_fd0fc: ; fd0fc (3f:50fc)
	ld a, [wSystemType]
	cp $11
	jp z, Func_fd11d
	ld bc, $80
	ld e, $6
	hlbgcoord 0, 0
	call FillMemory
	ld bc, $80
	ld e, $6
	hlbgcoord 0, 14
	call FillMemory
	jp Func_fd1bd

Func_fd11d: ; fd11d (3f:511d)
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld bc, $80
	ld e, $1
	hlbgcoord 0, 0
	call FillMemory
	ld bc, $80
	ld e, $1
	hlbgcoord 0, 14
	call FillMemory
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
	ld e, $0
	ld l, e
Func_fd142: ; fd142 (3f:5142)
	ld a, e
	cp $a
	jp nc, Func_fd1bd
	push de
	ld a, e
	add a
	push af
	ld a, l
	and $3
	ld l, a
	push hl
	set_farcall_addrs_hli Func_667d
	pop hl
	pop af
	push hl
	push af
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $600
	add hl, de
	ld c, l
	ld b, h
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $103
	add hl, de
	reg16swap de, hl
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	pop af
	pop hl
	pop de
	push hl
	push de
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $600
	add hl, de
	ld c, l
	ld b, h
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $111
	add hl, de
	push hl
	ld l, a
	ld h, $0
	ld h, l
	ld l, $0
	ld de, $e
	add hl, de
	pop de
	call FarCall
	pop de
	inc e
	pop hl
	inc l
	jp Func_fd142

Func_fd1bd: ; fd1bd (3f:51bd)
	ld bc, $400
	debgcoord 0, 0
	hlbgcoord 0, 0, vWindowMap
	call CopyFromDEtoHL
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fd1e9
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld bc, $400
	debgcoord 0, 0
	hlbgcoord 0, 0, vWindowMap
	call CopyFromDEtoHL
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_fd1e9: ; fd1e9 (3f:51e9)
	set_farcall_addrs_hli Func_6183
	pop af
	call FarCall
	xor a
	ld [wc2cd], a
	call Func_fdfe5
	ld hl, wc770
	write_hl_to $c201
	xor a
	ld [rLYC], a
	di
	ld a, [rIE]
	or $2
	ld [rIE], a
	ei
	ret

Func_fd213:: ; fd213 (3f:5213)
	ld a, $9
	ld [wNextVBlankFlags], a
	call WaitVideoTransfer
	call Func_fccaa
	call WaitVideoTransfer
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fd231
Func_fd229: ; fd229 (3f:5229)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_fd229
Func_fd231: ; fd231 (3f:5231)
	call NextOverworldFrame
	ld a, [rLCDC]
	ld [wLCDC], a
	push af
	set_farcall_addrs_hli Func_6183
	pop af
	and $7f
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fd26a
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	ld bc, $800
	ld e, $0
	hlbgcoord 0, 0
	call FillMemory
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_fd26a: ; fd26a (3f:526a)
	ld bc, $800
	ld e, $8f
	hlbgcoord 0, 0
	call FillMemory
	ld a, BANK(GFX_4122)
	ld [wFarCallDestBank], a
	ld bc, $800
	ld de, GFX_4122
	ld hl, $9000
	call FarCopyVideoData
	ld bc, $100
	ld de, GFX_4922
	ld hl, $8800
	call FarCopyVideoData
	di
	ld a, [rIE]
	and $fd
	ld [rIE], a
	ld hl, LCDInterrupt
	write_hl_to wLCD + 1
	ei
	ld a, $81
	ld [rLCDC], a
	ld [wLCDC], a
	xor a
	ld [wc2cd], a
	ld a, [wNextVBlankFlags]
	or $9
	ld [wNextVBlankFlags], a
	call Func_fc092
	xor a
	ld [wSCX2], a
	ld [wSCX], a
	xor a
	ld [wSCY2], a
	ld [wSCY], a
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_fc092
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
	call Func_fc092
	call FillVisibleAreaWithBlankTile
	callba_hli FreeMonsterStruct
	xor a
	ld [wJoyHeld], a
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	xor a
	ld [wc2fa], a
	ret

Data_fd30c:
IF DEF(SUN)
	dr $fd30c, $fd314
ENDC
IF DEF(STAR)
	dr $fd30a, $fd312
ENDC

Func_fd314: ; fd314 (3f:5314)
	set_farcall_addrs_hli InitAllocatableMemoryBlocks
	ld de, $900
	ld hl, wAllocatableBlock0
	call FarCall
	callba_hli AllocateMonsterStruct
	ld a, $3
	ld [wc2fa], a
	xor a
	ld [wc39a], a
	xor a
	ld [wVBlankTransferFlags], a
	xor a
	ld [wMapObjectCGBAttrsOverride], a
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fd394
	ld bc, $80
	ld de, Data_fc001
	ld hl, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	ld bc, $8
	ld de, Data_fd30c
	ld hl, wCGB_BGPalsBuffer + 8
	call CopyFromDEtoHL
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	ld de, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	call WaitVideoTransfer
Func_fd37c: ; fd37c (3f:537c)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_fd37c
	ld a, [wNextVBlankFlags]
	or $40
	ld [wNextVBlankFlags], a
Func_fd38c: ; fd38c (3f:538c)
	ld a, [wNextVBlankFlags]
	and $40
	jp nz, Func_fd38c
Func_fd394: ; fd394 (3f:5394)
	callba_hli Func_da4dc
	call FillVisibleAreaWithBlankTile
	set_farcall_addrs_hli Func_c7bd0
	xor a
	call FarCall
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
	call Func_fd03d
	call Func_fcf0b
	call Func_fd213
	ret

Text_fd3d1:
	db "プロデューサー", $00

Text_fd3d9:
	db "えんどう ひでとし", $00

Pointers_fd3e3:
	dw Text_fd3d1
	dw Text_fd3d9
	dw $0000

Text_fd3e9:
	db "プロデューサー", $00

Text_fd3f1:
	db "こばやし まさき", $00

Pointers_fd3fa:
	dw Text_fd3e9
	dw Text_fd3f1
	dw $0000

Text_fd400:
	db "プロダクトマネージャー", $00

Text_fd40c:
	db " わけ まさのり", $00

Text_fd415:
	db " ", $00

Text_fd417:
	db " ", $00

Text_fd419:
	db " ", $00

Text_fd41b:
	db " ", $00

Pointers_fd41d:
	dw Text_fd400
	dw Text_fd40c
	dw Text_fd415
	dw Text_fd417
	dw Text_fd419
	dw Text_fd41b
	dw $0000

Text_fd42b:
	db "サブプロダクトマネージャー", $00

Text_fd439:
	db "あおやま えいじ", $00

Text_fd442:
	db " ", $00

Text_fd444:
	db " ", $00

Text_fd446:
	db " ", $00

Text_fd448:
	db " ", $00

Pointers_fd44a:
	dw Text_fd42b
	dw Text_fd439
	dw Text_fd442
	dw Text_fd444
	dw Text_fd446
	dw Text_fd448
	dw $0000

Text_fd458:
	db "せいさくたんとう", $00

Text_fd461:
	db "おざき ただし", $00

Pointers_fd469:
	dw Text_fd458
	dw Text_fd461
	dw $0000

Text_fd46f:
	db "サウンド プロダクツ", $00

Text_fd47a:
	db "スタジオ グイド", $00

Pointers_fd483:
	dw Text_fd46f
	dw Text_fd47a
	dw $0000

Text_fd489:
	db "サウンドプロデュース", $00

Text_fd494:
	db "おおつき かるた", $00

Text_fd49d:
	db "くどう ともり", $00

Text_fd4a5:
	db "やまなか ちこ", $00

Pointers_fd4ad:
	dw Text_fd489
	dw Text_fd494
	dw Text_fd49d
	dw Text_fd4a5
	dw $0000

Text_fd4b7:
	db "きかくサポート", $00

Text_fd4bf:
	db "おおはし しげやす", $00

Text_fd4c9:
	db "いえなが やまと", $00

Text_fd4d2:
	db "いしかわ たかし", $00

Pointers_fd4db:
	dw Text_fd4b7
	dw Text_fd4bf
	dw Text_fd4c9
	dw Text_fd4d2
	dw $0000

Text_fd4e5:
	db "プログラム", $00

Text_fd4eb:
	db "まきしま かずゆき", $00

Text_fd4f5:
	db "おおで たかのり", $00

Text_fd4fe:
	db "やじま ひでたか", $00

Text_fd507:
	db "さえき のりゆき", $00

Pointers_fd510:
	dw Text_fd4e5
	dw Text_fd4eb
	dw Text_fd4f5
	dw Text_fd4fe
	dw Text_fd507
	dw $0000

Text_fd51c:
	db "グラフィック", $00

Text_fd523:
	db "ほしの なつこ", $00

Text_fd52b:
	db "くまい じゅんいち", $00

Pointers_fd535:
	dw Text_fd51c
	dw Text_fd523
	dw Text_fd52b
	dw $0000

Text_fd53d:
	db "スペシャルサンクス", $00

Text_fd547:
	db "なかもと しんいち", $00

Text_fd551:
	db "おかだ せつお", $00

Text_fd559:
	db "もとさこ よしお", $00

Text_fd562:
	db "おおた ひろゆき", $00

Text_fd56b:
	db "さとう とおる", $00

Pointers_fd573:
	dw Text_fd53d
	dw Text_fd547
	dw Text_fd551
	dw Text_fd559
	dw Text_fd562
	dw Text_fd56b
	dw $0000

Text_fd581:
	db "スペシャルサンクス", $00

Text_fd58b:
	db "みつい けいすけ", $00

Text_fd594:
	db "たかはし しょうた", $00

Text_fd59e:
	db "はんだ ゆきこ", $00

Text_fd5a6:
	db "いとう たいじ", $00

Pointers_fd5ae:
	dw Text_fd581
	dw Text_fd58b
	dw Text_fd594
	dw Text_fd59e
	dw Text_fd5a6
	dw $0000

Text_fd5ba:
	db "スペシャルサンクス", $00

Text_fd5c4:
	db "あおき コブた", $00

Text_fd5cc:
	db "あきたか みか", $00

Text_fd5d4:
	db "いい りつこ", $00

Text_fd5db:
	db "あらき ひろみ", $00

Text_fd5e3:
	db "いぶ としろう", $00

Pointers_fd5eb:
	dw Text_fd5ba
	dw Text_fd5c4
	dw Text_fd5cc
	dw Text_fd5d4
	dw Text_fd5db
	dw Text_fd5e3
	dw $0000

Text_fd5f9:
	db "スペシャルサンクス", $00

Text_fd603:
	db "はすぬま ひさお", $00

Text_fd60c:
	db "はすぬま みつお", $00

Text_fd615:
	db "くりもと ひろし", $00

Text_fd61e:
	db "よしはら りえ", $00

Text_fd626:
	db "おのでら のりひろ", $00

Text_fd630:
	db "といだ たかし", $00

Pointers_fd638:
	dw Text_fd5f9
	dw Text_fd603
	dw Text_fd60c
	dw Text_fd615
	dw Text_fd61e
	dw Text_fd626
	dw Text_fd630
	dw $0000

Text_fd648:
	db "スペシャルサンクス", $00

Text_fd652:
	db "コミックボンボンへんしゅうぶ", $00

Text_fd661:
	db " ", $00

Text_fd663:
	db " ", $00

Text_fd665:
	db " ", $00

Text_fd667:
	db " ", $00

Text_fd669:
	db " ", $00

Pointers_fd66b:
	dw Text_fd648
	dw Text_fd652
	dw Text_fd661
	dw Text_fd663
	dw Text_fd665
	dw Text_fd667
	dw Text_fd669
	dw $0000

Text_fd67b:
	db "デザインさいようしゃ", $00

Text_fd686:
	db "いわした のりふみ", $00

Pointers_fd690:
	dw Text_fd67b
	dw Text_fd686
	dw $0000

Text_fd696:
	db "デザインさいようしゃ", $00

Text_fd6a1:
	db "かきもと だいじろう", $00

Pointers_fd6ac:
	dw Text_fd696
	dw Text_fd6a1
	dw $0000

Text_fd6b2:
	db "ゲームデザイン", $00

Text_fd6ba:
	db "ますだ たつお", $00

Pointers_fd6c2:
	dw Text_fd6b2
	dw Text_fd6ba
	dw $0000

Text_fd6c8:
	db "キャラクターデザイン", $00

Text_fd6d3:
	db "みずたに けんのすけ", $00

Pointers_fd6de:
	dw Text_fd6c8
	dw Text_fd6d3
	dw $0000

Text_fd6e4:
	db "ゲームディレクター", $00

Text_fd6ee:
	db "いい しゅんいち", $00

Pointers_fd6f7:
	dw Text_fd6e4
	dw Text_fd6ee
	dw $0000

Text_fd6fd:
	db "トータルデザイン", $00

Text_fd706:
	db "しもだ あつし", $00

Pointers_fd70e:
	dw Text_fd6fd
	dw Text_fd706
	dw $0000

Pointers_fd714:
	dw Pointers_fd3e3
	dw Pointers_fd3fa
	dw Pointers_fd41d
	dw Pointers_fd44a
	dw Pointers_fd469
	dw Pointers_fd483
	dw Pointers_fd4ad
	dw Pointers_fd4db
	dw Pointers_fd510
	dw Pointers_fd535
	dw Pointers_fd573
	dw Pointers_fd5ae
	dw Pointers_fd5eb
	dw Pointers_fd638
	dw Pointers_fd66b
	dw Pointers_fd690
	dw Pointers_fd6ac
	dw Pointers_fd6c2
	dw Pointers_fd6de
	dw Pointers_fd6f7
	dw Pointers_fd70e

IF DEF(SUN)
SECTION "Bank 3f, 2", ROMX [$573e], BANK [$3f]
ENDC
IF DEF(STAR)
SECTION "Bank 3f, 2", ROMX [$573c], BANK [$3f]
ENDC
INCLUDE "charmap.asm"
Func_fd73e:
	ret

Func_fd73f:
	ret

Data_fd740:
	db $16, $04, $06, $00

Data_fd744:
	dw $18
	
Func_fd746:
	push bc
	push bc
	push bc
	ld hl, sp+$2
	reg16swap de, hl
	ld hl, Data_fd740
	ld bc, $4
	call MemCopy
	read_hl_from Data_fd744
	pop de
	push hl
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$2
	call FarCall
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$0
	call FarCall
	pop bc
	pop bc
	pop bc
	ret

Data_fd783:
IF DEF(SUN)
	dr $fd783, $fd787
ENDC
IF DEF(STAR)
	dr $fd781, $fd785
ENDC

Func_fd787: ; fd787 (3f:5787)
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_fd783
	ld bc, $4
	call MemCopy
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$0
	call FarCall
	pop bc
	pop bc
	ret

Func_fd7ab: ; fd7ab (3f:57ab)
	set_farcall_addrs_hli Func_667d
	ld bc, $8f02
	ld de, $1311
	ld hl, $0
	call FarCall
	set_farcall_addrs_hli Func_667d
	ld bc, $103
	ld de, $1311
	ld hl, $0
	call FarCall
	ld a, $1
	ld [wc39a], a
	ret

Func_fd7df: ; fd7df (3f:57df)
	ret

Func_fd7e0: ; fd7e0 (3f:57e0)
	add sp, -$3e
	push de
	push af
	call Func_fd7ab
	pop af
	or a
	jp nz, Func_fd7f3
	ld hl, sp+$3
	ld [hl], $b
	jp Func_fd7f7

Func_fd7f3: ; fd7f3 (3f:57f3)
	ld hl, sp+$3
	ld [hl], $1
Func_fd7f7: ; fd7f7 (3f:57f7)
	ld c, $0
	pop de
Func_fd7fa: ; fd7fa (3f:57fa)
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_fd809
	inc c
	jp Func_fd7fa

Func_fd809: ; fd809 (3f:5809)
	push de
	ld a, c
	add a
	ld l, a
	ld a, $12
	sub l
	ld b, $2
	call DivideAbyB
	ld hl, sp+$2
	ld [hl], a
	ld c, $0
	pop de
Func_fd81b: ; fd81b (3f:581b)
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_fd84a
	push de
	push bc
	ld l, c
	ld h, $0
	add hl, hl
	add hl, de
	ld a, [hl]
	inc hl
	ld h, [hl]
	ld l, a
	call FindFirstNonzero
	ld e, l
	ld hl, sp+$5
	ld a, [hl]
	add e
	cp $13
	jp c, Func_fd844
	ld a, $13
	sub e
	ld hl, sp+$5
	ld [hl], a
Func_fd844: ; fd844 (3f:5844)
	pop bc
	inc c
	pop de
	jp Func_fd81b

Func_fd84a: ; fd84a (3f:584a)
	ld l, e
	ld h, d
	ld a, [hl]
	inc hl
	or [hl]
	jp z, Func_fd884
	push de
	ld hl, sp+$2
	ld e, [hl]
	ld hl, sp+$3
	ld a, [hl]
	call SetStringStartState
	ld a, $3f
	ld [wFarCallDestBank], a
	pop de
	push de
	reg16swap de, hl
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$4
	call LiteralStringInTree
	ld hl, sp+$4
	push hl
	call PlaceString
	pop bc
	pop de
	inc de
	inc de
	ld hl, sp+$0
	ld a, [hl]
	add $2
	ld hl, sp+$0
	ld [hl], a
	jp Func_fd84a

Func_fd884: ; fd884 (3f:5884)
	add sp, $3e
	ret

Data_fd887:
IF DEF(SUN)
	dr $fd887, $fd894
ENDC
IF DEF(STAR)
	dr $fd885, $fd892
ENDC

Func_fd894: ; fd894 (3f:5894)
	add sp, -$e
	push af
	push de
	ld hl, sp+$4
	reg16swap de, hl
	ld hl, Data_fd887
	ld bc, $d
	call MemCopy
	set_farcall_addrs_hli Func_dc0a
	pop de
	pop af
	push af
	call FarCall
	pop af
	push af
	read_hl_from wCurRobotPointer
	ld de, $b
	add hl, de
	ld [hl], a
	set_farcall_addrs_hli Func_61424
	pop af
	or a
	jp nz, Func_fd8e0
	ld c, $1
	ld e, $1
	ld a, $2
	call FarCall
	jp Func_fd8e9

Func_fd8e0: ; fd8e0 (3f:58e0)
	ld c, $1
	ld e, $3
	ld a, $1
	call FarCall
Func_fd8e9: ; fd8e9 (3f:58e9)
	set_farcall_addrs_hli Func_f723
	ld hl, sp+$0
	call FarCall
	add sp, $e
	ret

Func_fd8fc: ; fd8fc (3f:58fc)
	set_farcall_addrs_hli Func_c7bd0
	xor a
	call FarCall
	ld a, [wSystemType]
	cp $1
	jp z, Func_fd91b
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_fd92e
Func_fd91b: ; fd91b (3f:591b)
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
Func_fd92e: ; fd92e (3f:592e)
	call Func_fd746
	ld hl, wSCY
	ld a, [wc2cd]
	ld e, a
	ld d, $0
	ld a, e
	xor $1
	ld e, a
	add hl, de
	ld [hl], $0
	ld c, [hl]
	ld hl, wSCX
	ld a, [wc2cd]
	ld e, a
	ld d, $0
	ld a, e
	xor $1
	ld e, a
	add hl, de
	ld [hl], c
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, wSCY
	add hl, de
	ld [hl], c
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	ld de, wSCX
	add hl, de
	ld [hl], c
	ld a, [wNextVBlankFlags]
	or $10
	ld [wNextVBlankFlags], a
	call Func_fc092
	call ClearSprites
	ld a, [wLCDC]
	or $6
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $6
	ld [wNextVBlankFlags], a
	call Func_fc092
	ret

Func_fd989:
	push hl
	push bc
	push de
	ld hl, sp+$2
	ld [hl], $0
	xor a
	call Func_fd8fc
	ld de, Pointers_fd3e3
	xor a
	call Func_fd7e0
	set_farcall_addrs_hli Func_dc0a
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld e, a
	ld hl, sp+$2
	ld a, [hl]
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	ld c, $2
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$2
	ld l, [hl]
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	reg16swap de, hl
	ld hl, $105
	call FarCall
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fda3e
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $12
	ld de, $1323
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_fda3e: ; fda3e (3f:5a3e)
	call WaitVideoTransfer
	call Func_fc756
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fda5b
	xor a
	ld [wc2e8], a
Func_fda5b: ; fda5b (3f:5a5b)
	set_farcall_addrs_hli Func_613fc
	read_hl_from wCurRobotPointer
	ld de, $1c8
	add hl, de
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $1c9
	add hl, de
	ld e, [hl]
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fdaad
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	ld de, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	callba_hli Func_f233
	ld a, $1
	ld [wc2e8], a
	jp Func_fdac1

Func_fdaad: ; fdaad (3f:5aad)
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	ld a, $2
	call FarCall
Func_fdac1: ; fdac1 (3f:5ac1)
	call Func_fd787
	xor a
	ld [wc2fa], a
	call Func_fd7df
	xor a
Func_fdacc: ; fdacc (3f:5acc)
	cp $78
	jp nc, Func_fdada
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_fdacc

Func_fdada: ; fdada (3f:5ada)
	ld l, $1
	ld c, $1
	pop de
Func_fdadf: ; fdadf (3f:5adf)
	ld a, c
	cp e
	jp nc, Func_fdb85
	push de
	push bc
	push hl
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	ld hl, sp+$6
	ld a, [hl]
	xor $1
	ld hl, sp+$6
	ld [hl], a
	ld l, c
	ld h, $0
	add hl, hl
	ld de, Pointers_fd714
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld hl, sp+$6
	ld a, [hl]
	call Func_fd7e0
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fdb5a
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $12
	ld de, $1323
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_fdb5a: ; fdb5a (3f:5b5a)
	call WaitVideoTransfer
	call Func_fc756
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	pop hl
	push hl
	ld c, l
	call GetHLAtSPPlus10
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus10
	ld e, a
	ld hl, sp+$6
	ld a, [hl]
	call Func_fd894
	pop hl
	pop bc
	inc c
	inc l
	pop de
	jp Func_fdadf

Func_fdb85: ; fdb85 (3f:5b85)
	ld a, [wSystemType]
	cp $1
	jp z, Func_fdb95
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_fdba8
Func_fdb95: ; fdb95 (3f:5b95)
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
Func_fdba8: ; fdba8 (3f:5ba8)
	call Func_fd746
	call FillVisibleAreaWithBlankTile
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	xor a
	ld [wc2e8], a
	call Func_fc092
	xor a
	ld [wOBP1], a
	ld [wOBP0], a
	ld [wBGP], a
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, [wLCDC]
	and $fd
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	pop bc
	pop bc
	ret

Func_fdbe8
	push hl
	push de
	push bc
	call Func_fd8fc
	pop bc
	push bc
	ld a, c
	ld hl, sp+$8
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_fd714
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_fd7e0
	ld hl, sp+$8
	ld a, [hl]
	inc a
	ld hl, sp+$8
	ld [hl], a
	set_farcall_addrs_hli Func_dc0a
	pop bc
	push bc
	call GetHLAtSPPlus6
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus6
	ld e, a
	ld a, c
	call FarCall
	set_farcall_addrs_hli Func_7c8a
	pop bc
	push bc
	read_hl_from wCurRobotPointer
	ld de, $18
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	ld l, c
	ld h, $0
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, hl
	add hl, de
	push hl
	inc c
	dec c
	jp nz, Func_fdc51
	ld hl, $0
	jp Func_fdc54

Func_fdc51: ; fdc51 (3f:5c51)
	ld hl, $b
Func_fdc54: ; fdc54 (3f:5c54)
	ld h, l
	ld l, $0
	ld de, $5
	add hl, de
	pop de
	ld c, $2
	call FarCall
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fdcb3
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $12
	ld de, $1323
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_fdcb3: ; fdcb3 (3f:5cb3)
	call WaitVideoTransfer
	call Func_fc756
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fdcd0
	xor a
	ld [wc2e8], a
Func_fdcd0: ; fdcd0 (3f:5cd0)
	set_farcall_addrs_hli Func_613fc
	read_hl_from wCurRobotPointer
	ld de, $1c8
	add hl, de
	ld a, [hl]
	read_hl_from wCurRobotPointer
	ld de, $1c9
	add hl, de
	ld e, [hl]
	call FarCall
	pop bc
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fdd25
	push bc
	ld bc, $80
	read_hl_from wCurRobotPointer
	ld de, $1ca
	add hl, de
	ld de, wCGB_BGPalsBuffer
	call CopyFromDEtoHL
	callba_hli Func_f233
	ld a, $1
	ld [wc2e8], a
	pop bc
	jp Func_fdd4f

Func_fdd25: ; fdd25 (3f:5d25)
	push bc
	set_farcall_addrs_hli Func_61424
	pop bc
	inc c
	dec c
	jp nz, Func_fdd45
	push bc
	ld c, $0
	ld e, $0
	ld a, $2
	call FarCall
	pop bc
	jp Func_fdd4f

Func_fdd45: ; fdd45 (3f:5d45)
	push bc
	ld c, $0
	ld e, $3
	xor a
	call FarCall
	pop bc
Func_fdd4f: ; fdd4f (3f:5d4f)
	push bc
	call Func_fd787
	xor a
	ld [wc2fa], a
	call Func_fd7df
	xor a
Func_fdd5b: ; fdd5b (3f:5d5b)
	cp $78
	jp nc, Func_fdd69
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_fdd5b

Func_fdd69: ; fdd69 (3f:5d69)
	ld a, $1
	pop bc
	pop de
Func_fdd6d: ; fdd6d (3f:5d6d)
	cp e
	jp nc, Func_fde18
	push de
	push af
	ld a, c
	xor $1
	ld c, a
	push bc
	ld a, [wc2cd]
	xor $1
	ld [wc2cd], a
	ld a, c
	ld hl, sp+$a
	ld l, [hl]
	ld h, $0
	add hl, hl
	ld de, Pointers_fd714
	add hl, de
	ld e, [hl]
	inc hl
	ld d, [hl]
	call Func_fd7e0
	set_farcall_addrs_hli Func_62a3
	ld bc, $0
	ld de, $1311
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	ld a, [wSystemType]
	cp $11
	jp nz, Func_fdde3
	call WaitVideoTransfer
	ld a, [rVBK]
	or $1
	ld [rVBK], a
	set_farcall_addrs_hli Func_62a3
	ld bc, $12
	ld de, $1323
	ld hl, wc2cd
	ld l, [hl]
	ld h, $0
	inc h
	inc h
	call FarCall
	call WaitVideoTransfer
	ld a, [rVBK]
	and $fe
	ld [rVBK], a
Func_fdde3: ; fdde3 (3f:5de3)
	call WaitVideoTransfer
	call Func_fc756
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	pop bc
	pop af
	push bc
	push af
	call GetHLAtSPPlus8
	ld a, [hl]
	inc hl
	call WriteHLToSPPlus8
	ld e, a
	ld a, c
	ld hl, sp+$a
	ld c, [hl]
	call Func_fd894
	pop af
	inc a
	push af
	ld hl, sp+$a
	ld a, [hl]
	inc a
	ld hl, sp+$a
	ld [hl], a
	pop af
	pop bc
	pop de
	jp Func_fdd6d

Func_fde18: ; fde18 (3f:5e18)
	call Func_fd746
	call FillVisibleAreaWithBlankTile
	ld a, [wSystemType]
	cp $1
	jp z, Func_fde2e
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_fde41
Func_fde2e: ; fde2e (3f:5e2e)
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
Func_fde41: ; fde41 (3f:5e41)
	ld e, $8
	ld a, $8
	call SetStringStartState
	ld hl, Data_fdf06
	push hl
	call PlaceString
	pop bc
	ld a, $2
	ld [wc39a], a
	ld l, $12
	push hl
	ld c, $14
	ld e, $0
	xor a
	call Func_3bc5
	pop bc
	call Func_fd787
Func_fde64: ; fde64 (3f:5e64)
	call CheckButton
	and $70
	jp z, Func_fde64
	ld a, $7
Func_fde6e: ; fde6e (3f:5e6e)
	or a
	jp nz, Func_fde75
	jp Func_fde8d

Func_fde75: ; fde75 (3f:5e75)
	dec a
	push af
	call SetVolume
	xor a
Func_fde7b: ; fde7b (3f:5e7b)
	cp $4
	jp nc, Func_fde89
	push af
	call NextOverworldFrame
	pop af
	inc a
	jp Func_fde7b

Func_fde89: ; fde89 (3f:5e89)
	pop af
	jp Func_fde6e

Func_fde8d: ; fde8d (3f:5e8d)
	xor a
	call OverworldPlaySong
	ld a, $7
	call SetVolume
	call Func_fd746
	ld a, [wSystemType]
	cp $1
	jp z, Func_fdea9
	ld a, [wSystemType]
	cp $ff
	jp nz, Func_fdebc
Func_fdea9: ; fdea9 (3f:5ea9)
	set_farcall_addrs_hli Func_61424
	ld c, $0
	ld e, $0
	xor a
	call FarCall
Func_fdebc: ; fdebc (3f:5ebc)
	ld a, [wNextVBlankFlags]
	and $7f
	ld [wNextVBlankFlags], a
	xor a
	ld [wc2e8], a
	call Func_fc092
	xor a
	ld [wOBP1], a
	ld [wOBP0], a
	ld [wBGP], a
	ld a, [wNextVBlankFlags]
	or $20
	ld [wNextVBlankFlags], a
	call Func_fc092
	ld a, [wLCDC]
	and $fd
	ld [wLCDC], a
	ld a, [wNextVBlankFlags]
	or $4
	ld [wNextVBlankFlags], a
	call Func_fc092
	call FillVisibleAreaWithBlankTile
	callba_hli Func_fdfe2
	pop bc
	ret

Data_fdf06:
	db "(おわり)", $0

Data_fdf0c:
IF DEF(SUN)
	dr $fdf0c, $fdf13
ENDC
IF DEF(STAR)
	dr $fdf0a, $fdf11
ENDC

Credits: ; fdf13 (3f:5f13)
	push bc
	push bc
	push bc
	push bc
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_fdf0c
	ld bc, $7
	call MemCopy
	call Func_fd73e
	callba_hli AllocateMonsterStruct
	ld a, $4
	ld [wc2fa], a
	ld e, $7
	ld hl, sp+$0
	call Func_fd989
	call Func_fd73f
	pop bc
	pop bc
	pop bc
	pop bc
	ret

Data_fdf4b:
IF DEF(SUN)
	dr $fdf4b, $fdf59
ENDC
IF DEF(STAR)
	dr $fdf49, $fdf57
ENDC

Credits2: ; fdf59 (3f:5f59)
	add sp, -$e
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_fdf4b
	ld bc, $e
	call MemCopy
	call Func_fd73e
	callba_hli AllocateMonsterStruct
	ld a, $4
	ld [wc2fa], a
	ld l, $7
	push hl
	ld c, $1
	ld e, $e
	ld hl, sp+$2
	call Func_fdbe8
	pop bc
	call Func_fd73f
	add sp, $e
	ret

Data_fdf93:
IF DEF(SUN)
	dr $fdf93, $fdfa8
ENDC
IF DEF(STAR)
	dr $fdf91, $fdfa6
ENDC

Func_fafa8:
	add sp, -$16
	ld hl, sp+$0
	reg16swap de, hl
	ld hl, Data_fdf93
	ld bc, $15
	call MemCopy
	call Func_fd73e
	callba_hli AllocateMonsterStruct
	ld a, $4
	ld [wc2fa], a
	ld l, $0
	push hl
	ld c, $0
	ld e, $15
	ld hl, sp+$2
	call Func_fdbe8
	pop bc
	call Func_fd73f
	add sp, $16
	ret

Func_fdfe2: ; fdfe2 (3f:5fe2)
	jp Func_0388

Func_fdfe5: ; fdfe5 (3f:5fe5)
	xor a
	ld [wc319], a
	ld [wc31a], a
	ld [wc31b], a
	ld [wc31e], a
	ld hl, Func_fe03a
	ld de, wc770
	ld bc, $5c
.asm_fdffb
	ld a, [hli]
	ld [de], a
	inc de
	dec bc
	ld a, c
	or b
	jr nz, .asm_fdffb
	ret

Func_fe004: ; fe004 (3f:6004)
	xor a
	ld [wc319], a
	ld [wc31e], a
	ld a, $1c
	ld [wc31a], a
	add $1
	ld [wc31b], a
	ld hl, Func_fe096
	ld de, wc770
	ld bc, $6c
.asm_fe01e
	ld a, [hli]
	ld [de], a
	inc de
	dec bc
	ld a, c
	or b
	jr nz, .asm_fe01e
	ld a, [wc31a]
	ld [rLYC], a
	di
	ld a, [rIF]
	and $fd
	ld [rIF], a
	ld a, [rIE]
	or $2
	ld [rIE], a
	ei
	ret

Func_fe03a: ; fe03a (3f:603a)
	push af
	push bc
	ld a, [wc319]
	inc a
	ld [wc319], a
	cp $1
	jr z, .asm_fe055
	cp $2
	jr z, .asm_fe05a
	cp $3
	jr z, .asm_fe06c
	cp $4
	jr z, .asm_fe074
	jr .asm_fe086

.asm_fe055
	ld bc, $20
	jr .asm_fe08d

.asm_fe05a
	ld a, [wc31a]
	add $4
	cp $18
	jr nz, .asm_fe064
	xor a
.asm_fe064
	ld [wc31a], a
	ld b, a
	ld c, $28
	jr .asm_fe08d

.asm_fe06c
	ld a, [wc31e]
	ld b, a
	ld c, $68
	jr .asm_fe08d

.asm_fe074
	ld a, [wc31b]
	sub $4
	cp $e8
	jr nz, .asm_fe07e
	xor a
.asm_fe07e
	ld [wc31b], a
	ld b, a
	ld c, $6f
	jr .asm_fe08d

.asm_fe086
	xor a
	ld [wc319], a
	ld bc, $0
.asm_fe08d
	ld a, b
	ld [rSCX], a
	ld a, c
	ld [rLYC], a
	pop bc
	pop af
	reti

Func_fe096: ; fe096 (3f:6096)
	push af
	push bc
	ld b, $0
	ld a, [wc319]
	xor $1
	ld [wc319], a
	jr z, .asm_fe0b3
	ld a, [rLCDC]
	ld a, [wLCDC]
	ld [rLCDC], a
	ld a, [wc31b]
	ld [rLYC], a
	pop bc
	pop af
	reti

.asm_fe0b3
	ld a, [wLCDC]
	xor $8
	ld [rLCDC], a
	ld a, [wc31a]
	ld [rLYC], a
	ld a, [wc31e]
	inc a
	cp $2
	jr nc, .asm_fe0cd
	ld [wc31e], a
	pop bc
	pop af
	reti

.asm_fe0cd
	xor a
	ld [wc31e], a
	ld a, [wc31a]
	dec a
	cp $ff
	jr nz, .asm_fe0dc
	set 0, b
	xor a
.asm_fe0dc
	ld [wc31a], a
	ld a, [wc31b]
	inc a
	cp $39
	jr nz, .asm_fe0ea
	set 1, b
	dec a
.asm_fe0ea
	ld [wc31b], a
	ld a, b
	cp $3
	jr nz, .asm_fe0ff
	ld a, [wLCDC]
	ld [rLCDC], a
	ld a, [rIE]
	and $fd
	ld [rIE], a
	ld [rIF], a
.asm_fe0ff
	pop bc
	pop af
	reti

Func_fe102:: ; fe102 (3f:6102)
	ld bc, $3c
	call Func_ffd81
	call ClearSprites
	ld a, [wNextVBlankFlags]
	or $2
	ld [wNextVBlankFlags], a
.asm_fe113
	ld a, [wNextVBlankFlags]
	and $2
	jr nz, .asm_fe113
	di
	xor a
	ld [rBGP], a
	ld a, [wSystemType]
	or a
	ret z
	cp $11
	ret z
	cp $1
	jr z, .asm_fe133
	cp $ff
	jr z, .asm_fe133
.asm_fe12e
	xor a
	ld [wSystemType], a
	ret

.asm_fe133
	call Func_ffcd4
	jp nc, .asm_fe12e
	ld hl, Data_fe444
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe1da
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe1ea
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe1fa
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe20a
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe21a
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe22a
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe23a
	ld de, $10
	call Func_2b7d
	ld hl, Data_fe24a
	ld de, $10
	call Func_2b7d
	ld hl, Data_fecd4
	ld de, Data_fe404
	call Func_ffd49
	ld bc, $a
	call Func_ffd81
	ld hl, Data_fe474
	ld de, Data_fe414
	call Func_ffd49
	ld bc, $a
	call Func_ffd81
	ld hl, Data_fe2b4
	ld de, Data_fe384
	call Func_ffd49
	ld bc, $a
	call Func_ffd81
	ld hl, Data_fe374
	ld de, $10
	call Func_2b7d
	ld bc, $a
	call Func_ffd81
	ld bc, $3c
	call Func_ffd81
	xor a
	ld [rBGP], a
	ld hl, Data_fe454
	ld de, $10
	call Func_2b7d
	ei
	ret

IF DEF(SUN)
Data_fe1da: ; fe1da
	dr $fe1da, $fe1ea

Data_fe1ea: ; fe1ea
	dr $fe1ea, $fe1fa

Data_fe1fa: ; fe1fa
	dr $fe1fa, $fe20a

Data_fe20a: ; fe20a
	dr $fe20a, $fe21a

Data_fe21a: ; fe21a
	dr $fe21a, $fe22a

Data_fe22a: ; fe22a
	dr $fe22a, $fe23a

Data_fe23a: ; fe23a
	dr $fe23a, $fe24a

Data_fe24a: ; fe24a
	dr $fe24a, $fe2b4

Data_fe2b4: ; fe2b4
	dr $fe2b4, $fe374

Data_fe374: ; fe374
	dr $fe374, $fe384

Data_fe384: ; fe384
	dr $fe384, $fe404

Data_fe404: ; fe404
	dr $fe404, $fe414

Data_fe414: ; fe414
	dr $fe414, $fe444

Data_fe444: ; fe444
	dr $fe444, $fe454

Data_fe454: ; fe454
	dr $fe454, $fe474

Data_fe474: ; fe474
	dr $fe474, $fecd4

Data_fecd4: ; fecd4
	dr $fecd4, $ffb14

SECTION "Bank 3f, 3", ROMX [$7cd4], BANK [$3f]
ENDC
IF DEF(STAR)
Data_fe1da: ; fe1da
	dr $fe1d8, $fe1e8

Data_fe1ea: ; fe1ea
	dr $fe1e8, $fe1f8

Data_fe1fa: ; fe1fa
	dr $fe1f8, $fe208

Data_fe20a: ; fe20a
	dr $fe208, $fe218

Data_fe21a: ; fe21a
	dr $fe218, $fe228

Data_fe22a: ; fe22a
	dr $fe228, $fe238

Data_fe23a: ; fe23a
	dr $fe238, $fe248

Data_fe24a: ; fe24a
	dr $fe248, $fe2b2

Data_fe2b4: ; fe2b4
	dr $fe2b2, $fe372

Data_fe374: ; fe374
	dr $fe372, $fe382

Data_fe384: ; fe384
	dr $fe382, $fe402

Data_fe404: ; fe404
	dr $fe402, $fe412

Data_fe414: ; fe414
	dr $fe412, $fe442

Data_fe444: ; fe444
	dr $fe442, $fe452

Data_fe454: ; fe454
	dr $fe452, $fe472

Data_fe474: ; fe474
	dr $fe472, $fecd2

Data_fecd4: ; fecd4
	dr $fecd2, $ffb12

SECTION "Bank 3f, 3", ROMX [$7cd2], BANK [$3f]
ENDC

Func_ffcd4: ; ffcd4 (3f:7cd4)
	ld hl, Data_ffd39
	ld de, $10
	call Func_2b7d
	ld a, [rJOYP]
	and $3
	cp $3
	jr nz, .asm_ffd1e
	ld a, $20
	ld [rJOYP], a
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, $30
	ld [rJOYP], a
	ld a, $10
	ld [rJOYP], a
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, $30
	ld [rJOYP], a
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	ld a, [rJOYP]
	and $3
	cp $3
	jr nz, .asm_ffd1e
	ld hl, Data_ffd29
	ld de, $10
	call Func_2b7d
	sub a
	ret

.asm_ffd1e
	ld hl, Data_ffd29
	ld de, $10
	call Func_2b7d
	scf
	ret

Data_ffd29:
IF DEF(SUN)
	dr $ffd29, $ffd39

Data_ffd39:
	dr $ffd39, $ffd49
ENDC
IF DEF(STAR)
	dr $ffd27, $ffd37

Data_ffd39:
	dr $ffd37, $ffd47
ENDC

Func_ffd49: ; ffd49 (3f:7d49)
	di
	push de
	call Func_ffd92
	ld a, $43
	ld [rLCDC], a
	ld a, $e4
	ld [rBGP], a
	ld de, $8800
	ld bc, $1000
	call Func_ffd99
	hlbgcoord 0, 0
	ld de, $c
	ld a, $80
	ld c, $d
.asm_ffd69
	ld b, $14
.asm_ffd6b
	ld [hli], a
	inc a
	dec b
	jr nz, .asm_ffd6b
	add hl, de
	dec c
	jr nz, .asm_ffd69
	ld a, $c3
	ld [rLCDC], a
	pop hl
	ld de, $10
	call Func_2b7d
	ei
	ret

Func_ffd81: ; ffd81 (3f:7d81)
	ld de, $6d6
.asm_ffd84
	nop
	nop
	nop
	dec de
	ld a, d
	or e
	jr nz, .asm_ffd84
	dec bc
	ld a, b
	or c
	jr nz, Func_ffd81
	ret

Func_ffd92: ; ffd92 (3f:7d92)
	ld a, [rLY]
	cp $94
	jr nz, Func_ffd92
	ret

Func_ffd99: ; ffd99 (3f:7d99)
	ld a, [hli]
	ld [de], a
	inc de
	dec bc
	ld a, b
	or c
	jr nz, Func_ffd99
	ret

IF DEF(SUN)
REPT $100000 - $ffda2
	db $ff
ENDR
ENDC
IF DEF(STAR)
REPT $100000 - $ffda0
	db $ff
ENDR
ENDC
